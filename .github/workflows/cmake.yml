name: CMake

on: [pull_request]

env:
  GH_ACTIONS_TOOLCHAIN: .github/workflows/toolchains/gh-actions.cmake

jobs:
  build:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        build_type: [Release, Debug]
        compiler_suite: [gnu,llvm]
        compiler_version: [7,8,9,10,11]
        exclude:
          - compiler_suite: llvm
            compiler_version: 7
          - compiler_suite: llvm
            compiler_version: 8
          - compiler_suite: llvm
            compiler_version: 11

    steps:
    - uses: actions/checkout@v2

    - name: Install Newer CMake
      env:
        CMAKE_URL: "https://cmake.org/files/v3.17/cmake-3.17.0-Linux-x86_64.tar.gz"
        CMAKE_PREFIX: ${{runner.workspace}}/install/cmake
      run: mkdir -p ${{runner.workspace}}/install/cmake &&
           wget --no-check-certificate -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C ${CMAKE_PREFIX} &&
           export PATH=${CMAKE_PREFIX}/bin:${PATH} && cmake --version

    - name: Ubuntu Apt Setup
      shell: bash
      run: sudo apt install software-properties-common &&
           sudo add-apt-repository ppa:ubuntu-toolchain-r/test 

    - name: Install GNU Compiler Version
      if: ${{ matrix.compiler_suite == 'gnu' }}
      env:
        CC:  gcc-${{matrix.compiler_version}}
        CXX: g++-${{matrix.compiler_version}}
      shell: bash
      run: ${GITHUB_WORKSPACE}/.github/workflows/scripts/compiler_setup.sh ${GITHUB_WORKSPACE}/${GH_ACTIONS_TOOLCHAIN}

    - name: Install LLVM Compiler Version
      if: ${{ matrix.compiler_suite == 'llvm' }}
      env:
        CC:  clang-${{matrix.compiler_version}}
        CXX: clang++-${{matrix.compiler_version}}
      shell: bash
      run: ${GITHUB_WORKSPACE}/.github/workflows/scripts/compiler_setup.sh ${GITHUB_WORKSPACE}/${GH_ACTIONS_TOOLCHAIN}

    - name: Configure CMake
      shell: bash
      run: cmake -H$GITHUB_WORKSPACE 
                 -B${{runner.workspace}}/build
                 -DCMAKE_BUILD_TYPE=${{matrix.build_type}}
                 -DCMAKE_INSTALL_PREFIX=${{runner.workspace}}/install 
                 -DCMAKE_TOOLCHAIN_FILE=${GITHUB_WORKSPACE}/${GH_ACTIONS_TOOLCHAIN}

    - name: Build
      shell: bash
      run: cmake --build ${{runner.workspace}}/build -j2 

    - name: Test
      shell: bash
      run: cmake --build ${{runner.workspace}}/build --target test

    - name: Install
      shell: bash
      run: cmake --build ${{runner.workspace}}/build --target install

    - name: CMake Subproject Configure
      shell: bash
      run: cmake -H$GITHUB_WORKSPACE/test/cmake/subproject 
                 -B${{runner.workspace}}/cmake_subproject_build 
                 -DGIT_REVISION=$GITHUB_HEAD_REF 
                 -DCMAKE_TOOLCHAIN_FILE=${GITHUB_WORKSPACE}/${GH_ACTIONS_TOOLCHAIN}

    - name: CMake Subproject Build
      shell: bash
      run: cmake --build ${{runner.workspace}}/cmake_subproject_build

    - name: CMake Discovery Configure
      shell: bash
      run: cmake -H$GITHUB_WORKSPACE/test/cmake/discovery 
                 -B${{runner.workspace}}/cmake_discovery_build 
                 -DCMAKE_PREFIX_PATH=${{runner.workspace}}/install 
                 -DCMAKE_TOOLCHAIN_FILE=${GITHUB_WORKSPACE}/${GH_ACTIONS_TOOLCHAIN}

    - name: CMake Discovery Build
      shell: bash
      run: cmake --build ${{runner.workspace}}/cmake_discovery_build
