
/* THIS FILE IS AUTOGENERATED BY generate_quadrature_tests.py.
   DO NOT EDIT THIS FILE, EDIT THE AUTOGENERATOR INSTEAD.
*/

// clang-format off
#include "catch2/catch_all.hpp"
#include <integratorxx/quadratures/gausslobatto.hpp>
#include <numeric>
#include <vector>
// clang-format on

const double x_tolerance = 10 * std::numeric_limits<double>::epsilon();
const double w_tolerance = 10 * std::numeric_limits<double>::epsilon();

TEST_CASE("2 point GaussLobatto", "[1d-quad]") {
  std::array<double, 2> ref_pts = {-1, 1};
  std::array<double, 2> ref_wgt = {1.0000000000000000000,
                                   1.0000000000000000000};
  IntegratorXX::GaussLobatto<double, double> quad(2);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 2; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("3 point GaussLobatto", "[1d-quad]") {
  std::array<double, 3> ref_pts = {-1, 0, 1};
  std::array<double, 3> ref_wgt = {
      0.33333333333333333333, 1.3333333333333333333, 0.33333333333333333333};
  IntegratorXX::GaussLobatto<double, double> quad(3);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 3; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("4 point GaussLobatto", "[1d-quad]") {
  std::array<double, 4> ref_pts = {-1, -0.44721359549995793928,
                                   0.44721359549995793928, 1};
  std::array<double, 4> ref_wgt = {
      0.16666666666666666667, 0.83333333333333333333, 0.83333333333333333333,
      0.16666666666666666667};
  IntegratorXX::GaussLobatto<double, double> quad(4);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 4; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("5 point GaussLobatto", "[1d-quad]") {
  std::array<double, 5> ref_pts = {-1, -0.65465367070797714380, 0,
                                   0.65465367070797714380, 1};
  std::array<double, 5> ref_wgt = {
      0.10000000000000000000, 0.54444444444444444444, 0.71111111111111111111,
      0.54444444444444444444, 0.10000000000000000000};
  IntegratorXX::GaussLobatto<double, double> quad(5);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 5; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("6 point GaussLobatto", "[1d-quad]") {
  std::array<double, 6> ref_pts = {-1,
                                   -0.76505532392946469285,
                                   -0.28523151648064509631,
                                   0.28523151648064509631,
                                   0.76505532392946469285,
                                   1};
  std::array<double, 6> ref_wgt = {
      0.066666666666666666667, 0.37847495629784698032, 0.55485837703548635302,
      0.55485837703548635302,  0.37847495629784698032, 0.066666666666666666667};
  IntegratorXX::GaussLobatto<double, double> quad(6);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 6; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("7 point GaussLobatto", "[1d-quad]") {
  std::array<double, 7> ref_pts = {
      -1, -0.83022389627856692987, -0.46884879347071421380,
      0,  0.46884879347071421380,  0.83022389627856692987,
      1};
  std::array<double, 7> ref_wgt = {
      0.047619047619047619048, 0.27682604736156594801, 0.43174538120986262342,
      0.48761904761904761905,  0.43174538120986262342, 0.27682604736156594801,
      0.047619047619047619048};
  IntegratorXX::GaussLobatto<double, double> quad(7);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 7; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("8 point GaussLobatto", "[1d-quad]") {
  std::array<double, 8> ref_pts = {-1,
                                   -0.87174014850960661534,
                                   -0.59170018143314230214,
                                   -0.20929921790247886877,
                                   0.20929921790247886877,
                                   0.59170018143314230214,
                                   0.87174014850960661534,
                                   1};
  std::array<double, 8> ref_wgt = {
      0.035714285714285714286, 0.21070422714350603938, 0.34112269248350436476,
      0.41245879465870388157,  0.41245879465870388157, 0.34112269248350436476,
      0.21070422714350603938,  0.035714285714285714286};
  IntegratorXX::GaussLobatto<double, double> quad(8);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 8; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("9 point GaussLobatto", "[1d-quad]") {
  std::array<double, 9> ref_pts = {-1,
                                   -0.89975799541146015731,
                                   -0.67718627951073775345,
                                   -0.36311746382617815871,
                                   0,
                                   0.36311746382617815871,
                                   0.67718627951073775345,
                                   0.89975799541146015731,
                                   1};
  std::array<double, 9> ref_wgt = {
      0.027777777777777777778, 0.16549536156080552505, 0.27453871250016173528,
      0.34642851097304634512,  0.37151927437641723356, 0.34642851097304634512,
      0.27453871250016173528,  0.16549536156080552505, 0.027777777777777777778};
  IntegratorXX::GaussLobatto<double, double> quad(9);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 9; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("10 point GaussLobatto", "[1d-quad]") {
  std::array<double, 10> ref_pts = {-1,
                                    -0.91953390816645881383,
                                    -0.73877386510550507500,
                                    -0.47792494981044449566,
                                    -0.16527895766638702463,
                                    0.16527895766638702463,
                                    0.47792494981044449566,
                                    0.73877386510550507500,
                                    0.91953390816645881383,
                                    1};
  std::array<double, 10> ref_wgt = {
      0.022222222222222222222, 0.13330599085107011113, 0.22488934206312645212,
      0.29204268367968375788,  0.32753976118389745666, 0.32753976118389745666,
      0.29204268367968375788,  0.22488934206312645212, 0.13330599085107011113,
      0.022222222222222222222};
  IntegratorXX::GaussLobatto<double, double> quad(10);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 10; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("11 point GaussLobatto", "[1d-quad]") {
  std::array<double, 11> ref_pts = {-1,
                                    -0.93400143040805913433,
                                    -0.78448347366314441862,
                                    -0.56523532699620500647,
                                    -0.29575813558693939143,
                                    0,
                                    0.29575813558693939143,
                                    0.56523532699620500647,
                                    0.78448347366314441862,
                                    0.93400143040805913433,
                                    1};
  std::array<double, 11> ref_wgt = {
      0.018181818181818181818, 0.10961227326699486446, 0.18716988178030520411,
      0.24804810426402831404,  0.28687912477900808868, 0.30021759545569069379,
      0.28687912477900808868,  0.24804810426402831404, 0.18716988178030520411,
      0.10961227326699486446,  0.018181818181818181818};
  IntegratorXX::GaussLobatto<double, double> quad(11);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 11; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("12 point GaussLobatto", "[1d-quad]") {
  std::array<double, 12> ref_pts = {-1,
                                    -0.94489927222288222341,
                                    -0.81927932164400667835,
                                    -0.63287615303186067766,
                                    -0.39953094096534893226,
                                    -0.13655293285492755486,
                                    0.13655293285492755486,
                                    0.39953094096534893226,
                                    0.63287615303186067766,
                                    0.81927932164400667835,
                                    0.94489927222288222341,
                                    1};
  std::array<double, 12> ref_wgt = {
      0.015151515151515151515, 0.091684517413196130668,
      0.15797470556437011516,  0.21250841776102114536,
      0.25127560319920128029,  0.27140524091069617700,
      0.27140524091069617700,  0.25127560319920128029,
      0.21250841776102114536,  0.15797470556437011516,
      0.091684517413196130668, 0.015151515151515151515};
  IntegratorXX::GaussLobatto<double, double> quad(12);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 12; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("13 point GaussLobatto", "[1d-quad]") {
  std::array<double, 13> ref_pts = {-1,
                                    -0.95330984664216391190,
                                    -0.84634756465187231687,
                                    -0.68618846908175742607,
                                    -0.48290982109133620175,
                                    -0.24928693010623999257,
                                    0,
                                    0.24928693010623999257,
                                    0.48290982109133620175,
                                    0.68618846908175742607,
                                    0.84634756465187231687,
                                    0.95330984664216391190,
                                    1};
  std::array<double, 13> ref_wgt = {
      0.012820512820512820513, 0.077801686746818927794, 0.13498192668960834912,
      0.18364686520355009201,  0.22076779356611008609,  0.24401579030667635646,
      0.25193084933344673604,  0.24401579030667635646,  0.22076779356611008609,
      0.18364686520355009201,  0.13498192668960834912,  0.077801686746818927794,
      0.012820512820512820513};
  IntegratorXX::GaussLobatto<double, double> quad(13);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 13; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("14 point GaussLobatto", "[1d-quad]") {
  std::array<double, 14> ref_pts = {-1,
                                    -0.95993504526726090136,
                                    -0.86780105383034725100,
                                    -0.72886859909132614058,
                                    -0.55063940292864705532,
                                    -0.34272401334271284504,
                                    -0.11633186888370386766,
                                    0.11633186888370386766,
                                    0.34272401334271284504,
                                    0.55063940292864705532,
                                    0.72886859909132614058,
                                    0.86780105383034725100,
                                    0.95993504526726090136,
                                    1};
  std::array<double, 14> ref_wgt = {
      0.010989010989010989011, 0.066837284497681284634, 0.11658665589871165154,
      0.16002185176295214241,  0.19482614937341611864,  0.21912625300977075487,
      0.23161279446845705889,  0.23161279446845705889,  0.21912625300977075487,
      0.19482614937341611864,  0.16002185176295214241,  0.11658665589871165154,
      0.066837284497681284634, 0.010989010989010989011};
  IntegratorXX::GaussLobatto<double, double> quad(14);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 14; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("15 point GaussLobatto", "[1d-quad]") {
  std::array<double, 15> ref_pts = {-1,
                                    -0.96524592650383857280,
                                    -0.88508204422297629883,
                                    -0.76351968995181520070,
                                    -0.60625320546984571112,
                                    -0.42063805471367248092,
                                    -0.21535395536379423823,
                                    0,
                                    0.21535395536379423823,
                                    0.42063805471367248092,
                                    0.60625320546984571112,
                                    0.76351968995181520070,
                                    0.88508204422297629883,
                                    0.96524592650383857280,
                                    1};
  std::array<double, 15> ref_wgt = {
      0.0095238095238095238095, 0.058029893028601249097,
      0.10166007032571806760,   0.14051169980242810946,
      0.17278964725360094905,   0.19698723596461335609,
      0.21197358592682092013,   0.21704811634881564951,
      0.21197358592682092013,   0.19698723596461335609,
      0.17278964725360094905,   0.14051169980242810946,
      0.10166007032571806760,   0.058029893028601249097,
      0.0095238095238095238095};
  IntegratorXX::GaussLobatto<double, double> quad(15);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 15; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("16 point GaussLobatto", "[1d-quad]") {
  std::array<double, 16> ref_pts = {-1,
                                    -0.96956804627021793295,
                                    -0.89920053309347209299,
                                    -0.79200829186181506393,
                                    -0.65238870288249308947,
                                    -0.48605942188713761178,
                                    -0.29983046890076320810,
                                    -0.10132627352194944784,
                                    0.10132627352194944784,
                                    0.29983046890076320810,
                                    0.48605942188713761178,
                                    0.65238870288249308947,
                                    0.79200829186181506393,
                                    0.89920053309347209299,
                                    0.96956804627021793295,
                                    1};
  std::array<double, 16> ref_wgt = {
      0.0083333333333333333333, 0.050850361005919905403,
      0.089393697325930800991,  0.12425538213251409835,
      0.15402698080716428082,   0.17749191339170412530,
      0.19369002382520358432,   0.20195830817822987149,
      0.20195830817822987149,   0.19369002382520358432,
      0.17749191339170412530,   0.15402698080716428082,
      0.12425538213251409835,   0.089393697325930800991,
      0.050850361005919905403,  0.0083333333333333333333};
  IntegratorXX::GaussLobatto<double, double> quad(16);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 16; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("17 point GaussLobatto", "[1d-quad]") {
  std::array<double, 17> ref_pts = {-1,
                                    -0.97313217663141831416,
                                    -0.91087999591557359562,
                                    -0.81569625122177030711,
                                    -0.69102898062768470539,
                                    -0.54138539933010153912,
                                    -0.37217443356547704191,
                                    -0.18951197351831738830,
                                    0,
                                    0.18951197351831738830,
                                    0.37217443356547704191,
                                    0.54138539933010153912,
                                    0.69102898062768470539,
                                    0.81569625122177030711,
                                    0.91087999591557359562,
                                    0.97313217663141831416,
                                    1};
  std::array<double, 17> ref_wgt = {
      0.0073529411764705882353, 0.044921940543254209647,
      0.079198270503687119190,  0.11059290900702816138,
      0.13798774620192655906,   0.16039466199762153952,
      0.17700425351565787044,   0.18721633967761923589,
      0.19066187475346943330,   0.18721633967761923589,
      0.17700425351565787044,   0.16039466199762153952,
      0.13798774620192655906,   0.11059290900702816138,
      0.079198270503687119190,  0.044921940543254209647,
      0.0073529411764705882353};
  IntegratorXX::GaussLobatto<double, double> quad(17);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 17; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("18 point GaussLobatto", "[1d-quad]") {
  std::array<double, 18> ref_pts = {-1,
                                    -0.97610555741219854286,
                                    -0.92064918534753387384,
                                    -0.83559353521809021371,
                                    -0.72367932928324268131,
                                    -0.58850483431866176117,
                                    -0.43441503691212397534,
                                    -0.26636265287828098417,
                                    -0.089749093484652111023,
                                    0.089749093484652111023,
                                    0.26636265287828098417,
                                    0.43441503691212397534,
                                    0.58850483431866176117,
                                    0.72367932928324268131,
                                    0.83559353521809021371,
                                    0.92064918534753387384,
                                    0.97610555741219854286,
                                    1};
  std::array<double, 18> ref_wgt = {
      0.0065359477124183006536, 0.039970628810914066138,
      0.070637166885633664999,  0.099016271717502802394,
      0.12421053313296710026,   0.14541196157380226798,
      0.16193951723760248926,   0.17326210948945622601,
      0.17901586343970308229,   0.17901586343970308229,
      0.17326210948945622601,   0.16193951723760248926,
      0.14541196157380226798,   0.12421053313296710026,
      0.099016271717502802394,  0.070637166885633664999,
      0.039970628810914066138,  0.0065359477124183006536};
  IntegratorXX::GaussLobatto<double, double> quad(18);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 18; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("19 point GaussLobatto", "[1d-quad]") {
  std::array<double, 19> ref_pts = {-1,
                                    -0.97861176622208009515,
                                    -0.92890152815258624372,
                                    -0.85246057779664609309,
                                    -0.75149420255261301416,
                                    -0.62890813726522049777,
                                    -0.48822928568071350278,
                                    -0.33350484782449861030,
                                    -0.16918602340928157138,
                                    0,
                                    0.16918602340928157138,
                                    0.33350484782449861030,
                                    0.48822928568071350278,
                                    0.62890813726522049777,
                                    0.75149420255261301416,
                                    0.85246057779664609309,
                                    0.92890152815258624372,
                                    0.97861176622208009515,
                                    1};
  std::array<double, 19> ref_wgt = {
      0.0058479532163742690058, 0.035793365186176477115,
      0.063381891762629736852,  0.089131757099207084448,
      0.11231534147730504407,   0.13226728044875077693,
      0.14841394259593888501,   0.16029092404406124198,
      0.16755658452714286727,   0.17000191928482723464,
      0.16755658452714286727,   0.16029092404406124198,
      0.14841394259593888501,   0.13226728044875077693,
      0.11231534147730504407,   0.089131757099207084448,
      0.063381891762629736852,  0.035793365186176477115,
      0.0058479532163742690058};
  IntegratorXX::GaussLobatto<double, double> quad(19);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 19; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("20 point GaussLobatto", "[1d-quad]") {
  std::array<double, 20> ref_pts = {-1,
                                    -0.98074370489391417193,
                                    -0.93593449881266543572,
                                    -0.86687797808995014131,
                                    -0.77536826095205587041,
                                    -0.66377640229031128985,
                                    -0.53499286403188626165,
                                    -0.39235318371390929939,
                                    -0.23955170592298649518,
                                    -0.080545937238821837976,
                                    0.080545937238821837976,
                                    0.23955170592298649518,
                                    0.39235318371390929939,
                                    0.53499286403188626165,
                                    0.66377640229031128985,
                                    0.77536826095205587041,
                                    0.86687797808995014131,
                                    0.93593449881266543572,
                                    0.98074370489391417193,
                                    1};
  std::array<double, 20> ref_wgt = {
      0.0052631578947368421053, 0.032237123188488941492,
      0.057181802127566826005,  0.080631763996119603145,
      0.10199149969945081568,   0.12070922762867472510,
      0.13630048235872418449,   0.14836155407091682581,
      0.15658010264747548716,   0.16074328638784574901,
      0.16074328638784574901,   0.15658010264747548716,
      0.14836155407091682581,   0.13630048235872418449,
      0.12070922762867472510,   0.10199149969945081568,
      0.080631763996119603145,  0.057181802127566826005,
      0.032237123188488941492,  0.0052631578947368421053};
  IntegratorXX::GaussLobatto<double, double> quad(20);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 20; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("21 point GaussLobatto", "[1d-quad]") {
  std::array<double, 21> ref_pts = {-1,
                                    -0.98257229660454802823,
                                    -0.94197629695974553430,
                                    -0.87929475532359046445,
                                    -0.79600192607771240474,
                                    -0.69405102606222323263,
                                    -0.57583196026183068693,
                                    -0.44411578327900210119,
                                    -0.30198985650876488728,
                                    -0.15278551580218546601,
                                    0,
                                    0.15278551580218546601,
                                    0.30198985650876488728,
                                    0.44411578327900210119,
                                    0.57583196026183068693,
                                    0.69405102606222323263,
                                    0.79600192607771240474,
                                    0.87929475532359046445,
                                    0.94197629695974553430,
                                    0.98257229660454802823,
                                    1};
  std::array<double, 21> ref_wgt = {
      0.0047619047619047619048, 0.029184840098505458609,
      0.051843169000849625073,  0.073273918185074144253,
      0.092985467957886065301,  0.11051708321912333527,
      0.12545812119086894802,   0.13745846286004134358,
      0.14623686244797745927,   0.15158757511168138445,
      0.15338519033217494855,   0.15158757511168138445,
      0.14623686244797745927,   0.13745846286004134358,
      0.12545812119086894802,   0.11051708321912333527,
      0.092985467957886065301,  0.073273918185074144253,
      0.051843169000849625073,  0.029184840098505458609,
      0.0047619047619047619048};
  IntegratorXX::GaussLobatto<double, double> quad(21);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 21; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("22 point GaussLobatto", "[1d-quad]") {
  std::array<double, 22> ref_pts = {-1,
                                    -0.98415243845764617655,
                                    -0.94720428399922868052,
                                    -0.89006229019090447053,
                                    -0.81394892761192113605,
                                    -0.72048723996120215812,
                                    -0.61166943828425897123,
                                    -0.48981487518990234981,
                                    -0.35752071013891953806,
                                    -0.21760658515928504179,
                                    -0.073054540010898334761,
                                    0.073054540010898334761,
                                    0.21760658515928504179,
                                    0.35752071013891953806,
                                    0.48981487518990234981,
                                    0.61166943828425897123,
                                    0.72048723996120215812,
                                    0.81394892761192113605,
                                    0.89006229019090447053,
                                    0.94720428399922868052,
                                    0.98415243845764617655,
                                    1};
  std::array<double, 22> ref_wgt = {
      0.0043290043290043290043, 0.026545747682501757912,
      0.047214465293740752124,  0.066865605864553076012,
      0.085090060391838447816,  0.10150057480164767437,
      0.11574764465393906659,   0.12752769665343027553,
      0.13658968861374142669,   0.14274049227136140034,
      0.14584901944424179362,   0.14584901944424179362,
      0.14274049227136140034,   0.13658968861374142669,
      0.12752769665343027553,   0.11574764465393906659,
      0.10150057480164767437,   0.085090060391838447816,
      0.066865605864553076012,  0.047214465293740752124,
      0.026545747682501757912,  0.0043290043290043290043};
  IntegratorXX::GaussLobatto<double, double> quad(22);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 22; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("23 point GaussLobatto", "[1d-quad]") {
  std::array<double, 23> ref_pts = {-1,
                                    -0.98552715587873257808,
                                    -0.95175795571071020414,
                                    -0.89945855804034501095,
                                    -0.82965109665128588622,
                                    -0.74369504117206068394,
                                    -0.64326364446013620848,
                                    -0.53031177113684416813,
                                    -0.40703793791447482920,
                                    -0.27584154894579306711,
                                    -0.13927620404066839859,
                                    0,
                                    0.13927620404066839859,
                                    0.27584154894579306711,
                                    0.40703793791447482920,
                                    0.53031177113684416813,
                                    0.64326364446013620848,
                                    0.74369504117206068394,
                                    0.82965109665128588622,
                                    0.89945855804034501095,
                                    0.95175795571071020414,
                                    0.98552715587873257808,
                                    1};
  std::array<double, 23> ref_wgt = {
      0.0039525691699604743083, 0.024248600771531736517,
      0.043175871170241834749,  0.061252477129554206381,
      0.078135449475569989742,  0.093497246163512341833,
      0.10703910172433651154,   0.11849751066274913130,
      0.12764947470175887664,   0.13431687263860381990,
      0.13836993638580739452,   0.13972978001274736514,
      0.13836993638580739452,   0.13431687263860381990,
      0.12764947470175887664,   0.11849751066274913130,
      0.10703910172433651154,   0.093497246163512341833,
      0.078135449475569989742,  0.061252477129554206381,
      0.043175871170241834749,  0.024248600771531736517,
      0.0039525691699604743083};
  IntegratorXX::GaussLobatto<double, double> quad(23);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 23; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("24 point GaussLobatto", "[1d-quad]") {
  std::array<double, 24> ref_pts = {-1,
                                    -0.98673055350516088355,
                                    -0.95574822092988635803,
                                    -0.90770567511350652199,
                                    -0.84346407015487204062,
                                    -0.76417048242049330779,
                                    -0.67124010526412869984,
                                    -0.56633135797929531219,
                                    -0.45131637321432261825,
                                    -0.32824761337551091203,
                                    -0.19932125339083266724,
                                    -0.066837993737228578114,
                                    0.066837993737228578114,
                                    0.19932125339083266724,
                                    0.32824761337551091203,
                                    0.45131637321432261825,
                                    0.56633135797929531219,
                                    0.67124010526412869984,
                                    0.76417048242049330779,
                                    0.84346407015487204062,
                                    0.90770567511350652199,
                                    0.95574822092988635803,
                                    0.98673055350516088355,
                                    1};
  std::array<double, 24> ref_wgt = {
      0.0036231884057971014493, 0.022236853464711208993,
      0.039631681333467809469,  0.056309848724646199021,
      0.071981862055293982216,  0.086369029967929068217,
      0.099214827684083587414,  0.11029008689296860411,
      0.11939719370249131903,   0.12637364202802080013,
      0.13109494187360394235,   0.13347684386698637760,
      0.13347684386698637760,   0.13109494187360394235,
      0.12637364202802080013,   0.11939719370249131903,
      0.11029008689296860411,   0.099214827684083587414,
      0.086369029967929068217,  0.071981862055293982216,
      0.056309848724646199021,  0.039631681333467809469,
      0.022236853464711208993,  0.0036231884057971014493};
  IntegratorXX::GaussLobatto<double, double> quad(24);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 24; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("25 point GaussLobatto", "[1d-quad]") {
  std::array<double, 25> ref_pts = {-1,
                                    -0.98778994493149370927,
                                    -0.95926413825253447886,
                                    -0.91498277073462257832,
                                    -0.85567646583531657752,
                                    -0.78231965924071678040,
                                    -0.69611704881513436676,
                                    -0.59848414727999326810,
                                    -0.49102411481887838262,
                                    -0.37550145785922723323,
                                    -0.25381306416887658018,
                                    -0.12795705948310697271,
                                    0,
                                    0.12795705948310697271,
                                    0.25381306416887658018,
                                    0.37550145785922723323,
                                    0.49102411481887838262,
                                    0.59848414727999326810,
                                    0.69611704881513436676,
                                    0.78231965924071678040,
                                    0.85567646583531657752,
                                    0.91498277073462257832,
                                    0.95926413825253447886,
                                    0.98778994493149370927,
                                    1};
  std::array<double, 25> ref_wgt = {
      0.0033333333333333333333, 0.020465168932974385309,
      0.036504738794271372032,  0.051936228368491474643,
      0.066513728675312784694,  0.079998774836292981802,
      0.092170139910620421913,  0.10282803034795783083,
      0.11179746626832088816,   0.11893117940681182541,
      0.12411203893795029070,   0.12725497753833144702,
      0.12830838929866192834,   0.12725497753833144702,
      0.12411203893795029070,   0.11893117940681182541,
      0.11179746626832088816,   0.10282803034795783083,
      0.092170139910620421913,  0.079998774836292981802,
      0.066513728675312784694,  0.051936228368491474643,
      0.036504738794271372032,  0.020465168932974385309,
      0.0033333333333333333333};
  IntegratorXX::GaussLobatto<double, double> quad(25);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 25; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("26 point GaussLobatto", "[1d-quad]") {
  std::array<double, 26> ref_pts = {-1,
                                    -0.98872741231147565443,
                                    -0.96237787476771732975,
                                    -0.92143554681755734112,
                                    -0.86652432395912357097,
                                    -0.79847718310743743904,
                                    -0.71832581636266508053,
                                    -0.62728529949231688780,
                                    -0.52673574202987854530,
                                    -0.41820138706624678556,
                                    -0.30332751285925272077,
                                    -0.18385549527005490132,
                                    -0.061596411781919728206,
                                    0.061596411781919728206,
                                    0.18385549527005490132,
                                    0.30332751285925272077,
                                    0.41820138706624678556,
                                    0.52673574202987854530,
                                    0.62728529949231688780,
                                    0.71832581636266508053,
                                    0.79847718310743743904,
                                    0.86652432395912357097,
                                    0.92143554681755734112,
                                    0.96237787476771732975,
                                    0.98872741231147565443,
                                    1};
  std::array<double, 26> ref_wgt = {
      0.0030769230769230769231, 0.018896858024263465581,
      0.033732303685955999378,  0.048048399081180627316,
      0.061635025142547402782,  0.074287050122291137316,
      0.085812863980004362187,  0.096037802353901310804,
      0.10480688623073705299,   0.11198719411986033530,
      0.11746988409380900708,   0.12117184628844334604,
      0.12303696380008287630,   0.12303696380008287630,
      0.12117184628844334604,   0.11746988409380900708,
      0.11198719411986033530,   0.10480688623073705299,
      0.096037802353901310804,  0.085812863980004362187,
      0.074287050122291137316,  0.061635025142547402782,
      0.048048399081180627316,  0.033732303685955999378,
      0.018896858024263465581,  0.0030769230769230769231};
  IntegratorXX::GaussLobatto<double, double> quad(26);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 26; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("27 point GaussLobatto", "[1d-quad]") {
  std::array<double, 27> ref_pts = {-1,
                                    -0.98956096372855062115,
                                    -0.96514840245081891926,
                                    -0.92718345872511577886,
                                    -0.87620208621452247867,
                                    -0.81292048689581228826,
                                    -0.73822714984645991084,
                                    -0.65317066369680951518,
                                    -0.55894506094256118006,
                                    -0.45687307561408240368,
                                    -0.34838758198902867044,
                                    -0.23501148310291813334,
                                    -0.11833633389852104844,
                                    0,
                                    0.11833633389852104844,
                                    0.23501148310291813334,
                                    0.34838758198902867044,
                                    0.45687307561408240368,
                                    0.55894506094256118006,
                                    0.65317066369680951518,
                                    0.73822714984645991084,
                                    0.81292048689581228826,
                                    0.87620208621452247867,
                                    0.92718345872511577886,
                                    0.96514840245081891926,
                                    0.98956096372855062115,
                                    1};
  std::array<double, 27> ref_wgt = {
      0.0028490028490028490028, 0.017501974876065579019,
      0.031262951735202384325,  0.044577657933061698744,
      0.057265569680162731739,  0.069149342360043276281,
      0.080062321970538458168,  0.089851365259290559972,
      0.098379074585952763179,  0.10552574782125301122,
      0.11119106525743703293,   0.11529550025465198281,
      0.11778143658595615907,   0.11861397766276302709,
      0.11778143658595615907,   0.11529550025465198281,
      0.11119106525743703293,   0.10552574782125301122,
      0.098379074585952763179,  0.089851365259290559972,
      0.080062321970538458168,  0.069149342360043276281,
      0.057265569680162731739,  0.044577657933061698744,
      0.031262951735202384325,  0.017501974876065579019,
      0.0028490028490028490028};
  IntegratorXX::GaussLobatto<double, double> quad(27);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 27; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("28 point GaussLobatto", "[1d-quad]") {
  std::array<double, 28> ref_pts = {-1,
                                    -0.99030540261845412552,
                                    -0.96762428585713130434,
                                    -0.93232516712155852493,
                                    -0.88487101721130283841,
                                    -0.82588097005633819604,
                                    -0.75612419400556976515,
                                    -0.67651012892957331772,
                                    -0.58807668983717560648,
                                    -0.49197675393157938043,
                                    -0.38946313757636280794,
                                    -0.28187226662160237195,
                                    -0.17060675530800436088,
                                    -0.057117121693512897627,
                                    0.057117121693512897627,
                                    0.17060675530800436088,
                                    0.28187226662160237195,
                                    0.38946313757636280794,
                                    0.49197675393157938043,
                                    0.58807668983717560648,
                                    0.67651012892957331772,
                                    0.75612419400556976515,
                                    0.82588097005633819604,
                                    0.88487101721130283841,
                                    0.93232516712155852493,
                                    0.96762428585713130434,
                                    0.99030540261845412552,
                                    1};
  std::array<double, 28> ref_wgt = {
      0.0026455026455026455026, 0.016255883957504218199,
      0.029054220677979144707,  0.041466915243006721038,
      0.053338077047327488400,  0.064513658080354538390,
      0.074848123509707702781,  0.084206795121510325739,
      0.092467685997712175722,  0.099523110412495672876,
      0.10528109376105589448,   0.10966657379597662509,
      0.11262238007723901254,   0.11410997967262783453,
      0.11410997967262783453,   0.11262238007723901254,
      0.10966657379597662509,   0.10528109376105589448,
      0.099523110412495672876,  0.092467685997712175722,
      0.084206795121510325739,  0.074848123509707702781,
      0.064513658080354538390,  0.053338077047327488400,
      0.041466915243006721038,  0.029054220677979144707,
      0.016255883957504218199,  0.0026455026455026455026};
  IntegratorXX::GaussLobatto<double, double> quad(28);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 28; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("29 point GaussLobatto", "[1d-quad]") {
  std::array<double, 29> ref_pts = {-1,
                                    -0.99097298826856981628,
                                    -0.96984580728793629371,
                                    -0.93694271852098251154,
                                    -0.89266571997608827876,
                                    -0.83755273628178656524,
                                    -0.77227289720646874135,
                                    -0.69761866135636798839,
                                    -0.61449625220343294997,
                                    -0.52391467437196908358,
                                    -0.42697347171349438764,
                                    -0.32484938284191100626,
                                    -0.21878205828426101981,
                                    -0.11005901339559210971,
                                    0,
                                    0.11005901339559210971,
                                    0.21878205828426101981,
                                    0.32484938284191100626,
                                    0.42697347171349438764,
                                    0.52391467437196908358,
                                    0.61449625220343294997,
                                    0.69761866135636798839,
                                    0.77227289720646874135,
                                    0.83755273628178656524,
                                    0.89266571997608827876,
                                    0.93694271852098251154,
                                    0.96984580728793629371,
                                    0.99097298826856981628,
                                    1};
  std::array<double, 29> ref_wgt = {
      0.0024630541871921182266, 0.015138169859967596791,
      0.027070806296824827541,  0.038668439979712979748,
      0.049795809093237560923,  0.060318503828522735028,
      0.070108938000597999185,  0.079048313027885601784,
      0.087028133441135605638,  0.093951542114796312498,
      0.099734501637149860654,  0.10430681646367653742,
      0.10761298583356853937,   0.10961287784589042013,
      0.11028221677968261011,   0.10961287784589042013,
      0.10761298583356853937,   0.10430681646367653742,
      0.099734501637149860654,  0.093951542114796312498,
      0.087028133441135605638,  0.079048313027885601784,
      0.070108938000597999185,  0.060318503828522735028,
      0.049795809093237560923,  0.038668439979712979748,
      0.027070806296824827541,  0.015138169859967596791,
      0.0024630541871921182266};
  IntegratorXX::GaussLobatto<double, double> quad(29);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 29; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("30 point GaussLobatto", "[1d-quad]") {
  std::array<double, 30> ref_pts = {-1,
                                    -0.99157394284050029334,
                                    -0.97184660316626924168,
                                    -0.94110478095105708231,
                                    -0.89969921819927685955,
                                    -0.84809948718019810955,
                                    -0.78689035723754708045,
                                    -0.71676539863708513163,
                                    -0.63851917580755840737,
                                    -0.55303826009505285238,
                                    -0.46129119016824068523,
                                    -0.36431750042244899776,
                                    -0.26321594371957379127,
                                    -0.15913204262585046782,
                                    -0.053245110485486669363,
                                    0.053245110485486669363,
                                    0.15913204262585046782,
                                    0.26321594371957379127,
                                    0.36431750042244899776,
                                    0.46129119016824068523,
                                    0.55303826009505285238,
                                    0.63851917580755840737,
                                    0.71676539863708513163,
                                    0.78689035723754708045,
                                    0.84809948718019810955,
                                    0.89969921819927685955,
                                    0.94110478095105708231,
                                    0.97184660316626924168,
                                    0.99157394284050029334,
                                    1};
  std::array<double, 30> ref_wgt = {
      0.0022988505747126436782, 0.014131799327905387641,
      0.025283166740551402204,  0.036142094199408535315,
      0.046590694533142927402,  0.056511197923080383302,
      0.065791336397790054944,  0.074326003324718253834,
      0.082018512833406914800,  0.088781712319765210167,
      0.094538975193860891781,  0.099225071004299830658,
      0.10278690530723498947,   0.10518412159645464986,
      0.10638955872366792495,   0.10638955872366792495,
      0.10518412159645464986,   0.10278690530723498947,
      0.099225071004299830658,  0.094538975193860891781,
      0.088781712319765210167,  0.082018512833406914800,
      0.074326003324718253834,  0.065791336397790054944,
      0.056511197923080383302,  0.046590694533142927402,
      0.036142094199408535315,  0.025283166740551402204,
      0.014131799327905387641,  0.0022988505747126436782};
  IntegratorXX::GaussLobatto<double, double> quad(30);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 30; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("31 point GaussLobatto", "[1d-quad]") {
  std::array<double, 31> ref_pts = {-1,
                                    -0.99211684434648108859,
                                    -0.97365493581573647483,
                                    -0.94486917020803922981,
                                    -0.90606695144126981314,
                                    -0.85765999529745561037,
                                    -0.80016154319246298927,
                                    -0.73418113630907524213,
                                    -0.66041820261152552334,
                                    -0.57965465720800191300,
                                    -0.49274661909883240570,
                                    -0.40061533828056180630,
                                    -0.30423743127287262096,
                                    -0.20463452924752450114,
                                    -0.10286244876068227709,
                                    0,
                                    0.10286244876068227709,
                                    0.20463452924752450114,
                                    0.30423743127287262096,
                                    0.40061533828056180630,
                                    0.49274661909883240570,
                                    0.57965465720800191300,
                                    0.66041820261152552334,
                                    0.73418113630907524213,
                                    0.80016154319246298927,
                                    0.85765999529745561037,
                                    0.90606695144126981314,
                                    0.94486917020803922981,
                                    0.97365493581573647483,
                                    0.99211684434648108859,
                                    1};
  std::array<double, 31> ref_wgt = {
      0.0021505376344086021505, 0.013222471025464670303,
      0.023666433230270316730,  0.033853940405224057630,
      0.043681818160066912830,  0.053046465493448782774,
      0.061848741290454623391,  0.069995377594100570450,
      0.077400032341475618634,  0.083984220517529730665,
      0.089678151045260822248,  0.094421468377857957432,
      0.098163893013712757120,  0.10086575479865051340,
      0.10249841359547039768,   0.10304456295320733314,
      0.10249841359547039768,   0.10086575479865051340,
      0.098163893013712757120,  0.094421468377857957432,
      0.089678151045260822248,  0.083984220517529730665,
      0.077400032341475618634,  0.069995377594100570450,
      0.061848741290454623391,  0.053046465493448782774,
      0.043681818160066912830,  0.033853940405224057630,
      0.023666433230270316730,  0.013222471025464670303,
      0.0021505376344086021505};
  IntegratorXX::GaussLobatto<double, double> quad(31);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 31; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("32 point GaussLobatto", "[1d-quad]") {
  std::array<double, 32> ref_pts = {-1,
                                    -0.99260893397276135937,
                                    -0.97529469048270922806,
                                    -0.94828483841723237808,
                                    -0.91184993906373190407,
                                    -0.86635247601267551983,
                                    -0.81224473177744234455,
                                    -0.75006449393667479772,
                                    -0.68042975561555081594,
                                    -0.60403258714842112614,
                                    -0.52163226288156529061,
                                    -0.43404771720184693960,
                                    -0.34214940653888148625,
                                    -0.24685065885020530442,
                                    -0.14909859681364749491,
                                    -0.049864725046593252306,
                                    0.049864725046593252306,
                                    0.14909859681364749491,
                                    0.24685065885020530442,
                                    0.34214940653888148625,
                                    0.43404771720184693960,
                                    0.52163226288156529061,
                                    0.60403258714842112614,
                                    0.68042975561555081594,
                                    0.75006449393667479772,
                                    0.81224473177744234455,
                                    0.86635247601267551983,
                                    0.91184993906373190407,
                                    0.94828483841723237808,
                                    0.97529469048270922806,
                                    0.99260893397276135937,
                                    1};
  std::array<double, 32> ref_wgt = {
      0.0020161290322580645161, 0.012398106501373843789,
      0.022199552889291964624,  0.031775135410915465782,
      0.041034201586062723330,  0.049885271336221207012,
      0.058240497248055869551,  0.066016877257154543932,
      0.073137139602679032640,  0.079530525692106252292,
      0.085133497949668230528,  0.089890372957357833072,
      0.093753875546813813566,  0.096685608948002600560,
      0.098656436540761777171,  0.099646771501276777635,
      0.099646771501276777635,  0.098656436540761777171,
      0.096685608948002600560,  0.093753875546813813566,
      0.089890372957357833072,  0.085133497949668230528,
      0.079530525692106252292,  0.073137139602679032640,
      0.066016877257154543932,  0.058240497248055869551,
      0.049885271336221207012,  0.041034201586062723330,
      0.031775135410915465782,  0.022199552889291964624,
      0.012398106501373843789,  0.0020161290322580645161};
  IntegratorXX::GaussLobatto<double, double> quad(32);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 32; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("33 point GaussLobatto", "[1d-quad]") {
  std::array<double, 33> ref_pts = {-1,
                                    -0.99305635843365834367,
                                    -0.97678616331690630149,
                                    -0.95139345139699574338,
                                    -0.91711730345094124083,
                                    -0.87427810075056222065,
                                    -0.82327592300406746956,
                                    -0.76458700179352862801,
                                    -0.69875931661816259570,
                                    -0.62640749128126825726,
                                    -0.54820705991911162311,
                                    -0.46488816163210675597,
                                    -0.37722872425339363504,
                                    -0.28604720148767404161,
                                    -0.19219493146747722574,
                                    -0.096548188176107006317,
                                    0,
                                    0.096548188176107006317,
                                    0.19219493146747722574,
                                    0.28604720148767404161,
                                    0.37722872425339363504,
                                    0.46488816163210675597,
                                    0.54820705991911162311,
                                    0.62640749128126825726,
                                    0.69875931661816259570,
                                    0.76458700179352862801,
                                    0.82327592300406746956,
                                    0.87427810075056222065,
                                    0.91711730345094124083,
                                    0.95139345139699574338,
                                    0.97678616331690630149,
                                    0.99305635843365834367,
                                    1};
  std::array<double, 33> ref_wgt = {
      0.0018939393939393939394, 0.011648448392267734651,
      0.020864609017603360096,  0.029881045916746477520,
      0.038617814771813967564,  0.046993850461024170548,
      0.054931059442626967952,  0.062355367852465305441,
      0.069197469494016147560,  0.075393486923973828507,
      0.080885572193455092180,  0.085622448531813132550,
      0.089559889747077400661,  0.092661133442241463530,
      0.094897224394591815824,  0.096247284972985461997,
      0.096698710102716558960,  0.096247284972985461997,
      0.094897224394591815824,  0.092661133442241463530,
      0.089559889747077400661,  0.085622448531813132550,
      0.080885572193455092180,  0.075393486923973828507,
      0.069197469494016147560,  0.062355367852465305441,
      0.054931059442626967952,  0.046993850461024170548,
      0.038617814771813967564,  0.029881045916746477520,
      0.020864609017603360096,  0.011648448392267734651,
      0.0018939393939393939394};
  IntegratorXX::GaussLobatto<double, double> quad(33);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 33; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("34 point GaussLobatto", "[1d-quad]") {
  std::array<double, 34> ref_pts = {-1,
                                    -0.99346436258751620225,
                                    -0.97814668887993794895,
                                    -0.95423064891280752841,
                                    -0.92192829567744892274,
                                    -0.88152383651227326440,
                                    -0.83337244280314261491,
                                    -0.77789730643186741088,
                                    -0.71558596072021900600,
                                    -0.64698600793601462438,
                                    -0.57270031127492284479,
                                    -0.49338169867327095744,
                                    -0.40972722655959274486,
                                    -0.32247205451148899358,
                                    -0.23238298486911684306,
                                    -0.14025172417619385837,
                                    -0.046887925712970680087,
                                    0.046887925712970680087,
                                    0.14025172417619385837,
                                    0.23238298486911684306,
                                    0.32247205451148899358,
                                    0.40972722655959274486,
                                    0.49338169867327095744,
                                    0.57270031127492284479,
                                    0.64698600793601462438,
                                    0.71558596072021900600,
                                    0.77789730643186741088,
                                    0.83337244280314261491,
                                    0.88152383651227326440,
                                    0.92192829567744892274,
                                    0.95423064891280752841,
                                    0.97814668887993794895,
                                    0.99346436258751620225,
                                    1};
  std::array<double, 34> ref_wgt = {
      0.0017825311942959001783, 0.010964740818306551401,
      0.019646278160713431288,  0.028150536862243503401,
      0.036406770950782552351,  0.044342902060244342300,
      0.051889291830927120776,  0.058979654026745226695,
      0.065551690108265120430,  0.071547649877072822036,
      0.076914843063590982105,  0.081606103850422383162,
      0.085580205971977586590,  0.088802225283584032118,
      0.091243846806914487022,  0.092883613629610646144,
      0.093707115504303312002,  0.093707115504303312002,
      0.092883613629610646144,  0.091243846806914487022,
      0.088802225283584032118,  0.085580205971977586590,
      0.081606103850422383162,  0.076914843063590982105,
      0.071547649877072822036,  0.065551690108265120430,
      0.058979654026745226695,  0.051889291830927120776,
      0.044342902060244342300,  0.036406770950782552351,
      0.028150536862243503401,  0.019646278160713431288,
      0.010964740818306551401,  0.0017825311942959001783};
  IntegratorXX::GaussLobatto<double, double> quad(34);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 34; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("35 point GaussLobatto", "[1d-quad]") {
  std::array<double, 35> ref_pts = {-1,
                                    -0.99383744364438655029,
                                    -0.97939114342992062319,
                                    -0.95682705843698788244,
                                    -0.92633393201608193813,
                                    -0.88816475371795045509,
                                    -0.84263589538219978246,
                                    -0.79012465708479561954,
                                    -0.73106617837876523895,
                                    -0.66594984386577595734,
                                    -0.59531523208008327405,
                                    -0.51974764606220166355,
                                    -0.43987326413171700276,
                                    -0.35635395156545407572,
                                    -0.26988177638172079189,
                                    -0.18117327476560166645,
                                    -0.090963513696700411149,
                                    0,
                                    0.090963513696700411149,
                                    0.18117327476560166645,
                                    0.26988177638172079189,
                                    0.35635395156545407572,
                                    0.43987326413171700276,
                                    0.51974764606220166355,
                                    0.59531523208008327405,
                                    0.66594984386577595734,
                                    0.73106617837876523895,
                                    0.79012465708479561954,
                                    0.84263589538219978246,
                                    0.88816475371795045509,
                                    0.92633393201608193813,
                                    0.95682705843698788244,
                                    0.97939114342992062319,
                                    0.99383744364438655029,
                                    1};
  std::array<double, 35> ref_wgt = {
      0.0016806722689075630252, 0.010339473314540376211,
      0.018531393476282057482,  0.026565395330778215948,
      0.034378667890410702170,  0.041906918204587880736,
      0.049087863437218273244,  0.055862029889036716723,
      0.062173295815379782245,  0.067969368873298345403,
      0.073202223274018847533,  0.077828499133511153104,
      0.081809862335847833270,  0.085113322437326040267,
      0.087711506159071955511,  0.089582884273716908712,
      0.090711950036822492939,  0.091089347698489710951,
      0.090711950036822492939,  0.089582884273716908712,
      0.087711506159071955511,  0.085113322437326040267,
      0.081809862335847833270,  0.077828499133511153104,
      0.073202223274018847533,  0.067969368873298345403,
      0.062173295815379782245,  0.055862029889036716723,
      0.049087863437218273244,  0.041906918204587880736,
      0.034378667890410702170,  0.026565395330778215948,
      0.018531393476282057482,  0.010339473314540376211,
      0.0016806722689075630252};
  IntegratorXX::GaussLobatto<double, double> quad(35);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 35; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("36 point GaussLobatto", "[1d-quad]") {
  std::array<double, 36> ref_pts = {-1,
                                    -0.99417947547312392793,
                                    -0.98053235128252972803,
                                    -0.95920911586873528612,
                                    -0.93037832398293916080,
                                    -0.89426591198561635937,
                                    -0.85115459340254209236,
                                    -0.80138180446457147322,
                                    -0.74533709877172902380,
                                    -0.68345910915004599975,
                                    -0.61623211860391232049,
                                    -0.54418227174041531275,
                                    -0.46787345770807005502,
                                    -0.38790289736603624295,
                                    -0.30489646941705438884,
                                    -0.21950381216926856124,
                                    -0.13239323930266103126,
                                    -0.044246509451450338452,
                                    0.044246509451450338452,
                                    0.13239323930266103126,
                                    0.21950381216926856124,
                                    0.30489646941705438884,
                                    0.38790289736603624295,
                                    0.46787345770807005502,
                                    0.54418227174041531275,
                                    0.61623211860391232049,
                                    0.68345910915004599975,
                                    0.74533709877172902380,
                                    0.80138180446457147322,
                                    0.85115459340254209236,
                                    0.89426591198561635937,
                                    0.93037832398293916080,
                                    0.95920911586873528612,
                                    0.98053235128252972803,
                                    0.99417947547312392793,
                                    1};
  std::array<double, 36> ref_wgt = {
      0.0015873015873015873016, 0.0097661742710234637214,
      0.017508591322167709601,  0.025109861490694849104,
      0.032514046428104876119,  0.039663623505124960590,
      0.046502730682987540520,  0.052977870870747266275,
      0.059038377820917483041,  0.064636824372075271686,
      0.069729397256839424743,  0.074276241315475396764,
      0.078241771954180374388,  0.081594953883979392564,
      0.084309544130491856057,  0.086364297480506395719,
      0.087743132786509785840,  0.088435258840872365966,
      0.088435258840872365966,  0.087743132786509785840,
      0.086364297480506395719,  0.084309544130491856057,
      0.081594953883979392564,  0.078241771954180374388,
      0.074276241315475396764,  0.069729397256839424743,
      0.064636824372075271686,  0.059038377820917483041,
      0.052977870870747266275,  0.046502730682987540520,
      0.039663623505124960590,  0.032514046428104876119,
      0.025109861490694849104,  0.017508591322167709601,
      0.0097661742710234637214, 0.0015873015873015873016};
  IntegratorXX::GaussLobatto<double, double> quad(36);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 36; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("37 point GaussLobatto", "[1d-quad]") {
  std::array<double, 37> ref_pts = {-1,
                                    -0.99449380945326184798,
                                    -0.98158141498697708405,
                                    -0.96139973400684808611,
                                    -0.93409976546970499413,
                                    -0.89988390897660705063,
                                    -0.85900556704651452450,
                                    -0.81176741858365508366,
                                    -0.75851921157356837559,
                                    -0.69965518373232943215,
                                    -0.63561114734643404797,
                                    -0.56686126417869967694,
                                    -0.49391453563342083271,
                                    -0.41731103463383077135,
                                    -0.33761790729576471809,
                                    -0.25542517408079675214,
                                    -0.17134136155372539840,
                                    -0.085988997104455259539,
                                    0,
                                    0.085988997104455259539,
                                    0.17134136155372539840,
                                    0.25542517408079675214,
                                    0.33761790729576471809,
                                    0.41731103463383077135,
                                    0.49391453563342083271,
                                    0.56686126417869967694,
                                    0.63561114734643404797,
                                    0.69965518373232943215,
                                    0.75851921157356837559,
                                    0.81176741858365508366,
                                    0.85900556704651452450,
                                    0.89988390897660705063,
                                    0.93409976546970499413,
                                    0.96139973400684808611,
                                    0.98158141498697708405,
                                    0.99449380945326184798,
                                    1};
  std::array<double, 37> ref_wgt = {
      0.0015015015015015015015, 0.0092392432428419296555,
      0.016568023462080861143,  0.023770244581551458694,
      0.030795943408698084411,  0.037593506203916828020,
      0.044112694216875663982,  0.050305268315041556950,
      0.056125390773875629887,  0.061529975716485608634,
      0.066479011534697336399,  0.070935858364453643757,
      0.074867519862718237396,  0.078244887728851382164,
      0.081042957322503717113,  0.083241012845791743941,
      0.084822780746207937208,  0.085776550217099386400,
      0.086095259909614985486,  0.085776550217099386400,
      0.084822780746207937208,  0.083241012845791743941,
      0.081042957322503717113,  0.078244887728851382164,
      0.074867519862718237396,  0.070935858364453643757,
      0.066479011534697336399,  0.061529975716485608634,
      0.056125390773875629887,  0.050305268315041556950,
      0.044112694216875663982,  0.037593506203916828020,
      0.030795943408698084411,  0.023770244581551458694,
      0.016568023462080861143,  0.0092392432428419296555,
      0.0015015015015015015015};
  IntegratorXX::GaussLobatto<double, double> quad(37);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 37; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("38 point GaussLobatto", "[1d-quad]") {
  std::array<double, 38> ref_pts = {-1,
                                    -0.99478335679545231333,
                                    -0.98254798519853055990,
                                    -0.96341885014356087908,
                                    -0.93753162613981966767,
                                    -0.90506815879723055436,
                                    -0.86625623202567185762,
                                    -0.82136811196148726172,
                                    -0.77071866905969283272,
                                    -0.71466317903038071954,
                                    -0.65359483427890921692,
                                    -0.58794198737053419961,
                                    -0.51816514710053655774,
                                    -0.44475374868284343330,
                                    -0.36822272088804714266,
                                    -0.28910887428658497090,
                                    -0.20796713596695979982,
                                    -0.12536665715776862378,
                                    -0.041886821065351953400,
                                    0.041886821065351953400,
                                    0.12536665715776862378,
                                    0.20796713596695979982,
                                    0.28910887428658497090,
                                    0.36822272088804714266,
                                    0.44475374868284343330,
                                    0.51816514710053655774,
                                    0.58794198737053419961,
                                    0.65359483427890921692,
                                    0.71466317903038071954,
                                    0.77071866905969283272,
                                    0.82136811196148726172,
                                    0.86625623202567185762,
                                    0.90506815879723055436,
                                    0.93753162613981966767,
                                    0.96341885014356087908,
                                    0.98254798519853055990,
                                    0.99478335679545231333,
                                    1};
  std::array<double, 38> ref_wgt = {
      0.0014224751066856330014, 0.0087538139943602258516,
      0.015701121356300385369,  0.022534606874418874729,
      0.029209520950421723821,  0.035679424686142199384,
      0.041899019716493155527,  0.047824705288195613034,
      0.053414926372061171192,  0.058630475628248269850,
      0.063434771663867566047,  0.067794116802442773102,
      0.071677933929969965508,  0.075058981187236438837,
      0.077913543156257632011,  0.080221597260513986033,
      0.081966954237835647749,  0.083137371712546614227,
      0.083724640076002124726,  0.083724640076002124726,
      0.083137371712546614227,  0.081966954237835647749,
      0.080221597260513986033,  0.077913543156257632011,
      0.075058981187236438837,  0.071677933929969965508,
      0.067794116802442773102,  0.063434771663867566047,
      0.058630475628248269850,  0.053414926372061171192,
      0.047824705288195613034,  0.041899019716493155527,
      0.035679424686142199384,  0.029209520950421723821,
      0.022534606874418874729,  0.015701121356300385369,
      0.0087538139943602258516, 0.0014224751066856330014};
  IntegratorXX::GaussLobatto<double, double> quad(38);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 38; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("39 point GaussLobatto", "[1d-quad]") {
  std::array<double, 39> ref_pts = {-1,
                                    -0.99505065612147837692,
                                    -0.98344048250285422306,
                                    -0.96528387707647646366,
                                    -0.94070308939531743429,
                                    -0.90986195218028517282,
                                    -0.87296578017958785151,
                                    -0.83026013820709260714,
                                    -0.78202923714946893003,
                                    -0.72859405162312974297,
                                    -0.67031018720635343690,
                                    -0.60756551529529640518,
                                    -0.54077759250507819793,
                                    -0.47039088220905566990,
                                    -0.39687379687342754737,
                                    -0.32071558094263835559,
                                    -0.24242305505356218485,
                                    -0.16251724326222406303,
                                    -0.081529905737327456129,
                                    0,
                                    0.081529905737327456129,
                                    0.16251724326222406303,
                                    0.24242305505356218485,
                                    0.32071558094263835559,
                                    0.39687379687342754737,
                                    0.47039088220905566990,
                                    0.54077759250507819793,
                                    0.60756551529529640518,
                                    0.67031018720635343690,
                                    0.72859405162312974297,
                                    0.78202923714946893003,
                                    0.83026013820709260714,
                                    0.87296578017958785151,
                                    0.90986195218028517282,
                                    0.94070308939531743429,
                                    0.96528387707647646366,
                                    0.98344048250285422306,
                                    0.99505065612147837692,
                                    1};
  std::array<double, 39> ref_wgt = {
      0.0013495276653171390013, 0.0083056420077882968507,
      0.014900402058706222952,  0.021392502271216358625,
      0.027741757700206936732,  0.033906276321207934698,
      0.039845113337566719410,  0.045518770698763460405,
      0.050889500060123478751,  0.055921563937307437062,
      0.060581476611788699819,  0.064838228089039192114,
      0.068663490921010460283,  0.072031808925239211721,
      0.074920766690497159268,  0.077311138798527091999,
      0.079187017793501901285,  0.080535920058912584107,
      0.081348868902776145915,  0.081620454301007138007,
      0.081348868902776145915,  0.080535920058912584107,
      0.079187017793501901285,  0.077311138798527091999,
      0.074920766690497159268,  0.072031808925239211721,
      0.068663490921010460283,  0.064838228089039192114,
      0.060581476611788699819,  0.055921563937307437062,
      0.050889500060123478751,  0.045518770698763460405,
      0.039845113337566719410,  0.033906276321207934698,
      0.027741757700206936732,  0.021392502271216358625,
      0.014900402058706222952,  0.0083056420077882968507,
      0.0013495276653171390013};
  IntegratorXX::GaussLobatto<double, double> quad(39);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 39; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("40 point GaussLobatto", "[1d-quad]") {
  std::array<double, 40> ref_pts = {-1,
                                    -0.99529792924434889690,
                                    -0.98426628071750335473,
                                    -0.96701007648798852065,
                                    -0.94363976494360164257,
                                    -0.91430333969020945107,
                                    -0.87918634347933983789,
                                    -0.83851082277810644074,
                                    -0.79253395260155188681,
                                    -0.74154641914738441749,
                                    -0.68587058508431371383,
                                    -0.62585845275525751340,
                                    -0.56188943929472264877,
                                    -0.49436797812525360665,
                                    -0.42372096215555098475,
                                    -0.35039504491418087798,
                                    -0.27485381671432436652,
                                    -0.19757487371891077184,
                                    -0.11904679844497109352,
                                    -0.039766070802181900147,
                                    0.039766070802181900147,
                                    0.11904679844497109352,
                                    0.19757487371891077184,
                                    0.27485381671432436652,
                                    0.35039504491418087798,
                                    0.42372096215555098475,
                                    0.49436797812525360665,
                                    0.56188943929472264877,
                                    0.62585845275525751340,
                                    0.68587058508431371383,
                                    0.74154641914738441749,
                                    0.79253395260155188681,
                                    0.83851082277810644074,
                                    0.87918634347933983789,
                                    0.91430333969020945107,
                                    0.94363976494360164257,
                                    0.96701007648798852065,
                                    0.98426628071750335473,
                                    0.99529792924434889690,
                                    1};
  std::array<double, 40> ref_wgt = {
      0.0012820512820512820513, 0.0078910115886006137613,
      0.014159307549919773151,  0.020334759063387161851,
      0.026381190653141486263,  0.032260717927117395493,
      0.037936243700708446993,  0.043371908194757981009,
      0.048533353845914325139,  0.053387951971494182955,
      0.057905011981786083403,  0.062055976475709524970,
      0.065814602222895902663,  0.069157126276081134456,
      0.072062416302054295221,  0.074512104235389338579,
      0.076490702433396506255,  0.077985701608680580727,
      0.078987649925364344189,  0.079490212761549640871,
      0.079490212761549640871,  0.078987649925364344189,
      0.077985701608680580727,  0.076490702433396506255,
      0.074512104235389338579,  0.072062416302054295221,
      0.069157126276081134456,  0.065814602222895902663,
      0.062055976475709524970,  0.057905011981786083403,
      0.053387951971494182955,  0.048533353845914325139,
      0.043371908194757981009,  0.037936243700708446993,
      0.032260717927117395493,  0.026381190653141486263,
      0.020334759063387161851,  0.014159307549919773151,
      0.0078910115886006137613, 0.0012820512820512820513};
  IntegratorXX::GaussLobatto<double, double> quad(40);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 40; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("41 point GaussLobatto", "[1d-quad]") {
  std::array<double, 41> ref_pts = {-1,
                                    -0.99552712744528436149,
                                    -0.98503185912472477625,
                                    -0.96861086956768183007,
                                    -0.94636419964749212120,
                                    -0.91842587069790381320,
                                    -0.88496397216961512278,
                                    -0.84617977210399184222,
                                    -0.80230653395809178142,
                                    -0.75360812188695136491,
                                    -0.70037741678068295780,
                                    -0.64293455606458542288,
                                    -0.58162500891521268803,
                                    -0.51681749884712931698,
                                    -0.44890178631482849896,
                                    -0.37828632473108320466,
                                    -0.30539580402944574212,
                                    -0.23066859655953025885,
                                    -0.15455412068384000054,
                                    -0.077510137936254275594,
                                    0,
                                    0.077510137936254275594,
                                    0.15455412068384000054,
                                    0.23066859655953025885,
                                    0.30539580402944574212,
                                    0.37828632473108320466,
                                    0.44890178631482849896,
                                    0.51681749884712931698,
                                    0.58162500891521268803,
                                    0.64293455606458542288,
                                    0.70037741678068295780,
                                    0.75360812188695136491,
                                    0.80230653395809178142,
                                    0.84617977210399184222,
                                    0.88496397216961512278,
                                    0.91842587069790381320,
                                    0.94636419964749212120,
                                    0.96861086956768183007,
                                    0.98503185912472477625,
                                    0.99552712744528436149,
                                    1};
  std::array<double, 41> ref_wgt = {
      0.0012195121951219512195, 0.0075066587628515885291,
      0.013472071094470606618,  0.019353298566251679906,
      0.025117698393601086512,  0.030730929097922458568,
      0.036159303444689512510,  0.041370196155572640758,
      0.046332276348651614480,  0.051015704947986513458,
      0.055392316918914310539,  0.059435791663543655745,
      0.063121811727549795415,  0.066428209232842706044,
      0.069335099287094895125,  0.071824999619763970466,
      0.073882935747389606369,  0.075496531045917972791,
      0.076656081193317470598,  0.077354612537305548537,
      0.077587924038480831627,  0.077354612537305548537,
      0.076656081193317470598,  0.075496531045917972791,
      0.073882935747389606369,  0.071824999619763970466,
      0.069335099287094895125,  0.066428209232842706044,
      0.063121811727549795415,  0.059435791663543655745,
      0.055392316918914310539,  0.051015704947986513458,
      0.046332276348651614480,  0.041370196155572640758,
      0.036159303444689512510,  0.030730929097922458568,
      0.025117698393601086512,  0.019353298566251679906,
      0.013472071094470606618,  0.0075066587628515885291,
      0.0012195121951219512195};
  IntegratorXX::GaussLobatto<double, double> quad(41);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 41; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("42 point GaussLobatto", "[1d-quad]") {
  std::array<double, 42> ref_pts = {-1,
                                    -0.99573997005351627519,
                                    -0.98574292950669961089,
                                    -0.97009809662775761712,
                                    -0.94889630544543449160,
                                    -0.92225921425861617683,
                                    -0.89033945983799151601,
                                    -0.85331989872065034316,
                                    -0.81141258579342214122,
                                    -0.76485756742647515062,
                                    -0.71392150931480154248,
                                    -0.65889617020259552626,
                                    -0.60009673124863918596,
                                    -0.53785999096259329236,
                                    -0.47254243619484758280,
                                    -0.40451820029153576791,
                                    -0.33417692013945935282,
                                    -0.26192150439015026534,
                                    -0.18816582565415141255,
                                    -0.11333234988865409664,
                                    -0.037849716559603622514,
                                    0.037849716559603622514,
                                    0.11333234988865409664,
                                    0.18816582565415141255,
                                    0.26192150439015026534,
                                    0.33417692013945935282,
                                    0.40451820029153576791,
                                    0.47254243619484758280,
                                    0.53785999096259329236,
                                    0.60009673124863918596,
                                    0.65889617020259552626,
                                    0.71392150931480154248,
                                    0.76485756742647515062,
                                    0.81141258579342214122,
                                    0.85331989872065034316,
                                    0.89033945983799151601,
                                    0.92225921425861617683,
                                    0.94889630544543449160,
                                    0.97009809662775761712,
                                    0.98574292950669961089,
                                    0.99573997005351627519,
                                    1};
  std::array<double, 42> ref_wgt = {
      0.0011614401858304297329, 0.0071497069724666473556,
      0.012833605558313824672,  0.018440983044666174835,
      0.023942318410790523580,  0.029306411216165701870,
      0.034502604399116890851,  0.039501155201751501059,
      0.044273440030289172481,  0.048792126960380732316,
      0.053031334938156928622,  0.056966782983790267045,
      0.060575929662544087861,  0.063838102375796548532,
      0.066734615856802646382,  0.069248879241938953641,
      0.071366491125350074362,  0.073075322062271661036,
      0.074365584053192820801,  0.075229886613271169195,
      0.075663279107113243769,  0.075663279107113243769,
      0.075229886613271169195,  0.074365584053192820801,
      0.073075322062271661036,  0.071366491125350074362,
      0.069248879241938953641,  0.066734615856802646382,
      0.063838102375796548532,  0.060575929662544087861,
      0.056966782983790267045,  0.053031334938156928622,
      0.048792126960380732316,  0.044273440030289172481,
      0.039501155201751501059,  0.034502604399116890851,
      0.029306411216165701870,  0.023942318410790523580,
      0.018440983044666174835,  0.012833605558313824672,
      0.0071497069724666473556, 0.0011614401858304297329};
  IntegratorXX::GaussLobatto<double, double> quad(42);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 42; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("43 point GaussLobatto", "[1d-quad]") {
  std::array<double, 43> ref_pts = {-1,
                                    -0.99593797675777863962,
                                    -0.98640454263597516165,
                                    -0.97148223504768399484,
                                    -0.95125371932737343673,
                                    -0.92582968285309767826,
                                    -0.89534904191295572437,
                                    -0.85997829318375539692,
                                    -0.81991062913895517782,
                                    -0.77536489029935407814,
                                    -0.72658437267562142270,
                                    -0.67383550007645611580,
                                    -0.61740636950196462307,
                                    -0.55760517791055393058,
                                    -0.49475853908846551720,
                                    -0.42920969987409322251,
                                    -0.36131666550730554476,
                                    -0.29145024435634547892,
                                    -0.21999202270862706426,
                                    -0.14733228069044065342,
                                    -0.073867860700411845220,
                                    0,
                                    0.073867860700411845220,
                                    0.14733228069044065342,
                                    0.21999202270862706426,
                                    0.29145024435634547892,
                                    0.36131666550730554476,
                                    0.42920969987409322251,
                                    0.49475853908846551720,
                                    0.55760517791055393058,
                                    0.61740636950196462307,
                                    0.67383550007645611580,
                                    0.72658437267562142270,
                                    0.77536489029935407814,
                                    0.81991062913895517782,
                                    0.85997829318375539692,
                                    0.89534904191295572437,
                                    0.92582968285309767826,
                                    0.95125371932737343673,
                                    0.97148223504768399484,
                                    0.98640454263597516165,
                                    0.99593797675777863962,
                                    1};
  std::array<double, 43> ref_wgt = {
      0.0011074197120708748616, 0.0068176131980729018636,
      0.012239409664139598703,  0.017591487668267928581,
      0.022847092559028573947,  0.027977816257611357623,
      0.032955701327542518084,  0.037753579888412150008,
      0.042345254883842158530,  0.046705651312898933560,
      0.050810955703379603479,  0.054638747086953435804,
      0.058168119828086677424,  0.061379797970822127502,
      0.064256240598347203488,  0.066781737677068672516,
      0.068942495881944086617,  0.070726713943604273670,
      0.072124647110261263100,  0.073128660374636309801,
      0.073733270176421773657,  0.073935174353175154358,
      0.073733270176421773657,  0.073128660374636309801,
      0.072124647110261263100,  0.070726713943604273670,
      0.068942495881944086617,  0.066781737677068672516,
      0.064256240598347203488,  0.061379797970822127502,
      0.058168119828086677424,  0.054638747086953435804,
      0.050810955703379603479,  0.046705651312898933560,
      0.042345254883842158530,  0.037753579888412150008,
      0.032955701327542518084,  0.027977816257611357623,
      0.022847092559028573947,  0.017591487668267928581,
      0.012239409664139598703,  0.0068176131980729018636,
      0.0011074197120708748616};
  IntegratorXX::GaussLobatto<double, double> quad(43);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 43; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("44 point GaussLobatto", "[1d-quad]") {
  std::array<double, 44> ref_pts = {-1,
                                    -0.99612249478679132991,
                                    -0.98702117792983319815,
                                    -0.97277258300811034082,
                                    -0.95345210738307753973,
                                    -0.92916067588415349938,
                                    -0.90002498909782004622,
                                    -0.86619696797693570474,
                                    -0.82785298541962516064,
                                    -0.78519295380487928846,
                                    -0.73843928529285848668,
                                    -0.68783573332654418038,
                                    -0.63364612229852887152,
                                    -0.57615297233386485076,
                                    -0.51565602648911493658,
                                    -0.45247068810283817939,
                                    -0.38692637647101078530,
                                    -0.31936480943336470609,
                                    -0.25013822183139490045,
                                    -0.17960752912999624034,
                                    -0.10814044577895656491,
                                    -0.036109568125621549815,
                                    0.036109568125621549815,
                                    0.10814044577895656491,
                                    0.17960752912999624034,
                                    0.25013822183139490045,
                                    0.31936480943336470609,
                                    0.38692637647101078530,
                                    0.45247068810283817939,
                                    0.51565602648911493658,
                                    0.57615297233386485076,
                                    0.63364612229852887152,
                                    0.68783573332654418038,
                                    0.73843928529285848668,
                                    0.78519295380487928846,
                                    0.82785298541962516064,
                                    0.86619696797693570474,
                                    0.90002498909782004622,
                                    0.92916067588415349938,
                                    0.95345210738307753973,
                                    0.97277258300811034082,
                                    0.98702117792983319815,
                                    0.99612249478679132991,
                                    1};
  std::array<double, 44> ref_wgt = {
      0.0010570824524312896406, 0.0065081226214761116211,
      0.011685488970917214518,  0.016799192269921774574,
      0.021824935857153263993,  0.026736800540116416609,
      0.031509239967195059318,  0.036117391552679905857,
      0.040537237485392991291,  0.044745737726254162124,
      0.048720952535292529584,  0.052442157727594372667,
      0.055889953075826156227,  0.059046363613777589271,
      0.061894933426761269231,  0.064420811484882628505,
      0.066610829090974535805,  0.068453568548275647381,
      0.069939422694159254681,  0.071060644991731395819,
      0.071811389919312993244,  0.072187743447873438038,
      0.072187743447873438038,  0.071811389919312993244,
      0.071060644991731395819,  0.069939422694159254681,
      0.068453568548275647381,  0.066610829090974535805,
      0.064420811484882628505,  0.061894933426761269231,
      0.059046363613777589271,  0.055889953075826156227,
      0.052442157727594372667,  0.048720952535292529584,
      0.044745737726254162124,  0.040537237485392991291,
      0.036117391552679905857,  0.031509239967195059318,
      0.026736800540116416609,  0.021824935857153263993,
      0.016799192269921774574,  0.011685488970917214518,
      0.0065081226214761116211, 0.0010570824524312896406};
  IntegratorXX::GaussLobatto<double, double> quad(44);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 44; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("45 point GaussLobatto", "[1d-quad]") {
  std::array<double, 45> ref_pts = {-1,
                                    -0.99629472186908847162,
                                    -0.98759681924130657102,
                                    -0.97397741500697187245,
                                    -0.95550542260810309957,
                                    -0.93227305660553580615,
                                    -0.90439611326430657139,
                                    -0.87201349414244826035,
                                    -0.83528653665999117727,
                                    -0.79439821707030105214,
                                    -0.74955224131806391234,
                                    -0.70097203119470627025,
                                    -0.64889961172478485919,
                                    -0.59359440563963433524,
                                    -0.53533194106869200644,
                                    -0.47440247894089581755,
                                    -0.41110956695974319969,
                                    -0.34576852736866930848,
                                    -0.27870488604725411679,
                                    -0.21025275076806847574,
                                    -0.14075314669569340879,
                                    -0.070552317421623826527,
                                    0,
                                    0.070552317421623826527,
                                    0.14075314669569340879,
                                    0.21025275076806847574,
                                    0.27870488604725411679,
                                    0.34576852736866930848,
                                    0.41110956695974319969,
                                    0.47440247894089581755,
                                    0.53533194106869200644,
                                    0.59359440563963433524,
                                    0.64889961172478485919,
                                    0.70097203119470627025,
                                    0.74955224131806391234,
                                    0.79439821707030105214,
                                    0.83528653665999117727,
                                    0.87201349414244826035,
                                    0.90439611326430657139,
                                    0.93227305660553580615,
                                    0.95550542260810309957,
                                    0.97397741500697187245,
                                    0.98759681924130657102,
                                    0.99629472186908847162,
                                    1};
  std::array<double, 45> ref_wgt = {
      0.0010101010101010101010, 0.0062192303157486594985,
      0.011168288996584963868,  0.016059089495837321372,
      0.020869524716397265463,  0.025575899418151970997,
      0.030154825753535939195,  0.034583509607989822672,
      0.038839894146310447526,  0.042902777131137507706,
      0.046751918850698062381,  0.050368143785247741854,
      0.053733436478770827087,  0.056831031443630642040,
      0.059645496759154213583,  0.062162810990644116445,
      0.064370433064034661009,  0.066257364756539747284,
      0.067814205496082610677,  0.069033199198602262028,
      0.069908272911014880663,  0.070435067067928043537,
      0.070610957211714566022,  0.070435067067928043537,
      0.069908272911014880663,  0.069033199198602262028,
      0.067814205496082610677,  0.066257364756539747284,
      0.064370433064034661009,  0.062162810990644116445,
      0.059645496759154213583,  0.056831031443630642040,
      0.053733436478770827087,  0.050368143785247741854,
      0.046751918850698062381,  0.042902777131137507706,
      0.038839894146310447526,  0.034583509607989822672,
      0.030154825753535939195,  0.025575899418151970997,
      0.020869524716397265463,  0.016059089495837321372,
      0.011168288996584963868,  0.0062192303157486594985,
      0.0010101010101010101010};
  IntegratorXX::GaussLobatto<double, double> quad(45);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 45; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("46 point GaussLobatto", "[1d-quad]") {
  std::array<double, 46> ref_pts = {-1,
                                    -0.99645572570481590255,
                                    -0.98813501918221039422,
                                    -0.97510411399680679500,
                                    -0.95742612431139475714,
                                    -0.93518547360661386475,
                                    -0.90848820013987512081,
                                    -0.87746154772403537908,
                                    -0.84225338093664277935,
                                    -0.80303148692894623011,
                                    -0.75998277817332867809,
                                    -0.71331240270411199178,
                                    -0.66324276693586212395,
                                    -0.61001247601549343385,
                                    -0.55387519687696026657,
                                    -0.49509844946839523972,
                                    -0.43396233193629910776,
                                    -0.37075818585393542719,
                                    -0.30578720786106097521,
                                    -0.23935901433464160404,
                                    -0.17179016593254402079,
                                    -0.10340265904261187052,
                                    -0.034522391326796098361,
                                    0.034522391326796098361,
                                    0.10340265904261187052,
                                    0.17179016593254402079,
                                    0.23935901433464160404,
                                    0.30578720786106097521,
                                    0.37075818585393542719,
                                    0.43396233193629910776,
                                    0.49509844946839523972,
                                    0.55387519687696026657,
                                    0.61001247601549343385,
                                    0.66324276693586212395,
                                    0.71331240270411199178,
                                    0.75998277817332867809,
                                    0.80303148692894623011,
                                    0.84225338093664277935,
                                    0.87746154772403537908,
                                    0.90848820013987512081,
                                    0.93518547360661386475,
                                    0.95742612431139475714,
                                    0.97510411399680679500,
                                    0.98813501918221039422,
                                    0.99645572570481590255,
                                    1};
  std::array<double, 46> ref_wgt = {
      0.00096618357487922705314, 0.0059491487454403582158,
      0.010684638400132985609,   0.015366706580523116581,
      0.019975201401608782730,   0.024488419616659377444,
      0.028884910179304030133,   0.033143738893585783363,
      0.037244616854397545031,   0.041168004241210667040,
      0.044895205632908466507,   0.048408459896685135400,
      0.051691025153219682167,   0.054727258705199017822,
      0.057502691652412540477,   0.060004097878936433071,
      0.062219557101267637018,   0.064138511685042370350,
      0.065751816963516745857,   0.067051784820030349205,
      0.068032220327834335082,   0.068688451273269446847,
      0.069017350421935966999,   0.069017350421935966999,
      0.068688451273269446847,   0.068032220327834335082,
      0.067051784820030349205,   0.065751816963516745857,
      0.064138511685042370350,   0.062219557101267637018,
      0.060004097878936433071,   0.057502691652412540477,
      0.054727258705199017822,   0.051691025153219682167,
      0.048408459896685135400,   0.044895205632908466507,
      0.041168004241210667040,   0.037244616854397545031,
      0.033143738893585783363,   0.028884910179304030133,
      0.024488419616659377444,   0.019975201401608782730,
      0.015366706580523116581,   0.010684638400132985609,
      0.0059491487454403582158,  0.00096618357487922705314};
  IntegratorXX::GaussLobatto<double, double> quad(46);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 46; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("47 point GaussLobatto", "[1d-quad]") {
  std::array<double, 47> ref_pts = {-1,
                                    -0.99660646054212068910,
                                    -0.98863895391808267132,
                                    -0.97615928406971716999,
                                    -0.95922536550699657019,
                                    -0.93791463593864482324,
                                    -0.91232438055863788242,
                                    -0.88257138015534392433,
                                    -0.84879139892918385783,
                                    -0.81113857120658903877,
                                    -0.76978470039008201373,
                                    -0.72491847598114851013,
                                    -0.67674461305635712318,
                                    -0.62548291840984659175,
                                    -0.57136728773713047472,
                                    -0.51464463848540913574,
                                    -0.45557378326275429433,
                                    -0.39442424895809430122,
                                    -0.33147504696614510168,
                                    -0.26701340013179553515,
                                    -0.20133343222451010369,
                                    -0.13473482592350692655,
                                    -0.067521455437714549842,
                                    0,
                                    0.067521455437714549842,
                                    0.13473482592350692655,
                                    0.20133343222451010369,
                                    0.26701340013179553515,
                                    0.33147504696614510168,
                                    0.39442424895809430122,
                                    0.45557378326275429433,
                                    0.51464463848540913574,
                                    0.57136728773713047472,
                                    0.62548291840984659175,
                                    0.67674461305635712318,
                                    0.72491847598114851013,
                                    0.76978470039008201373,
                                    0.81113857120658903877,
                                    0.84879139892918385783,
                                    0.88257138015534392433,
                                    0.91232438055863788242,
                                    0.93791463593864482324,
                                    0.95922536550699657019,
                                    0.97615928406971716999,
                                    0.98863895391808267132,
                                    0.99660646054212068910,
                                    1};
  std::array<double, 47> ref_wgt = {
      0.00092506938020351526364, 0.0056962800915922655381,
      0.010231700532574725126,   0.014718038492394861881,
      0.019136892105083802168,   0.023468346462881329068,
      0.027692692211754887358,   0.031790670982680377620,
      0.035743590718663316620,   0.039533417766413467252,
      0.043142861264354087303,   0.046555452799402833495,
      0.049755621859878704643,   0.052728767019742942734,
      0.055461322629035284095,   0.057940820745543195140,
      0.060155948041983030272,   0.062096597436779087094,
      0.063753914216627272672,   0.065120336442322086001,
      0.066189629454511168971,   0.066956914322502746641,
      0.067418690106642322354,   0.067572849832865381385,
      0.067418690106642322354,   0.066956914322502746641,
      0.066189629454511168971,   0.065120336442322086001,
      0.063753914216627272672,   0.062096597436779087094,
      0.060155948041983030272,   0.057940820745543195140,
      0.055461322629035284095,   0.052728767019742942734,
      0.049755621859878704643,   0.046555452799402833495,
      0.043142861264354087303,   0.039533417766413467252,
      0.035743590718663316620,   0.031790670982680377620,
      0.027692692211754887358,   0.023468346462881329068,
      0.019136892105083802168,   0.014718038492394861881,
      0.010231700532574725126,   0.0056962800915922655381,
      0.00092506938020351526364};
  IntegratorXX::GaussLobatto<double, double> quad(47);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 47; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("48 point GaussLobatto", "[1d-quad]") {
  std::array<double, 48> ref_pts = {-1,
                                    -0.99674778133985746440,
                                    -0.98911147001363572789,
                                    -0.97714884689083677288,
                                    -0.96091315350638159011,
                                    -0.94047554933508129520,
                                    -0.91592544997624642008,
                                    -0.88737022431822009720,
                                    -0.85493474483877407027,
                                    -0.81876084748560586870,
                                    -0.77900671359984382197,
                                    -0.73584617911284836876,
                                    -0.68946797481109071037,
                                    -0.64007490126595713783,
                                    -0.58788294214548518103,
                                    -0.53312031983277696110,
                                    -0.47602649750285707802,
                                    -0.41685113203270266991,
                                    -0.35585298232890604382,
                                    -0.29329877784975926536,
                                    -0.22946205227124457033,
                                    -0.16462194739809062748,
                                    -0.099061992550750112347,
                                    -0.033068864766152911091,
                                    0.033068864766152911091,
                                    0.099061992550750112347,
                                    0.16462194739809062748,
                                    0.22946205227124457033,
                                    0.29329877784975926536,
                                    0.35585298232890604382,
                                    0.41685113203270266991,
                                    0.47602649750285707802,
                                    0.53312031983277696110,
                                    0.58788294214548518103,
                                    0.64007490126595713783,
                                    0.68946797481109071037,
                                    0.73584617911284836876,
                                    0.77900671359984382197,
                                    0.81876084748560586870,
                                    0.85493474483877407027,
                                    0.88737022431822009720,
                                    0.91592544997624642008,
                                    0.94047554933508129520,
                                    0.96091315350638159011,
                                    0.97714884689083677288,
                                    0.98911147001363572789,
                                    0.99674778133985746440,
                                    1};
  std::array<double, 48> ref_wgt = {
      0.00088652482269503546099, 0.0054591926002481192202,
      0.0098069319789003280531,  0.014109490605488713237,
      0.018350036475219081469,   0.022510263736936084499,
      0.026572032590911317122,   0.030517597621303642529,
      0.034329711700673836980,   0.037991707926728156526,
      0.041487574518847291125,   0.044802025564071610480,
      0.047920568156735500661,   0.050829565905944697254,
      0.053516298628674931225,   0.055969018005148835583,
      0.058176998969274631658,   0.060130586616844023051,
      0.061821238429979366807,   0.063241561635037985662,
      0.064385345531601176533,   0.065247588651725823576,
      0.065824520631008017095,   0.066113618696001794193,
      0.066113618696001794193,   0.065824520631008017095,
      0.065247588651725823576,   0.064385345531601176533,
      0.063241561635037985662,   0.061821238429979366807,
      0.060130586616844023051,   0.058176998969274631658,
      0.055969018005148835583,   0.053516298628674931225,
      0.050829565905944697254,   0.047920568156735500661,
      0.044802025564071610480,   0.041487574518847291125,
      0.037991707926728156526,   0.034329711700673836980,
      0.030517597621303642529,   0.026572032590911317122,
      0.022510263736936084499,   0.018350036475219081469,
      0.014109490605488713237,   0.0098069319789003280531,
      0.0054591926002481192202,  0.00088652482269503546099};
  IntegratorXX::GaussLobatto<double, double> quad(48);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 48; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("49 point GaussLobatto", "[1d-quad]") {
  std::array<double, 49> ref_pts = {-1,
                                    -0.99688045591002292772,
                                    -0.98955512461923073571,
                                    -0.97807812450137201588,
                                    -0.96249848799325272995,
                                    -0.94288171966319975796,
                                    -0.91931014427258449066,
                                    -0.89188264602644242709,
                                    -0.86071427280478948515,
                                    -0.82593575928507073757,
                                    -0.78769298064365400914,
                                    -0.74614634155177968265,
                                    -0.70147010377105295414,
                                    -0.65385165543221246864,
                                    -0.60349072516676650059,
                                    -0.55059854443322801224,
                                    -0.49539696157275240040,
                                    -0.43811751132074184063,
                                    -0.37900044368276887389,
                                    -0.31829371625110155961,
                                    -0.25625195419014618846,
                                    -0.19313538225402070996,
                                    -0.12920873331637993299,
                                    -0.064740137990899129064,
                                    0,
                                    0.064740137990899129064,
                                    0.12920873331637993299,
                                    0.19313538225402070996,
                                    0.25625195419014618846,
                                    0.31829371625110155961,
                                    0.37900044368276887389,
                                    0.43811751132074184063,
                                    0.49539696157275240040,
                                    0.55059854443322801224,
                                    0.60349072516676650059,
                                    0.65385165543221246864,
                                    0.70147010377105295414,
                                    0.74614634155177968265,
                                    0.78769298064365400914,
                                    0.82593575928507073757,
                                    0.86071427280478948515,
                                    0.89188264602644242709,
                                    0.91931014427258449066,
                                    0.94288171966319975796,
                                    0.96249848799325272995,
                                    0.97807812450137201588,
                                    0.98955512461923073571,
                                    0.99688045591002292772,
                                    1};
  std::array<double, 49> ref_wgt = {
      0.00085034013605442176871, 0.0052366002997777451913,
      0.0094080469628555944784,  0.013537829381581817198,
      0.017610526816783106317,   0.021609284240822007705,
      0.025517379167136704734,   0.029318434709843002710,
      0.032996513505725078217,   0.036536190813376634843,
      0.039922621143590443426,   0.043141601227016470213,
      0.046179629873557273466,   0.049023964729225407156,
      0.051662675783964653525,   0.054084695442135281725,
      0.056279864961135846889,   0.058238977070491023950,
      0.059953814596105188767,   0.061417184929446926960,
      0.062622950198032684894,   0.063566053011186641357,
      0.064242537673388332371,   0.064649566776405844556,
      0.064785433100723735171,   0.064649566776405844556,
      0.064242537673388332371,   0.063566053011186641357,
      0.062622950198032684894,   0.061417184929446926960,
      0.059953814596105188767,   0.058238977070491023950,
      0.056279864961135846889,   0.054084695442135281725,
      0.051662675783964653525,   0.049023964729225407156,
      0.046179629873557273466,   0.043141601227016470213,
      0.039922621143590443426,   0.036536190813376634843,
      0.032996513505725078217,   0.029318434709843002710,
      0.025517379167136704734,   0.021609284240822007705,
      0.017610526816783106317,   0.013537829381581817198,
      0.0094080469628555944784,  0.0052366002997777451913,
      0.00085034013605442176871};
  IntegratorXX::GaussLobatto<double, double> quad(49);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 49; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("50 point GaussLobatto", "[1d-quad]") {
  std::array<double, 50> ref_pts = {-1,
                                    -0.99700517536264358624,
                                    -0.98997222005802080202,
                                    -0.97895191064671980927,
                                    -0.96398948010996861213,
                                    -0.94514532868088141377,
                                    -0.92249537850275274666,
                                    -0.89613084907683263276,
                                    -0.86615790817735331097,
                                    -0.83269724979645795279,
                                    -0.79588361011772846939,
                                    -0.75586522579405303906,
                                    -0.71280323742364585985,
                                    -0.66687104087904481590,
                                    -0.61825358920152917083,
                                    -0.56714664791567042573,
                                    -0.51375600678304874407,
                                    -0.45829665117929975927,
                                    -0.40099189643639848090,
                                    -0.34207248863880384363,
                                    -0.28177567549590951202,
                                    -0.22034425103305647607,
                                    -0.15802557794840290299,
                                    -0.095070591572656647762,
                                    -0.031732789442623712912,
                                    0.031732789442623712912,
                                    0.095070591572656647762,
                                    0.15802557794840290299,
                                    0.22034425103305647607,
                                    0.28177567549590951202,
                                    0.34207248863880384363,
                                    0.40099189643639848090,
                                    0.45829665117929975927,
                                    0.51375600678304874407,
                                    0.56714664791567042573,
                                    0.61825358920152917083,
                                    0.66687104087904481590,
                                    0.71280323742364585985,
                                    0.75586522579405303906,
                                    0.79588361011772846939,
                                    0.83269724979645795279,
                                    0.86615790817735331097,
                                    0.89613084907683263276,
                                    0.92249537850275274666,
                                    0.94514532868088141377,
                                    0.96398948010996861213,
                                    0.97895191064671980927,
                                    0.98997222005802080202,
                                    0.99700517536264358624,
                                    1};
  std::array<double, 50> ref_wgt = {
      0.00081632653061224489796, 0.0050273455497416577264,
      0.0090329866868996020993,  0.013000139812211760657,
      0.016914655483863766023,   0.020760989497015993439,
      0.024523701718169494315,   0.028187655451060249166,
      0.031738102606570638751,   0.035160749089347249630,
      0.038441814210997734562,   0.041568086852368492733,
      0.044526978934472742230,   0.047306576229236722854,
      0.049895686393343376046,   0.052283884066433463416,
      0.054461552866930615293,   0.056419924123210141028,
      0.058151112187474100161,   0.059648146191833454147,
      0.060904998119632791003,   0.061916607079486179018,
      0.062678899684568010747,   0.063188806455266633214,
      0.063444274179252886844,   0.063444274179252886844,
      0.063188806455266633214,   0.062678899684568010747,
      0.061916607079486179018,   0.060904998119632791003,
      0.059648146191833454147,   0.058151112187474100161,
      0.056419924123210141028,   0.054461552866930615293,
      0.052283884066433463416,   0.049895686393343376046,
      0.047306576229236722854,   0.044526978934472742230,
      0.041568086852368492733,   0.038441814210997734562,
      0.035160749089347249630,   0.031738102606570638751,
      0.028187655451060249166,   0.024523701718169494315,
      0.020760989497015993439,   0.016914655483863766023,
      0.013000139812211760657,   0.0090329866868996020993,
      0.0050273455497416577264,  0.00081632653061224489796};
  IntegratorXX::GaussLobatto<double, double> quad(50);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 50; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("51 point GaussLobatto", "[1d-quad]") {
  std::array<double, 51> ref_pts = {-1,
                                    -0.99712256311898889400,
                                    -0.99036483368751158958,
                                    -0.97977453240959209033,
                                    -0.96539345547588730953,
                                    -0.94727738630889504232,
                                    -0.92549645414410356120,
                                    -0.90013494068322443258,
                                    -0.87129097153120606688,
                                    -0.83907614179777426564,
                                    -0.80361508624564030010,
                                    -0.76504499788356821587,
                                    -0.72351509755119143177,
                                    -0.67918605679051303974,
                                    -0.63222937633339199807,
                                    -0.58282672265148623859,
                                    -0.53116922515504851406,
                                    -0.47745673676934726883,
                                    -0.42189706075452059913,
                                    -0.36470514676295528672,
                                    -0.30610225924609023016,
                                    -0.24631512142886291099,
                                    -0.18557503816417293817,
                                    -0.12411700106123227680,
                                    -0.062178779350124090136,
                                    0,
                                    0.062178779350124090136,
                                    0.12411700106123227680,
                                    0.18557503816417293817,
                                    0.24631512142886291099,
                                    0.30610225924609023016,
                                    0.36470514676295528672,
                                    0.42189706075452059913,
                                    0.47745673676934726883,
                                    0.53116922515504851406,
                                    0.58282672265148623859,
                                    0.63222937633339199807,
                                    0.67918605679051303974,
                                    0.72351509755119143177,
                                    0.76504499788356821587,
                                    0.80361508624564030010,
                                    0.83907614179777426564,
                                    0.87129097153120606688,
                                    0.90013494068322443258,
                                    0.92549645414410356120,
                                    0.94727738630889504232,
                                    0.96539345547588730953,
                                    0.97977453240959209033,
                                    0.99036483368751158958,
                                    0.99712256311898889400,
                                    1};
  std::array<double, 51> ref_wgt = {
      0.00078431372549019607843, 0.0048303839785079998527,
      0.0086798928414219331513,  0.012493788584867125903,
      0.016259069234618171294,   0.019961377244536783767,
      0.023586434922498588684,   0.027120231473672400039,
      0.030549100473198493004,   0.033859778504004803811,
      0.037039458253170415119,   0.040075838706706095741,
      0.042957173003353664119,   0.045672313999034519204,
      0.048210757450078384096,   0.050562682681471095466,
      0.052718990597057519621,   0.054671338891197740866,
      0.056412174328837261210,   0.057934761970736018676,
      0.059233211231659749719,   0.060302498671201867055,
      0.061138487429338506605,   0.061737943231686401764,
      0.062098546902639266273,   0.062218903338029997763,
      0.062098546902639266273,   0.061737943231686401764,
      0.061138487429338506605,   0.060302498671201867055,
      0.059233211231659749719,   0.057934761970736018676,
      0.056412174328837261210,   0.054671338891197740866,
      0.052718990597057519621,   0.050562682681471095466,
      0.048210757450078384096,   0.045672313999034519204,
      0.042957173003353664119,   0.040075838706706095741,
      0.037039458253170415119,   0.033859778504004803811,
      0.030549100473198493004,   0.027120231473672400039,
      0.023586434922498588684,   0.019961377244536783767,
      0.016259069234618171294,   0.012493788584867125903,
      0.0086798928414219331513,  0.0048303839785079998527,
      0.00078431372549019607843};
  IntegratorXX::GaussLobatto<double, double> quad(51);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 51; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("52 point GaussLobatto", "[1d-quad]") {
  std::array<double, 52> ref_pts = {-1,
                                    -0.99723318271304204609,
                                    -0.99073484375891583310,
                                    -0.98054990362374447114,
                                    -0.96671704356330542573,
                                    -0.94928786292511367114,
                                    -0.92832723947564708822,
                                    -0.90391316301514563248,
                                    -0.87613646208132718852,
                                    -0.84510047108953040574,
                                    -0.81092064773680268434,
                                    -0.77372414424214125452,
                                    -0.73364933467588236858,
                                    -0.69084530037007209366,
                                    -0.64547127541689241797,
                                    -0.59769605435825718065,
                                    -0.54769736428888483995,
                                    -0.49566120371805634458,
                                    -0.44178115065445763893,
                                    -0.38625764249077466417,
                                    -0.32929723036845563779,
                                    -0.27111181079736080737,
                                    -0.21191783738927865414,
                                    -0.15193551563805962837,
                                    -0.091387983742063984478,
                                    -0.030500482516469938402,
                                    0.030500482516469938402,
                                    0.091387983742063984478,
                                    0.15193551563805962837,
                                    0.21191783738927865414,
                                    0.27111181079736080737,
                                    0.32929723036845563779,
                                    0.38625764249077466417,
                                    0.44178115065445763893,
                                    0.49566120371805634458,
                                    0.54769736428888483995,
                                    0.59769605435825718065,
                                    0.64547127541689241797,
                                    0.69084530037007209366,
                                    0.73364933467588236858,
                                    0.77372414424214125452,
                                    0.81092064773680268434,
                                    0.84510047108953040574,
                                    0.87613646208132718852,
                                    0.90391316301514563248,
                                    0.92832723947564708822,
                                    0.94928786292511367114,
                                    0.96671704356330542573,
                                    0.98054990362374447114,
                                    0.99073484375891583310,
                                    0.99723318271304204609,
                                    1};
  std::array<double, 52> ref_wgt = {
      0.00075414781297134238311, 0.0046447714432131168890,
      0.0083470846483311673651,  0.012016392112302461464,
      0.015640729519941051088,   0.019206815612478106755,
      0.022701428364924928948,   0.026111580901739542893,
      0.029424592179455154097,   0.032628139703563413354,
      0.035710307082888823749,   0.038659628980130446659,
      0.041465134017019775699,   0.044116385702106620348,
      0.046603521310066087026,   0.048917288599910145484,
      0.051049080249230072053,   0.052990965882670137798,
      0.054735721578548513637,   0.056276856745425634554,
      0.057608638269473938480,   0.058726111843282853059,
      0.059625120397019955607,   0.060302319563539377758,
      0.060755190120000070875,   0.060982047359767261978,
      0.060982047359767261978,   0.060755190120000070875,
      0.060302319563539377758,   0.059625120397019955607,
      0.058726111843282853059,   0.057608638269473938480,
      0.056276856745425634554,   0.054735721578548513637,
      0.052990965882670137798,   0.051049080249230072053,
      0.048917288599910145484,   0.046603521310066087026,
      0.044116385702106620348,   0.041465134017019775699,
      0.038659628980130446659,   0.035710307082888823749,
      0.032628139703563413354,   0.029424592179455154097,
      0.026111580901739542893,   0.022701428364924928948,
      0.019206815612478106755,   0.015640729519941051088,
      0.012016392112302461464,   0.0083470846483311673651,
      0.0046447714432131168890,  0.00075414781297134238311};
  IntegratorXX::GaussLobatto<double, double> quad(52);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 52; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("53 point GaussLobatto", "[1d-quad]") {
  std::array<double, 53> ref_pts = {-1,
                                    -0.99733754456387329614,
                                    -0.99108395187550601427,
                                    -0.98128157129624554169,
                                    -0.96796625545320973708,
                                    -0.95118580461103958717,
                                    -0.93100032697697855124,
                                    -0.90748209565875474732,
                                    -0.88071530613927323471,
                                    -0.85079577971625058396,
                                    -0.81783062223280437991,
                                    -0.78193784138823006876,
                                    -0.74324592463193927180,
                                    -0.70189337937619971572,
                                    -0.65802823726283817137,
                                    -0.61180752429730073568,
                                    -0.56339669876500717294,
                                    -0.51296905895114477113,
                                    -0.46070512278884455122,
                                    -0.40679198165903269777,
                                    -0.35142263065666471552,
                                    -0.29479527772168797154,
                                    -0.23711263410839591325,
                                    -0.17858118873344295220,
                                    -0.11941046900038129180,
                                    -0.059812290746919925059,
                                    0,
                                    0.059812290746919925059,
                                    0.11941046900038129180,
                                    0.17858118873344295220,
                                    0.23711263410839591325,
                                    0.29479527772168797154,
                                    0.35142263065666471552,
                                    0.40679198165903269777,
                                    0.46070512278884455122,
                                    0.51296905895114477113,
                                    0.56339669876500717294,
                                    0.61180752429730073568,
                                    0.65802823726283817137,
                                    0.70189337937619971572,
                                    0.74324592463193927180,
                                    0.78193784138823006876,
                                    0.81783062223280437991,
                                    0.85079577971625058396,
                                    0.88071530613927323471,
                                    0.90748209565875474732,
                                    0.93100032697697855124,
                                    0.95118580461103958717,
                                    0.96796625545320973708,
                                    0.98128157129624554169,
                                    0.99108395187550601427,
                                    0.99733754456387329614,
                                    1};
  std::array<double, 53> ref_wgt = {
      0.00072568940493468795356, 0.0044696527076774915455,
      0.0080330389107423447154,  0.011565788706571830930,
      0.015056877844866209346,   0.018494003026789782362,
      0.021864902617516716901,   0.025157522479674316807,
      0.028360080648519956137,   0.031461114841032122860,
      0.034449525136823758275,   0.037314614310195046461,
      0.040046126367143286541,   0.042634283368374187552,
      0.045069820484567010287,   0.047344019189206154268,
      0.049448738483356346295,   0.051376444046663164364,
      0.053120235213173155321,   0.054673869676914205474,
      0.056031785839601260975,   0.057189122720914507787,
      0.058141737360331926275,   0.058886219648372720268,
      0.059419904534250328685,   0.059740881566290257386,
      0.059848001730994448459,   0.059740881566290257386,
      0.059419904534250328685,   0.058886219648372720268,
      0.058141737360331926275,   0.057189122720914507787,
      0.056031785839601260975,   0.054673869676914205474,
      0.053120235213173155321,   0.051376444046663164364,
      0.049448738483356346295,   0.047344019189206154268,
      0.045069820484567010287,   0.042634283368374187552,
      0.040046126367143286541,   0.037314614310195046461,
      0.034449525136823758275,   0.031461114841032122860,
      0.028360080648519956137,   0.025157522479674316807,
      0.021864902617516716901,   0.018494003026789782362,
      0.015056877844866209346,   0.011565788706571830930,
      0.0080330389107423447154,  0.0044696527076774915455,
      0.00072568940493468795356};
  IntegratorXX::GaussLobatto<double, double> quad(53);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 53; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("54 point GaussLobatto", "[1d-quad]") {
  std::array<double, 54> ref_pts = {-1,
                                    -0.99743611187116655632,
                                    -0.99141370255149031321,
                                    -0.98197275606385097830,
                                    -0.96914655166265036312,
                                    -0.95297943380782946691,
                                    -0.93352717101598469148,
                                    -0.91085683306761773365,
                                    -0.88504657539568750088,
                                    -0.85618537432525421274,
                                    -0.82437272203454896163,
                                    -0.78971828427976608302,
                                    -0.75234152267297620361,
                                    -0.71237128303149402250,
                                    -0.66994535130366149961,
                                    -0.62520997863921178387,
                                    -0.57831937725887014707,
                                    -0.52943518886972741834,
                                    -0.47872592746342394831,
                                    -0.42636639842043080504,
                                    -0.37253709592431876846,
                                    -0.31742358076409220948,
                                    -0.26121584066994286552,
                                    -0.20410763538779868389,
                                    -0.14629582875053768342,
                                    -0.087979710048492690586,
                                    -0.029360307038717604365,
                                    0.029360307038717604365,
                                    0.087979710048492690586,
                                    0.14629582875053768342,
                                    0.20410763538779868389,
                                    0.26121584066994286552,
                                    0.31742358076409220948,
                                    0.37253709592431876846,
                                    0.42636639842043080504,
                                    0.47872592746342394831,
                                    0.52943518886972741834,
                                    0.57831937725887014707,
                                    0.62520997863921178387,
                                    0.66994535130366149961,
                                    0.71237128303149402250,
                                    0.75234152267297620361,
                                    0.78971828427976608302,
                                    0.82437272203454896163,
                                    0.85618537432525421274,
                                    0.88504657539568750088,
                                    0.91085683306761773365,
                                    0.93352717101598469148,
                                    0.95297943380782946691,
                                    0.96914655166265036312,
                                    0.98197275606385097830,
                                    0.99141370255149031321,
                                    0.99743611187116655632,
                                    1};
  std::array<double, 54> ref_wgt = {
      0.00069881201956673654787, 0.0043042515844634804177,
      0.0077363726275994639035,  0.011140014296305147055,
      0.014505005478884170178,   0.017819933052124230212,
      0.021073410580106739266,   0.024254234983220790870,
      0.027351445883033061517,   0.030354368519553280095,
      0.033252652136918527234,   0.036036306239565543940,
      0.038695735266165073119,   0.041221771772643540192,
      0.043605708085066802238,   0.045839326342925629200,
      0.047914926841964039572,   0.049825354584678980119,
      0.051564023949803378420,   0.053124941397182469111,
      0.054502726130549555237,   0.055692628647401799167,
      0.056690547112276877548,   0.057493041497133530571,
      0.058097345440178801295,   0.058501375782315968693,
      0.058703739748372384281,   0.058703739748372384281,
      0.058501375782315968693,   0.058097345440178801295,
      0.057493041497133530571,   0.056690547112276877548,
      0.055692628647401799167,   0.054502726130549555237,
      0.053124941397182469111,   0.051564023949803378420,
      0.049825354584678980119,   0.047914926841964039572,
      0.045839326342925629200,   0.043605708085066802238,
      0.041221771772643540192,   0.038695735266165073119,
      0.036036306239565543940,   0.033252652136918527234,
      0.030354368519553280095,   0.027351445883033061517,
      0.024254234983220790870,   0.021073410580106739266,
      0.017819933052124230212,   0.014505005478884170178,
      0.011140014296305147055,   0.0077363726275994639035,
      0.0043042515844634804177,  0.00069881201956673654787};
  IntegratorXX::GaussLobatto<double, double> quad(54);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 54; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("55 point GaussLobatto", "[1d-quad]") {
  std::array<double, 55> ref_pts = {-1,
                                    -0.99752930576127305531,
                                    -0.99172550029128002516,
                                    -0.98262638754302650936,
                                    -0.97026290146392841682,
                                    -0.95467623744892770162,
                                    -0.93591820858327983182,
                                    -0.91405114044717308455,
                                    -0.88914767909967216179,
                                    -0.86129055424330548391,
                                    -0.83057230602371411403,
                                    -0.79709497829006616218,
                                    -0.76096977992244819985,
                                    -0.72231671555961477149,
                                    -0.68126418703655326252,
                                    -0.63794856689182949695,
                                    -0.59251374537831393936,
                                    -0.54511065249044732149,
                                    -0.49589675660021092384,
                                    -0.44503554136968677084,
                                    -0.39269596267922149653,
                                    -0.33905188737603176079,
                                    -0.28428151570816329801,
                                    -0.22856678936272744201,
                                    -0.17209278707505037331,
                                    -0.11504710981659152742,
                                    -0.057619257604064327758,
                                    0,
                                    0.057619257604064327758,
                                    0.11504710981659152742,
                                    0.17209278707505037331,
                                    0.22856678936272744201,
                                    0.28428151570816329801,
                                    0.33905188737603176079,
                                    0.39269596267922149653,
                                    0.44503554136968677084,
                                    0.49589675660021092384,
                                    0.54511065249044732149,
                                    0.59251374537831393936,
                                    0.63794856689182949695,
                                    0.68126418703655326252,
                                    0.72231671555961477149,
                                    0.76096977992244819985,
                                    0.79709497829006616218,
                                    0.83057230602371411403,
                                    0.86129055424330548391,
                                    0.88914767909967216179,
                                    0.91405114044717308455,
                                    0.93591820858327983182,
                                    0.95467623744892770162,
                                    0.97026290146392841682,
                                    0.98262638754302650936,
                                    0.99172550029128002516,
                                    0.99752930576127305531,
                                    1};
  std::array<double, 55> ref_wgt = {
      0.00067340067340067340067, 0.0041478623286710431232,
      0.0074558278035213583119,  0.010737281181964296771,
      0.013982826904940361823,   0.017181863492228658797,
      0.020323803383333689429,   0.023398221250648127813,
      0.026394908601620216103,   0.029303912637618080633,
      0.032115570845726109235,   0.034820543650590016718,
      0.037409845665582207589,   0.039874875642630917942,
      0.042207445093640032995,   0.044399805516991253777,
      0.046444674150926229744,   0.048335258173876831562,
      0.050065277274085500629,   0.051628984514939112375,
      0.053021185427449940669,   0.054237255266874140992,
      0.055273154376380133691,   0.056125441606870230862,
      0.056791285748460807975,   0.057268474935698951566,
      0.057555423995304932891,   0.057651179712052285170,
      0.057555423995304932891,   0.057268474935698951566,
      0.056791285748460807975,   0.056125441606870230862,
      0.055273154376380133691,   0.054237255266874140992,
      0.053021185427449940669,   0.051628984514939112375,
      0.050065277274085500629,   0.048335258173876831562,
      0.046444674150926229744,   0.044399805516991253777,
      0.042207445093640032995,   0.039874875642630917942,
      0.037409845665582207589,   0.034820543650590016718,
      0.032115570845726109235,   0.029303912637618080633,
      0.026394908601620216103,   0.023398221250648127813,
      0.020323803383333689429,   0.017181863492228658797,
      0.013982826904940361823,   0.010737281181964296771,
      0.0074558278035213583119,  0.0041478623286710431232,
      0.00067340067340067340067};
  IntegratorXX::GaussLobatto<double, double> quad(55);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 55; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("56 point GaussLobatto", "[1d-quad]") {
  std::array<double, 56> ref_pts = {-1,
                                    -0.99761750979072414049,
                                    -0.99202062454186291317,
                                    -0.98324513529644732298,
                                    -0.97131983489168455131,
                                    -0.95628304431371464029,
                                    -0.93818296540684856079,
                                    -0.91707759099649916427,
                                    -0.89303453360579360664,
                                    -0.86613081319881179034,
                                    -0.83645261202364928954,
                                    -0.80409499919007531075,
                                    -0.76916162643024717745,
                                    -0.73176439621791932437,
                                    -0.69202310338905909609,
                                    -0.65006505144655317529,
                                    -0.60602464479432402200,
                                    -0.56004295821512519894,
                                    -0.51226728497533721329,
                                    -0.46285066500663765555,
                                    -0.41195139467724202158,
                                    -0.35973251972384399545,
                                    -0.30636131296902025144,
                                    -0.25200873849742429296,
                                    -0.19684890400736453934,
                                    -0.14105850309217494396,
                                    -0.084816249238004037359,
                                    -0.028302303351157746961,
                                    0.028302303351157746961,
                                    0.084816249238004037359,
                                    0.14105850309217494396,
                                    0.19684890400736453934,
                                    0.25200873849742429296,
                                    0.30636131296902025144,
                                    0.35973251972384399545,
                                    0.41195139467724202158,
                                    0.46285066500663765555,
                                    0.51226728497533721329,
                                    0.56004295821512519894,
                                    0.60602464479432402200,
                                    0.65006505144655317529,
                                    0.69202310338905909609,
                                    0.73176439621791932437,
                                    0.76916162643024717745,
                                    0.80409499919007531075,
                                    0.83645261202364928954,
                                    0.86613081319881179034,
                                    0.89303453360579360664,
                                    0.91707759099649916427,
                                    0.93818296540684856079,
                                    0.95628304431371464029,
                                    0.97131983489168455131,
                                    0.98324513529644732298,
                                    0.99202062454186291317,
                                    0.99761750979072414049,
                                    1};
  std::array<double, 56> ref_wgt = {
      0.00064935064935064935065, 0.0039998421051063664032,
      0.0071902581429929796837,  0.010355959403268498135,
      0.013488256491098847160,   0.016577289173990204195,
      0.019613200257610404117,   0.022586276257862587277,
      0.025486997771695898439,   0.028306074740684041270,
      0.031034477684631203655,   0.033663467159778755533,
      0.036184621971786739089,   0.038589866248989719991,
      0.040871495359022179570,   0.043022200613337808519,
      0.045035092692287905780,   0.046903723721137408324,
      0.048622107928936950729,   0.050184740825421412712,
      0.051586616835224780268,   0.052823245333322424252,
      0.053890665030563063208,   0.054785456663344156251,
      0.055504753946863551376,   0.056046252756911300619,
      0.056408218510821248646,   0.056589491723958915448,
      0.056589491723958915448,   0.056408218510821248646,
      0.056046252756911300619,   0.055504753946863551376,
      0.054785456663344156251,   0.053890665030563063208,
      0.052823245333322424252,   0.051586616835224780268,
      0.050184740825421412712,   0.048622107928936950729,
      0.046903723721137408324,   0.045035092692287905780,
      0.043022200613337808519,   0.040871495359022179570,
      0.038589866248989719991,   0.036184621971786739089,
      0.033663467159778755533,   0.031034477684631203655,
      0.028306074740684041270,   0.025486997771695898439,
      0.022586276257862587277,   0.019613200257610404117,
      0.016577289173990204195,   0.013488256491098847160,
      0.010355959403268498135,   0.0071902581429929796837,
      0.0039998421051063664032,  0.00064935064935064935065};
  IntegratorXX::GaussLobatto<double, double> quad(56);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 56; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("57 point GaussLobatto", "[1d-quad]") {
  std::array<double, 57> ref_pts = {-1,
                                    -0.99770107389727442056,
                                    -0.99230024281556362904,
                                    -0.98383143602580359228,
                                    -0.97232148844841169560,
                                    -0.95780609307871619728,
                                    -0.94033014942688032691,
                                    -0.91994768699588014821,
                                    -0.89672171225481712046,
                                    -0.87072401806362859848,
                                    -0.84203496327161097658,
                                    -0.81074322495539116303,
                                    -0.77694552460842600147,
                                    -0.74074632932214912010,
                                    -0.70225752895937905521,
                                    -0.66159809035128810747,
                                    -0.61889368960244276810,
                                    -0.57427632364822552455,
                                    -0.52788390226937085416,
                                    -0.47985982182690983524,
                                    -0.43035252203635713295,
                                    -0.37951502715187628209,
                                    -0.32750447297905277313,
                                    -0.27448162117853636853,
                                    -0.22061036236199506368,
                                    -0.16605720951640287627,
                                    -0.11099078332253917402,
                                    -0.055581290958607085886,
                                    0,
                                    0.055581290958607085886,
                                    0.11099078332253917402,
                                    0.16605720951640287627,
                                    0.22061036236199506368,
                                    0.27448162117853636853,
                                    0.32750447297905277313,
                                    0.37951502715187628209,
                                    0.43035252203635713295,
                                    0.47985982182690983524,
                                    0.52788390226937085416,
                                    0.57427632364822552455,
                                    0.61889368960244276810,
                                    0.66159809035128810747,
                                    0.70225752895937905521,
                                    0.74074632932214912010,
                                    0.77694552460842600147,
                                    0.81074322495539116303,
                                    0.84203496327161097658,
                                    0.87072401806362859848,
                                    0.89672171225481712046,
                                    0.91994768699588014821,
                                    0.94033014942688032691,
                                    0.95780609307871619728,
                                    0.97232148844841169560,
                                    0.98383143602580359228,
                                    0.99230024281556362904,
                                    0.99770107389727442056,
                                    1};
  std::array<double, 57> ref_wgt = {
      0.00062656641604010025063, 0.0038596043785436146567,
      0.0069386173666456159979,  0.0099945603588191146075,
      0.013019387947265630030,   0.016003917925357171788,
      0.018938961856321941529,   0.021815458738125021219,
      0.024624521589129164101,   0.027357469519451914171,
      0.030005855985896860675,   0.032561495414958661977,
      0.035016488714174596641,   0.037363247781945434452,
      0.039594519007425480509,   0.041703405714416465840,
      0.043683389491276987635,   0.045528350346142624211,
      0.047232585627699397913,   0.048790827654326899098,
      0.050198259997814124065,   0.051450532371700677191,
      0.052543774078444874427,   0.053474605973984535475,
      0.054240150912787569286,   0.054838042641156126210,
      0.055266433111326354823,   0.055523998193775814691,
      0.055609941770094453064,   0.055523998193775814691,
      0.055266433111326354823,   0.054838042641156126210,
      0.054240150912787569286,   0.053474605973984535475,
      0.052543774078444874427,   0.051450532371700677191,
      0.050198259997814124065,   0.048790827654326899098,
      0.047232585627699397913,   0.045528350346142624211,
      0.043683389491276987635,   0.041703405714416465840,
      0.039594519007425480509,   0.037363247781945434452,
      0.035016488714174596641,   0.032561495414958661977,
      0.030005855985896860675,   0.027357469519451914171,
      0.024624521589129164101,   0.021815458738125021219,
      0.018938961856321941529,   0.016003917925357171788,
      0.013019387947265630030,   0.0099945603588191146075,
      0.0069386173666456159979,  0.0038596043785436146567,
      0.00062656641604010025063};
  IntegratorXX::GaussLobatto<double, double> quad(57);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 57; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("58 point GaussLobatto", "[1d-quad]") {
  std::array<double, 58> ref_pts = {-1,
                                    -0.99778031787458833642,
                                    -0.99256542223454881096,
                                    -0.98438751750701767548,
                                    -0.97327164536474061572,
                                    -0.95925109231985553689,
                                    -0.94236773331550370210,
                                    -0.92267196686374356088,
                                    -0.90022257812874863227,
                                    -0.87508656751835802721,
                                    -0.84733895218244656314,
                                    -0.81706254273321483633,
                                    -0.78434769638111196348,
                                    -0.74929204741020489081,
                                    -0.71200021587167418594,
                                    -0.67258349539710870354,
                                    -0.63115952107839627281,
                                    -0.58785191841290204776,
                                    -0.54278993436555688618,
                                    -0.49610805165106812645,
                                    -0.44794558738861452596,
                                    -0.39844627732752140951,
                                    -0.34775784688518990478,
                                    -0.29603157027774645152,
                                    -0.24342181905931607915,
                                    -0.19008560141737132665,
                                    -0.13618209359915838874,
                                    -0.081872164867662033184,
                                    -0.027317897404865878760,
                                    0.027317897404865878760,
                                    0.081872164867662033184,
                                    0.13618209359915838874,
                                    0.19008560141737132665,
                                    0.24342181905931607915,
                                    0.29603157027774645152,
                                    0.34775784688518990478,
                                    0.39844627732752140951,
                                    0.44794558738861452596,
                                    0.49610805165106812645,
                                    0.54278993436555688618,
                                    0.58785191841290204776,
                                    0.63115952107839627281,
                                    0.67258349539710870354,
                                    0.71200021587167418594,
                                    0.74929204741020489081,
                                    0.78434769638111196348,
                                    0.81706254273321483633,
                                    0.84733895218244656314,
                                    0.87508656751835802721,
                                    0.90022257812874863227,
                                    0.92267196686374356088,
                                    0.94236773331550370210,
                                    0.95925109231985553689,
                                    0.97327164536474061572,
                                    0.98438751750701767548,
                                    0.99256542223454881096,
                                    0.99778031787458833642,
                                    1};
  std::array<double, 58> ref_wgt = {
      0.00060496067755595886267, 0.0037266131000573870302,
      0.0066999489276936574588,  0.0096517223726991573903,
      0.012574476194818145560,   0.015459649328833407858,
      0.018298666593522216843,   0.021083065913302917453,
      0.023804541509152484820,   0.026454973129381841511,
      0.029026451657207376073,   0.031511303212033336666,
      0.033902112254246458695,   0.036191743807007028336,
      0.038373364793743459312,   0.040440464453321367287,
      0.042386873782949744132,   0.044206783955842146143,
      0.045894763661120301683,   0.047445775315465169912,
      0.048855190098803076021,   0.050118801769525812301,
      0.051232839218227538321,   0.052193977722618907953,
      0.052999348870105525275,   0.053646549118465073828,
      0.054133646969104491636,   0.054459188731508404015,
      0.054622202861687607623,   0.054622202861687607623,
      0.054459188731508404015,   0.054133646969104491636,
      0.053646549118465073828,   0.052999348870105525275,
      0.052193977722618907953,   0.051232839218227538321,
      0.050118801769525812301,   0.048855190098803076021,
      0.047445775315465169912,   0.045894763661120301683,
      0.044206783955842146143,   0.042386873782949744132,
      0.040440464453321367287,   0.038373364793743459312,
      0.036191743807007028336,   0.033902112254246458695,
      0.031511303212033336666,   0.029026451657207376073,
      0.026454973129381841511,   0.023804541509152484820,
      0.021083065913302917453,   0.018298666593522216843,
      0.015459649328833407858,   0.012574476194818145560,
      0.0096517223726991573903,  0.0066999489276936574588,
      0.0037266131000573870302,  0.00060496067755595886267};
  IntegratorXX::GaussLobatto<double, double> quad(58);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 58; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("59 point GaussLobatto", "[1d-quad]") {
  std::array<double, 59> ref_pts = {-1,
                                    -0.99785553443508757031,
                                    -0.99281713971025716874,
                                    -0.98491541970597601147,
                                    -0.97417377114232796216,
                                    -0.96062327353287776745,
                                    -0.94430302747874669773,
                                    -0.92526009999966801650,
                                    -0.90354940186116704667,
                                    -0.87923353314506970520,
                                    -0.85238260416163729554,
                                    -0.82307403388383161412,
                                    -0.79139232699429734825,
                                    -0.75742883036859835297,
                                    -0.72128146976860946779,
                                    -0.68305446753644219352,
                                    -0.64285804211745884080,
                                    -0.60080809028598568611,
                                    -0.55702585299375255855,
                                    -0.51163756580658689221,
                                    -0.46477409493842974162,
                                    -0.41657055993278081076,
                                    -0.36716594407990414956,
                                    -0.31670269369332767969,
                                    -0.26532630740119590608,
                                    -0.21318491663676650117,
                                    -0.16042885853768001860,
                                    -0.10721024248549617603,
                                    -0.053682511535311913833,
                                    0,
                                    0.053682511535311913833,
                                    0.10721024248549617603,
                                    0.16042885853768001860,
                                    0.21318491663676650117,
                                    0.26532630740119590608,
                                    0.31670269369332767969,
                                    0.36716594407990414956,
                                    0.41657055993278081076,
                                    0.46477409493842974162,
                                    0.51163756580658689221,
                                    0.55702585299375255855,
                                    0.60080809028598568611,
                                    0.64285804211745884080,
                                    0.68305446753644219352,
                                    0.72128146976860946779,
                                    0.75742883036859835297,
                                    0.79139232699429734825,
                                    0.82307403388383161412,
                                    0.85238260416163729554,
                                    0.87923353314506970520,
                                    0.90354940186116704667,
                                    0.92526009999966801650,
                                    0.94430302747874669773,
                                    0.96062327353287776745,
                                    0.97417377114232796216,
                                    0.98491541970597601147,
                                    0.99281713971025716874,
                                    0.99785553443508757031,
                                    1};
  std::array<double, 59> ref_wgt = {
      0.00058445353594389246055, 0.0036003775817301265768,
      0.0064733769401522525521,  0.0093261979484901244666,
      0.012151921331788712610,   0.014942555892415815127,
      0.017690089617496036602,   0.020386610960599044531,
      0.023024348980387446839,   0.025595700038299813787,
      0.028093251048625339525,   0.030509801332777334214,
      0.032838383576712233564,   0.035072284007301495726,
      0.037205061792294917037,   0.039230567632716818954,
      0.041142961504703147487,   0.042936729504496210002,
      0.044606699750397694166,   0.046148057297041744054,
      0.047556358019633026861,   0.048827541428476511180,
      0.049957942377056948931,   0.050944301630032067042,
      0.051783775260742829502,   0.052473942851190980242,
      0.053012814470870080118,   0.053398836414346775498,
      0.053630895681061314282,   0.053708323184438532130,
      0.053630895681061314282,   0.053398836414346775498,
      0.053012814470870080118,   0.052473942851190980242,
      0.051783775260742829502,   0.050944301630032067042,
      0.049957942377056948931,   0.048827541428476511180,
      0.047556358019633026861,   0.046148057297041744054,
      0.044606699750397694166,   0.042936729504496210002,
      0.041142961504703147487,   0.039230567632716818954,
      0.037205061792294917037,   0.035072284007301495726,
      0.032838383576712233564,   0.030509801332777334214,
      0.028093251048625339525,   0.025595700038299813787,
      0.023024348980387446839,   0.020386610960599044531,
      0.017690089617496036602,   0.014942555892415815127,
      0.012151921331788712610,   0.0093261979484901244666,
      0.0064733769401522525521,  0.0036003775817301265768,
      0.00058445353594389246055};
  IntegratorXX::GaussLobatto<double, double> quad(59);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 59; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("60 point GaussLobatto", "[1d-quad]") {
  std::array<double, 60> ref_pts = {-1,
                                    -0.99792699191581099573,
                                    -0.99305629093909093917,
                                    -0.98541701344774733337,
                                    -0.97503104499970188171,
                                    -0.96192743808292472023,
                                    -0.94614274477019813179,
                                    -0.92772097097142251468,
                                    -0.90671346637925973034,
                                    -0.88317878511055611129,
                                    -0.85718252386284242454,
                                    -0.82879713964553596603,
                                    -0.79810174808624472360,
                                    -0.76518190304898654714,
                                    -0.73012935824794149738,
                                    -0.69304181155131329948,
                                    -0.65402263270207389436,
                                    -0.61318057522149572220,
                                    -0.57062947330212209564,
                                    -0.52648792453700162343,
                                    -0.48087895937062309035,
                                    -0.43392969819352550281,
                                    -0.38577099703673222261,
                                    -0.33653708285377833890,
                                    -0.28636517940702951845,
                                    -0.23539512480112159961,
                                    -0.18376898172959576890,
                                    -0.13163064152109120648,
                                    -0.079125423088724234157,
                                    -0.026399667900479246653,
                                    0.026399667900479246653,
                                    0.079125423088724234157,
                                    0.13163064152109120648,
                                    0.18376898172959576890,
                                    0.23539512480112159961,
                                    0.28636517940702951845,
                                    0.33653708285377833890,
                                    0.38577099703673222261,
                                    0.43392969819352550281,
                                    0.48087895937062309035,
                                    0.52648792453700162343,
                                    0.57062947330212209564,
                                    0.61318057522149572220,
                                    0.65402263270207389436,
                                    0.69304181155131329948,
                                    0.73012935824794149738,
                                    0.76518190304898654714,
                                    0.79810174808624472360,
                                    0.82879713964553596603,
                                    0.85718252386284242454,
                                    0.88317878511055611129,
                                    0.90671346637925973034,
                                    0.92772097097142251468,
                                    0.94614274477019813179,
                                    0.96192743808292472023,
                                    0.97503104499970188171,
                                    0.98541701344774733337,
                                    0.99305629093909093917,
                                    0.99792699191581099573,
                                    1};
  std::array<double, 60> ref_wgt = {
      0.00056497175141242937853, 0.0034804479681531449950,
      0.0062580981584771698425,  0.0090168424893638244582,
      0.011750254422266674931,   0.014450866330632214107,
      0.017111184093521227868,   0.019723802887793956221,
      0.022281444575675224010,   0.024776982138835830547,
      0.027203460825102394953,   0.029554117996938696384,
      0.031822402169556473307,   0.034001991355932717972,
      0.036086810728312709880,   0.038071049570919672451,
      0.039949177486879666876,   0.041715959818897681200,
      0.043366472242994262502,   0.044896114495797823191,
      0.046300623197757076197,   0.047576083736879506333,
      0.048718941180072447212,   0.049726010181792254039,
      0.050594483862455558382,   0.051321941631911051493,
      0.051906355936194341265,   0.052346097908779451106,
      0.052639941910587587192,   0.052787068946106931708,
      0.052787068946106931708,   0.052639941910587587192,
      0.052346097908779451106,   0.051906355936194341265,
      0.051321941631911051493,   0.050594483862455558382,
      0.049726010181792254039,   0.048718941180072447212,
      0.047576083736879506333,   0.046300623197757076197,
      0.044896114495797823191,   0.043366472242994262502,
      0.041715959818897681200,   0.039949177486879666876,
      0.038071049570919672451,   0.036086810728312709880,
      0.034001991355932717972,   0.031822402169556473307,
      0.029554117996938696384,   0.027203460825102394953,
      0.024776982138835830547,   0.022281444575675224010,
      0.019723802887793956221,   0.017111184093521227868,
      0.014450866330632214107,   0.011750254422266674931,
      0.0090168424893638244582,  0.0062580981584771698425,
      0.0034804479681531449950,  0.00056497175141242937853};
  IntegratorXX::GaussLobatto<double, double> quad(60);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 60; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("61 point GaussLobatto", "[1d-quad]") {
  std::array<double, 61> ref_pts = {-1,
                                    -0.99799493667405561418,
                                    -0.99328369836905810439,
                                    -0.98589401695770226808,
                                    -0.97584638775126686522,
                                    -0.96316799886299800904,
                                    -0.94789305797071806638,
                                    -0.93006275438528709752,
                                    -0.90972516019542822488,
                                    -0.88693510431230385149,
                                    -0.86175402597306929761,
                                    -0.83424980965400528622,
                                    -0.80449660231446316617,
                                    -0.77257461363320754107,
                                    -0.73856989984277234657,
                                    -0.70257413177373081690,
                                    -0.66468434774782819186,
                                    -0.62500269199291516658,
                                    -0.58363613928842133216,
                                    -0.54069620658562127353,
                                    -0.49629865238122188181,
                                    -0.45056316465535920452,
                                    -0.40361303821566518509,
                                    -0.35557484231747499798,
                                    -0.30657807945637037608,
                                    -0.25675483625299749681,
                                    -0.20623942737138155939,
                                    -0.15516803343071875659,
                                    -0.10367833388680467498,
                                    -0.051909135872809846330,
                                    0,
                                    0.051909135872809846330,
                                    0.10367833388680467498,
                                    0.15516803343071875659,
                                    0.20623942737138155939,
                                    0.25675483625299749681,
                                    0.30657807945637037608,
                                    0.35557484231747499798,
                                    0.40361303821566518509,
                                    0.45056316465535920452,
                                    0.49629865238122188181,
                                    0.54069620658562127353,
                                    0.58363613928842133216,
                                    0.62500269199291516658,
                                    0.66468434774782819186,
                                    0.70257413177373081690,
                                    0.73856989984277234657,
                                    0.77257461363320754107,
                                    0.80449660231446316617,
                                    0.83424980965400528622,
                                    0.86175402597306929761,
                                    0.88693510431230385149,
                                    0.90972516019542822488,
                                    0.93006275438528709752,
                                    0.94789305797071806638,
                                    0.96316799886299800904,
                                    0.97584638775126686522,
                                    0.98589401695770226808,
                                    0.99328369836905810439,
                                    0.99799493667405561418,
                                    1};
  std::array<double, 61> ref_wgt = {
      0.00054644808743169398907, 0.0033664112266196558633,
      0.0060533748717342209260,  0.0087226042949829567348,
      0.011368124877434198942,   0.013982950691308667739,
      0.016560064513450823970,   0.019092528532347466860,
      0.021573519250141790928,   0.023996349889820170602,
      0.026354489661820359750,   0.028641581818932473460,
      0.030851460976146763107,   0.032978169813494282439,
      0.035015975175564419402,   0.036959383547455665570,
      0.038803155875359808763,   0.040542321696378078011,
      0.042172192541691657429,   0.043688374578085777837,
      0.045086780454352270852,   0.046363640320969803908,
      0.047515511993546787831,   0.048539290232741587897,
      0.049432215115711843079,   0.050191879476567684041,
      0.050816235395797786532,   0.051303599721191368616,
      0.051652658605384085516,   0.051862471047802855266,
      0.051932471431465988278,   0.051862471047802855266,
      0.051652658605384085516,   0.051303599721191368616,
      0.050816235395797786532,   0.050191879476567684041,
      0.049432215115711843079,   0.048539290232741587897,
      0.047515511993546787831,   0.046363640320969803908,
      0.045086780454352270852,   0.043688374578085777837,
      0.042172192541691657429,   0.040542321696378078011,
      0.038803155875359808763,   0.036959383547455665570,
      0.035015975175564419402,   0.032978169813494282439,
      0.030851460976146763107,   0.028641581818932473460,
      0.026354489661820359750,   0.023996349889820170602,
      0.021573519250141790928,   0.019092528532347466860,
      0.016560064513450823970,   0.013982950691308667739,
      0.011368124877434198942,   0.0087226042949829567348,
      0.0060533748717342209260,  0.0033664112266196558633,
      0.00054644808743169398907};
  IntegratorXX::GaussLobatto<double, double> quad(61);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 61; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("62 point GaussLobatto", "[1d-quad]") {
  std::array<double, 62> ref_pts = {-1,
                                    -0.99805959521278575443,
                                    -0.99350011826968708622,
                                    -0.98634801054711078322,
                                    -0.97662248657382009002,
                                    -0.96434901733043250455,
                                    -0.94955965094058909124,
                                    -0.93229298159356269611,
                                    -0.91259406064636951156,
                                    -0.89051428261057124168,
                                    -0.86611125233992361817,
                                    -0.83944863527073700051,
                                    -0.81059599156643539705,
                                    -0.77962859476244837829,
                                    -0.74662723544948445406,
                                    -0.71167801053556381654,
                                    -0.67487209864979592851,
                                    -0.63630552228040884575,
                                    -0.59607889727102144756,
                                    -0.55429717033057626832,
                                    -0.51106934524281111036,
                                    -0.46650819849018893796,
                                    -0.42072998503457407181,
                                    -0.37385413502247847383,
                                    -0.32600294220629245304,
                                    -0.27730124489447328836,
                                    -0.22787610026312318654,
                                    -0.17785645287868615596,
                                    -0.12737279829658212164,
                                    -0.076556842613433868348,
                                    -0.025541158861093044253,
                                    0.025541158861093044253,
                                    0.076556842613433868348,
                                    0.12737279829658212164,
                                    0.17785645287868615596,
                                    0.22787610026312318654,
                                    0.27730124489447328836,
                                    0.32600294220629245304,
                                    0.37385413502247847383,
                                    0.42072998503457407181,
                                    0.46650819849018893796,
                                    0.51106934524281111036,
                                    0.55429717033057626832,
                                    0.59607889727102144756,
                                    0.63630552228040884575,
                                    0.67487209864979592851,
                                    0.71167801053556381654,
                                    0.74662723544948445406,
                                    0.77962859476244837829,
                                    0.81059599156643539705,
                                    0.83944863527073700051,
                                    0.86611125233992361817,
                                    0.89051428261057124168,
                                    0.91259406064636951156,
                                    0.93229298159356269611,
                                    0.94955965094058909124,
                                    0.96434901733043250455,
                                    0.97662248657382009002,
                                    0.98634801054711078322,
                                    0.99350011826968708622,
                                    0.99805959521278575443,
                                    1};
  std::array<double, 62> ref_wgt = {
      0.00052882072977260708620, 0.0032578875892193705401,
      0.0058585285951202132237,  0.0084425156729469517240,
      0.011004289228371536056,   0.013537307100143246302,
      0.016034991787545405180,   0.018490836436195775982,
      0.020898437489170430712,   0.023251515275652286588,
      0.025543931593973601827,   0.027769706159981799054,
      0.029923032386157679109,   0.031998292609727308198,
      0.033990072786850009774,   0.035893176636954393030,
      0.037702639209920314254,   0.039413739845115966119,
      0.041022014490623408935,   0.042523267351608064560,
      0.043913581838027434988,   0.045189330783441834068,
      0.046347185908453263873,   0.047384126504193187056,
      0.048297447313271564377,   0.049084765587668026569,
      0.049744027305178180235,   0.050273512528213979892,
      0.050671839890988745001,   0.050937970203387570759,
      0.051071209162125844928,   0.051071209162125844928,
      0.050937970203387570759,   0.050671839890988745001,
      0.050273512528213979892,   0.049744027305178180235,
      0.049084765587668026569,   0.048297447313271564377,
      0.047384126504193187056,   0.046347185908453263873,
      0.045189330783441834068,   0.043913581838027434988,
      0.042523267351608064560,   0.041022014490623408935,
      0.039413739845115966119,   0.037702639209920314254,
      0.035893176636954393030,   0.033990072786850009774,
      0.031998292609727308198,   0.029923032386157679109,
      0.027769706159981799054,   0.025543931593973601827,
      0.023251515275652286588,   0.020898437489170430712,
      0.018490836436195775982,   0.016034991787545405180,
      0.013537307100143246302,   0.011004289228371536056,
      0.0084425156729469517240,  0.0058585285951202132237,
      0.0032578875892193705401,  0.00052882072977260708620};
  IntegratorXX::GaussLobatto<double, double> quad(62);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 62; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("63 point GaussLobatto", "[1d-quad]") {
  std::array<double, 63> ref_pts = {-1,
                                    -0.99812117607009168866,
                                    -0.99370624701870352818,
                                    -0.98678044967716621155,
                                    -0.97736181705093240984,
                                    -0.96547423649700887866,
                                    -0.95114776422516862889,
                                    -0.93441860023572891815,
                                    -0.91532900828999286060,
                                    -0.89392721255682349890,
                                    -0.87026727702376391834,
                                    -0.84440896943479784250,
                                    -0.81641761054456459784,
                                    -0.78636390922805366693,
                                    -0.75432378392514933231,
                                    -0.72037817089838125991,
                                    -0.68461281980101103407,
                                    -0.64711807707821842034,
                                    -0.60798865775186108671,
                                    -0.56732340616712095126,
                                    -0.52522504630644900276,
                                    -0.48179992230214816578,
                                    -0.43715772980345287295,
                                    -0.39141123887692680926,
                                    -0.34467600914030440774,
                                    -0.29707009784946947077,
                                    -0.24871376167603315164,
                                    -0.19972915292889106314,
                                    -0.15024001098716088956,
                                    -0.10037134972398952668,
                                    -0.050249141710840333690,
                                    0,
                                    0.050249141710840333690,
                                    0.10037134972398952668,
                                    0.15024001098716088956,
                                    0.19972915292889106314,
                                    0.24871376167603315164,
                                    0.29707009784946947077,
                                    0.34467600914030440774,
                                    0.39141123887692680926,
                                    0.43715772980345287295,
                                    0.48179992230214816578,
                                    0.52522504630644900276,
                                    0.56732340616712095126,
                                    0.60798865775186108671,
                                    0.64711807707821842034,
                                    0.68461281980101103407,
                                    0.72037817089838125991,
                                    0.75432378392514933231,
                                    0.78636390922805366693,
                                    0.81641761054456459784,
                                    0.84440896943479784250,
                                    0.87026727702376391834,
                                    0.89392721255682349890,
                                    0.91532900828999286060,
                                    0.93441860023572891815,
                                    0.95114776422516862889,
                                    0.96547423649700887866,
                                    0.97736181705093240984,
                                    0.98678044967716621155,
                                    0.99370624701870352818,
                                    0.99812117607009168866,
                                    1};
  std::array<double, 63> ref_wgt = {
      0.00051203277009728622632, 0.0031545273895644060407,
      0.0056729344582693991908,  0.0081756850253161989252,
      0.010657601118471009159,   0.013112549926151271302,
      0.015534359906328990349,   0.017916922379588209765,
      0.020254222137224677869,   0.022540356395139317746,
      0.024769550866660007012,   0.026936174769537629932,
      0.029034755221373856668,   0.031059991141448415970,
      0.033006766678829398483,   0.034870164154538920838,
      0.036645476494373641159,   0.038328219125237480442,
      0.039914141307008859900,   0.041399236872377105163,
      0.042779754348084062501,   0.044052206432317512723,
      0.045213378804495546804,   0.046260338245293887762,
      0.047190440046468733745,   0.048001334691797319118,
      0.048690973792284970363,   0.049257615260662228602,
      0.049699827712111577529,   0.050016494080114290749,
      0.050206814438288188641,   0.050270308021091198645,
      0.050206814438288188641,   0.050016494080114290749,
      0.049699827712111577529,   0.049257615260662228602,
      0.048690973792284970363,   0.048001334691797319118,
      0.047190440046468733745,   0.046260338245293887762,
      0.045213378804495546804,   0.044052206432317512723,
      0.042779754348084062501,   0.041399236872377105163,
      0.039914141307008859900,   0.038328219125237480442,
      0.036645476494373641159,   0.034870164154538920838,
      0.033006766678829398483,   0.031059991141448415970,
      0.029034755221373856668,   0.026936174769537629932,
      0.024769550866660007012,   0.022540356395139317746,
      0.020254222137224677869,   0.017916922379588209765,
      0.015534359906328990349,   0.013112549926151271302,
      0.010657601118471009159,   0.0081756850253161989252,
      0.0056729344582693991908,  0.0031545273895644060407,
      0.00051203277009728622632};
  IntegratorXX::GaussLobatto<double, double> quad(63);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 63; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("64 point GaussLobatto", "[1d-quad]") {
  std::array<double, 64> ref_pts = {-1,
                                    -0.99817987150216321518,
                                    -0.99390272670305729237,
                                    -0.98719267660274024265,
                                    -0.97806666283139607396,
                                    -0.96654711036909923352,
                                    -0.95266223578866291546,
                                    -0.93644602747563416245,
                                    -0.91793817351028163083,
                                    -0.89718396784585004284,
                                    -0.87423420065762749177,
                                    -0.84914503454299098501,
                                    -0.82197786730751705008,
                                    -0.79279918182620813735,
                                    -0.76168038340811996779,
                                    -0.72869762508883693957,
                                    -0.69393162129070484081,
                                    -0.65746745031297650421,
                                    -0.61939434613843154754,
                                    -0.57980548006771842373,
                                    -0.53879773271680043899,
                                    -0.49647145693605775350,
                                    -0.45293023223158118199,
                                    -0.40828061128985404453,
                                    -0.36263185922626182369,
                                    -0.31609568619562580640,
                                    -0.26878597401917000399,
                                    -0.22081849749695350321,
                                    -0.17231064108779297132,
                                    -0.12338111165002798616,
                                    -0.074149647946115918734,
                                    -0.024736727621958728495,
                                    0.024736727621958728495,
                                    0.074149647946115918734,
                                    0.12338111165002798616,
                                    0.17231064108779297132,
                                    0.22081849749695350321,
                                    0.26878597401917000399,
                                    0.31609568619562580640,
                                    0.36263185922626182369,
                                    0.40828061128985404453,
                                    0.45293023223158118199,
                                    0.49647145693605775350,
                                    0.53879773271680043899,
                                    0.57980548006771842373,
                                    0.61939434613843154754,
                                    0.65746745031297650421,
                                    0.69393162129070484081,
                                    0.72869762508883693957,
                                    0.76168038340811996779,
                                    0.79279918182620813735,
                                    0.82197786730751705008,
                                    0.84914503454299098501,
                                    0.87423420065762749177,
                                    0.89718396784585004284,
                                    0.91793817351028163083,
                                    0.93644602747563416245,
                                    0.95266223578866291546,
                                    0.96654711036909923352,
                                    0.97806666283139607396,
                                    0.98719267660274024265,
                                    0.99390272670305729237,
                                    0.99817987150216321518,
                                    1};
  std::array<double, 64> ref_wgt = {
      0.00049603174603174603175, 0.0030560082449124903786,
      0.0054960162038171568978,  0.0079212897900466340357,
      0.010327002366815328461,   0.012707399197454735199,
      0.015056683987961442733,   0.017369116384542181594,
      0.019639040723241718382,   0.021860903511518060111,
      0.024029268144023826713,   0.026138828614338437745,
      0.028184422665848517475,   0.030161044499089450676,
      0.032063857057727024512,   0.033888203884125397608,
      0.035629620524489486277,   0.037283845459801172592,
      0.038846830537807736696,   0.040314750881560237117,
      0.041684014250801952190,   0.042951269833601818608,
      0.044113416446892470919,   0.045167610125947702037,
      0.046111271084289059449,   0.046942090027028316445,
      0.047658033802220636787,   0.048257350376414548900,
      0.048738573122233185120,   0.049100524407501307932,
      0.049342318477139573936,   0.049463363620776646441,
      0.049463363620776646441,   0.049342318477139573936,
      0.049100524407501307932,   0.048738573122233185120,
      0.048257350376414548900,   0.047658033802220636787,
      0.046942090027028316445,   0.046111271084289059449,
      0.045167610125947702037,   0.044113416446892470919,
      0.042951269833601818608,   0.041684014250801952190,
      0.040314750881560237117,   0.038846830537807736696,
      0.037283845459801172592,   0.035629620524489486277,
      0.033888203884125397608,   0.032063857057727024512,
      0.030161044499089450676,   0.028184422665848517475,
      0.026138828614338437745,   0.024029268144023826713,
      0.021860903511518060111,   0.019639040723241718382,
      0.017369116384542181594,   0.015056683987961442733,
      0.012707399197454735199,   0.010327002366815328461,
      0.0079212897900466340357,  0.0054960162038171568978,
      0.0030560082449124903786,  0.00049603174603174603175};
  IntegratorXX::GaussLobatto<double, double> quad(64);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 64; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("65 point GaussLobatto", "[1d-quad]") {
  std::array<double, 65> ref_pts = {-1,
                                    -0.99823585898516815870,
                                    -0.99409015011842312124,
                                    -0.98758593076950913551,
                                    -0.97873913319199888949,
                                    -0.96757083026691361434,
                                    -0.95410753746002221278,
                                    -0.93838119768266555698,
                                    -0.92042911624299077848,
                                    -0.90029387556160701088,
                                    -0.87802323532494571004,
                                    -0.85367001968144930870,
                                    -0.82729199216694042060,
                                    -0.79895171880436738062,
                                    -0.76871641976162753936,
                                    -0.73665780994495239569,
                                    -0.70285192891793701945,
                                    -0.66737896055558734134,
                                    -0.63032304286426742291,
                                    -0.59177206842034207923,
                                    -0.55181747590182537997,
                                    -0.51055403320807203040,
                                    -0.46807961268227566264,
                                    -0.42449495897013840821,
                                    -0.37990345006546399621,
                                    -0.33441085210953843246,
                                    -0.28812506852594747573,
                                    -0.24115588408589652051,
                                    -0.19361470451111018185,
                                    -0.14561429223196490496,
                                    -0.097268498927621703334,
                                    -0.048691995482555117357,
                                    0,
                                    0.048691995482555117357,
                                    0.097268498927621703334,
                                    0.14561429223196490496,
                                    0.19361470451111018185,
                                    0.24115588408589652051,
                                    0.28812506852594747573,
                                    0.33441085210953843246,
                                    0.37990345006546399621,
                                    0.42449495897013840821,
                                    0.46807961268227566264,
                                    0.51055403320807203040,
                                    0.55181747590182537997,
                                    0.59177206842034207923,
                                    0.63032304286426742291,
                                    0.66737896055558734134,
                                    0.70285192891793701945,
                                    0.73665780994495239569,
                                    0.76871641976162753936,
                                    0.79895171880436738062,
                                    0.82729199216694042060,
                                    0.85367001968144930870,
                                    0.87802323532494571004,
                                    0.90029387556160701088,
                                    0.92042911624299077848,
                                    0.93838119768266555698,
                                    0.95410753746002221278,
                                    0.96757083026691361434,
                                    0.97873913319199888949,
                                    0.98758593076950913551,
                                    0.99409015011842312124,
                                    0.99823585898516815870,
                                    1};
  std::array<double, 65> ref_wgt = {
      0.00048076923076923076923, 0.0029620325412562160293,
      0.0053272417215879640742,  0.0076785701335481211169,
      0.010011514973888304412,   0.012320671119444298137,
      0.014600589550422213461,   0.016845871022064948301,
      0.019051193120028274070,   0.021211326413491117959,
      0.023321147949507752520,   0.025375653798947578333,
      0.027369971086316568133,   0.029299369619809824458,
      0.031159273145641122234,   0.032945270220318297736,
      0.034653124683798986293,   0.036278785712687434895,
      0.037818397431573346284,   0.039268308060710440688,
      0.040625078578868414032,   0.041885490881105350503,
      0.043046555412280044712,   0.044105518258298097939,
      0.045059867678332635707,   0.045907340062563537896,
      0.046645925301327952534,   0.047273871552962506782,
      0.047789689399038578190,   0.048192155377141635081,
      0.048480314882819829806,   0.048653484433821797399,
      0.048711253291255159029,   0.048653484433821797399,
      0.048480314882819829806,   0.048192155377141635081,
      0.047789689399038578190,   0.047273871552962506782,
      0.046645925301327952534,   0.045907340062563537896,
      0.045059867678332635707,   0.044105518258298097939,
      0.043046555412280044712,   0.041885490881105350503,
      0.040625078578868414032,   0.039268308060710440688,
      0.037818397431573346284,   0.036278785712687434895,
      0.034653124683798986293,   0.032945270220318297736,
      0.031159273145641122234,   0.029299369619809824458,
      0.027369971086316568133,   0.025375653798947578333,
      0.023321147949507752520,   0.021211326413491117959,
      0.019051193120028274070,   0.016845871022064948301,
      0.014600589550422213461,   0.012320671119444298137,
      0.010011514973888304412,   0.0076785701335481211169,
      0.0053272417215879640742,  0.0029620325412562160293,
      0.00048076923076923076923};
  IntegratorXX::GaussLobatto<double, double> quad(65);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 65; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("66 point GaussLobatto", "[1d-quad]") {
  std::array<double, 66> ref_pts = {-1,
                                    -0.99828930255796696418,
                                    -0.99426906523986610999,
                                    -0.98796135811458488265,
                                    -0.97938117875580438566,
                                    -0.96854834839456237811,
                                    -0.95548780759761579228,
                                    -0.94022960520694756608,
                                    -0.92280883961732928346,
                                    -0.90326558115135277407,
                                    -0.88164478101544034965,
                                    -0.85799616837298789494,
                                    -0.83237413617744464629,
                                    -0.80483761617193317023,
                                    -0.77544994340010829692,
                                    -0.74427871056473638534,
                                    -0.71139561258059690187,
                                    -0.67687628168501798506,
                                    -0.64080011348832309002,
                                    -0.60325008436593524967,
                                    -0.56431256061308617567,
                                    -0.52407709980163599052,
                                    -0.48263624479622646240,
                                    -0.44008531090374746203,
                                    -0.39652216664581404196,
                                    -0.35204700865857223379,
                                    -0.30676213123762974379,
                                    -0.26077169105820536950,
                                    -0.21418146761167588130,
                                    -0.16709861990954343091,
                                    -0.11963144001442616324,
                                    -0.071889103964968982042,
                                    -0.023981420667563004504,
                                    0.023981420667563004504,
                                    0.071889103964968982042,
                                    0.11963144001442616324,
                                    0.16709861990954343091,
                                    0.21418146761167588130,
                                    0.26077169105820536950,
                                    0.30676213123762974379,
                                    0.35204700865857223379,
                                    0.39652216664581404196,
                                    0.44008531090374746203,
                                    0.48263624479622646240,
                                    0.52407709980163599052,
                                    0.56431256061308617567,
                                    0.60325008436593524967,
                                    0.64080011348832309002,
                                    0.67687628168501798506,
                                    0.71139561258059690187,
                                    0.74427871056473638534,
                                    0.77544994340010829692,
                                    0.80483761617193317023,
                                    0.83237413617744464629,
                                    0.85799616837298789494,
                                    0.88164478101544034965,
                                    0.90326558115135277407,
                                    0.92280883961732928346,
                                    0.94022960520694756608,
                                    0.95548780759761579228,
                                    0.96854834839456237811,
                                    0.97938117875580438566,
                                    0.98796135811458488265,
                                    0.99426906523986610999,
                                    0.99828930255796696418,
                                    1};
  std::array<double, 66> ref_wgt = {
      0.00046620046620046620047, 0.0028723251847214548315,
      0.0051661190538816344434,  0.0074468233045212342941,
      0.0097102339580584539474,  0.011951269566650912343,
      0.014164802868276553784,   0.016345750877715204891,
      0.018489100394119414642,   0.020589922953300905621,
      0.022643387220926765262,   0.024644770487593177943,
      0.026589469687358721057,   0.028473012054875029668,
      0.030291065446664398236,   0.032039448322548396892,
      0.033714139372726653504,   0.035311286772243154162,
      0.036827217043441167295,   0.038258443506987214135,
      0.039601674302541197116,   0.040853819960910270430,
      0.042012000510433880690,   0.043073552101351724389,
      0.044036033132977012381,   0.044897229869618796460,
      0.045655161532359703523,   0.046308084854992809190,
      0.046854498093648713629,   0.047293144480897132663,
      0.047623015116382898470,   0.047843351287350818443,
      0.047953646213724129462,   0.047953646213724129462,
      0.047843351287350818443,   0.047623015116382898470,
      0.047293144480897132663,   0.046854498093648713629,
      0.046308084854992809190,   0.045655161532359703523,
      0.044897229869618796460,   0.044036033132977012381,
      0.043073552101351724389,   0.042012000510433880690,
      0.040853819960910270430,   0.039601674302541197116,
      0.038258443506987214135,   0.036827217043441167295,
      0.035311286772243154162,   0.033714139372726653504,
      0.032039448322548396892,   0.030291065446664398236,
      0.028473012054875029668,   0.026589469687358721057,
      0.024644770487593177943,   0.022643387220926765262,
      0.020589922953300905621,   0.018489100394119414642,
      0.016345750877715204891,   0.014164802868276553784,
      0.011951269566650912343,   0.0097102339580584539474,
      0.0074468233045212342941,  0.0051661190538816344434,
      0.0028723251847214548315,  0.00046620046620046620047};
  IntegratorXX::GaussLobatto<double, double> quad(66);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 66; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("67 point GaussLobatto", "[1d-quad]") {
  std::array<double, 67> ref_pts = {-1,
                                    -0.99834035402465146074,
                                    -0.99443997922663088154,
                                    -0.98832001940075947722,
                                    -0.97999460558379018129,
                                    -0.96948239898367212553,
                                    -0.95680688041318216023,
                                    -0.94199634281468102792,
                                    -0.92508383820754100936,
                                    -0.90610710694574257186,
                                    -0.88510849458988356561,
                                    -0.86213485786615903831,
                                    -0.83723746031606925174,
                                    -0.81047185800940465033,
                                    -0.78189777563100624740,
                                    -0.75157897324190671149,
                                    -0.71958310402343316618,
                                    -0.68598156332730488518,
                                    -0.65084932937148910367,
                                    -0.61426479593889183794,
                                    -0.57630959745311309790,
                                    -0.53706842682212959462,
                                    -0.49662884645669388974,
                                    -0.45508109288534571574,
                                    -0.41251787540214602922,
                                    -0.36903416919651450647,
                                    -0.32472700342683540686,
                                    -0.27969524471076097627,
                                    -0.23403937651535683108,
                                    -0.18786127493937494472,
                                    -0.14126398138798513897,
                                    -0.094351472647226531928,
                                    -0.047228428871240192155,
                                    0,
                                    0.047228428871240192155,
                                    0.094351472647226531928,
                                    0.14126398138798513897,
                                    0.18786127493937494472,
                                    0.23403937651535683108,
                                    0.27969524471076097627,
                                    0.32472700342683540686,
                                    0.36903416919651450647,
                                    0.41251787540214602922,
                                    0.45508109288534571574,
                                    0.49662884645669388974,
                                    0.53706842682212959462,
                                    0.57630959745311309790,
                                    0.61426479593889183794,
                                    0.65084932937148910367,
                                    0.68598156332730488518,
                                    0.71958310402343316618,
                                    0.75157897324190671149,
                                    0.78189777563100624740,
                                    0.81047185800940465033,
                                    0.83723746031606925174,
                                    0.86213485786615903831,
                                    0.88510849458988356561,
                                    0.90610710694574257186,
                                    0.92508383820754100936,
                                    0.94199634281468102792,
                                    0.95680688041318216023,
                                    0.96948239898367212553,
                                    0.97999460558379018129,
                                    0.98832001940075947722,
                                    0.99443997922663088154,
                                    0.99834035402465146074,
                                    1};
  std::array<double, 67> ref_wgt = {
      0.00045228403437358661239, 0.0027866315875324442054,
      0.0050121928159414634391,  0.0072253985711212796373,
      0.0094223209258750454998,  0.011598178436229243727,
      0.013748142291443545963,   0.015867423047799728832,
      0.017951294719242502196,   0.019995108642310574092,
      0.021994304875033753380,   0.023944422743325532571,
      0.025841110945958424965,   0.027680137331850403687,
      0.029457398376407633409,   0.031168928354929759911,
      0.032810908200811444175,   0.034379674032537520068,
      0.035871725332274714750,   0.037283732758745654210,
      0.038612545577450824258,   0.039855198691935543228,
      0.041008919260571132877,   0.042071132884179406648,
      0.043039469350750346349,   0.043911767924469608951,
      0.044686082167276428634,   0.045360684282207672992,
      0.045934068968845932401,   0.046404956782275032238,
      0.046772296988052152563,   0.047035269906828940778,
      0.047193288743391851140,   0.047246000896041743223,
      0.047193288743391851140,   0.047035269906828940778,
      0.046772296988052152563,   0.046404956782275032238,
      0.045934068968845932401,   0.045360684282207672992,
      0.044686082167276428634,   0.043911767924469608951,
      0.043039469350750346349,   0.042071132884179406648,
      0.041008919260571132877,   0.039855198691935543228,
      0.038612545577450824258,   0.037283732758745654210,
      0.035871725332274714750,   0.034379674032537520068,
      0.032810908200811444175,   0.031168928354929759911,
      0.029457398376407633409,   0.027680137331850403687,
      0.025841110945958424965,   0.023944422743325532571,
      0.021994304875033753380,   0.019995108642310574092,
      0.017951294719242502196,   0.015867423047799728832,
      0.013748142291443545963,   0.011598178436229243727,
      0.0094223209258750454998,  0.0072253985711212796373,
      0.0050121928159414634391,  0.0027866315875324442054,
      0.00045228403437358661239};
  IntegratorXX::GaussLobatto<double, double> quad(67);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 67; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("68 point GaussLobatto", "[1d-quad]") {
  std::array<double, 68> ref_pts = {-1,
                                    -0.99838915403338512554,
                                    -0.99460336201570722388,
                                    -0.98866289769736743901,
                                    -0.98058108782920535966,
                                    -0.97037551729136799116,
                                    -0.95806831233881921581,
                                    -0.94368613627761131271,
                                    -0.92726014150107914019,
                                    -0.90882590494149468409,
                                    -0.88842335207179771989,
                                    -0.86609667087113707699,
                                    -0.84189421632285383570,
                                    -0.81586840578732264863,
                                    -0.78807560553009137974,
                                    -0.75857600867446772805,
                                    -0.72743350485381986908,
                                    -0.69471554185133387470,
                                    -0.66049297952973333609,
                                    -0.62483993636887624159,
                                    -0.58783362894448205626,
                                    -0.54955420469616500948,
                                    -0.51008456834727801316,
                                    -0.46951020235270095957,
                                    -0.42791898176356984867,
                                    -0.38540098390999101838,
                                    -0.34204829331398031296,
                                    -0.29795480225517964834,
                                    -0.25321600742130702370,
                                    -0.20792880308376797298,
                                    -0.16219127124637702645,
                                    -0.11610246922168981823,
                                    -0.069762215095015300899,
                                    -0.023270871540750706034,
                                    0.023270871540750706034,
                                    0.069762215095015300899,
                                    0.11610246922168981823,
                                    0.16219127124637702645,
                                    0.20792880308376797298,
                                    0.25321600742130702370,
                                    0.29795480225517964834,
                                    0.34204829331398031296,
                                    0.38540098390999101838,
                                    0.42791898176356984867,
                                    0.46951020235270095957,
                                    0.51008456834727801316,
                                    0.54955420469616500948,
                                    0.58783362894448205626,
                                    0.62483993636887624159,
                                    0.66049297952973333609,
                                    0.69471554185133387470,
                                    0.72743350485381986908,
                                    0.75857600867446772805,
                                    0.78807560553009137974,
                                    0.81586840578732264863,
                                    0.84189421632285383570,
                                    0.86609667087113707699,
                                    0.88842335207179771989,
                                    0.90882590494149468409,
                                    0.92726014150107914019,
                                    0.94368613627761131271,
                                    0.95806831233881921581,
                                    0.97037551729136799116,
                                    0.98058108782920535966,
                                    0.98866289769736743901,
                                    0.99460336201570722388,
                                    0.99838915403338512554,
                                    1};
  std::array<double, 68> ref_wgt = {
      0.00043898156277436347673, 0.0027047158609942732051,
      0.0048650409830406385355,  0.0070136926736710041985,
      0.0091469982917290806779,  0.011260454765196790397,
      0.013349510418624054394,   0.015409648553898581985,
      0.017436410241159951025,   0.019425407197429312597,
      0.021372332286306828434,   0.023272969206686598684,
      0.025123201771317972330,   0.026919022887376261970,
      0.028656543266722332112,   0.030331999865572848748,
      0.031941764043263525181,   0.033482349426087511989,
      0.034950419460953453852,   0.036342794643411326828,
      0.037656459404876208866,   0.038888568644402364885,
      0.040036453891015258521,   0.041097629083346211740,
      0.042069795954107501617,   0.042950849007780624314,
      0.043738880080758951608,   0.044432182474082639910,
      0.045029254649824510030,   0.045528803483127572753,
      0.045929747062855226928,   0.046231217034791425205,
      0.046432560482317929183,   0.046533341340496863823,
      0.046533341340496863823,   0.046432560482317929183,
      0.046231217034791425205,   0.045929747062855226928,
      0.045528803483127572753,   0.045029254649824510030,
      0.044432182474082639910,   0.043738880080758951608,
      0.042950849007780624314,   0.042069795954107501617,
      0.041097629083346211740,   0.040036453891015258521,
      0.038888568644402364885,   0.037656459404876208866,
      0.036342794643411326828,   0.034950419460953453852,
      0.033482349426087511989,   0.031941764043263525181,
      0.030331999865572848748,   0.028656543266722332112,
      0.026919022887376261970,   0.025123201771317972330,
      0.023272969206686598684,   0.021372332286306828434,
      0.019425407197429312597,   0.017436410241159951025,
      0.015409648553898581985,   0.013349510418624054394,
      0.011260454765196790397,   0.0091469982917290806779,
      0.0070136926736710041985,  0.0048650409830406385355,
      0.0027047158609942732051,  0.00043898156277436347673};
  IntegratorXX::GaussLobatto<double, double> quad(68);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 68; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("69 point GaussLobatto", "[1d-quad]") {
  std::array<double, 69> ref_pts = {-1,
                                    -0.99843583304587493683,
                                    -0.99475964955171845219,
                                    -0.98899090510612921625,
                                    -0.98114217911959230228,
                                    -0.97123005669746364024,
                                    -0.95927540577202706223,
                                    -0.94530337554851097197,
                                    -0.92934335311477959807,
                                    -0.91142890447573279777,
                                    -0.89159770498626898854,
                                    -0.86989146054197624173,
                                    -0.84635582006447984775,
                                    -0.82104027959712875453,
                                    -0.79399807826498343434,
                                    -0.76528608634061549389,
                                    -0.73496468566173900522,
                                    -0.70309764265743710455,
                                    -0.66975197425277643203,
                                    -0.63499780693532783553,
                                    -0.59890822928084019518,
                                    -0.56155913824871550923,
                                    -0.52302907957083614273,
                                    -0.48339908256960096984,
                                    -0.44275248975267325127,
                                    -0.40117478154288518784,
                                    -0.35875339651194820901,
                                    -0.31557754749605648774,
                                    -0.27173803398012042258,
                                    -0.22732705114520652273,
                                    -0.18243799598077245048,
                                    -0.13716527086945534154,
                                    -0.091604085057484437045,
                                    -0.045850254428234011129,
                                    0,
                                    0.045850254428234011129,
                                    0.091604085057484437045,
                                    0.13716527086945534154,
                                    0.18243799598077245048,
                                    0.22732705114520652273,
                                    0.27173803398012042258,
                                    0.31557754749605648774,
                                    0.35875339651194820901,
                                    0.40117478154288518784,
                                    0.44275248975267325127,
                                    0.48339908256960096984,
                                    0.52302907957083614273,
                                    0.56155913824871550923,
                                    0.59890822928084019518,
                                    0.63499780693532783553,
                                    0.66975197425277643203,
                                    0.70309764265743710455,
                                    0.73496468566173900522,
                                    0.76528608634061549389,
                                    0.79399807826498343434,
                                    0.82104027959712875453,
                                    0.84635582006447984775,
                                    0.86989146054197624173,
                                    0.89159770498626898854,
                                    0.91142890447573279777,
                                    0.92934335311477959807,
                                    0.94530337554851097197,
                                    0.95927540577202706223,
                                    0.97123005669746364024,
                                    0.98114217911959230228,
                                    0.98899090510612921625,
                                    0.99475964955171845219,
                                    0.99843583304587493683,
                                    1};
  std::array<double, 69> ref_wgt = {
      0.00042625745950554134697, 0.0026263591915302483620,
      0.0047242720019178386403,  0.0068111457338642122427,
      0.0088835440731808439412,  0.010937222525842333692,
      0.012967887031228867847,   0.014971274576810040389,
      0.016943174794505480945,   0.018879441943171713694,
      0.020776004593876560042,   0.022628874542110390403,
      0.024434155337754570124,   0.026188050543283856607,
      0.027886871748594797235,   0.029527046343650373863,
      0.031105125040323922606,   0.032617789131169579979,
      0.034061857471578013200,   0.035434293171515019380,
      0.036732209983240460526,   0.037952878371834785115,
      0.039093731255916199875,   0.040152369406563971694,
      0.041126566493147415082,   0.042014273765482408915,
      0.042813624362489948427,   0.043522937238309260759,
      0.044140720697617842732,   0.044665675532729638223,
      0.045096697755878093487,   0.045432880920940868728,
      0.045673518029725518872,   0.045818103018808523888,
      0.045866331823801718275,   0.045818103018808523888,
      0.045673518029725518872,   0.045432880920940868728,
      0.045096697755878093487,   0.044665675532729638223,
      0.044140720697617842732,   0.043522937238309260759,
      0.042813624362489948427,   0.042014273765482408915,
      0.041126566493147415082,   0.040152369406563971694,
      0.039093731255916199875,   0.037952878371834785115,
      0.036732209983240460526,   0.035434293171515019380,
      0.034061857471578013200,   0.032617789131169579979,
      0.031105125040323922606,   0.029527046343650373863,
      0.027886871748594797235,   0.026188050543283856607,
      0.024434155337754570124,   0.022628874542110390403,
      0.020776004593876560042,   0.018879441943171713694,
      0.016943174794505480945,   0.014971274576810040389,
      0.012967887031228867847,   0.010937222525842333692,
      0.0088835440731808439412,  0.0068111457338642122427,
      0.0047242720019178386403,  0.0026263591915302483620,
      0.00042625745950554134697};
  IntegratorXX::GaussLobatto<double, double> quad(69);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 69; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("70 point GaussLobatto", "[1d-quad]") {
  std::array<double, 70> ref_pts = {-1,
                                    -0.99848051220996410891,
                                    -0.99490924669458407620,
                                    -0.98930488881777240921,
                                    -0.98167932281044748583,
                                    -0.97204820411476724788,
                                    -0.96043123049182966299,
                                    -0.94685214290097599149,
                                    -0.93133868622532099081,
                                    -0.91392255534519999749,
                                    -0.89463933138080506190,
                                    -0.87352840941241098627,
                                    -0.85063291818641470291,
                                    -0.82599963209908898126,
                                    -0.79967887568863762844,
                                    -0.77172442085273004922,
                                    -0.74219337701180934241,
                                    -0.71114607444769213427,
                                    -0.67864594105847787180,
                                    -0.64475937278302035454,
                                    -0.60955559796051358608,
                                    -0.57310653590279022216,
                                    -0.53548664996856029332,
                                    -0.49677279543993750296,
                                    -0.45704406251215168163,
                                    -0.41638161471728813096,
                                    -0.37486852311219665942,
                                    -0.33258959656935002908,
                                    -0.28963120851738211083,
                                    -0.24608112048528192116,
                                    -0.20202830281074478853,
                                    -0.15756275287897203510,
                                    -0.11277531126325341853,
                                    -0.067757476142951529698,
                                    -0.022601216378025417174,
                                    0.022601216378025417174,
                                    0.067757476142951529698,
                                    0.11277531126325341853,
                                    0.15756275287897203510,
                                    0.20202830281074478853,
                                    0.24608112048528192116,
                                    0.28963120851738211083,
                                    0.33258959656935002908,
                                    0.37486852311219665942,
                                    0.41638161471728813096,
                                    0.45704406251215168163,
                                    0.49677279543993750296,
                                    0.53548664996856029332,
                                    0.57310653590279022216,
                                    0.60955559796051358608,
                                    0.64475937278302035454,
                                    0.67864594105847787180,
                                    0.71114607444769213427,
                                    0.74219337701180934241,
                                    0.77172442085273004922,
                                    0.79967887568863762844,
                                    0.82599963209908898126,
                                    0.85063291818641470291,
                                    0.87352840941241098627,
                                    0.89463933138080506190,
                                    0.91392255534519999749,
                                    0.93133868622532099081,
                                    0.94685214290097599149,
                                    0.96043123049182966299,
                                    0.97204820411476724788,
                                    0.98167932281044748583,
                                    0.98930488881777240921,
                                    0.99490924669458407620,
                                    0.99848051220996410891,
                                    1};
  std::array<double, 70> ref_wgt = {
      0.00041407867494824016563, 0.0025513583788869967267,
      0.0045895221896944052260,  0.0066172375688958391463,
      0.0086312871975098545050,  0.010627667024309675439,
      0.012602322705070883023,   0.014551227422679706318,
      0.016470402383506221085,   0.018355927984326261017,
      0.020203952758869945713,   0.022010701586047405059,
      0.023772483540922281010,   0.025485699497131642149,
      0.027146849509668926613,   0.028752539980475433283,
      0.030299490599708718199,   0.031784541051951272079,
      0.033204657475333598915,   0.034556938661231900612,
      0.035838621982331499727,   0.037047089037198517561,
      0.038179870999973436209,   0.039234653664343176642,
      0.040209282171539175421,   0.041101765412734770483,
      0.041910280096868594916,   0.042633174475596959828,
      0.043268971717774141022,   0.043816372926572581575,
      0.044274259793083201493,   0.044641696880977403922,
      0.044917933537565240734,   0.045102405427346867258,
      0.045194735684925226924,   0.045194735684925226924,
      0.045102405427346867258,   0.044917933537565240734,
      0.044641696880977403922,   0.044274259793083201493,
      0.043816372926572581575,   0.043268971717774141022,
      0.042633174475596959828,   0.041910280096868594916,
      0.041101765412734770483,   0.040209282171539175421,
      0.039234653664343176642,   0.038179870999973436209,
      0.037047089037198517561,   0.035838621982331499727,
      0.034556938661231900612,   0.033204657475333598915,
      0.031784541051951272079,   0.030299490599708718199,
      0.028752539980475433283,   0.027146849509668926613,
      0.025485699497131642149,   0.023772483540922281010,
      0.022010701586047405059,   0.020203952758869945713,
      0.018355927984326261017,   0.016470402383506221085,
      0.014551227422679706318,   0.012602322705070883023,
      0.010627667024309675439,   0.0086312871975098545050,
      0.0066172375688958391463,  0.0045895221896944052260,
      0.0025513583788869967267,  0.00041407867494824016563};
  IntegratorXX::GaussLobatto<double, double> quad(70);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 70; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("71 point GaussLobatto", "[1d-quad]") {
  std::array<double, 71> ref_pts = {-1,
                                    -0.99852330414625322405,
                                    -0.99505252984116928930,
                                    -0.98960563657441965130,
                                    -0.98219386123644273427,
                                    -0.97283199389975296410,
                                    -0.96153864300276497503,
                                    -0.94833623836550412286,
                                    -0.93325099562383203673,
                                    -0.91631286685757896070,
                                    -0.89755548208883612966,
                                    -0.87701608291146020564,
                                    -0.85473544873394175763,
                                    -0.83075781590632811869,
                                    -0.80513078994110603366,
                                    -0.77790525102375778249,
                                    -0.74913525301061417167,
                                    -0.71887791611951757228,
                                    -0.68719331352895673350,
                                    -0.65414435211224865111,
                                    -0.61979664754437163713,
                                    -0.58421839402989206425,
                                    -0.54748022891091838621,
                                    -0.50965509242407187101,
                                    -0.47081808288502922914,
                                    -0.43104630758823030004,
                                    -0.39041872971782588824,
                                    -0.34901601157384398511,
                                    -0.30692035442485783915,
                                    -0.26421533530513008229,
                                    -0.22098574108026884018,
                                    -0.17731740011085163134,
                                    -0.13329701184823963409,
                                    -0.089011974700908789961,
                                    -0.044550212513056859416,
                                    0,
                                    0.044550212513056859416,
                                    0.089011974700908789961,
                                    0.13329701184823963409,
                                    0.17731740011085163134,
                                    0.22098574108026884018,
                                    0.26421533530513008229,
                                    0.30692035442485783915,
                                    0.34901601157384398511,
                                    0.39041872971782588824,
                                    0.43104630758823030004,
                                    0.47081808288502922914,
                                    0.50965509242407187101,
                                    0.54748022891091838621,
                                    0.58421839402989206425,
                                    0.61979664754437163713,
                                    0.65414435211224865111,
                                    0.68719331352895673350,
                                    0.71887791611951757228,
                                    0.74913525301061417167,
                                    0.77790525102375778249,
                                    0.80513078994110603366,
                                    0.83075781590632811869,
                                    0.85473544873394175763,
                                    0.87701608291146020564,
                                    0.89755548208883612966,
                                    0.91631286685757896070,
                                    0.93325099562383203673,
                                    0.94833623836550412286,
                                    0.96153864300276497503,
                                    0.97283199389975296410,
                                    0.98219386123644273427,
                                    0.98960563657441965130,
                                    0.99505252984116928930,
                                    0.99852330414625322405,
                                    1};
  std::array<double, 71> ref_wgt = {
      0.00040241448692152917505, 0.0024795245182632254523,
      0.0044604533880511748205,  0.0064314843654070571855,
      0.0083896032630272454882,  0.010331029836525023959,
      0.012251933027002253432,   0.014148506144263445636,
      0.016016986348395649583,   0.017853665073263293902,
      0.019654896302028084768,   0.021417104136272339989,
      0.023136790030310674551,   0.024810539797542890943,
      0.026435030418129896630,   0.028007036651509293907,
      0.029523437447917005546,   0.030981222149531956960,
      0.032377496470559100575,   0.033709488245209441135,
      0.034974552932608778388,   0.036170178867951700616,
      0.037293992249616187945,   0.038343761852420681540,
      0.039317403457716431078,   0.040212983991551001633,
      0.041028725362706960070,   0.041763007993008604620,
      0.042414374032896172616,   0.042981530255889020626,
      0.043463350626194975937,   0.043858878534370782338,
      0.044167328696596797673,   0.044388088713796399743,
      0.044520720287505507478,   0.044564960090078828126,
      0.044520720287505507478,   0.044388088713796399743,
      0.044167328696596797673,   0.043858878534370782338,
      0.043463350626194975937,   0.042981530255889020626,
      0.042414374032896172616,   0.041763007993008604620,
      0.041028725362706960070,   0.040212983991551001633,
      0.039317403457716431078,   0.038343761852420681540,
      0.037293992249616187945,   0.036170178867951700616,
      0.034974552932608778388,   0.033709488245209441135,
      0.032377496470559100575,   0.030981222149531956960,
      0.029523437447917005546,   0.028007036651509293907,
      0.026435030418129896630,   0.024810539797542890943,
      0.023136790030310674551,   0.021417104136272339989,
      0.019654896302028084768,   0.017853665073263293902,
      0.016016986348395649583,   0.014148506144263445636,
      0.012251933027002253432,   0.010331029836525023959,
      0.0083896032630272454882,  0.0064314843654070571855,
      0.0044604533880511748205,  0.0024795245182632254523,
      0.00040241448692152917505};
  IntegratorXX::GaussLobatto<double, double> quad(71);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 71; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("72 point GaussLobatto", "[1d-quad]") {
  std::array<double, 72> ref_pts = {-1,
                                    -0.99856431365829498405,
                                    -0.99518984929262008346,
                                    -0.98989388160341491442,
                                    -0.98268704407055335370,
                                    -0.97358332042782326524,
                                    -0.96260030403219463325,
                                    -0.94975920275368738801,
                                    -0.93508480675552159936,
                                    -0.91860544324473986134,
                                    -0.90035292273154738448,
                                    -0.88036247801414854297,
                                    -0.85867269634748004336,
                                    -0.83532544504756413383,
                                    -0.81036579072304934927,
                                    -0.78384191231068192986,
                                    -0.75580500809231629366,
                                    -0.72630919687779023061,
                                    -0.69541141354694441577,
                                    -0.66317129915380657842,
                                    -0.62965108580585890313,
                                    -0.59491547654106783381,
                                    -0.55903152043482819381,
                                    -0.52206848317807475222,
                                    -0.48409771337649263395,
                                    -0.44519250482897837497,
                                    -0.40542795505124004384,
                                    -0.36488082031765702559,
                                    -0.32362936750123048749,
                                    -0.28175322299762926266,
                                    -0.23933321902495975689,
                                    -0.19645123759595088702,
                                    -0.15319005246373574132,
                                    -0.10963316934632163319,
                                    -0.065864664738161749242,
                                    -0.021969023619968125845,
                                    0.021969023619968125845,
                                    0.065864664738161749242,
                                    0.10963316934632163319,
                                    0.15319005246373574132,
                                    0.19645123759595088702,
                                    0.23933321902495975689,
                                    0.28175322299762926266,
                                    0.32362936750123048749,
                                    0.36488082031765702559,
                                    0.40542795505124004384,
                                    0.44519250482897837497,
                                    0.48409771337649263395,
                                    0.52206848317807475222,
                                    0.55903152043482819381,
                                    0.59491547654106783381,
                                    0.62965108580585890313,
                                    0.66317129915380657842,
                                    0.69541141354694441577,
                                    0.72630919687779023061,
                                    0.75580500809231629366,
                                    0.78384191231068192986,
                                    0.81036579072304934927,
                                    0.83532544504756413383,
                                    0.85867269634748004336,
                                    0.88036247801414854297,
                                    0.90035292273154738448,
                                    0.91860544324473986134,
                                    0.93508480675552159936,
                                    0.94975920275368738801,
                                    0.96260030403219463325,
                                    0.97358332042782326524,
                                    0.98268704407055335370,
                                    0.98989388160341491442,
                                    0.99518984929262008346,
                                    0.99856431365829498405,
                                    1};
  std::array<double, 72> ref_wgt = {
      0.00039123630672926447574, 0.0024106818103947155333,
      0.0043367508444476626993,  0.0062534356737031851911,
      0.0081579107055933819952,  0.010046604223577316434,
      0.011915893352301624011,   0.013762176749173156356,
      0.015581893148042753319,   0.017371531103962238695,
      0.019127636658312140305,   0.020846820326960201153,
      0.022525763773816434372,   0.024161226274744243014,
      0.025750051001339682937,   0.027289171129007412285,
      0.028775615764634546987,   0.030206515685673523291,
      0.031579108881137634517,   0.032890745884621947305,
      0.034138894889486816820,   0.035321146636569453649,
      0.036435219065126032195,   0.037478961718107746343,
      0.038450359893316575211,   0.039347538532458450282,
      0.040168765840606306952,   0.040912456629099056332,
      0.041577175375432078664,   0.042161638994238389220,
      0.042664719314015521519,   0.043085445254819984396,
      0.043423004702727568362,   0.043676746077442555195,
      0.043846179590030808294,   0.043930978188349591691,
      0.043930978188349591691,   0.043846179590030808294,
      0.043676746077442555195,   0.043423004702727568362,
      0.043085445254819984396,   0.042664719314015521519,
      0.042161638994238389220,   0.041577175375432078664,
      0.040912456629099056332,   0.040168765840606306952,
      0.039347538532458450282,   0.038450359893316575211,
      0.037478961718107746343,   0.036435219065126032195,
      0.035321146636569453649,   0.034138894889486816820,
      0.032890745884621947305,   0.031579108881137634517,
      0.030206515685673523291,   0.028775615764634546987,
      0.027289171129007412285,   0.025750051001339682937,
      0.024161226274744243014,   0.022525763773816434372,
      0.020846820326960201153,   0.019127636658312140305,
      0.017371531103962238695,   0.015581893148042753319,
      0.013762176749173156356,   0.011915893352301624011,
      0.010046604223577316434,   0.0081579107055933819952,
      0.0062534356737031851911,  0.0043367508444476626993,
      0.0024106818103947155333,  0.00039123630672926447574};
  IntegratorXX::GaussLobatto<double, double> quad(72);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 72; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("73 point GaussLobatto", "[1d-quad]") {
  std::array<double, 73> ref_pts = {-1,
                                    -0.99860363837473195886,
                                    -0.99532153139518550452,
                                    -0.99017030708021091941,
                                    -0.98316003588797379098,
                                    -0.97430394947746135038,
                                    -0.96361869437922720795,
                                    -0.95112433852751370130,
                                    -0.93684434206260321736,
                                    -0.92080551581768135885,
                                    -0.90303797189696363480,
                                    -0.88357506752036957673,
                                    -0.86245334257144161472,
                                    -0.83971245108322807223,
                                    -0.81539508683740356350,
                                    -0.78954690323657161949,
                                    -0.76221642760965608268,
                                    -0.73345497011597395641,
                                    -0.70331652742147881776,
                                    -0.67185768132936259791,
                                    -0.63913749255609445084,
                                    -0.60521738985277343330,
                                    -0.57016105468023253713,
                                    -0.53403430165457559111,
                                    -0.49690495498770728233,
                                    -0.45884272115489758337,
                                    -0.41991905802848139136,
                                    -0.38020704072341336532,
                                    -0.33978122440656110839,
                                    -0.29871750432731346341,
                                    -0.25709297333229289532,
                                    -0.21498577713168119376,
                                    -0.17247496758888671218,
                                    -0.12964035430899084246,
                                    -0.086562354804604242993,
                                    -0.043321843520433369219,
                                    0,
                                    0.043321843520433369219,
                                    0.086562354804604242993,
                                    0.12964035430899084246,
                                    0.17247496758888671218,
                                    0.21498577713168119376,
                                    0.25709297333229289532,
                                    0.29871750432731346341,
                                    0.33978122440656110839,
                                    0.38020704072341336532,
                                    0.41991905802848139136,
                                    0.45884272115489758337,
                                    0.49690495498770728233,
                                    0.53403430165457559111,
                                    0.57016105468023253713,
                                    0.60521738985277343330,
                                    0.63913749255609445084,
                                    0.67185768132936259791,
                                    0.70331652742147881776,
                                    0.73345497011597395641,
                                    0.76221642760965608268,
                                    0.78954690323657161949,
                                    0.81539508683740356350,
                                    0.83971245108322807223,
                                    0.86245334257144161472,
                                    0.88357506752036957673,
                                    0.90303797189696363480,
                                    0.92080551581768135885,
                                    0.93684434206260321736,
                                    0.95112433852751370130,
                                    0.96361869437922720795,
                                    0.97430394947746135038,
                                    0.98316003588797379098,
                                    0.99017030708021091941,
                                    0.99532153139518550452,
                                    0.99860363837473195886,
                                    1};
  std::array<double, 73> ref_wgt = {
      0.00038051750380517503805, 0.0023446664855934826922,
      0.0042181212956257223367,  0.0060826716875187303850,
      0.0079356673267634568149,  0.0097737309755561057448,
      0.011593434046129251534,   0.013391366934741235094,
      0.015164156697001472444,   0.016908476171993488499,
      0.018621051091404579152,   0.020298666538887818715,
      0.021938173113069590252,   0.023536492897237966271,
      0.025090625265340136979,   0.026597652529491525343,
      0.028054745425290380200,   0.029459168427803310709,
      0.030808284889779630646,   0.032099561993234087096,
      0.033330575505521377089,   0.034499014331205948721,
      0.035602684851314725659,   0.036639515041904996397,
      0.037607558364263057680,   0.038504997419459863126,
      0.039330147360421494946,   0.040081459055120878193,
      0.040757521994960242490,   0.041357066942889557498,
      0.041878968316293058572,   0.042322246300172780025,
      0.042686068686663582203,   0.042969752437427414948,
      0.043172764965994457155,   0.043294725137644280075,
      0.043335403984950278556,   0.043294725137644280075,
      0.043172764965994457155,   0.042969752437427414948,
      0.042686068686663582203,   0.042322246300172780025,
      0.041878968316293058572,   0.041357066942889557498,
      0.040757521994960242490,   0.040081459055120878193,
      0.039330147360421494946,   0.038504997419459863126,
      0.037607558364263057680,   0.036639515041904996397,
      0.035602684851314725659,   0.034499014331205948721,
      0.033330575505521377089,   0.032099561993234087096,
      0.030808284889779630646,   0.029459168427803310709,
      0.028054745425290380200,   0.026597652529491525343,
      0.025090625265340136979,   0.023536492897237966271,
      0.021938173113069590252,   0.020298666538887818715,
      0.018621051091404579152,   0.016908476171993488499,
      0.015164156697001472444,   0.013391366934741235094,
      0.011593434046129251534,   0.0097737309755561057448,
      0.0079356673267634568149,  0.0060826716875187303850,
      0.0042181212956257223367,  0.0023446664855934826922,
      0.00038051750380517503805};
  IntegratorXX::GaussLobatto<double, double> quad(73);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 73; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("74 point GaussLobatto", "[1d-quad]") {
  std::array<double, 74> ref_pts = {-1,
                                    -0.99864136933072962155,
                                    -0.99544788047895636430,
                                    -0.99043555017097206593,
                                    -0.98361392302003525365,
                                    -0.97499552855029274036,
                                    -0.96459612928996951347,
                                    -0.95243472874047821528,
                                    -0.93853354491166802217,
                                    -0.92291797219921671673,
                                    -0.90561653588548846243,
                                    -0.88666084040016417044,
                                    -0.86608551175745388822,
                                    -0.84392813438932755304,
                                    -0.82022918253552883105,
                                    -0.79503194633541448288,
                                    -0.76838245276584252492,
                                    -0.74032938157411116632,
                                    -0.71092397636190981889,
                                    -0.68021995098401527523,
                                    -0.64827339143345861580,
                                    -0.61514265339282577987,
                                    -0.58088825563909823387,
                                    -0.54557276949691379283,
                                    -0.50926070454228571290,
                                    -0.47201839076563042109,
                                    -0.43391385740939872693,
                                    -0.39501670870166488285,
                                    -0.35539799671268818892,
                                    -0.31513009156671074207,
                                    -0.27428654924608166201,
                                    -0.23294197722919314878,
                                    -0.19117189820766855323,
                                    -0.14905261213174975289,
                                    -0.10666105683588392153,
                                    -0.064074667499102558160,
                                    -0.021371235196913578032,
                                    0.021371235196913578032,
                                    0.064074667499102558160,
                                    0.10666105683588392153,
                                    0.14905261213174975289,
                                    0.19117189820766855323,
                                    0.23294197722919314878,
                                    0.27428654924608166201,
                                    0.31513009156671074207,
                                    0.35539799671268818892,
                                    0.39501670870166488285,
                                    0.43391385740939872693,
                                    0.47201839076563042109,
                                    0.50926070454228571290,
                                    0.54557276949691379283,
                                    0.58088825563909823387,
                                    0.61514265339282577987,
                                    0.64827339143345861580,
                                    0.68021995098401527523,
                                    0.71092397636190981889,
                                    0.74032938157411116632,
                                    0.76838245276584252492,
                                    0.79503194633541448288,
                                    0.82022918253552883105,
                                    0.84392813438932755304,
                                    0.86608551175745388822,
                                    0.88666084040016417044,
                                    0.90561653588548846243,
                                    0.92291797219921671673,
                                    0.93853354491166802217,
                                    0.95243472874047821528,
                                    0.96459612928996951347,
                                    0.97499552855029274036,
                                    0.98361392302003525365,
                                    0.99043555017097206593,
                                    0.99544788047895636430,
                                    0.99864136933072962155,
                                    1};
  std::array<double, 74> ref_wgt = {
      0.00037023324694557571270, 0.0022813258294392754539,
      0.0041042912316345716229,  0.0059188007787780592401,
      0.0077223671451744585842,  0.0095117946388501638661,
      0.011283836158923213827,   0.013035261295962645528,
      0.014762873201952474025,   0.016463517146052541504,
      0.018134087116596490013,   0.019771531798535078733,
      0.021372860271050282302,   0.022935147526434263517,
      0.024455539839881167358,   0.025931259996049114019,
      0.027359612369554511099,   0.028737987853196006185,
      0.030063868626402155154,   0.031334832755957113416,
      0.032548558621008433667,   0.033702829154500159887,
      0.034795535893413205439,   0.035824682830491169713,
      0.036788390060462246413,   0.037684897214125678750,
      0.038512566674048184720,   0.039269886566008243740,
      0.039955473520731725191,   0.040568075200879357068,
      0.041106572588673658882,   0.041569982029989082550,
      0.041957457031173217110,   0.042268289805318078996,
      0.042501912565157824384,   0.042657898560231796183,
      0.042735962856418776150,   0.042735962856418776150,
      0.042657898560231796183,   0.042501912565157824384,
      0.042268289805318078996,   0.041957457031173217110,
      0.041569982029989082550,   0.041106572588673658882,
      0.040568075200879357068,   0.039955473520731725191,
      0.039269886566008243740,   0.038512566674048184720,
      0.037684897214125678750,   0.036788390060462246413,
      0.035824682830491169713,   0.034795535893413205439,
      0.033702829154500159887,   0.032548558621008433667,
      0.031334832755957113416,   0.030063868626402155154,
      0.028737987853196006185,   0.027359612369554511099,
      0.025931259996049114019,   0.024455539839881167358,
      0.022935147526434263517,   0.021372860271050282302,
      0.019771531798535078733,   0.018134087116596490013,
      0.016463517146052541504,   0.014762873201952474025,
      0.013035261295962645528,   0.011283836158923213827,
      0.0095117946388501638661,  0.0077223671451744585842,
      0.0059188007787780592401,  0.0041042912316345716229,
      0.0022813258294392754539,  0.00037023324694557571270};
  IntegratorXX::GaussLobatto<double, double> quad(74);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 74; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("75 point GaussLobatto", "[1d-quad]") {
  std::array<double, 75> ref_pts = {-1,
                                    -0.99867759149517536657,
                                    -0.99556918061602585290,
                                    -0.99069020569950240868,
                                    -0.98404971977321231294,
                                    -0.97565959623906061543,
                                    -0.96553477151330809624,
                                    -0.95369325425081281012,
                                    -0.94015610135426482800,
                                    -0.92494738293222138781,
                                    -0.90809414036749346639,
                                    -0.88962633859550219265,
                                    -0.86957681299113863497,
                                    -0.84798121106979270053,
                                    -0.82487792915037059539,
                                    -0.80030804411209879667,
                                    -0.77431524037541926261,
                                    -0.74694573224126028072,
                                    -0.71824818172909543040,
                                    -0.68827361206114955473,
                                    -0.65707531694730088565,
                                    -0.62470876583239559524,
                                    -0.59123150527470135551,
                                    -0.55670305663100731510,
                                    -0.52118481023038601789,
                                    -0.48473991622483990391,
                                    -0.44743317231094085660,
                                    -0.40933090852212005670,
                                    -0.37050086929646422496,
                                    -0.33101209302971209711,
                                    -0.29093478932761194749,
                                    -0.25034021417588851725,
                                    -0.20930054324976809624,
                                    -0.16788874358831688796,
                                    -0.12617844386175408717,
                                    -0.084243803462402028529,
                                    -0.042159380652026791664,
                                    0,
                                    0.042159380652026791664,
                                    0.084243803462402028529,
                                    0.12617844386175408717,
                                    0.16788874358831688796,
                                    0.20930054324976809624,
                                    0.25034021417588851725,
                                    0.29093478932761194749,
                                    0.33101209302971209711,
                                    0.37050086929646422496,
                                    0.40933090852212005670,
                                    0.44743317231094085660,
                                    0.48473991622483990391,
                                    0.52118481023038601789,
                                    0.55670305663100731510,
                                    0.59123150527470135551,
                                    0.62470876583239559524,
                                    0.65707531694730088565,
                                    0.68827361206114955473,
                                    0.71824818172909543040,
                                    0.74694573224126028072,
                                    0.77431524037541926261,
                                    0.80030804411209879667,
                                    0.82487792915037059539,
                                    0.84798121106979270053,
                                    0.86957681299113863497,
                                    0.88962633859550219265,
                                    0.90809414036749346639,
                                    0.92494738293222138781,
                                    0.94015610135426482800,
                                    0.95369325425081281012,
                                    0.96553477151330809624,
                                    0.97565959623906061543,
                                    0.98404971977321231294,
                                    0.99069020569950240868,
                                    0.99556918061602585290,
                                    0.99867759149517536657,
                                    1};
  std::array<double, 75> ref_wgt = {
      0.00036036036036036036036, 0.0022205172992955095064,
      0.0039950053212118844478,  0.0057614572604248631915,
      0.0075175375373011144066,  0.0092602200871377482112,
      0.010986427491339444109,   0.012693096958960389773,
      0.014377196448480599621,   0.016035732702302637934,
      0.017665757385581500073,   0.019264372623930965804,
      0.020828736276305757808,   0.022356067042206738725,
      0.023843649432795655489,   0.025288838612328093117,
      0.026689065107826466263,   0.028041839381614675389,
      0.029344756260040815257,   0.030595499211257983669,
      0.031791844464854567832,   0.032931664966229576983,
      0.034012934158808466063,   0.035033729587449335524,
      0.035992236316677997905,   0.036886750157702517763,
      0.037715680698487565851,   0.038477554131512797733,
      0.039171015874195242550,   0.039794832977321810414,
      0.040347896317213302775,   0.040829222567724746394,
      0.041237955948577587527,   0.041573369746916460117,
      0.041834867609386095280,   0.042021984602431702411,
      0.042134388038938066269,   0.042171878069737914913,
      0.042134388038938066269,   0.042021984602431702411,
      0.041834867609386095280,   0.041573369746916460117,
      0.041237955948577587527,   0.040829222567724746394,
      0.040347896317213302775,   0.039794832977321810414,
      0.039171015874195242550,   0.038477554131512797733,
      0.037715680698487565851,   0.036886750157702517763,
      0.035992236316677997905,   0.035033729587449335524,
      0.034012934158808466063,   0.032931664966229576983,
      0.031791844464854567832,   0.030595499211257983669,
      0.029344756260040815257,   0.028041839381614675389,
      0.026689065107826466263,   0.025288838612328093117,
      0.023843649432795655489,   0.022356067042206738725,
      0.020828736276305757808,   0.019264372623930965804,
      0.017665757385581500073,   0.016035732702302637934,
      0.014377196448480599621,   0.012693096958960389773,
      0.010986427491339444109,   0.0092602200871377482112,
      0.0075175375373011144066,  0.0057614572604248631915,
      0.0039950053212118844478,  0.0022205172992955095064,
      0.00036036036036036036036};
  IntegratorXX::GaussLobatto<double, double> quad(75);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 75; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("76 point GaussLobatto", "[1d-quad]") {
  std::array<double, 76> ref_pts = {-1,
                                    -0.99871238424934851829,
                                    -0.99568569721703725784,
                                    -0.99093482947785393389,
                                    -0.98446837407949674293,
                                    -0.97629759074244825144,
                                    -0.96643664317354573600,
                                    -0.95490260938410835990,
                                    -0.94171545994112498543,
                                    -0.92689802572776101853,
                                    -0.91047595926025168323,
                                    -0.89247769062619785959,
                                    -0.87293437842595776201,
                                    -0.85187985591036159755,
                                    -0.82935057245099468372,
                                    -0.80538553046305491678,
                                    -0.78002621789871634841,
                                    -0.75331653643220637162,
                                    -0.72530272546319405249,
                                    -0.69603328207129779522,
                                    -0.66555887706099372175,
                                    -0.63393226724268322575,
                                    -0.60120820410203015125,
                                    -0.56744333901583534524,
                                    -0.53269612517863793473,
                                    -0.49702671640989205422,
                                    -0.46049686301694609245,
                                    -0.42316980489413439439,
                                    -0.38511016204306694814,
                                    -0.34638382270366084408,
                                    -0.30705782928958940164,
                                    -0.26720026232562297833,
                                    -0.22688012258779259908,
                                    -0.18616721165041740452,
                                    -0.14513201104679394919,
                                    -0.10384556025274468913,
                                    -0.062379333704260348141,
                                    -0.020805117062142662036,
                                    0.020805117062142662036,
                                    0.062379333704260348141,
                                    0.10384556025274468913,
                                    0.14513201104679394919,
                                    0.18616721165041740452,
                                    0.22688012258779259908,
                                    0.26720026232562297833,
                                    0.30705782928958940164,
                                    0.34638382270366084408,
                                    0.38511016204306694814,
                                    0.42316980489413439439,
                                    0.46049686301694609245,
                                    0.49702671640989205422,
                                    0.53269612517863793473,
                                    0.56744333901583534524,
                                    0.60120820410203015125,
                                    0.63393226724268322575,
                                    0.66555887706099372175,
                                    0.69603328207129779522,
                                    0.72530272546319405249,
                                    0.75331653643220637162,
                                    0.78002621789871634841,
                                    0.80538553046305491678,
                                    0.82935057245099468372,
                                    0.85187985591036159755,
                                    0.87293437842595776201,
                                    0.89247769062619785959,
                                    0.91047595926025168323,
                                    0.92689802572776101853,
                                    0.94171545994112498543,
                                    0.95490260938410835990,
                                    0.96643664317354573600,
                                    0.97629759074244825144,
                                    0.98446837407949674293,
                                    0.99093482947785393389,
                                    0.99568569721703725784,
                                    0.99871238424934851829,
                                    1};
  std::array<double, 76> ref_wgt = {
      0.00035087719298245614035, 0.0021621077221020532567,
      0.0038900249816135874026,  0.0056102993535471982437,
      0.0073207366376416649420,  0.0090184694008636267418,
      0.010700579009354140294,   0.012364159597680721726,
      0.014006333494405186273,   0.015624258777817107925,
      0.017215134991203987189,   0.018776208278827699446,
      0.020304776270737773411,   0.021798192813625642082,
      0.023253872577176730804,   0.024669295542790605807,
      0.026042011373255646564,   0.027369643658729628085,
      0.028649894033093318396,   0.029880546154275388195,
      0.031059469542044556979,   0.032184623266839338628,
      0.033254059483372176953,   0.034265926802963201278,
      0.035218473498809486675,   0.036110050538668265411,
      0.036939114439721337863,   0.037704229940689652207,
      0.038404072486579565750,   0.039037430521764223953,
      0.039603207587433709869,   0.040100424219785238463,
      0.040528219645668918989,   0.040885853272754767671,
      0.041172705971642039908,   0.041388281147691901390,
      0.041532205600728315597,   0.041604230171119139490,
      0.041604230171119139490,   0.041532205600728315597,
      0.041388281147691901390,   0.041172705971642039908,
      0.040885853272754767671,   0.040528219645668918989,
      0.040100424219785238463,   0.039603207587433709869,
      0.039037430521764223953,   0.038404072486579565750,
      0.037704229940689652207,   0.036939114439721337863,
      0.036110050538668265411,   0.035218473498809486675,
      0.034265926802963201278,   0.033254059483372176953,
      0.032184623266839338628,   0.031059469542044556979,
      0.029880546154275388195,   0.028649894033093318396,
      0.027369643658729628085,   0.026042011373255646564,
      0.024669295542790605807,   0.023253872577176730804,
      0.021798192813625642082,   0.020304776270737773411,
      0.018776208278827699446,   0.017215134991203987189,
      0.015624258777817107925,   0.014006333494405186273,
      0.012364159597680721726,   0.010700579009354140294,
      0.0090184694008636267418,  0.0073207366376416649420,
      0.0056102993535471982437,  0.0038900249816135874026,
      0.0021621077221020532567,  0.00035087719298245614035};
  IntegratorXX::GaussLobatto<double, double> quad(76);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 76; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("77 point GaussLobatto", "[1d-quad]") {
  std::array<double, 77> ref_pts = {-1,
                                    -0.99874582182210000599,
                                    -0.99579767848287275665,
                                    -0.99116994133539451517,
                                    -0.98487077263674046611,
                                    -0.97691085761428144041,
                                    -0.96730363658060882698,
                                    -0.95606531620246655648,
                                    -0.94321484978566881994,
                                    -0.92877390758802695190,
                                    -0.91276684109782025259,
                                    -0.89522064231013164550,
                                    -0.87616489836718316689,
                                    -0.85563174174463550898,
                                    -0.83365579610972832994,
                                    -0.81027411796074988438,
                                    -0.78552613415475077721,
                                    -0.75945357543307199219,
                                    -0.73210040605899150083,
                                    -0.70351274968734783645,
                                    -0.67373881159183060307,
                                    -0.64282879738148614180,
                                    -0.61083482834374693401,
                                    -0.57781085355688898937,
                                    -0.54381255892021345796,
                                    -0.50889727325541207545,
                                    -0.47312387163749331896,
                                    -0.43655267611830402773,
                                    -0.39924535401006895471,
                                    -0.36126481390047911453,
                                    -0.32267509957468088559,
                                    -0.28354128202304449917,
                                    -0.24392934971681643777,
                                    -0.20390609733667965513,
                                    -0.16353901314185332115,
                                    -0.12289616516965546906,
                                    -0.082046086457423537244,
                                    -0.041057659480335974471,
                                    0,
                                    0.041057659480335974471,
                                    0.082046086457423537244,
                                    0.12289616516965546906,
                                    0.16353901314185332115,
                                    0.20390609733667965513,
                                    0.24392934971681643777,
                                    0.28354128202304449917,
                                    0.32267509957468088559,
                                    0.36126481390047911453,
                                    0.39924535401006895471,
                                    0.43655267611830402773,
                                    0.47312387163749331896,
                                    0.50889727325541207545,
                                    0.54381255892021345796,
                                    0.57781085355688898937,
                                    0.61083482834374693401,
                                    0.64282879738148614180,
                                    0.67373881159183060307,
                                    0.70351274968734783645,
                                    0.73210040605899150083,
                                    0.75945357543307199219,
                                    0.78552613415475077721,
                                    0.81027411796074988438,
                                    0.83365579610972832994,
                                    0.85563174174463550898,
                                    0.87616489836718316689,
                                    0.89522064231013164550,
                                    0.91276684109782025259,
                                    0.92877390758802695190,
                                    0.94321484978566881994,
                                    0.95606531620246655648,
                                    0.96730363658060882698,
                                    0.97691085761428144041,
                                    0.98487077263674046611,
                                    0.99116994133539451517,
                                    0.99579767848287275665,
                                    0.99874582182210000599,
                                    1};
  std::array<double, 77> ref_wgt = {
      0.00034176349965823650034, 0.0021059725650115914817,
      0.0037891270779513308351,  0.0054650073377738334922,
      0.0071315509718276468842,  0.0087860390239895923762,
      0.010425701574545074530,   0.012047779796153127893,
      0.013649540730543248478,   0.015228284403894977759,
      0.016781349154282032581,   0.018306116400209357579,
      0.019800015170457010094,   0.021260526490503396077,
      0.022685187654797980673,   0.024071596392137405489,
      0.025417414923312803276,   0.026720373907026238500,
      0.027978276268803244526,   0.029189000907150585657,
      0.030350506271086317681,   0.031460833803218303596,
      0.032518111242684992612,   0.033520555782459604823,
      0.034466477075736652682,   0.035354280086357990654,
      0.036182467778488854083,   0.036949643641019453810,
      0.037654514042442653919,   0.038295890412241734324,
      0.038872691245113234827,   0.039383943924647593623,
      0.039828786363394040408,   0.040206468456545352778,
      0.040516353346792038768,   0.040757918498213690869,
      0.040930756577397099784,   0.041034576140295655865,
      0.041069202123672040427,   0.041034576140295655865,
      0.040930756577397099784,   0.040757918498213690869,
      0.040516353346792038768,   0.040206468456545352778,
      0.039828786363394040408,   0.039383943924647593623,
      0.038872691245113234827,   0.038295890412241734324,
      0.037654514042442653919,   0.036949643641019453810,
      0.036182467778488854083,   0.035354280086357990654,
      0.034466477075736652682,   0.033520555782459604823,
      0.032518111242684992612,   0.031460833803218303596,
      0.030350506271086317681,   0.029189000907150585657,
      0.027978276268803244526,   0.026720373907026238500,
      0.025417414923312803276,   0.024071596392137405489,
      0.022685187654797980673,   0.021260526490503396077,
      0.019800015170457010094,   0.018306116400209357579,
      0.016781349154282032581,   0.015228284403894977759,
      0.013649540730543248478,   0.012047779796153127893,
      0.010425701574545074530,   0.0087860390239895923762,
      0.0071315509718276468842,  0.0054650073377738334922,
      0.0037891270779513308351,  0.0021059725650115914817,
      0.00034176349965823650034};
  IntegratorXX::GaussLobatto<double, double> quad(77);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 77; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("78 point GaussLobatto", "[1d-quad]") {
  std::array<double, 78> ref_pts = {-1,
                                    -0.99877797368599941051,
                                    -0.99590535672630874611,
                                    -0.99139602787712237699,
                                    -0.98525774559086753140,
                                    -0.97750065682468243131,
                                    -0.96813752408488897920,
                                    -0.95718373751968203777,
                                    -0.94465729705067718866,
                                    -0.93057878501317739564,
                                    -0.91497133313780399642,
                                    -0.89786058487486568979,
                                    -0.87927465341318999903,
                                    -0.85924407556515844833,
                                    -0.83780176163451461517,
                                    -0.81498294136703701262,
                                    -0.79082510608116638176,
                                    -0.76536794707778539556,
                                    -0.73865329043249955599,
                                    -0.71072502827873565415,
                                    -0.68162904669523105025,
                                    -0.65141315031678977994,
                                    -0.62012698379240965903,
                                    -0.58782195021997394245,
                                    -0.55455112669161454022,
                                    -0.52036917708856778979,
                                    -0.48533226226884203554,
                                    -0.44949794779528651435,
                                    -0.41292510935568343026,
                                    -0.37567383603027129300,
                                    -0.33780533156564033392,
                                    -0.29938181381721364560,
                                    -0.26046641252553482883,
                                    -0.22112306559431916599,
                                    -0.18141641404068600431,
                                    -0.14141169579017096617,
                                    -0.10117463849101414663,
                                    -0.060771351523831439816,
                                    -0.020268217384097873262,
                                    0.020268217384097873262,
                                    0.060771351523831439816,
                                    0.10117463849101414663,
                                    0.14141169579017096617,
                                    0.18141641404068600431,
                                    0.22112306559431916599,
                                    0.26046641252553482883,
                                    0.29938181381721364560,
                                    0.33780533156564033392,
                                    0.37567383603027129300,
                                    0.41292510935568343026,
                                    0.44949794779528651435,
                                    0.48533226226884203554,
                                    0.52036917708856778979,
                                    0.55455112669161454022,
                                    0.58782195021997394245,
                                    0.62012698379240965903,
                                    0.65141315031678977994,
                                    0.68162904669523105025,
                                    0.71072502827873565415,
                                    0.73865329043249955599,
                                    0.76536794707778539556,
                                    0.79082510608116638176,
                                    0.81498294136703701262,
                                    0.83780176163451461517,
                                    0.85924407556515844833,
                                    0.87927465341318999903,
                                    0.89786058487486568979,
                                    0.91497133313780399642,
                                    0.93057878501317739564,
                                    0.94465729705067718866,
                                    0.95718373751968203777,
                                    0.96813752408488897920,
                                    0.97750065682468243131,
                                    0.98525774559086753140,
                                    0.99139602787712237699,
                                    0.99590535672630874611,
                                    0.99877797368599941051,
                                    1};
  std::array<double, 78> ref_wgt = {
      0.00033300033300033300033, 0.0020519952714079720947,
      0.0036921027388122008122,  0.0053252818663182715560,
      0.0069495932991541063579,  0.0085624571703020241507,
      0.010161242958430579439,   0.011743329722728395695,
      0.013306120273912448114,   0.014847047884016059864,
      0.016363581258288347390,   0.017853228967268965295,
      0.019313543651581745953,   0.020742126092805867833,
      0.022136629179460350384,   0.023494761775671939463,
      0.024814292492202426071,   0.026093053356406534900,
      0.027328943376435762405,   0.028519931994519540050,
      0.029664062424016772461,   0.030759454864958277833,
      0.031804309592913529683,   0.032796909916175521056,
      0.033735624996446855428,   0.034618912528418633871,
      0.035445321273856083202,   0.036213493446038113793,
      0.036922166940640231251,   0.037570177409400200013,
      0.038156460173162656451,   0.038680051971161772174,
      0.039140092543669459107,   0.039535826045409931416,
      0.039866602287419173980,   0.040131877805309509826,
      0.040331216752184516633,   0.040464291614737526293,
      0.040530883751357364697,   0.040530883751357364697,
      0.040464291614737526293,   0.040331216752184516633,
      0.040131877805309509826,   0.039866602287419173980,
      0.039535826045409931416,   0.039140092543669459107,
      0.038680051971161772174,   0.038156460173162656451,
      0.037570177409400200013,   0.036922166940640231251,
      0.036213493446038113793,   0.035445321273856083202,
      0.034618912528418633871,   0.033735624996446855428,
      0.032796909916175521056,   0.031804309592913529683,
      0.030759454864958277833,   0.029664062424016772461,
      0.028519931994519540050,   0.027328943376435762405,
      0.026093053356406534900,   0.024814292492202426071,
      0.023494761775671939463,   0.022136629179460350384,
      0.020742126092805867833,   0.019313543651581745953,
      0.017853228967268965295,   0.016363581258288347390,
      0.014847047884016059864,   0.013306120273912448114,
      0.011743329722728395695,   0.010161242958430579439,
      0.0085624571703020241507,  0.0069495932991541063579,
      0.0053252818663182715560,  0.0036921027388122008122,
      0.0020519952714079720947,  0.00033300033300033300033};
  IntegratorXX::GaussLobatto<double, double> quad(78);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 78; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("79 point GaussLobatto", "[1d-quad]") {
  std::array<double, 79> ref_pts = {-1,
                                    -0.99880890491839960060,
                                    -0.99600894957677814756,
                                    -0.99161354499852393998,
                                    -0.98563007080599330521,
                                    -0.97806816920202765043,
                                    -0.96893996707182030109,
                                    -0.95826008878648481341,
                                    -0.94604564001290102708,
                                    -0.93231618247845053312,
                                    -0.91709370342275914044,
                                    -0.90040258070847917198,
                                    -0.88226954392945582073,
                                    -0.86272363167871762854,
                                    -0.84179614508448886224,
                                    -0.81952059770590619522,
                                    -0.79593266187675315922,
                                    -0.77107011158715200208,
                                    -0.74497276199678406823,
                                    -0.71768240567765299580,
                                    -0.68924274568914662569,
                                    -0.65969932559295711494,
                                    -0.62909945652016775398,
                                    -0.59749214140744760401,
                                    -0.56492799652377582048,
                                    -0.53145917041342418510,
                                    -0.49713926038504370533,
                                    -0.46202322668061782034,
                                    -0.42616730446175172863,
                                    -0.38962891375425703299,
                                    -0.35246656749525667767,
                                    -0.31473977783007117102,
                                    -0.27650896080894807904,
                                    -0.23783533963625799891,
                                    -0.19878084662709740279,
                                    -0.15940802402830805980,
                                    -0.11977992386274080656,
                                    -0.079960006957155282253,
                                    -0.040012041315454332399,
                                    0,
                                    0.040012041315454332399,
                                    0.079960006957155282253,
                                    0.11977992386274080656,
                                    0.15940802402830805980,
                                    0.19878084662709740279,
                                    0.23783533963625799891,
                                    0.27650896080894807904,
                                    0.31473977783007117102,
                                    0.35246656749525667767,
                                    0.38962891375425703299,
                                    0.42616730446175172863,
                                    0.46202322668061782034,
                                    0.49713926038504370533,
                                    0.53145917041342418510,
                                    0.56492799652377582048,
                                    0.59749214140744760401,
                                    0.62909945652016775398,
                                    0.65969932559295711494,
                                    0.68924274568914662569,
                                    0.71768240567765299580,
                                    0.74497276199678406823,
                                    0.77107011158715200208,
                                    0.79593266187675315922,
                                    0.81952059770590619522,
                                    0.84179614508448886224,
                                    0.86272363167871762854,
                                    0.88226954392945582073,
                                    0.90040258070847917198,
                                    0.91709370342275914044,
                                    0.93231618247845053312,
                                    0.94604564001290102708,
                                    0.95826008878648481341,
                                    0.96893996707182030109,
                                    0.97806816920202765043,
                                    0.98563007080599330521,
                                    0.99161354499852393998,
                                    0.99600894957677814756,
                                    0.99880890491839960060,
                                    1};
  std::array<double, 79> ref_wgt = {
      0.00032456994482310938007, 0.0020000666556938119509,
      0.0035987562764348132021,  0.0051908424291469955809,
      0.0067745006436565190023,  0.0083472814546284609645,
      0.0099066851131419571907,  0.011450220086306295908,
      0.012975416662037399774,   0.014479833284760545885,
      0.015961061200966027767,   0.017416728582840545158,
      0.018844504435087638466,   0.020242102376404730640,
      0.021607284324378811583,   0.022937864091628290521,
      0.024231710893311147029,   0.025486752763079023255,
      0.026700979873317817368,   0.027872447755027573470,
      0.028999280412542761836,   0.030079673328303119314,
      0.031111896352976735452,   0.032094296476374177529,
      0.033025300474756970343,   0.033903417430326291280,
      0.034727241118873211148,   0.035495452261777285813,
      0.036206820638753998050,   0.036860207057972287288,
      0.037454565180390344713,   0.037988943195390336400,
      0.038462485345030196382,   0.038874433294472613283,
      0.039224127346397360234,   0.039511007497452748895,
      0.039734614335054795018,   0.039894589773098240581,
      0.039990677625401463465,   0.040022724015967097757,
      0.039990677625401463465,   0.039894589773098240581,
      0.039734614335054795018,   0.039511007497452748895,
      0.039224127346397360234,   0.038874433294472613283,
      0.038462485345030196382,   0.037988943195390336400,
      0.037454565180390344713,   0.036860207057972287288,
      0.036206820638753998050,   0.035495452261777285813,
      0.034727241118873211148,   0.033903417430326291280,
      0.033025300474756970343,   0.032094296476374177529,
      0.031111896352976735452,   0.030079673328303119314,
      0.028999280412542761836,   0.027872447755027573470,
      0.026700979873317817368,   0.025486752763079023255,
      0.024231710893311147029,   0.022937864091628290521,
      0.021607284324378811583,   0.020242102376404730640,
      0.018844504435087638466,   0.017416728582840545158,
      0.015961061200966027767,   0.014479833284760545885,
      0.012975416662037399774,   0.011450220086306295908,
      0.0099066851131419571907,  0.0083472814546284609645,
      0.0067745006436565190023,  0.0051908424291469955809,
      0.0035987562764348132021,  0.0020000666556938119509,
      0.00032456994482310938007};
  IntegratorXX::GaussLobatto<double, double> quad(79);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 79; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("80 point GaussLobatto", "[1d-quad]") {
  std::array<double, 80> ref_pts = {-1,
                                    -0.99883867653092507835,
                                    -0.99610866107990519938,
                                    -0.99182292018121586819,
                                    -0.98598847776335317952,
                                    -0.97861450231691623735,
                                    -0.96971252418079561736,
                                    -0.95929644895627958346,
                                    -0.94738254284356652296,
                                    -0.93398940934788020310,
                                    -0.91913796099088049972,
                                    -0.90285138697154153396,
                                    -0.88515511710238834635,
                                    -0.86607678217504981912,
                                    -0.84564617085578157538,
                                    -0.82389518319510250605,
                                    -0.80085778083200733070,
                                    -0.77656993397441852493,
                                    -0.75106956524070981102,
                                    -0.72439649045110723775,
                                    -0.69659235646205299908,
                                    -0.66770057614097178467,
                                    -0.63776626058319665727,
                                    -0.60683614867703163943,
                                    -0.57495853412701742034,
                                    -0.54218319004940380757,
                                    -0.50856129125760347898,
                                    -0.47414533435899572548,
                                    -0.43898905578785790006,
                                    -0.40314734790241926342,
                                    -0.36667617327705082998,
                                    -0.32963247732342034030,
                                    -0.29207409937704882920,
                                    -0.25405968238810009988,
                                    -0.21564858135741284831,
                                    -0.17690077066074369751,
                                    -0.13787675040592486577,
                                    -0.098637451969149846919,
                                    -0.059244142857881932493,
                                    -0.019758331048931629780,
                                    0.019758331048931629780,
                                    0.059244142857881932493,
                                    0.098637451969149846919,
                                    0.13787675040592486577,
                                    0.17690077066074369751,
                                    0.21564858135741284831,
                                    0.25405968238810009988,
                                    0.29207409937704882920,
                                    0.32963247732342034030,
                                    0.36667617327705082998,
                                    0.40314734790241926342,
                                    0.43898905578785790006,
                                    0.47414533435899572548,
                                    0.50856129125760347898,
                                    0.54218319004940380757,
                                    0.57495853412701742034,
                                    0.60683614867703163943,
                                    0.63776626058319665727,
                                    0.66770057614097178467,
                                    0.69659235646205299908,
                                    0.72439649045110723775,
                                    0.75106956524070981102,
                                    0.77656993397441852493,
                                    0.80085778083200733070,
                                    0.82389518319510250605,
                                    0.84564617085578157538,
                                    0.86607678217504981912,
                                    0.88515511710238834635,
                                    0.90285138697154153396,
                                    0.91913796099088049972,
                                    0.93398940934788020310,
                                    0.94738254284356652296,
                                    0.95929644895627958346,
                                    0.96971252418079561736,
                                    0.97861450231691623735,
                                    0.98598847776335317952,
                                    0.99182292018121586819,
                                    0.99610866107990519938,
                                    0.99883867653092507835,
                                    1};
  std::array<double, 80> ref_wgt = {
      0.00031645569620253164557, 0.0019500843509775593405,
      0.0035089042010290183998,  0.0050614259495890576830,
      0.0066059324951682337931,  0.0081400967270119716600,
      0.0096615416736972775997,  0.011167897347743279416,
      0.012656813820266284299,   0.014125967211192374291,
      0.015573064034917646948,   0.016995845040870654249,
      0.018392088846893499824,   0.019759615455044966283,
      0.021096289678281489680,   0.022400024486050025555,
      0.023668784269300632189,   0.024900588022449768234,
      0.026093512438604030629,   0.027245694913864537361,
      0.028355336456369543554,   0.029420704495726294270,
      0.030440135588556215115,   0.031412038015994427315,
      0.032334894269127558833,   0.033207263418513783367,
      0.034027783364101021579,   0.034795172962040472782,
      0.035508234025081408613,   0.036165853193428345383,
      0.036767003673142537573,   0.037310746839375602431,
      0.037796233701933498811,   0.038222706230883605435,
      0.038589498540135870664,   0.038896037927150553000,
      0.039141845767149563761,   0.039326538260435491200,
      0.039449827031651661131,   0.039511519580047706101,
      0.039511519580047706101,   0.039449827031651661131,
      0.039326538260435491200,   0.039141845767149563761,
      0.038896037927150553000,   0.038589498540135870664,
      0.038222706230883605435,   0.037796233701933498811,
      0.037310746839375602431,   0.036767003673142537573,
      0.036165853193428345383,   0.035508234025081408613,
      0.034795172962040472782,   0.034027783364101021579,
      0.033207263418513783367,   0.032334894269127558833,
      0.031412038015994427315,   0.030440135588556215115,
      0.029420704495726294270,   0.028355336456369543554,
      0.027245694913864537361,   0.026093512438604030629,
      0.024900588022449768234,   0.023668784269300632189,
      0.022400024486050025555,   0.021096289678281489680,
      0.019759615455044966283,   0.018392088846893499824,
      0.016995845040870654249,   0.015573064034917646948,
      0.014125967211192374291,   0.012656813820266284299,
      0.011167897347743279416,   0.0096615416736972775997,
      0.0081400967270119716600,  0.0066059324951682337931,
      0.0050614259495890576830,  0.0035089042010290183998,
      0.0019500843509775593405,  0.00031645569620253164557};
  IntegratorXX::GaussLobatto<double, double> quad(80);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 80; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("81 point GaussLobatto", "[1d-quad]") {
  std::array<double, 81> ref_pts = {-1,
                                    -0.99886734577050084110,
                                    -0.99620468270218496047,
                                    -0.99202455459093139926,
                                    -0.98633365112543551038,
                                    -0.97914069586264169827,
                                    -0.97045665882379613419,
                                    -0.96029477042985570481,
                                    -0.94867050822791546856,
                                    -0.93560157537326005642,
                                    -0.92110787441017176835,
                                    -0.90521147726917311659,
                                    -0.88793659179497829310,
                                    -0.86930952495135776440,
                                    -0.84935864279675815639,
                                    -0.82811432730805181176,
                                    -0.80560893012584434623,
                                    -0.78187672329559450310,
                                    -0.75695384708155705824,
                                    -0.73087825493411289998,
                                    -0.70368965569491404622,
                                    -0.67542945312822181175,
                                    -0.64614068287074405739,
                                    -0.61586794689612493542,
                                    -0.58465734559397525647,
                                    -0.55255640756693354888,
                                    -0.51961401725270365708,
                                    -0.48588034048131455911,
                                    -0.45140674808098431394,
                                    -0.41624573764893632413,
                                    -0.38045085360630693750,
                                    -0.34407660565889396213,
                                    -0.30717838578792157495,
                                    -0.26981238389723442505,
                                    -0.23203550224537889986,
                                    -0.19390526879287931417,
                                    -0.15547974959666830862,
                                    -0.11681746038508144242,
                                    -0.077977277448073591044,
                                    -0.039018347978357390263,
                                    0,
                                    0.039018347978357390263,
                                    0.077977277448073591044,
                                    0.11681746038508144242,
                                    0.15547974959666830862,
                                    0.19390526879287931417,
                                    0.23203550224537889986,
                                    0.26981238389723442505,
                                    0.30717838578792157495,
                                    0.34407660565889396213,
                                    0.38045085360630693750,
                                    0.41624573764893632413,
                                    0.45140674808098431394,
                                    0.48588034048131455911,
                                    0.51961401725270365708,
                                    0.55255640756693354888,
                                    0.58465734559397525647,
                                    0.61586794689612493542,
                                    0.64614068287074405739,
                                    0.67542945312822181175,
                                    0.70368965569491404622,
                                    0.73087825493411289998,
                                    0.75695384708155705824,
                                    0.78187672329559450310,
                                    0.80560893012584434623,
                                    0.82811432730805181176,
                                    0.84935864279675815639,
                                    0.86930952495135776440,
                                    0.88793659179497829310,
                                    0.90521147726917311659,
                                    0.92110787441017176835,
                                    0.93560157537326005642,
                                    0.94867050822791546856,
                                    0.96029477042985570481,
                                    0.97045665882379613419,
                                    0.97914069586264169827,
                                    0.98633365112543551038,
                                    0.99202455459093139926,
                                    0.99620468270218496047,
                                    0.99886734577050084110,
                                    1};
  std::array<double, 81> ref_wgt = {
      0.00030864197530864197531, 0.0019019523044415483332,
      0.0034223743199782313117,  0.0049367855013198915246,
      0.0064435691638203288530,  0.0079405130902660671151,
      0.0094253556697841035643,  0.010895841162442700806,
      0.012349732276884802987,   0.013784815841038976894,
      0.015198906871869646908,   0.016589852155877629562,
      0.017955533631297165600,   0.019293871659758731349,
      0.020602828215540756039,   0.021880410000606579501,
      0.023124671486272563521,   0.024333717879439170183,
      0.025505708010114218420,   0.026638857136467921747,
      0.027731439663487871838,   0.028781791771282234063,
      0.029788313949136625549,   0.030749473431529472622,
      0.031663806532434869135,   0.032529920874382211162,
      0.033346497508893386071,   0.034112292925078335171,
      0.034826140943336761528,   0.035486954491286571266,
      0.036093727259217589987,   0.036645535232551636465,
      0.037141538098976715543,   0.037580980528113521005,
      0.037963193321766260115,   0.038287594433006686307,
      0.038553689852539827074,   0.038761074361001897928,
      0.038909432146044980072,   0.038998537283268889811,
      0.039028254080267962182,   0.038998537283268889811,
      0.038909432146044980072,   0.038761074361001897928,
      0.038553689852539827074,   0.038287594433006686307,
      0.037963193321766260115,   0.037580980528113521005,
      0.037141538098976715543,   0.036645535232551636465,
      0.036093727259217589987,   0.035486954491286571266,
      0.034826140943336761528,   0.034112292925078335171,
      0.033346497508893386071,   0.032529920874382211162,
      0.031663806532434869135,   0.030749473431529472622,
      0.029788313949136625549,   0.028781791771282234063,
      0.027731439663487871838,   0.026638857136467921747,
      0.025505708010114218420,   0.024333717879439170183,
      0.023124671486272563521,   0.021880410000606579501,
      0.020602828215540756039,   0.019293871659758731349,
      0.017955533631297165600,   0.016589852155877629562,
      0.015198906871869646908,   0.013784815841038976894,
      0.012349732276884802987,   0.010895841162442700806,
      0.0094253556697841035643,  0.0079405130902660671151,
      0.0064435691638203288530,  0.0049367855013198915246,
      0.0034223743199782313117,  0.0019019523044415483332,
      0.00030864197530864197531};
  IntegratorXX::GaussLobatto<double, double> quad(81);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 81; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("82 point GaussLobatto", "[1d-quad]") {
  std::array<double, 82> ref_pts = {-1,
                                    -0.99889496639469669882,
                                    -0.99629719425004379987,
                                    -0.99221882499705555093,
                                    -0.98666623399775074107,
                                    -0.97964772658075182419,
                                    -0.97117374607098329380,
                                    -0.96125688816699733493,
                                    -0.94991188893384270462,
                                    -0.93715560491137034139,
                                    -0.92300698879219431733,
                                    -0.90748706156175674282,
                                    -0.89061888140391093194,
                                    -0.87242750951112360757,
                                    -0.85293997288697637539,
                                    -0.83218522421225265926,
                                    -0.81019409884172699654,
                                    -0.78699926899926902748,
                                    -0.76263519524126306801,
                                    -0.73713807526152053430,
                                    -0.71054579011435249792,
                                    -0.68289784793605586284,
                                    -0.65423532524864274764,
                                    -0.62460080593315305370,
                                    -0.59403831796330366481,
                                    -0.56259326799352522921,
                                    -0.53031237389860639587,
                                    -0.49724359536519660789,
                                    -0.46343606263830502034,
                                    -0.42894000352866898359,
                                    -0.39380666878944580961,
                                    -0.35808825597310179900,
                                    -0.32183783188162878275,
                                    -0.28510925372530713164,
                                    -0.24795708910715204864,
                                    -0.21043653495192402958,
                                    -0.17260333550015199480,
                                    -0.13451369948900638124,
                                    -0.096224216643067344383,
                                    -0.057791773599058335377,
                                    -0.019273469389456151617,
                                    0.019273469389456151617,
                                    0.057791773599058335377,
                                    0.096224216643067344383,
                                    0.13451369948900638124,
                                    0.17260333550015199480,
                                    0.21043653495192402958,
                                    0.24795708910715204864,
                                    0.28510925372530713164,
                                    0.32183783188162878275,
                                    0.35808825597310179900,
                                    0.39380666878944580961,
                                    0.42894000352866898359,
                                    0.46343606263830502034,
                                    0.49724359536519660789,
                                    0.53031237389860639587,
                                    0.56259326799352522921,
                                    0.59403831796330366481,
                                    0.62460080593315305370,
                                    0.65423532524864274764,
                                    0.68289784793605586284,
                                    0.71054579011435249792,
                                    0.73713807526152053430,
                                    0.76263519524126306801,
                                    0.78699926899926902748,
                                    0.81019409884172699654,
                                    0.83218522421225265926,
                                    0.85293997288697637539,
                                    0.87242750951112360757,
                                    0.89061888140391093194,
                                    0.90748706156175674282,
                                    0.92300698879219431733,
                                    0.93715560491137034139,
                                    0.94991188893384270462,
                                    0.96125688816699733493,
                                    0.97117374607098329380,
                                    0.97964772658075182419,
                                    0.98666623399775074107,
                                    0.99221882499705555093,
                                    0.99629719425004379987,
                                    0.99889496639469669882,
                                    1};
  std::array<double, 82> ref_wgt = {
      0.00030111412225233363445, 0.0018555803157445997970,
      0.0033390049136754080610,  0.0048166891340730129189,
      0.0062871102732310841534,  0.0077481640834258757996,
      0.0091976974272905249466,  0.010633562032620982962,
      0.012053626603374698460,   0.013455782194530971975,
      0.014837946027709788073,   0.016198064832495504267,
      0.017534117997660981333,   0.018844120618259958078,
      0.020126126466356761612,   0.021378230893713586413,
      0.022598573667575668778,   0.023785341737842247091,
      0.024936771932727891385,   0.026051153579530478486,
      0.027126831046943608378,   0.028162206205320058757,
      0.029155740801336359310,   0.030105958743592630314,
      0.031011448295789692719,   0.031870864174248491430,
      0.032682929546670441959,   0.033446437929178796211,
      0.034160254978828965834,   0.034823320178928948513,
      0.035434648414668893061,   0.035993331436720906984,
      0.036498539210636048832,   0.036949521150034707432,
      0.037345607231758934180,   0.037686208991330464908,
      0.037970820397235856656,   0.038199018602740089809,
      0.038370464574111867934,   0.038484903594327407693,
      0.038542165641504470864,   0.038542165641504470864,
      0.038484903594327407693,   0.038370464574111867934,
      0.038199018602740089809,   0.037970820397235856656,
      0.037686208991330464908,   0.037345607231758934180,
      0.036949521150034707432,   0.036498539210636048832,
      0.035993331436720906984,   0.035434648414668893061,
      0.034823320178928948513,   0.034160254978828965834,
      0.033446437929178796211,   0.032682929546670441959,
      0.031870864174248491430,   0.031011448295789692719,
      0.030105958743592630314,   0.029155740801336359310,
      0.028162206205320058757,   0.027126831046943608378,
      0.026051153579530478486,   0.024936771932727891385,
      0.023785341737842247091,   0.022598573667575668778,
      0.021378230893713586413,   0.020126126466356761612,
      0.018844120618259958078,   0.017534117997660981333,
      0.016198064832495504267,   0.014837946027709788073,
      0.013455782194530971975,   0.012053626603374698460,
      0.010633562032620982962,   0.0091976974272905249466,
      0.0077481640834258757996,  0.0062871102732310841534,
      0.0048166891340730129189,  0.0033390049136754080610,
      0.0018555803157445997970,  0.00030111412225233363445};
  IntegratorXX::GaussLobatto<double, double> quad(82);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 82; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("83 point GaussLobatto", "[1d-quad]") {
  std::array<double, 83> ref_pts = {-1,
                                    -0.99892158892386127757,
                                    -0.99638636471151774004,
                                    -0.99240608553084069183,
                                    -0.98698683091717922004,
                                    -0.98013651277507701573,
                                    -0.97186507896333575974,
                                    -0.96218452804361533801,
                                    -0.95110889842813408838,
                                    -0.93865424997864514158,
                                    -0.92483864142543656399,
                                    -0.90968210447474828708,
                                    -0.89320661489784578353,
                                    -0.87543606073432885143,
                                    -0.85639620769177095531,
                                    -0.83611466180749090972,
                                    -0.81462082943390256991,
                                    -0.79194587460909235281,
                                    -0.76812267387633458293,
                                    -0.74318576861909272241,
                                    -0.71717131498120825470,
                                    -0.69011703144523666467,
                                    -0.66206214414514831596,
                                    -0.63304732999281730195,
                                    -0.60311465770084349847,
                                    -0.57230752678727393044,
                                    -0.54067060465069726291,
                                    -0.50824976180697123114,
                                    -0.47509200538150058692,
                                    -0.44124541095350730395,
                                    -0.40675905285112077828,
                                    -0.37168293299835954746,
                                    -0.33606790841717401901,
                                    -0.29996561748966856810,
                                    -0.26342840508741815691,
                                    -0.22650924667643663632,
                                    -0.18926167150783866489,
                                    -0.15173968500556252081,
                                    -0.11399769046368503539,
                                    -0.076090410166860732126,
                                    -0.038072806048253545878,
                                    0,
                                    0.038072806048253545878,
                                    0.076090410166860732126,
                                    0.11399769046368503539,
                                    0.15173968500556252081,
                                    0.18926167150783866489,
                                    0.22650924667643663632,
                                    0.26342840508741815691,
                                    0.29996561748966856810,
                                    0.33606790841717401901,
                                    0.37168293299835954746,
                                    0.40675905285112077828,
                                    0.44124541095350730395,
                                    0.47509200538150058692,
                                    0.50824976180697123114,
                                    0.54067060465069726291,
                                    0.57230752678727393044,
                                    0.60311465770084349847,
                                    0.63304732999281730195,
                                    0.66206214414514831596,
                                    0.69011703144523666467,
                                    0.71717131498120825470,
                                    0.74318576861909272241,
                                    0.76812267387633458293,
                                    0.79194587460909235281,
                                    0.81462082943390256991,
                                    0.83611466180749090972,
                                    0.85639620769177095531,
                                    0.87543606073432885143,
                                    0.89320661489784578353,
                                    0.90968210447474828708,
                                    0.92483864142543656399,
                                    0.93865424997864514158,
                                    0.95110889842813408838,
                                    0.96218452804361533801,
                                    0.97186507896333575974,
                                    0.98013651277507701573,
                                    0.98698683091717922004,
                                    0.99240608553084069183,
                                    0.99638636471151774004,
                                    0.99892158892386127757,
                                    1};
  std::array<double, 83> ref_wgt = {
      0.00029385836027034969145, 0.0018108836143159216264,
      0.0032586439806343466887,  0.0047009187976846170463,
      0.0061362733792063639717,  0.0075627050154593303080,
      0.0089781626418867838675,  0.010380599149952347286,
      0.011767983059442399569,   0.013138303619028023729,
      0.014489574387551097542,   0.015819836355151715413,
      0.017127160881894571564,   0.018409652538095154033,
      0.019665451873743852442,   0.020892738125438802360,
      0.022089731862223725455,   0.023254697568935086292,
      0.024385946164499308635,   0.025481837452134937943,
      0.026540782498230628287,   0.027561245936629061823,
      0.028541748195078546931,   0.029480867640684824212,
      0.030377242641289183867,   0.031229573539806965500,
      0.032036624538678368064,   0.032797225491708713005,
      0.033510273600706378786,   0.034174735014462615637,
      0.034789646327757716078,   0.035354115978222091274,
      0.035867325539028314910,   0.036328530905540830346,
      0.036737063374203491290,   0.037092330612101157427,
      0.037393817515789941491,   0.037641086958151155648,
      0.037833780422186288302,   0.037971618520834214091,
      0.038054401402057056616,   0.038082009038607441903,
      0.038054401402057056616,   0.037971618520834214091,
      0.037833780422186288302,   0.037641086958151155648,
      0.037393817515789941491,   0.037092330612101157427,
      0.036737063374203491290,   0.036328530905540830346,
      0.035867325539028314910,   0.035354115978222091274,
      0.034789646327757716078,   0.034174735014462615637,
      0.033510273600706378786,   0.032797225491708713005,
      0.032036624538678368064,   0.031229573539806965500,
      0.030377242641289183867,   0.029480867640684824212,
      0.028541748195078546931,   0.027561245936629061823,
      0.026540782498230628287,   0.025481837452134937943,
      0.024385946164499308635,   0.023254697568935086292,
      0.022089731862223725455,   0.020892738125438802360,
      0.019665451873743852442,   0.018409652538095154033,
      0.017127160881894571564,   0.015819836355151715413,
      0.014489574387551097542,   0.013138303619028023729,
      0.011767983059442399569,   0.010380599149952347286,
      0.0089781626418867838675,  0.0075627050154593303080,
      0.0061362733792063639717,  0.0047009187976846170463,
      0.0032586439806343466887,  0.0018108836143159216264,
      0.00029385836027034969145};
  IntegratorXX::GaussLobatto<double, double> quad(83);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 83; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("84 point GaussLobatto", "[1d-quad]") {
  std::array<double, 84> ref_pts = {-1,
                                    -0.99894726087225500581,
                                    -0.99647235302790481855,
                                    -0.99258666929760646056,
                                    -0.98729601059276268987,
                                    -0.98060791845301368549,
                                    -0.97253187430608559003,
                                    -0.96307931452479373275,
                                    -0.95226362062857800484,
                                    -0.94010010225019406546,
                                    -0.92660597615409298249,
                                    -0.91180034215191757326,
                                    -0.89570415619880429627,
                                    -0.87834020079706694790,
                                    -0.85973305278428646465,
                                    -0.83990904856666030591,
                                    -0.81889624685395383943,
                                    -0.79672438895234376828,
                                    -0.77342485667321053901,
                                    -0.74903062791847087766,
                                    -0.72357623000589233387,
                                    -0.69709769080079277354,
                                    -0.66963248772349875768,
                                    -0.64121949470486560209,
                                    -0.61189892716501969814,
                                    -0.58171228509325305317,
                                    -0.55070229430966970168,
                                    -0.51891284599174567835,
                                    -0.48638893455141255523,
                                    -0.45317659395060419966,
                                    -0.41932283254541321188,
                                    -0.38487556655108377221,
                                    -0.34988355222201806679,
                                    -0.31439631684279107971,
                                    -0.27846408862785061441,
                                    -0.24213772562912345881,
                                    -0.20546864375215238326,
                                    -0.16850874398265012554,
                                    -0.13131033892647385614,
                                    -0.093926078766995225442,
                                    -0.056408876744665583253,
                                    -0.018811834264252150374,
                                    0.018811834264252150374,
                                    0.056408876744665583253,
                                    0.093926078766995225442,
                                    0.13131033892647385614,
                                    0.16850874398265012554,
                                    0.20546864375215238326,
                                    0.24213772562912345881,
                                    0.27846408862785061441,
                                    0.31439631684279107971,
                                    0.34988355222201806679,
                                    0.38487556655108377221,
                                    0.41932283254541321188,
                                    0.45317659395060419966,
                                    0.48638893455141255523,
                                    0.51891284599174567835,
                                    0.55070229430966970168,
                                    0.58171228509325305317,
                                    0.61189892716501969814,
                                    0.64121949470486560209,
                                    0.66963248772349875768,
                                    0.69709769080079277354,
                                    0.72357623000589233387,
                                    0.74903062791847087766,
                                    0.77342485667321053901,
                                    0.79672438895234376828,
                                    0.81889624685395383943,
                                    0.83990904856666030591,
                                    0.85973305278428646465,
                                    0.87834020079706694790,
                                    0.89570415619880429627,
                                    0.91180034215191757326,
                                    0.92660597615409298249,
                                    0.94010010225019406546,
                                    0.95226362062857800484,
                                    0.96307931452479373275,
                                    0.97253187430608559003,
                                    0.98060791845301368549,
                                    0.98729601059276268987,
                                    0.99258666929760646056,
                                    0.99647235302790481855,
                                    0.99894726087225500581,
                                    1};
  std::array<double, 84> ref_wgt = {
      0.00028686173264486517499, 0.0017677824718404353978,
      0.0031811485453031041743,  0.0045892693551799333060,
      0.0059907927021621812635,  0.0073838114352362587961,
      0.0087663706087872830496,  0.010136518411256585432,
      0.011492317424473048764,   0.012831849469581517943,
      0.014153218972016109158,   0.015454555879700538152,
      0.016734018405800827738,   0.017989795678500229984,
      0.019220110324810287313,   0.020423220996890563144,
      0.021597424842495305205,   0.022741059918432623263,
      0.023852507544778188608,   0.024930194597103006417,
      0.025972595733786564677,   0.026978235555437807566,
      0.027945690693467789562,   0.028873591824917085284,
      0.029760625610722112350,   0.030605536554699290920,
      0.031407128780630036300,   0.032164267724940509653,
      0.032875881742586393661,   0.033540963623873814144,
      0.034158572020072292305,   0.034727832775803850477,
      0.035247940166323767415,   0.035718158037942703172,
      0.036137820849976736120,   0.036506334616751042182,
      0.036823177748324275548,   0.037087901788743963890,
      0.037300132050788194794,   0.037459568146295330880,
      0.037565984411331235977,   0.037619230225592310837,
      0.037619230225592310837,   0.037565984411331235977,
      0.037459568146295330880,   0.037300132050788194794,
      0.037087901788743963890,   0.036823177748324275548,
      0.036506334616751042182,   0.036137820849976736120,
      0.035718158037942703172,   0.035247940166323767415,
      0.034727832775803850477,   0.034158572020072292305,
      0.033540963623873814144,   0.032875881742586393661,
      0.032164267724940509653,   0.031407128780630036300,
      0.030605536554699290920,   0.029760625610722112350,
      0.028873591824917085284,   0.027945690693467789562,
      0.026978235555437807566,   0.025972595733786564677,
      0.024930194597103006417,   0.023852507544778188608,
      0.022741059918432623263,   0.021597424842495305205,
      0.020423220996890563144,   0.019220110324810287313,
      0.017989795678500229984,   0.016734018405800827738,
      0.015454555879700538152,   0.014153218972016109158,
      0.012831849469581517943,   0.011492317424473048764,
      0.010136518411256585432,   0.0087663706087872830496,
      0.0073838114352362587961,  0.0059907927021621812635,
      0.0045892693551799333060,  0.0031811485453031041743,
      0.0017677824718404353978,  0.00028686173264486517499};
  IntegratorXX::GaussLobatto<double, double> quad(84);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 84; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("85 point GaussLobatto", "[1d-quad]") {
  std::array<double, 85> ref_pts = {-1,
                                    -0.99897202696015759444,
                                    -0.99655530880197031109,
                                    -0.99276088985661449612,
                                    -0.98759430842208597880,
                                    -0.98106275712878945466,
                                    -0.97317527799110960851,
                                    -0.96394277771685812576,
                                    -0.95337801887115581548,
                                    -0.94149560409920780459,
                                    -0.92831195661537133849,
                                    -0.91384529778199588618,
                                    -0.89811562205274098256,
                                    -0.88114466940141283137,
                                    -0.86295589530873069104,
                                    -0.84357443836340493311,
                                    -0.82302708552927062190,
                                    -0.80134223512994229849,
                                    -0.77854985760396051360,
                                    -0.75468145408566173538,
                                    -0.72977001286958079187,
                                    -0.70384996381888803818,
                                    -0.67695713078107431533,
                                    -0.64912868207677500405,
                                    -0.62040307913024217087,
                                    -0.59082002331251436006,
                                    -0.56042040107078630940,
                                    -0.52924622741983827859,
                                    -0.49734058787364112998,
                                    -0.46474757889740424118,
                                    -0.43151224696237491292,
                                    -0.39768052628762679573,
                                    -0.36329917535488798380,
                                    -0.32841571228415408492,
                                    -0.29307834915940528227,
                                    -0.25733592539519688545,
                                    -0.22123784023621805331,
                                    -0.18483398448311138401,
                                    -0.14817467153891522149,
                                    -0.11131056787142932288,
                                    -0.074292622987611655958,
                                    -0.037171999016788423211,
                                    0,
                                    0.037171999016788423211,
                                    0.074292622987611655958,
                                    0.11131056787142932288,
                                    0.14817467153891522149,
                                    0.18483398448311138401,
                                    0.22123784023621805331,
                                    0.25733592539519688545,
                                    0.29307834915940528227,
                                    0.32841571228415408492,
                                    0.36329917535488798380,
                                    0.39768052628762679573,
                                    0.43151224696237491292,
                                    0.46474757889740424118,
                                    0.49734058787364112998,
                                    0.52924622741983827859,
                                    0.56042040107078630940,
                                    0.59082002331251436006,
                                    0.62040307913024217087,
                                    0.64912868207677500405,
                                    0.67695713078107431533,
                                    0.70384996381888803818,
                                    0.72977001286958079187,
                                    0.75468145408566173538,
                                    0.77854985760396051360,
                                    0.80134223512994229849,
                                    0.82302708552927062190,
                                    0.84357443836340493311,
                                    0.86295589530873069104,
                                    0.88114466940141283137,
                                    0.89811562205274098256,
                                    0.91384529778199588618,
                                    0.92831195661537133849,
                                    0.94149560409920780459,
                                    0.95337801887115581548,
                                    0.96394277771685812576,
                                    0.97317527799110960851,
                                    0.98106275712878945466,
                                    0.98759430842208597880,
                                    0.99276088985661449612,
                                    0.99655530880197031109,
                                    0.99897202696015759444,
                                    1};
  std::array<double, 85> ref_wgt = {
      0.00028011204481792717087, 0.0017262018466269388352,
      0.0031063840226994867711,  0.0044815476765854418255,
      0.0058504179627099589691,  0.0072111777252003760269,
      0.0085619625944439447575,  0.0099009105916387052333,
      0.011226172998875325503,   0.012535918968397497170,
      0.013828338687682475061,   0.015101646110443698163,
      0.016354081518747354759,   0.017583913997018648772,
      0.018789443844557541606,   0.019969004935073187349,
      0.021120967025047393966,   0.022243738010062724635,
      0.023335766127107425710,   0.024395542100391090456,
      0.025421601228013577872,   0.026412525406774042575,
      0.027366945092419508096,   0.028283541192681556531,
      0.029161046890519855941,   0.029998249395074432121,
      0.030793991617920555073,   0.031547173772318476936,
      0.032256754893253635998,   0.032921754276170469067,
      0.033541252832414081845,   0.034114394359508308102,
      0.034640386724515831235,   0.035118502958845788315,
      0.035548082262996400826,   0.035928530919844470033,
      0.036259323115219841100,   0.036540001664630987227,
      0.036770178645137504934,   0.036949535931496357327,
      0.037077825635840967201,   0.037154870450285559732,
      0.037180563891981298345,   0.037154870450285559732,
      0.037077825635840967201,   0.036949535931496357327,
      0.036770178645137504934,   0.036540001664630987227,
      0.036259323115219841100,   0.035928530919844470033,
      0.035548082262996400826,   0.035118502958845788315,
      0.034640386724515831235,   0.034114394359508308102,
      0.033541252832414081845,   0.032921754276170469067,
      0.032256754893253635998,   0.031547173772318476936,
      0.030793991617920555073,   0.029998249395074432121,
      0.029161046890519855941,   0.028283541192681556531,
      0.027366945092419508096,   0.026412525406774042575,
      0.025421601228013577872,   0.024395542100391090456,
      0.023335766127107425710,   0.022243738010062724635,
      0.021120967025047393966,   0.019969004935073187349,
      0.018789443844557541606,   0.017583913997018648772,
      0.016354081518747354759,   0.015101646110443698163,
      0.013828338687682475061,   0.012535918968397497170,
      0.011226172998875325503,   0.0099009105916387052333,
      0.0085619625944439447575,  0.0072111777252003760269,
      0.0058504179627099589691,  0.0044815476765854418255,
      0.0031063840226994867711,  0.0017262018466269388352,
      0.00028011204481792717087};
  IntegratorXX::GaussLobatto<double, double> quad(85);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 85; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("86 point GaussLobatto", "[1d-quad]") {
  std::array<double, 86> ref_pts = {-1,
                                    -0.99899592930871890261,
                                    -0.99663537294859652721,
                                    -0.99292904258088167479,
                                    -0.98788222880399054622,
                                    -0.98150179531984312323,
                                    -0.97379636989147317097,
                                    -0.96477635985511438857,
                                    -0.95445394416346861701,
                                    -0.94284305876310383883,
                                    -0.92995937843716909087,
                                    -0.91582029591590576396,
                                    -0.90044489852119558023,
                                    -0.88385394246107079348,
                                    -0.86606982484239319190,
                                    -0.84711655345403677510,
                                    -0.82701971436816842899,
                                    -0.80580643740674423434,
                                    -0.78350535952160967555,
                                    -0.76014658613860740830,
                                    -0.73576165051842721568,
                                    -0.71038347118938339577,
                                    -0.68404630750978003538,
                                    -0.65678571341997544439,
                                    -0.62863848944665650871,
                                    -0.59964263302416595401,
                                    -0.56983728719998033396,
                                    -0.53926268779360692586,
                                    -0.50796010908024837010,
                                    -0.47597180807257062144,
                                    -0.44334096747579905500,
                                    -0.41011163739315630460,
                                    -0.37632867586034085359,
                                    -0.34203768828932505508,
                                    -0.30728496590322285382,
                                    -0.27211742324533893393,
                                    -0.23658253484676042418,
                                    -0.20072827113798792340,
                                    -0.16460303369112290148,
                                    -0.12825558988003208644,
                                    -0.091735007046695031318,
                                    -0.055090586262607595415,
                                    -0.018371795774660664857,
                                    0.018371795774660664857,
                                    0.055090586262607595415,
                                    0.091735007046695031318,
                                    0.12825558988003208644,
                                    0.16460303369112290148,
                                    0.20072827113798792340,
                                    0.23658253484676042418,
                                    0.27211742324533893393,
                                    0.30728496590322285382,
                                    0.34203768828932505508,
                                    0.37632867586034085359,
                                    0.41011163739315630460,
                                    0.44334096747579905500,
                                    0.47597180807257062144,
                                    0.50796010908024837010,
                                    0.53926268779360692586,
                                    0.56983728719998033396,
                                    0.59964263302416595401,
                                    0.62863848944665650871,
                                    0.65678571341997544439,
                                    0.68404630750978003538,
                                    0.71038347118938339577,
                                    0.73576165051842721568,
                                    0.76014658613860740830,
                                    0.78350535952160967555,
                                    0.80580643740674423434,
                                    0.82701971436816842899,
                                    0.84711655345403677510,
                                    0.86606982484239319190,
                                    0.88385394246107079348,
                                    0.90044489852119558023,
                                    0.91582029591590576396,
                                    0.92995937843716909087,
                                    0.94284305876310383883,
                                    0.95445394416346861701,
                                    0.96477635985511438857,
                                    0.97379636989147317097,
                                    0.98150179531984312323,
                                    0.98788222880399054622,
                                    0.99292904258088167479,
                                    0.99663537294859652721,
                                    0.99899592930871890261,
                                    1};
  std::array<double, 86> ref_wgt = {
      0.00027359781121751025992, 0.0016860710568963566319,
      0.0030342236346014890655,  0.0043775718060139674979,
      0.0057149133109336878144,  0.0070445158074724383256,
      0.0083646003373619430975,  0.0096733896610421586479,
      0.010969118760398567103,   0.012250039227787949297,
      0.013514422246205217048,   0.014760561147430673161,
      0.015986773807408025795,   0.017191404957972418507,
      0.018372828441146881724,   0.019529449414531459917,
      0.020659706509760991010,   0.021762073943389429460,
      0.022835063578455358142,   0.023877226934509871072,
      0.024887157143694409200,   0.025863490850394761180,
      0.026804910052002394837,   0.027710143878354636886,
      0.028577970307485786748,   0.029407217815394263135,
      0.030196766957612194211,   0.030945551880451167756,
      0.031652561759889813069,   0.032316842166164665087,
      0.032937496352224822725,   0.033513686464312877294,
      0.034044634673039165047,   0.034529624223423355305,
      0.034968000402486518784,   0.035359171423087943965,
      0.035702609222813907949,   0.035997850176840193089,
      0.036244495723806206163,   0.036442212903855938702,
      0.036590734808119541670,   0.036689860939028811361,
      0.036739457480980232261,   0.036739457480980232261,
      0.036689860939028811361,   0.036590734808119541670,
      0.036442212903855938702,   0.036244495723806206163,
      0.035997850176840193089,   0.035702609222813907949,
      0.035359171423087943965,   0.034968000402486518784,
      0.034529624223423355305,   0.034044634673039165047,
      0.033513686464312877294,   0.032937496352224822725,
      0.032316842166164665087,   0.031652561759889813069,
      0.030945551880451167756,   0.030196766957612194211,
      0.029407217815394263135,   0.028577970307485786748,
      0.027710143878354636886,   0.026804910052002394837,
      0.025863490850394761180,   0.024887157143694409200,
      0.023877226934509871072,   0.022835063578455358142,
      0.021762073943389429460,   0.020659706509760991010,
      0.019529449414531459917,   0.018372828441146881724,
      0.017191404957972418507,   0.015986773807408025795,
      0.014760561147430673161,   0.013514422246205217048,
      0.012250039227787949297,   0.010969118760398567103,
      0.0096733896610421586479,  0.0083646003373619430975,
      0.0070445158074724383256,  0.0057149133109336878144,
      0.0043775718060139674979,  0.0030342236346014890655,
      0.0016860710568963566319,  0.00027359781121751025992};
  IntegratorXX::GaussLobatto<double, double> quad(86);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 86; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("87 point GaussLobatto", "[1d-quad]") {
  std::array<double, 87> ref_pts = {-1,
                                    -0.99901900761913919653,
                                    -0.99671267829316057024,
                                    -0.99309140590793203775,
                                    -0.98816024726623091624,
                                    -0.98192575576426671887,
                                    -0.97439616836692469666,
                                    -0.96558142127817116696,
                                    -0.95549314278840502093,
                                    -0.94414463971416096971,
                                    -0.93155088048790976418,
                                    -0.91772847568032132478,
                                    -0.90269565621324015366,
                                    -0.88647224937456121158,
                                    -0.86907965269937404498,
                                    -0.85054080576604169018,
                                    -0.83088015995105927302,
                                    -0.81012364618588618769,
                                    -0.78829864076000692391,
                                    -0.76543392921626983388,
                                    -0.74155966838666138985,
                                    -0.71670734661890465431,
                                    -0.69090974224653220507,
                                    -0.66420088035732804803,
                                    -0.63661598791723406155,
                                    -0.60819144730895896384,
                                    -0.57896474834660199946,
                                    -0.54897443882960286485,
                                    -0.51826007370124891827,
                                    -0.48686216287880655046,
                                    -0.45482211782409247437,
                                    -0.42218219692495979755,
                                    -0.38898544975974055226,
                                    -0.35527566031815859578,
                                    -0.32109728925360237513,
                                    -0.28649541524292406963,
                                    -0.25151567553110833408,
                                    -0.21620420573922867034,
                                    -0.18060757901508090807,
                                    -0.14477274460675007538,
                                    -0.10874696594012792831,
                                    -0.072577758282052571425,
                                    -0.036312826071288069870,
                                    0,
                                    0.036312826071288069870,
                                    0.072577758282052571425,
                                    0.10874696594012792831,
                                    0.14477274460675007538,
                                    0.18060757901508090807,
                                    0.21620420573922867034,
                                    0.25151567553110833408,
                                    0.28649541524292406963,
                                    0.32109728925360237513,
                                    0.35527566031815859578,
                                    0.38898544975974055226,
                                    0.42218219692495979755,
                                    0.45482211782409247437,
                                    0.48686216287880655046,
                                    0.51826007370124891827,
                                    0.54897443882960286485,
                                    0.57896474834660199946,
                                    0.60819144730895896384,
                                    0.63661598791723406155,
                                    0.66420088035732804803,
                                    0.69090974224653220507,
                                    0.71670734661890465431,
                                    0.74155966838666138985,
                                    0.76543392921626983388,
                                    0.78829864076000692391,
                                    0.81012364618588618769,
                                    0.83088015995105927302,
                                    0.85054080576604169018,
                                    0.86907965269937404498,
                                    0.88647224937456121158,
                                    0.90269565621324015366,
                                    0.91772847568032132478,
                                    0.93155088048790976418,
                                    0.94414463971416096971,
                                    0.95549314278840502093,
                                    0.96558142127817116696,
                                    0.97439616836692469666,
                                    0.98192575576426671887,
                                    0.98816024726623091624,
                                    0.99309140590793203775,
                                    0.99671267829316057024,
                                    0.99901900761913919653,
                                    1};
  std::array<double, 87> ref_wgt = {
      0.00026730820636193531141, 0.0016473234803334735140,
      0.0029645478725683274277,  0.0042771701953343062803,
      0.0055840563408537570608,  0.0068835539522523812465,
      0.0081739646665096732475,  0.0094535912315614401930,
      0.010720747661948050123,   0.011973763422655820361,
      0.013210986238049869987,   0.014430784490257452921,
      0.015631549460495840048,   0.016811697490845454830,
      0.017969672092280431798,   0.019103946007477180783,
      0.020213023230519237583,   0.021295440983053879280,
      0.022349771645372863213,   0.023374624640421513351,
      0.024368648268545360553,   0.025330531490717414054,
      0.026259005657987520733,   0.027152846184927951831,
      0.028010874164901522751,   0.028831957925042618732,
      0.029615014518913429882,   0.030359011154875253105,
      0.031062966558296595829,   0.031725952265805223500,
      0.032347093849879714759,   0.032925572072167167736,
      0.033460623964007170722,   0.033951543832737795795,
      0.034397684192457010719,   0.034798456618012366563,
      0.035153332521092950525,   0.035461843847400245871,
      0.035723583693978567605,   0.035938206845890998829,
      0.036105430231533094943,   0.036225033295983907064,
      0.036296858291901958261,   0.036320810487582542157,
      0.036296858291901958261,   0.036225033295983907064,
      0.036105430231533094943,   0.035938206845890998829,
      0.035723583693978567605,   0.035461843847400245871,
      0.035153332521092950525,   0.034798456618012366563,
      0.034397684192457010719,   0.033951543832737795795,
      0.033460623964007170722,   0.032925572072167167736,
      0.032347093849879714759,   0.031725952265805223500,
      0.031062966558296595829,   0.030359011154875253105,
      0.029615014518913429882,   0.028831957925042618732,
      0.028010874164901522751,   0.027152846184927951831,
      0.026259005657987520733,   0.025330531490717414054,
      0.024368648268545360553,   0.023374624640421513351,
      0.022349771645372863213,   0.021295440983053879280,
      0.020213023230519237583,   0.019103946007477180783,
      0.017969672092280431798,   0.016811697490845454830,
      0.015631549460495840048,   0.014430784490257452921,
      0.013210986238049869987,   0.011973763422655820361,
      0.010720747661948050123,   0.0094535912315614401930,
      0.0081739646665096732475,  0.0068835539522523812465,
      0.0055840563408537570608,  0.0042771701953343062803,
      0.0029645478725683274277,  0.0016473234803334735140,
      0.00026730820636193531141};
  IntegratorXX::GaussLobatto<double, double> quad(87);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 87; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("88 point GaussLobatto", "[1d-quad]") {
  std::array<double, 88> ref_pts = {-1,
                                    -0.99904129933760269353,
                                    -0.99678735012238411804,
                                    -0.99324824249136703216,
                                    -0.98842881242479468276,
                                    -0.98233532038442897937,
                                    -0.97497563441523183295,
                                    -0.96635924593466148157,
                                    -0.95649726331568939038,
                                    -0.94540239930472225605,
                                    -0.93308895526136311777,
                                    -0.91957280298309446687,
                                    -0.90487136436557667535,
                                    -0.88900358900535382383,
                                    -0.87198992980582347149,
                                    -0.85385231663180677881,
                                    -0.83461412805317150904,
                                    -0.81430016121715650838,
                                    -0.79293659988992011603,
                                    -0.77055098070942994233,
                                    -0.74717215769371838011,
                                    -0.72283026505056057044,
                                    -0.69755667833669913429,
                                    -0.67138397401679656064,
                                    -0.64434588747431649765,
                                    -0.61647726952850462231,
                                    -0.58781404151354903118,
                                    -0.55839314897784292552,
                                    -0.52825251406304415534,
                                    -0.49743098662432332110,
                                    -0.46596829415481160728,
                                    -0.43390499057879874314,
                                    -0.40128240397968814628,
                                    -0.36814258333008831794,
                                    -0.33452824429270502123,
                                    -0.30048271416189593567,
                                    -0.26604987601685674016,
                                    -0.23127411215842346262,
                                    -0.19620024690239910879,
                                    -0.16087348880314183675,
                                    -0.12533937238188619247,
                                    -0.089643699434907210671,
                                    -0.053832479997178682813,
                                    -0.017951873037620898532,
                                    0.017951873037620898532,
                                    0.053832479997178682813,
                                    0.089643699434907210671,
                                    0.12533937238188619247,
                                    0.16087348880314183675,
                                    0.19620024690239910879,
                                    0.23127411215842346262,
                                    0.26604987601685674016,
                                    0.30048271416189593567,
                                    0.33452824429270502123,
                                    0.36814258333008831794,
                                    0.40128240397968814628,
                                    0.43390499057879874314,
                                    0.46596829415481160728,
                                    0.49743098662432332110,
                                    0.52825251406304415534,
                                    0.55839314897784292552,
                                    0.58781404151354903118,
                                    0.61647726952850462231,
                                    0.64434588747431649765,
                                    0.67138397401679656064,
                                    0.69755667833669913429,
                                    0.72283026505056057044,
                                    0.74717215769371838011,
                                    0.77055098070942994233,
                                    0.79293659988992011603,
                                    0.81430016121715650838,
                                    0.83461412805317150904,
                                    0.85385231663180677881,
                                    0.87198992980582347149,
                                    0.88900358900535382383,
                                    0.90487136436557667535,
                                    0.91957280298309446687,
                                    0.93308895526136311777,
                                    0.94540239930472225605,
                                    0.95649726331568939038,
                                    0.96635924593466148157,
                                    0.97497563441523183295,
                                    0.98233532038442897937,
                                    0.98842881242479468276,
                                    0.99324824249136703216,
                                    0.99678735012238411804,
                                    0.99904129933760269353,
                                    1};
  std::array<double, 88> ref_wgt = {
      0.00026123301985370950888, 0.0016098962775169389351,
      0.0028972440035490636824,  0.0041801809984155664554,
      0.0054576371824298214048,  0.0067280356794015575555,
      0.0079897542269355098558,  0.0092411711240949427375,
      0.010480675058716539827,   0.011706669099867393418,
      0.012917573348050568824,   0.014111827185786502188,
      0.015287891376486787985,   0.016444250087540557296,
      0.017579412863016516289,   0.018691916554481420742,
      0.019780327212174948261,   0.020843241936272049922,
      0.021879290686900743878,   0.022887138051120916714,
      0.023865484964873936370,   0.024813070387842810020,
      0.025728672929155333765,   0.026611112421888669853,
      0.027459251444378576850,   0.028271996786392709565,
      0.029048300858291063334,   0.029787163041365582881,
      0.030487630977623930432,   0.031148801797358646719,
      0.031769823282921951061,   0.032349894967207875506,
      0.032888269165427064596,   0.033384251938845199178,
      0.033837203989243453097,   0.034246541482948516257,
      0.034611736803370377955,   0.034932319231078127855,
      0.035207875550537369427,   0.035438050582727324501,
      0.035622547642951211180,   0.035761128923249874139,
      0.035853615798925809629,   0.035899889058782530350,
      0.035899889058782530350,   0.035853615798925809629,
      0.035761128923249874139,   0.035622547642951211180,
      0.035438050582727324501,   0.035207875550537369427,
      0.034932319231078127855,   0.034611736803370377955,
      0.034246541482948516257,   0.033837203989243453097,
      0.033384251938845199178,   0.032888269165427064596,
      0.032349894967207875506,   0.031769823282921951061,
      0.031148801797358646719,   0.030487630977623930432,
      0.029787163041365582881,   0.029048300858291063334,
      0.028271996786392709565,   0.027459251444378576850,
      0.026611112421888669853,   0.025728672929155333765,
      0.024813070387842810020,   0.023865484964873936370,
      0.022887138051120916714,   0.021879290686900743878,
      0.020843241936272049922,   0.019780327212174948261,
      0.018691916554481420742,   0.017579412863016516289,
      0.016444250087540557296,   0.015287891376486787985,
      0.014111827185786502188,   0.012917573348050568824,
      0.011706669099867393418,   0.010480675058716539827,
      0.0092411711240949427375,  0.0079897542269355098558,
      0.0067280356794015575555,  0.0054576371824298214048,
      0.0041801809984155664554,  0.0028972440035490636824,
      0.0016098962775169389351,  0.00026123301985370950888};
  IntegratorXX::GaussLobatto<double, double> quad(88);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 88; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("89 point GaussLobatto", "[1d-quad]") {
  std::array<double, 89> ref_pts = {-1,
                                    -0.99906283980724437272,
                                    -0.99685950669192042208,
                                    -0.99339980026213849191,
                                    -0.98868834778992723667,
                                    -0.98273113301938575109,
                                    -0.97553567550077434165,
                                    -0.96711104646364005858,
                                    -0.95746786307327810830,
                                    -0.94661827675020451768,
                                    -0.93457595847126295678,
                                    -0.92135608179694473027,
                                    -0.90697530386845883503,
                                    -0.89145174447725664716,
                                    -0.87480496326465042550,
                                    -0.85705593509383446313,
                                    -0.83822702363168799898,
                                    -0.81834195317680123978,
                                    -0.79742577877087210245,
                                    -0.77550485463203668059,
                                    -0.75260680095042121413,
                                    -0.72876046908805542019,
                                    -0.70399590522717849037,
                                    -0.67834431251285489504,
                                    -0.65183801173767293004,
                                    -0.62451040061811053089,
                                    -0.59639591171391143595,
                                    -0.56752996904351436091,
                                    -0.53794894345021413155,
                                    -0.50769010677530334775,
                                    -0.47679158489594334183,
                                    -0.44529230968694156561,
                                    -0.41323196996696697440,
                                    -0.38065096149101356549,
                                    -0.34759033605212322687,
                                    -0.31409174975650085835,
                                    -0.28019741053719586746,
                                    -0.24595002497248326488,
                                    -0.21139274447595345073,
                                    -0.17656911092611127191,
                                    -0.14152300180399102911,
                                    -0.10629857490791392236,
                                    -0.070940212715047156154,
                                    -0.035492466459868904782,
                                    0,
                                    0.035492466459868904782,
                                    0.070940212715047156154,
                                    0.10629857490791392236,
                                    0.14152300180399102911,
                                    0.17656911092611127191,
                                    0.21139274447595345073,
                                    0.24595002497248326488,
                                    0.28019741053719586746,
                                    0.31409174975650085835,
                                    0.34759033605212322687,
                                    0.38065096149101356549,
                                    0.41323196996696697440,
                                    0.44529230968694156561,
                                    0.47679158489594334183,
                                    0.50769010677530334775,
                                    0.53794894345021413155,
                                    0.56752996904351436091,
                                    0.59639591171391143595,
                                    0.62451040061811053089,
                                    0.65183801173767293004,
                                    0.67834431251285489504,
                                    0.70399590522717849037,
                                    0.72876046908805542019,
                                    0.75260680095042121413,
                                    0.77550485463203668059,
                                    0.79742577877087210245,
                                    0.81834195317680123978,
                                    0.83822702363168799898,
                                    0.85705593509383446313,
                                    0.87480496326465042550,
                                    0.89145174447725664716,
                                    0.90697530386845883503,
                                    0.92135608179694473027,
                                    0.93457595847126295678,
                                    0.94661827675020451768,
                                    0.95746786307327810830,
                                    0.96711104646364005858,
                                    0.97553567550077434165,
                                    0.98273113301938575109,
                                    0.98868834778992723667,
                                    0.99339980026213849191,
                                    0.99685950669192042208,
                                    0.99906283980724437272,
                                    1};
  std::array<double, 89> ref_wgt = {
      0.00025536261491317671093, 0.0015737301370832712069,
      0.0028322056142633019296,  0.0040864514205393643965,
      0.0053354576642177817686,  0.0065777187449884136503,
      0.0078116843032210550941,  0.0090358040440223975764,
      0.010248537253607570686,   0.011448356613041191542,
      0.012633750701162080271,   0.013803226108303797325,
      0.014955309403322427790,   0.016088549028309278776,
      0.017201517145981301350,   0.018292811448216319466,
      0.019361056928076479326,   0.020404907615207015306,
      0.021423048273454123106,   0.022414196059089396134,
      0.023377102137832344777,   0.024310553258789211594,
      0.025213373283414132456,   0.026084424667618836855,
      0.026922609895195389377,   0.027726872860765724317,
      0.028496200200528079064,   0.029229622569131768888,
      0.029926215861076845192,   0.030585102375103303923,
      0.031205451920105191172,   0.031786482861177869696,
      0.032327463104481631105,   0.032827711019681581747,
      0.033286596298802144012,   0.033703540750414464415,
      0.034078019028156381508,   0.034409559292667262537,
      0.034697743806103853285,   0.034942209458488188216,
      0.035142648225224465973,   0.035298807555208497006,
      0.035410490689040763993,   0.035477556906942189933,
      0.035499921706060271089,   0.035477556906942189933,
      0.035410490689040763993,   0.035298807555208497006,
      0.035142648225224465973,   0.034942209458488188216,
      0.034697743806103853285,   0.034409559292667262537,
      0.034078019028156381508,   0.033703540750414464415,
      0.033286596298802144012,   0.032827711019681581747,
      0.032327463104481631105,   0.031786482861177869696,
      0.031205451920105191172,   0.030585102375103303923,
      0.029926215861076845192,   0.029229622569131768888,
      0.028496200200528079064,   0.027726872860765724317,
      0.026922609895195389377,   0.026084424667618836855,
      0.025213373283414132456,   0.024310553258789211594,
      0.023377102137832344777,   0.022414196059089396134,
      0.021423048273454123106,   0.020404907615207015306,
      0.019361056928076479326,   0.018292811448216319466,
      0.017201517145981301350,   0.016088549028309278776,
      0.014955309403322427790,   0.013803226108303797325,
      0.012633750701162080271,   0.011448356613041191542,
      0.010248537253607570686,   0.0090358040440223975764,
      0.0078116843032210550941,  0.0065777187449884136503,
      0.0053354576642177817686,  0.0040864514205393643965,
      0.0028322056142633019296,  0.0015737301370832712069,
      0.00025536261491317671093};
  IntegratorXX::GaussLobatto<double, double> quad(89);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 89; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("90 point GaussLobatto", "[1d-quad]") {
  std::array<double, 90> ref_pts = {-1,
                                    -0.99908366240830210344,
                                    -0.99692925969451796505,
                                    -0.99354631340752370081,
                                    -0.98893925343240808845,
                                    -0.98311380194644508243,
                                    -0.97607714908871293012,
                                    -0.96783796888588742076,
                                    -0.95840641412551108266,
                                    -0.94779410550704211194,
                                    -0.93601411792337302086,
                                    -0.92308096459962630711,
                                    -0.90901057932597563424,
                                    -0.89382029688338912838,
                                    -0.87752883171698072226,
                                    -0.86015625489652178749,
                                    -0.84172396939870412803,
                                    -0.82225468374469074214,
                                    -0.80177238402704707327,
                                    -0.78030230436139887538,
                                    -0.75787089579972266856,
                                    -0.73450579374386323705,
                                    -0.71023578389960395124,
                                    -0.68509076681334609732,
                                    -0.65910172103515918089,
                                    -0.63230066495363166970,
                                    -0.60472061734957240278,
                                    -0.57639555671718127730,
                                    -0.54736037940281976975,
                                    -0.51765085661296421727,
                                    -0.48730359034431501075,
                                    -0.45635596829036073560,
                                    -0.42484611777995589690,
                                    -0.39281285880466243255,
                                    -0.36029565619272715205,
                                    -0.32733457098861807149,
                                    -0.29397021109802099316,
                                    -0.26024368125910235578,
                                    -0.22619653240167421715,
                                    -0.19187071045665118256,
                                    -0.15730850467886621731,
                                    -0.12255249554691173696,
                                    -0.087645502304193408115,
                                    -0.052630530205826069271,
                                    -0.017550717536363547392,
                                    0.017550717536363547392,
                                    0.052630530205826069271,
                                    0.087645502304193408115,
                                    0.12255249554691173696,
                                    0.15730850467886621731,
                                    0.19187071045665118256,
                                    0.22619653240167421715,
                                    0.26024368125910235578,
                                    0.29397021109802099316,
                                    0.32733457098861807149,
                                    0.36029565619272715205,
                                    0.39281285880466243255,
                                    0.42484611777995589690,
                                    0.45635596829036073560,
                                    0.48730359034431501075,
                                    0.51765085661296421727,
                                    0.54736037940281976975,
                                    0.57639555671718127730,
                                    0.60472061734957240278,
                                    0.63230066495363166970,
                                    0.65910172103515918089,
                                    0.68509076681334609732,
                                    0.71023578389960395124,
                                    0.73450579374386323705,
                                    0.75787089579972266856,
                                    0.78030230436139887538,
                                    0.80177238402704707327,
                                    0.82225468374469074214,
                                    0.84172396939870412803,
                                    0.86015625489652178749,
                                    0.87752883171698072226,
                                    0.89382029688338912838,
                                    0.90901057932597563424,
                                    0.92308096459962630711,
                                    0.93601411792337302086,
                                    0.94779410550704211194,
                                    0.95840641412551108266,
                                    0.96783796888588742076,
                                    0.97607714908871293012,
                                    0.98311380194644508243,
                                    0.98893925343240808845,
                                    0.99354631340752370081,
                                    0.99692925969451796505,
                                    0.99908366240830210344,
                                    1};
  std::array<double, 90> ref_wgt = {
      0.00024968789013732833958, 0.0015387690406947879013,
      0.0027693321909186197771,  0.0039958371181095491396,
      0.0052173305404752013789,  0.0064323742053852988990,
      0.0076394857323086816201,  0.0088371823565781745678,
      0.010023990150963538754,   0.011198447672339711750,
      0.012359108327817702628,   0.013504542361621505248,
      0.014633338699983519211,   0.015744106726931328456,
      0.016835478015548680809,   0.017906108023132139125,
      0.018954677752674151880,   0.019979895380698184259,
      0.020980497850447824836,   0.021955252428981760459,
      0.022902958226530883646,   0.023822447676397862437,
      0.024712587973663149080,   0.025572282470976441631,
      0.026400472029745222368,   0.027196136325075122801,
      0.027958295102866762356,   0.028686009387528311782,
      0.029378382638821157273,   0.030034561856416975400,
      0.030653738630807821653,   0.031235150139276184004,
      0.031778080085699139507,   0.032281859583029608344,
      0.032745867977368087016,   0.033169533612610039049,
      0.033552334534727216531,   0.033893799134815473871,
      0.034193506730117014933,   0.034451088082301386260,
      0.034666225852366793855,   0.034838654991601380330,
      0.034968163068122854817,   0.035054590528594221082,
      0.035097830894793200935,   0.035097830894793200935,
      0.035054590528594221082,   0.034968163068122854817,
      0.034838654991601380330,   0.034666225852366793855,
      0.034451088082301386260,   0.034193506730117014933,
      0.033893799134815473871,   0.033552334534727216531,
      0.033169533612610039049,   0.032745867977368087016,
      0.032281859583029608344,   0.031778080085699139507,
      0.031235150139276184004,   0.030653738630807821653,
      0.030034561856416975400,   0.029378382638821157273,
      0.028686009387528311782,   0.027958295102866762356,
      0.027196136325075122801,   0.026400472029745222368,
      0.025572282470976441631,   0.024712587973663149080,
      0.023822447676397862437,   0.022902958226530883646,
      0.021955252428981760459,   0.020980497850447824836,
      0.019979895380698184259,   0.018954677752674151880,
      0.017906108023132139125,   0.016835478015548680809,
      0.015744106726931328456,   0.014633338699983519211,
      0.013504542361621505248,   0.012359108327817702628,
      0.011198447672339711750,   0.010023990150963538754,
      0.0088371823565781745678,  0.0076394857323086816201,
      0.0064323742053852988990,  0.0052173305404752013789,
      0.0039958371181095491396,  0.0027693321909186197771,
      0.0015387690406947879013,  0.00024968789013732833958};
  IntegratorXX::GaussLobatto<double, double> quad(90);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 90; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("91 point GaussLobatto", "[1d-quad]") {
  std::array<double, 91> ref_pts = {-1,
                                    -0.99910379868749226263,
                                    -0.99699671469222115516,
                                    -0.99368800327501366062,
                                    -0.98918190752229442207,
                                    -0.98348390221026028170,
                                    -0.97660086591029218624,
                                    -0.96854109693974103186,
                                    -0.95931430880040531204,
                                    -0.94893162009722856937,
                                    -0.93740554172623778096,
                                    -0.92474996204144733407,
                                    -0.91098013023102826826,
                                    -0.89611263799808516638,
                                    -0.88016539959801106664,
                                    -0.86315763026945911297,
                                    -0.84510982309098961876,
                                    -0.82604372429429470478,
                                    -0.80598230706532482024,
                                    -0.78494974386574866779,
                                    -0.76297137730858846274,
                                    -0.74007368962341234398,
                                    -0.71628427074805141547,
                                    -0.69163178508539769307,
                                    -0.66614593696540816307,
                                    -0.63985743485397602784,
                                    -0.61279795435182491289,
                                    -0.58500010002802997312,
                                    -0.55649736613416763757,
                                    -0.52732409624644024137,
                                    -0.49751544188441062990,
                                    -0.46710732015621295522,
                                    -0.43613637048127753458,
                                    -0.40463991044271819834,
                                    -0.37265589082257855448,
                                    -0.34022284987411769181,
                                    -0.30737986688623478989,
                                    -0.27416651509598475538,
                                    -0.24062281400592230696,
                                    -0.20678918116372891933,
                                    -0.17270638346222483330,
                                    -0.13841548801844615480,
                                    -0.10395781269097419629,
                                    -0.069374876295140044900,
                                    -0.034708348576091343205,
                                    0,
                                    0.034708348576091343205,
                                    0.069374876295140044900,
                                    0.10395781269097419629,
                                    0.13841548801844615480,
                                    0.17270638346222483330,
                                    0.20678918116372891933,
                                    0.24062281400592230696,
                                    0.27416651509598475538,
                                    0.30737986688623478989,
                                    0.34022284987411769181,
                                    0.37265589082257855448,
                                    0.40463991044271819834,
                                    0.43613637048127753458,
                                    0.46710732015621295522,
                                    0.49751544188441062990,
                                    0.52732409624644024137,
                                    0.55649736613416763757,
                                    0.58500010002802997312,
                                    0.61279795435182491289,
                                    0.63985743485397602784,
                                    0.66614593696540816307,
                                    0.69163178508539769307,
                                    0.71628427074805141547,
                                    0.74007368962341234398,
                                    0.76297137730858846274,
                                    0.78494974386574866779,
                                    0.80598230706532482024,
                                    0.82604372429429470478,
                                    0.84510982309098961876,
                                    0.86315763026945911297,
                                    0.88016539959801106664,
                                    0.89611263799808516638,
                                    0.91098013023102826826,
                                    0.92474996204144733407,
                                    0.93740554172623778096,
                                    0.94893162009722856937,
                                    0.95931430880040531204,
                                    0.96854109693974103186,
                                    0.97660086591029218624,
                                    0.98348390221026028170,
                                    0.98918190752229442207,
                                    0.99368800327501366062,
                                    0.99699671469222115516,
                                    0.99910379868749226263,
                                    1};
  std::array<double, 91> ref_wgt = {
      0.00024420024420024420024, 0.0015049600460720771552,
      0.0027085287311679588569,  0.0039082016442671976207,
      0.0051030787771151763315,  0.0062917855522221167994,
      0.0074729038980529063070,  0.0086450149534754715323,
      0.0098067080095429056011,  0.010956583999801821541,
      0.012093257739247319372,   0.013215359793536616249,
      0.014321538210655089456,   0.015410460186440101208,
      0.016480813688136995404,   0.017531309044352929403,
      0.018560680503912370381,   0.019567687763762851126,
      0.020551117465075161605,   0.021509784656238629744,
      0.022442534221257232048,   0.023348242271974237597,
      0.024225817502533141538,   0.025074202504493222561,
      0.025892375041045653930,   0.026679349278813814915,
      0.027434176975765633634,   0.028155948623814430856,
      0.028843794544736675076,   0.029496885938089613379,
      0.030114435879868477446,   0.030695700270701591311,
      0.031239978732442022201,   0.031746615452076261817,
      0.032214999971933675210,   0.032644567925244997924,
      0.033034801716163899205,   0.033385231143432466076,
      0.033695433966939309414,   0.033965036416487760598,
      0.034193713642161228166,   0.034381190105743131389,
      0.034527239912719834546,   0.034631687084466584940,
      0.034694405770288521841,   0.034715320399061284976,
      0.034694405770288521841,   0.034631687084466584940,
      0.034527239912719834546,   0.034381190105743131389,
      0.034193713642161228166,   0.033965036416487760598,
      0.033695433966939309414,   0.033385231143432466076,
      0.033034801716163899205,   0.032644567925244997924,
      0.032214999971933675210,   0.031746615452076261817,
      0.031239978732442022201,   0.030695700270701591311,
      0.030114435879868477446,   0.029496885938089613379,
      0.028843794544736675076,   0.028155948623814430856,
      0.027434176975765633634,   0.026679349278813814915,
      0.025892375041045653930,   0.025074202504493222561,
      0.024225817502533141538,   0.023348242271974237597,
      0.022442534221257232048,   0.021509784656238629744,
      0.020551117465075161605,   0.019567687763762851126,
      0.018560680503912370381,   0.017531309044352929403,
      0.016480813688136995404,   0.015410460186440101208,
      0.014321538210655089456,   0.013215359793536616249,
      0.012093257739247319372,   0.010956583999801821541,
      0.0098067080095429056011,  0.0086450149534754715323,
      0.0074729038980529063070,  0.0062917855522221167994,
      0.0051030787771151763315,  0.0039082016442671976207,
      0.0027085287311679588569,  0.0015049600460720771552,
      0.00024420024420024420024};
  IntegratorXX::GaussLobatto<double, double> quad(91);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 91; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("92 point GaussLobatto", "[1d-quad]") {
  std::array<double, 92> ref_pts = {-1,
                                    -0.99912327847754550366,
                                    -0.99706197151573049874,
                                    -0.99382507920762279884,
                                    -0.98941666775115997279,
                                    -0.98384197777604416169,
                                    -0.97710759298237017264,
                                    -0.96922145609184716372,
                                    -0.96019286480443442448,
                                    -0.95003246242622781260,
                                    -0.93875222589610626131,
                                    -0.92636545190442980516,
                                    -0.91288674132795397555,
                                    -0.89833198207297944384,
                                    -0.88271833037620598994,
                                    -0.86606419059803430634,
                                    -0.84838919353807121342,
                                    -0.82971417330134889033,
                                    -0.81006114274407083693,
                                    -0.78945326752867248397,
                                    -0.76791483881925927020,
                                    -0.74547124464988983262,
                                    -0.72214893999962498987,
                                    -0.69797541560972288590,
                                    -0.67297916557980465612,
                                    -0.64718965378123051871,
                                    -0.62063727912730548975,
                                    -0.59335333974127186168,
                                    -0.56536999606433855539,
                                    -0.53672023294724271580,
                                    -0.50743782077003425572,
                                    -0.47755727563591758998,
                                    -0.44711381868607489971,
                                    -0.41614333458343044769,
                                    -0.38468232921429438812,
                                    -0.35276788665774593743,
                                    -0.32043762547347855819,
                                    -0.28772965435963289783,
                                    -0.25468252723288564635,
                                    -0.22133519778374333830,
                                    -0.18772697356060860821,
                                    -0.15389746963674177796,
                                    -0.11988656191473224684,
                                    -0.085734340123521386943,
                                    -0.051481060563381010712,
                                    -0.017167098654548544059,
                                    0.017167098654548544059,
                                    0.051481060563381010712,
                                    0.085734340123521386943,
                                    0.11988656191473224684,
                                    0.15389746963674177796,
                                    0.18772697356060860821,
                                    0.22133519778374333830,
                                    0.25468252723288564635,
                                    0.28772965435963289783,
                                    0.32043762547347855819,
                                    0.35276788665774593743,
                                    0.38468232921429438812,
                                    0.41614333458343044769,
                                    0.44711381868607489971,
                                    0.47755727563591758998,
                                    0.50743782077003425572,
                                    0.53672023294724271580,
                                    0.56536999606433855539,
                                    0.59335333974127186168,
                                    0.62063727912730548975,
                                    0.64718965378123051871,
                                    0.67297916557980465612,
                                    0.69797541560972288590,
                                    0.72214893999962498987,
                                    0.74547124464988983262,
                                    0.76791483881925927020,
                                    0.78945326752867248397,
                                    0.81006114274407083693,
                                    0.82971417330134889033,
                                    0.84838919353807121342,
                                    0.86606419059803430634,
                                    0.88271833037620598994,
                                    0.89833198207297944384,
                                    0.91288674132795397555,
                                    0.92636545190442980516,
                                    0.93875222589610626131,
                                    0.95003246242622781260,
                                    0.96019286480443442448,
                                    0.96922145609184716372,
                                    0.97710759298237017264,
                                    0.98384197777604416169,
                                    0.98941666775115997279,
                                    0.99382507920762279884,
                                    0.99706197151573049874,
                                    0.99912327847754550366,
                                    1};
  std::array<double, 92> ref_wgt = {
      0.00023889154323936932633, 0.0014722530865216087126,
      0.0026497053855121031628,  0.0038234159364451503257,
      0.0049925348914494850996,  0.0061557479121442611789,
      0.0073116978005715744254,  0.0084590262031286497104,
      0.0095963822865273880754,  0.010722426081610846473,
      0.011835830603961948013,   0.012935283613875230551,
      0.014019489242961033425,   0.015087169557356852263,
      0.016137066081314347151,   0.017167941289463172149,
      0.018178580070315932536,   0.019167791161271894065,
      0.020134408554391654852,   0.021077292871778102313,
      0.021995332709205122958,   0.022887445946555846142,
      0.023752581023609181183,   0.024589718179720091113,
      0.025397870655962225766,   0.026176085858334473213,
      0.026923446480672111591,   0.027639071585946590652,
      0.028322117644684423146,   0.028971779529284553040,
      0.029587291463064474056,   0.030167927922918022890,
      0.030713004494521973447,   0.031221878679084165819,
      0.031693950650682799227,   0.032128663963304601592,
      0.032525506206748769414,   0.032884009610623766271,
      0.033203751595725195872,   0.033484355272144947600,
      0.033725489883524571354,   0.033926871196929297156,
      0.034088261837883196389,   0.034209471570170608643,
      0.034290357520074053643,   0.034330824344784334015,
      0.034330824344784334015,   0.034290357520074053643,
      0.034209471570170608643,   0.034088261837883196389,
      0.033926871196929297156,   0.033725489883524571354,
      0.033484355272144947600,   0.033203751595725195872,
      0.032884009610623766271,   0.032525506206748769414,
      0.032128663963304601592,   0.031693950650682799227,
      0.031221878679084165819,   0.030713004494521973447,
      0.030167927922918022890,   0.029587291463064474056,
      0.028971779529284553040,   0.028322117644684423146,
      0.027639071585946590652,   0.026923446480672111591,
      0.026176085858334473213,   0.025397870655962225766,
      0.024589718179720091113,   0.023752581023609181183,
      0.022887445946555846142,   0.021995332709205122958,
      0.021077292871778102313,   0.020134408554391654852,
      0.019167791161271894065,   0.018178580070315932536,
      0.017167941289463172149,   0.016137066081314347151,
      0.015087169557356852263,   0.014019489242961033425,
      0.012935283613875230551,   0.011835830603961948013,
      0.010722426081610846473,   0.0095963822865273880754,
      0.0084590262031286497104,  0.0073116978005715744254,
      0.0061557479121442611789,  0.0049925348914494850996,
      0.0038234159364451503257,  0.0026497053855121031628,
      0.0014722530865216087126,  0.00023889154323936932633};
  IntegratorXX::GaussLobatto<double, double> quad(92);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 92; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("93 point GaussLobatto", "[1d-quad]") {
  std::array<double, 93> ref_pts = {-1,
                                    -0.99914213000774873940,
                                    -0.99712512463374302494,
                                    -0.99395773931650074669,
                                    -0.98964387264779660412,
                                    -0.98418854352190703702,
                                    -0.97759805640206273438,
                                    -0.96988001725034026586,
                                    -0.96104332995951793670,
                                    -0.95109818763664211578,
                                    -0.94005606140635858492,
                                    -0.92792968741148008183,
                                    -0.91473305222911093870,
                                    -0.90048137679123436161,
                                    -0.88519109885692356704,
                                    -0.86887985406882142799,
                                    -0.85156645562154703391,
                                    -0.83327087256836605615,
                                    -0.81401420679265654265,
                                    -0.79381866867155770482,
                                    -0.77270755146034120006,
                                    -0.75070520442732638480,
                                    -0.72783700477049319799,
                                    -0.70412932834828821803,
                                    -0.67960951925844928852,
                                    -0.65430585829997957534,
                                    -0.62824753035467550473,
                                    -0.60146459072584985954,
                                    -0.57398793047308796001,
                                    -0.54584924078302875417,
                                    -0.51708097641727173117,
                                    -0.48771631827957311569,
                                    -0.45778913514550928951,
                                    -0.42733394459875045952,
                                    -0.39638587321900201735,
                                    -0.36498061606753367530,
                                    -0.33315439551702626980,
                                    -0.30094391947322212284,
                                    -0.26838633903656614852,
                                    -0.23551920565267065692,
                                    -0.20238042780102628479,
                                    -0.16900822727191398265,
                                    -0.13544109508194788973,
                                    -0.10171774707909568009,
                                    -0.067877079288381080311,
                                    -0.033958123049772326646,
                                    0,
                                    0.033958123049772326646,
                                    0.067877079288381080311,
                                    0.10171774707909568009,
                                    0.13544109508194788973,
                                    0.16900822727191398265,
                                    0.20238042780102628479,
                                    0.23551920565267065692,
                                    0.26838633903656614852,
                                    0.30094391947322212284,
                                    0.33315439551702626980,
                                    0.36498061606753367530,
                                    0.39638587321900201735,
                                    0.42733394459875045952,
                                    0.45778913514550928951,
                                    0.48771631827957311569,
                                    0.51708097641727173117,
                                    0.54584924078302875417,
                                    0.57398793047308796001,
                                    0.60146459072584985954,
                                    0.62824753035467550473,
                                    0.65430585829997957534,
                                    0.67960951925844928852,
                                    0.70412932834828821803,
                                    0.72783700477049319799,
                                    0.75070520442732638480,
                                    0.77270755146034120006,
                                    0.79381866867155770482,
                                    0.81401420679265654265,
                                    0.83327087256836605615,
                                    0.85156645562154703391,
                                    0.86887985406882142799,
                                    0.88519109885692356704,
                                    0.90048137679123436161,
                                    0.91473305222911093870,
                                    0.92792968741148008183,
                                    0.94005606140635858492,
                                    0.95109818763664211578,
                                    0.96104332995951793670,
                                    0.96988001725034026586,
                                    0.97759805640206273438,
                                    0.98418854352190703702,
                                    0.98964387264779660412,
                                    0.99395773931650074669,
                                    0.99712512463374302494,
                                    0.99914213000774873940,
                                    1};
  std::array<double, 93> ref_wgt = {
      0.00023375409069658719028, 0.0014406007855408100019,
      0.0025927771256219357575,  0.0037413578422773876750,
      0.0048855403411453101100,  0.0060240673058965342160,
      0.0071556391941237072623,  0.0082789549775319288601,
      0.0093927205650923075146,  0.010495652009466264260,
      0.011586477517382044768,   0.012663939108097027675,
      0.013726794142439656169,   0.014773816791011345095,
      0.015803799464914359606,   0.016815554217234971762,
      0.017807914117895531013,   0.018779734602229657921,
      0.019729894792668035767,   0.020657298792492111785,
      0.021560876950420510658,   0.022439587094712017673,
      0.023292415735443345577,   0.024118379233623182742,
      0.024916524935823309512,   0.025685932273036275826,
      0.026425713822503768152,   0.027135016331298442559,
      0.027813021700483572122,   0.028458947928718703688,
      0.029072050014225239368,   0.029651620814073188898,
      0.030196991859799097137,   0.030707534128415200166,
      0.031182658767921095501,   0.031621817776481535109,
      0.032024504634487282730,   0.032390254888770243840,
      0.032718646688299205457,   0.033009301270738443965,
      0.033261883399308103226,   0.033476101749442544226,
      0.033651709244800752963,   0.033788503342241297156,
      0.033886326265433175954,   0.033945065186833141651,
      0.033964652357819619473,   0.033945065186833141651,
      0.033886326265433175954,   0.033788503342241297156,
      0.033651709244800752963,   0.033476101749442544226,
      0.033261883399308103226,   0.033009301270738443965,
      0.032718646688299205457,   0.032390254888770243840,
      0.032024504634487282730,   0.031621817776481535109,
      0.031182658767921095501,   0.030707534128415200166,
      0.030196991859799097137,   0.029651620814073188898,
      0.029072050014225239368,   0.028458947928718703688,
      0.027813021700483572122,   0.027135016331298442559,
      0.026425713822503768152,   0.025685932273036275826,
      0.024916524935823309512,   0.024118379233623182742,
      0.023292415735443345577,   0.022439587094712017673,
      0.021560876950420510658,   0.020657298792492111785,
      0.019729894792668035767,   0.018779734602229657921,
      0.017807914117895531013,   0.016815554217234971762,
      0.015803799464914359606,   0.014773816791011345095,
      0.013726794142439656169,   0.012663939108097027675,
      0.011586477517382044768,   0.010495652009466264260,
      0.0093927205650923075146,  0.0082789549775319288601,
      0.0071556391941237072623,  0.0060240673058965342160,
      0.0048855403411453101100,  0.0037413578422773876750,
      0.0025927771256219357575,  0.0014406007855408100019,
      0.00023375409069658719028};
  IntegratorXX::GaussLobatto<double, double> quad(93);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 93; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("94 point GaussLobatto", "[1d-quad]") {
  std::array<double, 94> ref_pts = {-1,
                                    -0.99916038000625843552,
                                    -0.99718626349482410405,
                                    -0.99408617119616572372,
                                    -0.98986384279639733514,
                                    -0.98452408708389786418,
                                    -0.97807294393541712344,
                                    -0.97051770020537060933,
                                    -0.96186688659369858339,
                                    -0.95213026953608965436,
                                    -0.94131884072713119842,
                                    -0.92944480493861676177,
                                    -0.91652156634575736929,
                                    -0.90256371344728074828,
                                    -0.88758700262444671236,
                                    -0.87160834036970132572,
                                    -0.85464576421071624603,
                                    -0.83671842235417219945,
                                    -0.81784655207374424202,
                                    -0.79805145686749460559,
                                    -0.77735548241091921663,
                                    -0.75578199133306410738,
                                    -0.73335533684434992469,
                                    -0.71010083524597705354,
                                    -0.68604473735200936862,
                                    -0.66121419885643933404,
                                    -0.63563724967871386723,
                                    -0.60934276232234440330,
                                    -0.58236041928233269883,
                                    -0.55472067953821368155,
                                    -0.52645474417054616481,
                                    -0.49759452113966989577,
                                    -0.46817258926649179746,
                                    -0.43822216145596414825,
                                    -0.40777704720477168364,
                                    -0.37687161443555215921,
                                    -0.34554075070073481691,
                                    -0.31381982379979255283,
                                    -0.28174464185436556737,
                                    -0.24935141288632612078,
                                    -0.21667670394441501747,
                                    -0.18375739982558995787,
                                    -0.15063066143768334523,
                                    -0.11733388385037199681,
                                    -0.083904654081813022730,
                                    -0.050380708668598502330,
                                    -0.016799891066926168906,
                                    0.016799891066926168906,
                                    0.050380708668598502330,
                                    0.083904654081813022730,
                                    0.11733388385037199681,
                                    0.15063066143768334523,
                                    0.18375739982558995787,
                                    0.21667670394441501747,
                                    0.24935141288632612078,
                                    0.28174464185436556737,
                                    0.31381982379979255283,
                                    0.34554075070073481691,
                                    0.37687161443555215921,
                                    0.40777704720477168364,
                                    0.43822216145596414825,
                                    0.46817258926649179746,
                                    0.49759452113966989577,
                                    0.52645474417054616481,
                                    0.55472067953821368155,
                                    0.58236041928233269883,
                                    0.60934276232234440330,
                                    0.63563724967871386723,
                                    0.66121419885643933404,
                                    0.68604473735200936862,
                                    0.71010083524597705354,
                                    0.73335533684434992469,
                                    0.75578199133306410738,
                                    0.77735548241091921663,
                                    0.79805145686749460559,
                                    0.81784655207374424202,
                                    0.83671842235417219945,
                                    0.85464576421071624603,
                                    0.87160834036970132572,
                                    0.88758700262444671236,
                                    0.90256371344728074828,
                                    0.91652156634575736929,
                                    0.92944480493861676177,
                                    0.94131884072713119842,
                                    0.95213026953608965436,
                                    0.96186688659369858339,
                                    0.97051770020537060933,
                                    0.97807294393541712344,
                                    0.98452408708389786418,
                                    0.98986384279639733514,
                                    0.99408617119616572372,
                                    0.99718626349482410405,
                                    0.99916038000625843552,
                                    1};
  std::array<double, 94> ref_wgt = {
      0.00022878059940517044155, 0.0014099582852185352893,
      0.0025376634372961542437,  0.0036619116806193589830,
      0.0047819449582525641902,  0.0058965599617692221079,
      0.0070045117878246950385,  0.0081045537494913643428,
      0.0091954455587504527457,  0.010275956403924390509,
      0.011344866857284808694,   0.012400970439111776890,
      0.013443075056065899809,   0.014470004381094858490,
      0.015480599197842042481,   0.016473718717708508516,
      0.017448241872221374207,   0.018403068581148312557,
      0.019337120995849413702,   0.020249344716934295749,
      0.021138709985101422810,   0.022004212843954721817,
      0.022844876273564719394,   0.023659751293541736169,
      0.024447918034404536326,   0.025208486776052790655,
      0.025940598952182362353,   0.026643428119516896898,
      0.027316180890766427226,   0.027958097830263064766,
      0.028568454311264947383,   0.029146561333962204685,
      0.029691766303262605620,   0.030203453765479644990,
      0.030681046103092004099,   0.031124004186790502130,
      0.031531827984076765160,   0.031904057123726810746,
      0.032240271415482513391,   0.032540091324384417418,
      0.032803178399210537591,   0.033029235654537573458,
      0.033218007905993300274,   0.033369282058321727048,
      0.033482887345935869833,   0.033558695525686615201,
      0.033596621021630083572,   0.033596621021630083572,
      0.033558695525686615201,   0.033482887345935869833,
      0.033369282058321727048,   0.033218007905993300274,
      0.033029235654537573458,   0.032803178399210537591,
      0.032540091324384417418,   0.032240271415482513391,
      0.031904057123726810746,   0.031531827984076765160,
      0.031124004186790502130,   0.030681046103092004099,
      0.030203453765479644990,   0.029691766303262605620,
      0.029146561333962204685,   0.028568454311264947383,
      0.027958097830263064766,   0.027316180890766427226,
      0.026643428119516896898,   0.025940598952182362353,
      0.025208486776052790655,   0.024447918034404536326,
      0.023659751293541736169,   0.022844876273564719394,
      0.022004212843954721817,   0.021138709985101422810,
      0.020249344716934295749,   0.019337120995849413702,
      0.018403068581148312557,   0.017448241872221374207,
      0.016473718717708508516,   0.015480599197842042481,
      0.014470004381094858490,   0.013443075056065899809,
      0.012400970439111776890,   0.011344866857284808694,
      0.010275956403924390509,   0.0091954455587504527457,
      0.0081045537494913643428,  0.0070045117878246950385,
      0.0058965599617692221079,  0.0047819449582525641902,
      0.0036619116806193589830,  0.0025376634372961542437,
      0.0014099582852185352893,  0.00022878059940517044155};
  IntegratorXX::GaussLobatto<double, double> quad(94);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 94; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("95 point GaussLobatto", "[1d-quad]") {
  std::array<double, 95> ref_pts = {-1,
                                    -0.99917805379487786174,
                                    -0.99724547284412049965,
                                    -0.99421055258717681255,
                                    -0.99007688196539015187,
                                    -0.98484907056605304189,
                                    -0.97853290741726081879,
                                    -0.97113537681958177940,
                                    -0.96266465561407332104,
                                    -0.95313010563421030662,
                                    -0.94254226389666987526,
                                    -0.93091283117850991563,
                                    -0.91825465918816517322,
                                    -0.90458173641349880345,
                                    -0.88990917268996300382,
                                    -0.87425318251782876238,
                                    -0.85763106715248581334,
                                    -0.84006119549036995960,
                                    -0.82156298377308777391,
                                    -0.80215687413295936274,
                                    -0.78186431200413872066,
                                    -0.76070772242453944826,
                                    -0.73871048525491502746,
                                    -0.71589690934257886056,
                                    -0.69229220565837929808,
                                    -0.66792245943665728877,
                                    -0.64281460134900211775,
                                    -0.61699637774367948608,
                                    -0.59049631998363284866,
                                    -0.56334371291695119081,
                                    -0.53556856251465249274,
                                    -0.50720156271155051369,
                                    -0.47827406148685193331,
                                    -0.44881802622197016572,
                                    -0.41886600837384026837,
                                    -0.38845110750277534260,
                                    -0.35760693469461777814,
                                    -0.32636757541760780634,
                                    -0.29476755185501633172,
                                    -0.26284178475516820151,
                                    -0.23062555484101529611,
                                    -0.19815446382190548132,
                                    -0.16546439505063301219,
                                    -0.13259147386924792804,
                                    -0.099572027687445891730,
                                    -0.066442545837655422247,
                                    -0.033239639251186218400,
                                    0,
                                    0.033239639251186218400,
                                    0.066442545837655422247,
                                    0.099572027687445891730,
                                    0.13259147386924792804,
                                    0.16546439505063301219,
                                    0.19815446382190548132,
                                    0.23062555484101529611,
                                    0.26284178475516820151,
                                    0.29476755185501633172,
                                    0.32636757541760780634,
                                    0.35760693469461777814,
                                    0.38845110750277534260,
                                    0.41886600837384026837,
                                    0.44881802622197016572,
                                    0.47827406148685193331,
                                    0.50720156271155051369,
                                    0.53556856251465249274,
                                    0.56334371291695119081,
                                    0.59049631998363284866,
                                    0.61699637774367948608,
                                    0.64281460134900211775,
                                    0.66792245943665728877,
                                    0.69229220565837929808,
                                    0.71589690934257886056,
                                    0.73871048525491502746,
                                    0.76070772242453944826,
                                    0.78186431200413872066,
                                    0.80215687413295936274,
                                    0.82156298377308777391,
                                    0.84006119549036995960,
                                    0.85763106715248581334,
                                    0.87425318251782876238,
                                    0.88990917268996300382,
                                    0.90458173641349880345,
                                    0.91825465918816517322,
                                    0.93091283117850991563,
                                    0.94254226389666987526,
                                    0.95313010563421030662,
                                    0.96266465561407332104,
                                    0.97113537681958177940,
                                    0.97853290741726081879,
                                    0.98484907056605304189,
                                    0.99007688196539015187,
                                    0.99421055258717681255,
                                    0.99724547284412049965,
                                    0.99917805379487786174,
                                    1};
  std::array<double, 95> ref_wgt = {
      0.00022396416573348264278, 0.0013802830872701997583,
      0.0024842880359858384050,  0.0035849678347405860210,
      0.0046816064245466520032,  0.0057730516789039670546,
      0.0068581105040337929549,  0.0079355877544814374410,
      0.0090042941862899669580,  0.010063049413203391560,
      0.011110683718378111758,   0.012146039530575962871,
      0.013167972778206395744,   0.014175354187115519765,
      0.015167070544696044778,   0.016142025938386090901,
      0.017099142971240733529,   0.018037363955091447999,
      0.018955652080878197438,   0.019852992565322322880,
      0.020728393772919255169,   0.021580888312147571172,
      0.022409534104761163846,   0.023213415427029023931,
      0.023991643921799967997,   0.024743359580291288559,
      0.025467731692527413162,   0.026163959765385414600,
      0.026831274407237577265,   0.027468938178216584020,
      0.028076246405165868459,   0.028652527960376036482,
      0.029197146003247833337,   0.029709498684062797373,
      0.030189019809084406168,   0.030635179466255107440,
      0.031047484610798068643,   0.031425479610076714063,
      0.031768746747110088583,   0.032076906682187737339,
      0.032349618872074065544,   0.032586581946338988775,
      0.032787534040399047207,   0.032952253084900983850,
      0.033080557051128022829,   0.033172304152157675236,
      0.033227392999548792641,   0.033245762715384727697,
      0.033227392999548792641,   0.033172304152157675236,
      0.033080557051128022829,   0.032952253084900983850,
      0.032787534040399047207,   0.032586581946338988775,
      0.032349618872074065544,   0.032076906682187737339,
      0.031768746747110088583,   0.031425479610076714063,
      0.031047484610798068643,   0.030635179466255107440,
      0.030189019809084406168,   0.029709498684062797373,
      0.029197146003247833337,   0.028652527960376036482,
      0.028076246405165868459,   0.027468938178216584020,
      0.026831274407237577265,   0.026163959765385414600,
      0.025467731692527413162,   0.024743359580291288559,
      0.023991643921799967997,   0.023213415427029023931,
      0.022409534104761163846,   0.021580888312147571172,
      0.020728393772919255169,   0.019852992565322322880,
      0.018955652080878197438,   0.018037363955091447999,
      0.017099142971240733529,   0.016142025938386090901,
      0.015167070544696044778,   0.014175354187115519765,
      0.013167972778206395744,   0.012146039530575962871,
      0.011110683718378111758,   0.010063049413203391560,
      0.0090042941862899669580,  0.0079355877544814374410,
      0.0068581105040337929549,  0.0057730516789039670546,
      0.0046816064245466520032,  0.0035849678347405860210,
      0.0024842880359858384050,  0.0013802830872701997583,
      0.00022396416573348264278};
  IntegratorXX::GaussLobatto<double, double> quad(95);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 95; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("96 point GaussLobatto", "[1d-quad]") {
  std::array<double, 96> ref_pts = {-1,
                                    -0.99919517537692604333,
                                    -0.99730283301700828646,
                                    -0.99433105199061228080,
                                    -0.99028327815433043846,
                                    -0.98516393212661401114,
                                    -0.97897856497778433333,
                                    -0.97173387398905729625,
                                    -0.96343770028792649710,
                                    -0.95409902182054016010,
                                    -0.94372794416218866932,
                                    -0.93233568979926625583,
                                    -0.91993458608504168194,
                                    -0.90653805194989011153,
                                    -0.89216058340720878924,
                                    -0.87681773788235794840,
                                    -0.86052611738703298179,
                                    -0.84330335055998190621,
                                    -0.82516807359491829583,
                                    -0.80613991007704236359,
                                    -0.78623944975042948018,
                                    -0.76548822623952078195,
                                    -0.74390869374898009871,
                                    -0.72152420276722755296,
                                    -0.69835897480000278398,
                                    -0.67443807616133855505,
                                    -0.64978739085033178220,
                                    -0.62443359254307948931,
                                    -0.59840411573009891832,
                                    -0.57172712603047185738,
                                    -0.54443148971484151328,
                                    -0.51654674247024456131,
                                    -0.48810305744058016068,
                                    -0.45913121257730066577,
                                    -0.42966255733565453103,
                                    -0.39972897875251961757,
                                    -0.36936286694253394460,
                                    -0.33859708004986013077,
                                    -0.30746490869350863338,
                                    -0.27600003994469276349,
                                    -0.24423652087519472791,
                                    -0.21220872171618606717,
                                    -0.17995129866736731540,
                                    -0.14749915639667004105,
                                    -0.11488741027109922607,
                                    -0.082151348359584838633,
                                    -0.049326393248958136572,
                                    -0.016448063714370435101,
                                    0.016448063714370435101,
                                    0.049326393248958136572,
                                    0.082151348359584838633,
                                    0.11488741027109922607,
                                    0.14749915639667004105,
                                    0.17995129866736731540,
                                    0.21220872171618606717,
                                    0.24423652087519472791,
                                    0.27600003994469276349,
                                    0.30746490869350863338,
                                    0.33859708004986013077,
                                    0.36936286694253394460,
                                    0.39972897875251961757,
                                    0.42966255733565453103,
                                    0.45913121257730066577,
                                    0.48810305744058016068,
                                    0.51654674247024456131,
                                    0.54443148971484151328,
                                    0.57172712603047185738,
                                    0.59840411573009891832,
                                    0.62443359254307948931,
                                    0.64978739085033178220,
                                    0.67443807616133855505,
                                    0.69835897480000278398,
                                    0.72152420276722755296,
                                    0.74390869374898009871,
                                    0.76548822623952078195,
                                    0.78623944975042948018,
                                    0.80613991007704236359,
                                    0.82516807359491829583,
                                    0.84330335055998190621,
                                    0.86052611738703298179,
                                    0.87681773788235794840,
                                    0.89216058340720878924,
                                    0.90653805194989011153,
                                    0.91993458608504168194,
                                    0.93233568979926625583,
                                    0.94372794416218866932,
                                    0.95409902182054016010,
                                    0.96343770028792649710,
                                    0.97173387398905729625,
                                    0.97897856497778433333,
                                    0.98516393212661401114,
                                    0.99028327815433043846,
                                    0.99433105199061228080,
                                    0.99730283301700828646,
                                    0.99919517537692604333,
                                    1};
  std::array<double, 96> ref_wgt = {
      0.00021929824561403508772, 0.0013515349056555672389,
      0.0024325786030105848014,  0.0035104223750245177782,
      0.0045843897847794264433,  0.0056533772363714560586,
      0.0067162407897201923409,  0.0077718342119147089550,
      0.0088190167116770609691,  0.0098566557815174114072,
      0.010883628919882028225,   0.011898825025498477896,
      0.012901145672924584821,   0.013889506333909183653,
      0.014862837566750324613,   0.015820086181631326707,
      0.016760216384641604499,   0.017682210901064016655,
      0.018585072077597675817,   0.019467822962775370459,
      0.020329508364647557709,   0.021169195884722009131,
      0.021985976927116856360,   0.022778967681880256853,
      0.023547310081440070282,   0.024290172729165633234,
      0.025006751799047682937,   0.025696271905529925155,
      0.026357986942555655974,   0.026991180890924637440,
      0.027595168593088729109,   0.028169296494549358149,
      0.028712943351055611780,   0.029225520900838443954,
      0.029706474501154116022,   0.030155283728448467571,
      0.030571462941492877081,   0.030954561806882766808,
      0.031304165786330180452,   0.031619896585223265455,
      0.031901412561967375625,   0.032148409097664925898,
      0.032360618925734031546,   0.032537812421109301242,
      0.032679797848711879112,   0.032786421570919897236,
      0.032857568213814858785,   0.032893160792024074672,
      0.032893160792024074672,   0.032857568213814858785,
      0.032786421570919897236,   0.032679797848711879112,
      0.032537812421109301242,   0.032360618925734031546,
      0.032148409097664925898,   0.031901412561967375625,
      0.031619896585223265455,   0.031304165786330180452,
      0.030954561806882766808,   0.030571462941492877081,
      0.030155283728448467571,   0.029706474501154116022,
      0.029225520900838443954,   0.028712943351055611780,
      0.028169296494549358149,   0.027595168593088729109,
      0.026991180890924637440,   0.026357986942555655974,
      0.025696271905529925155,   0.025006751799047682937,
      0.024290172729165633234,   0.023547310081440070282,
      0.022778967681880256853,   0.021985976927116856360,
      0.021169195884722009131,   0.020329508364647557709,
      0.019467822962775370459,   0.018585072077597675817,
      0.017682210901064016655,   0.016760216384641604499,
      0.015820086181631326707,   0.014862837566750324613,
      0.013889506333909183653,   0.012901145672924584821,
      0.011898825025498477896,   0.010883628919882028225,
      0.0098566557815174114072,  0.0088190167116770609691,
      0.0077718342119147089550,  0.0067162407897201923409,
      0.0056533772363714560586,  0.0045843897847794264433,
      0.0035104223750245177782,  0.0024325786030105848014,
      0.0013515349056555672389,  0.00021929824561403508772};
  IntegratorXX::GaussLobatto<double, double> quad(96);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 96; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("97 point GaussLobatto", "[1d-quad]") {
  std::array<double, 97> ref_pts = {-1,
                                    -0.99921176751876793729,
                                    -0.99735842021157530838,
                                    -0.99444782923831721853,
                                    -0.99048330456557638278,
                                    -0.98546908745054815803,
                                    -0.97941050310999106593,
                                    -0.97231397639338394986,
                                    -0.96418702975565960925,
                                    -0.95503827671213405005,
                                    -0.94487741322463300963,
                                    -0.93371520763849810981,
                                    -0.92156348936793652739,
                                    -0.90843513640792805481,
                                    -0.89434406171221157232,
                                    -0.87930519846320388318,
                                    -0.86333448425479747383,
                                    -0.84644884420745118043,
                                    -0.82866617303485539214,
                                    -0.81000531608193614733,
                                    -0.79048604935472518179,
                                    -0.77012905856351361405,
                                    -0.74895591720165259846,
                                    -0.72698906368332813330,
                                    -0.70425177756459972068,
                                    -0.68076815487294277829,
                                    -0.65656308257146609270,
                                    -0.63166221218488405971,
                                    -0.60609193261520618776,
                                    -0.57987934217596131400,
                                    -0.55305221987459962559,
                                    -0.52563899597351059799,
                                    -0.49766872186085825064,
                                    -0.46917103926316569854,
                                    -0.44017614883227795966,
                                    -0.41071477813999454918,
                                    -0.38081814911429080020,
                                    -0.35051794495163839768,
                                    -0.31984627654049064638,
                                    -0.28883564843151591090,
                                    -0.25751892439064290536,
                                    -0.22592929257142355390,
                                    -0.19410023034362251834,
                                    -0.16206546881530676192,
                                    -0.12985895708603330063,
                                    -0.097514826269018239190,
                                    -0.065067353320414992548,
                                    -0.032550924714033997197,
                                    0,
                                    0.032550924714033997197,
                                    0.065067353320414992548,
                                    0.097514826269018239190,
                                    0.12985895708603330063,
                                    0.16206546881530676192,
                                    0.19410023034362251834,
                                    0.22592929257142355390,
                                    0.25751892439064290536,
                                    0.28883564843151591090,
                                    0.31984627654049064638,
                                    0.35051794495163839768,
                                    0.38081814911429080020,
                                    0.41071477813999454918,
                                    0.44017614883227795966,
                                    0.46917103926316569854,
                                    0.49766872186085825064,
                                    0.52563899597351059799,
                                    0.55305221987459962559,
                                    0.57987934217596131400,
                                    0.60609193261520618776,
                                    0.63166221218488405971,
                                    0.65656308257146609270,
                                    0.68076815487294277829,
                                    0.70425177756459972068,
                                    0.72698906368332813330,
                                    0.74895591720165259846,
                                    0.77012905856351361405,
                                    0.79048604935472518179,
                                    0.81000531608193614733,
                                    0.82866617303485539214,
                                    0.84644884420745118043,
                                    0.86333448425479747383,
                                    0.87930519846320388318,
                                    0.89434406171221157232,
                                    0.90843513640792805481,
                                    0.92156348936793652739,
                                    0.93371520763849810981,
                                    0.94487741322463300963,
                                    0.95503827671213405005,
                                    0.96418702975565960925,
                                    0.97231397639338394986,
                                    0.97941050310999106593,
                                    0.98546908745054815803,
                                    0.99048330456557638278,
                                    0.99444782923831721853,
                                    0.99735842021157530838,
                                    0.99921176751876793729,
                                    1};
  std::array<double, 97> ref_wgt = {
      0.00021477663230240549828, 0.0013236755298247005688,
      0.0023824665407643825398,  0.0034381767087562616097,
      0.0044901669947436192831,  0.0055373798443054670949,
      0.0065787179765380973558,  0.0076130816010790042415,
      0.0086393759437911278123,  0.0096565139815197975128,
      0.010663418080519123093,   0.011659021314495089150,
      0.012642268667039216159,   0.013612118181804500923,
      0.014567542082226554528,   0.015507527868679228555,
      0.016431079395787912578,   0.017337217930540849428,
      0.018224983190943246589,   0.019093434364555941906,
      0.019941651106075271609,   0.020768734513027747161,
      0.021573808078620492686,   0.022356018620781905687,
      0.023114537186434821643,   0.023848559930060547675,
      0.024557308965633291303,   0.025240033191029002581,
      0.025896009084039484519,   0.026524541469151228748,
      0.027124964254278447901,   0.027696641136670978255,
      0.028238966277249964563,   0.028751364942657406264,
      0.029233294114339658653,   0.029684243064019778296,
      0.030103733894949122542,   0.030491322048364807973,
      0.030846596774616454963,   0.031169181568463050328,
      0.031458734568078703742,   0.031714948917344513051,
      0.031937553091042646259,   0.032126311182608051105,
      0.032281023154132874196,   0.032401525048358667838,
      0.032487689162431741083,   0.032539424183237529026,
      0.032556675284170567850,   0.032539424183237529026,
      0.032487689162431741083,   0.032401525048358667838,
      0.032281023154132874196,   0.032126311182608051105,
      0.031937553091042646259,   0.031714948917344513051,
      0.031458734568078703742,   0.031169181568463050328,
      0.030846596774616454963,   0.030491322048364807973,
      0.030103733894949122542,   0.029684243064019778296,
      0.029233294114339658653,   0.028751364942657406264,
      0.028238966277249964563,   0.027696641136670978255,
      0.027124964254278447901,   0.026524541469151228748,
      0.025896009084039484519,   0.025240033191029002581,
      0.024557308965633291303,   0.023848559930060547675,
      0.023114537186434821643,   0.022356018620781905687,
      0.021573808078620492686,   0.020768734513027747161,
      0.019941651106075271609,   0.019093434364555941906,
      0.018224983190943246589,   0.017337217930540849428,
      0.016431079395787912578,   0.015507527868679228555,
      0.014567542082226554528,   0.013612118181804500923,
      0.012642268667039216159,   0.011659021314495089150,
      0.010663418080519123093,   0.0096565139815197975128,
      0.0086393759437911278123,  0.0076130816010790042415,
      0.0065787179765380973558,  0.0055373798443054670949,
      0.0044901669947436192831,  0.0034381767087562616097,
      0.0023824665407643825398,  0.0013236755298247005688,
      0.00021477663230240549828};
  IntegratorXX::GaussLobatto<double, double> quad(97);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 97; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("98 point GaussLobatto", "[1d-quad]") {
  std::array<double, 98> ref_pts = {-1,
                                    -0.99922785182552307801,
                                    -0.99741230674166365304,
                                    -0.99456103602252093942,
                                    -0.99067722050685754873,
                                    -0.98576493111758466008,
                                    -0.97982927859086503952,
                                    -0.97287642905179519431,
                                    -0.96491360229699234442,
                                    -0.95594906569723708352,
                                    -0.94599212611869633310,
                                    -0.93505312046919536386,
                                    -0.92314340506233573335,
                                    -0.91027534387537006129,
                                    -0.89646229573877366181,
                                    -0.88171860048199532148,
                                    -0.86605956405499680286,
                                    -0.84950144264362417261,
                                    -0.83206142579666058985,
                                    -0.81375761858282070970,
                                    -0.79460902279663318259,
                                    -0.77463551723297100161,
                                    -0.75385783705085833260,
                                    -0.73229755224807098177,
                                    -0.70997704526893673289,
                                    -0.68691948776862076246,
                                    -0.66314881655804391549,
                                    -0.63868970875442383415,
                                    -0.61356755616324810859,
                                    -0.58780843891828284222,
                                    -0.56143909840698781166,
                                    -0.53448690950944955003,
                                    -0.50697985217965516254,
                                    -0.47894648239861158982,
                                    -0.45041590252946654990,
                                    -0.42141773110540776354,
                                    -0.39198207208170560775,
                                    -0.36213948358382040346,
                                    -0.33192094618401852482,
                                    -0.30135783073943086072,
                                    -0.27048186582494234428,
                                    -0.23932510479472181215,
                                    -0.20791989250658692034,
                                    -0.17629883174374882277,
                                    -0.14449474936879544567,
                                    -0.11254066224505013768,
                                    -0.080469742960683951104,
                                    -0.048315285391164563245,
                                    -0.016110670135792663313,
                                    0.016110670135792663313,
                                    0.048315285391164563245,
                                    0.080469742960683951104,
                                    0.11254066224505013768,
                                    0.14449474936879544567,
                                    0.17629883174374882277,
                                    0.20791989250658692034,
                                    0.23932510479472181215,
                                    0.27048186582494234428,
                                    0.30135783073943086072,
                                    0.33192094618401852482,
                                    0.36213948358382040346,
                                    0.39198207208170560775,
                                    0.42141773110540776354,
                                    0.45041590252946654990,
                                    0.47894648239861158982,
                                    0.50697985217965516254,
                                    0.53448690950944955003,
                                    0.56143909840698781166,
                                    0.58780843891828284222,
                                    0.61356755616324810859,
                                    0.63868970875442383415,
                                    0.66314881655804391549,
                                    0.68691948776862076246,
                                    0.70997704526893673289,
                                    0.73229755224807098177,
                                    0.75385783705085833260,
                                    0.77463551723297100161,
                                    0.79460902279663318259,
                                    0.81375761858282070970,
                                    0.83206142579666058985,
                                    0.84950144264362417261,
                                    0.86605956405499680286,
                                    0.88171860048199532148,
                                    0.89646229573877366181,
                                    0.91027534387537006129,
                                    0.92314340506233573335,
                                    0.93505312046919536386,
                                    0.94599212611869633310,
                                    0.95594906569723708352,
                                    0.96491360229699234442,
                                    0.97287642905179519431,
                                    0.97982927859086503952,
                                    0.98576493111758466008,
                                    0.99067722050685754873,
                                    0.99456103602252093942,
                                    0.99741230674166365304,
                                    0.99922785182552307801,
                                    1};
  std::array<double, 98> ref_wgt = {
      0.00021039343572480538607, 0.0012966686977251626232,
      0.0023338867453652231415,  0.0033681372547995773262,
      0.0043988165013370536438,  0.0054249106337130672270,
      0.0064453666857233616557,  0.0074591289874169866200,
      0.0084651464913087100293,  0.0094623754059019141399,
      0.010449780755786946374,   0.011426337628496741868,
      0.012391032308784479465,   0.013342863362451257103,
      0.014280842691149918797,   0.015203996565960370670,
      0.016111366642469823674,   0.017002010958049751839,
      0.017875004911142652242,   0.018729442221975396345,
      0.019564435873933041211,   0.020379119034743948429,
      0.021172645956593313200,   0.021944192854274011864,
      0.022692958760489418567,   0.023418166357436606601,
      0.024119062783817014240,   0.024794920416443512386,
      0.025445037625636897711,   0.026068739503630586172,
      0.026665378565229354968,   0.027234335419996158890,
      0.027775019415270184754,   0.028286869249349302963,
      0.028769353554200851640,   0.029221971447096184964,
      0.029644253050596581559,   0.030035759980350894988,
      0.030396085800198694137,   0.030724856444106546104,
      0.031021730604499499060,   0.031286400086584688920,
      0.031518590128299283482,   0.031718059685550652947,
      0.031884601682452678390,   0.032018043226298441821,
      0.032118245787046144554,   0.032185105341131936472,
      0.032218552479460368836,   0.032218552479460368836,
      0.032185105341131936472,   0.032118245787046144554,
      0.032018043226298441821,   0.031884601682452678390,
      0.031718059685550652947,   0.031518590128299283482,
      0.031286400086584688920,   0.031021730604499499060,
      0.030724856444106546104,   0.030396085800198694137,
      0.030035759980350894988,   0.029644253050596581559,
      0.029221971447096184964,   0.028769353554200851640,
      0.028286869249349302963,   0.027775019415270184754,
      0.027234335419996158890,   0.026665378565229354968,
      0.026068739503630586172,   0.025445037625636897711,
      0.024794920416443512386,   0.024119062783817014240,
      0.023418166357436606601,   0.022692958760489418567,
      0.021944192854274011864,   0.021172645956593313200,
      0.020379119034743948429,   0.019564435873933041211,
      0.018729442221975396345,   0.017875004911142652242,
      0.017002010958049751839,   0.016111366642469823674,
      0.015203996565960370670,   0.014280842691149918797,
      0.013342863362451257103,   0.012391032308784479465,
      0.011426337628496741868,   0.010449780755786946374,
      0.0094623754059019141399,  0.0084651464913087100293,
      0.0074591289874169866200,  0.0064453666857233616557,
      0.0054249106337130672270,  0.0043988165013370536438,
      0.0033681372547995773262,  0.0023338867453652231415,
      0.0012966686977251626232,  0.00021039343572480538607};
  IntegratorXX::GaussLobatto<double, double> quad(98);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 98; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("99 point GaussLobatto", "[1d-quad]") {
  std::array<double, 99> ref_pts = {-1,
                                    -0.99924344881142293510,
                                    -0.99746456127204098792,
                                    -0.99467081638809829610,
                                    -0.99086527223029431290,
                                    -0.98605183787414641478,
                                    -0.98023542026795295136,
                                    -0.97342193970084074906,
                                    -0.96561832836999884350,
                                    -0.95683252469898015610,
                                    -0.94707346575668686825,
                                    -0.93635107837073913982,
                                    -0.92467626912354787075,
                                    -0.91206091330482407726,
                                    -0.89851784285699091287,
                                    -0.88406083333671672414,
                                    -0.86870458991095252501,
                                    -0.85246473240426283895,
                                    -0.83535777941399092552,
                                    -0.81740113151014455697,
                                    -0.79861305353750527794,
                                    -0.77901265603820668808,
                                    -0.75861987581382591748,
                                    -0.73745545564685194408,
                                    -0.71554092320221610674,
                                    -0.69289856913038372544,
                                    -0.66955142439430504218,
                                    -0.64552323684330492660,
                                    -0.62083844705775139577,
                                    -0.59552216348908115623,
                                    -0.56960013692047469325,
                                    -0.54309873427416278267,
                                    -0.51604491179200972727,
                                    -0.48846618761665528539,
                                    -0.46039061380110640824,
                                    -0.43184674777525084292,
                                    -0.40286362329831675215,
                                    -0.37347072092682515327,
                                    -0.34369793802807463555,
                                    -0.31357555836965995710,
                                    -0.28313422131595727146,
                                    -0.25240489066290844109,
                                    -0.22141882314280474912,
                                    -0.19020753663110594302,
                                    -0.15880277808763359000,
                                    -0.12723649126474788368,
                                    -0.095540784215354037878,
                                    -0.063747896633787994538,
                                    -0.031890167062801150697,
                                    0,
                                    0.031890167062801150697,
                                    0.063747896633787994538,
                                    0.095540784215354037878,
                                    0.12723649126474788368,
                                    0.15880277808763359000,
                                    0.19020753663110594302,
                                    0.22141882314280474912,
                                    0.25240489066290844109,
                                    0.28313422131595727146,
                                    0.31357555836965995710,
                                    0.34369793802807463555,
                                    0.37347072092682515327,
                                    0.40286362329831675215,
                                    0.43184674777525084292,
                                    0.46039061380110640824,
                                    0.48846618761665528539,
                                    0.51604491179200972727,
                                    0.54309873427416278267,
                                    0.56960013692047469325,
                                    0.59552216348908115623,
                                    0.62083844705775139577,
                                    0.64552323684330492660,
                                    0.66955142439430504218,
                                    0.69289856913038372544,
                                    0.71554092320221610674,
                                    0.73745545564685194408,
                                    0.75861987581382591748,
                                    0.77901265603820668808,
                                    0.79861305353750527794,
                                    0.81740113151014455697,
                                    0.83535777941399092552,
                                    0.85246473240426283895,
                                    0.86870458991095252501,
                                    0.88406083333671672414,
                                    0.89851784285699091287,
                                    0.91206091330482407726,
                                    0.92467626912354787075,
                                    0.93635107837073913982,
                                    0.94707346575668686825,
                                    0.95683252469898015610,
                                    0.96561832836999884350,
                                    0.97342193970084074906,
                                    0.98023542026795295136,
                                    0.98605183787414641478,
                                    0.99086527223029431290,
                                    0.99467081638809829610,
                                    0.99746456127204098792,
                                    0.99924344881142293510,
                                    1};
  std::array<double, 99> ref_wgt = {
      0.00020614306328592042878, 0.0012704799777822972943,
      0.0022867773953425684117,  0.0033002151411631388418,
      0.0043102228520659346608,  0.0053158281818827971920,
      0.0063160202742688513816,  0.0073097853952025775420,
      0.0082961140684587429683,  0.0092740036136167950078,
      0.010242459632815281067,   0.011200497191140964871,
      0.012147141887327426552,   0.013081430875699181584,
      0.014002413860416873931,   0.014909154069722674306,
      0.015800729212924282198,   0.016676232420854347752,
      0.017534773169679916310,   0.018375478187546865338,
      0.019197492343363656640,   0.019999979516945885665,
      0.020782123449708474058,   0.021543128575082678363,
      0.022282220827838999376,   0.022998648431508780368,
      0.023691682663113720855,   0.024360618594432036277,
      0.025004775809051620535,   0.025623499094483767718,
      0.026216159108635448221,   0.026782153019963602665,
      0.027320905120661275306,   0.027831867412252559827,
      0.028314520163001202185,   0.028768372436566240677,
      0.029192962591367214772,   0.029587858750151199508,
      0.029952659239284182957,   0.030286992997320063849,
      0.030590519952431769920,   0.030862931368320650403,
      0.031103950158252344245,   0.031313331166899735196,
      0.031490861419706341971,   0.031636360339516522211,
      0.031749679930252158921,   0.031830704927449013152,
      0.031879352915499632582,   0.031895574411483567878,
      0.031879352915499632582,   0.031830704927449013152,
      0.031749679930252158921,   0.031636360339516522211,
      0.031490861419706341971,   0.031313331166899735196,
      0.031103950158252344245,   0.030862931368320650403,
      0.030590519952431769920,   0.030286992997320063849,
      0.029952659239284182957,   0.029587858750151199508,
      0.029192962591367214772,   0.028768372436566240677,
      0.028314520163001202185,   0.027831867412252559827,
      0.027320905120661275306,   0.026782153019963602665,
      0.026216159108635448221,   0.025623499094483767718,
      0.025004775809051620535,   0.024360618594432036277,
      0.023691682663113720855,   0.022998648431508780368,
      0.022282220827838999376,   0.021543128575082678363,
      0.020782123449708474058,   0.019999979516945885665,
      0.019197492343363656640,   0.018375478187546865338,
      0.017534773169679916310,   0.016676232420854347752,
      0.015800729212924282198,   0.014909154069722674306,
      0.014002413860416873931,   0.013081430875699181584,
      0.012147141887327426552,   0.011200497191140964871,
      0.010242459632815281067,   0.0092740036136167950078,
      0.0082961140684587429683,  0.0073097853952025775420,
      0.0063160202742688513816,  0.0053158281818827971920,
      0.0043102228520659346608,  0.0033002151411631388418,
      0.0022867773953425684117,  0.0012704799777822972943,
      0.00020614306328592042878};
  IntegratorXX::GaussLobatto<double, double> quad(99);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 99; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("100 point GaussLobatto", "[1d-quad]") {
  std::array<double, 100> ref_pts = {-1,
                                     -0.99925857796524492281,
                                     -0.99751524903712861019,
                                     -0.99477730719045528218,
                                     -0.99104769371292829546,
                                     -0.98633016381681099006,
                                     -0.98062943072201649401,
                                     -0.97395118100766038933,
                                     -0.96630207344081899866,
                                     -0.95768973368097411946,
                                     -0.94812274716235324466,
                                     -0.93761065073551865215,
                                     -0.92616392325222888998,
                                     -0.91379397516524176172,
                                     -0.90051313717814936409,
                                     -0.88633464796729654306,
                                     -0.87127264099304026745,
                                     -0.85534213041599032839,
                                     -0.83855899613357534773,
                                     -0.82093996795256403871,
                                     -0.80250260891372504658,
                                     -0.78326529778548670983,
                                     -0.76324721074419237468,
                                     -0.74246830225930305894,
                                     -0.72094928520265911248,
                                     -0.69871161020166595468,
                                     -0.67577744425701006111,
                                     -0.65216964864623643813,
                                     -0.62791175613522542156,
                                     -0.60302794752029303000,
                                     -0.57754302752430398215,
                                     -0.55148240007082879505,
                                     -0.52487204296099522741,
                                     -0.49773848197827894199,
                                     -0.47010876444704793455,
                                     -0.44201043227121937667,
                                     -0.41347149447990545606,
                                     -0.38452039930741602179,
                                     -0.35518600583544984189,
                                     -0.32549755522574257831,
                                     -0.29548464157184773340,
                                     -0.26517718239910640862,
                                     -0.23460538884221235546,
                                     -0.20379973553010013737,
                                     -0.17279093020817593630,
                                     -0.14160988312817233549,
                                     -0.11028767623614002843,
                                     -0.078855532189290610718,
                                     -0.047344783232575205450,
                                     -0.015786839966023482370,
                                     0.015786839966023482370,
                                     0.047344783232575205450,
                                     0.078855532189290610718,
                                     0.11028767623614002843,
                                     0.14160988312817233549,
                                     0.17279093020817593630,
                                     0.20379973553010013737,
                                     0.23460538884221235546,
                                     0.26517718239910640862,
                                     0.29548464157184773340,
                                     0.32549755522574257831,
                                     0.35518600583544984189,
                                     0.38452039930741602179,
                                     0.41347149447990545606,
                                     0.44201043227121937667,
                                     0.47010876444704793455,
                                     0.49773848197827894199,
                                     0.52487204296099522741,
                                     0.55148240007082879505,
                                     0.57754302752430398215,
                                     0.60302794752029303000,
                                     0.62791175613522542156,
                                     0.65216964864623643813,
                                     0.67577744425701006111,
                                     0.69871161020166595468,
                                     0.72094928520265911248,
                                     0.74246830225930305894,
                                     0.76324721074419237468,
                                     0.78326529778548670983,
                                     0.80250260891372504658,
                                     0.82093996795256403871,
                                     0.83855899613357534773,
                                     0.85534213041599032839,
                                     0.87127264099304026745,
                                     0.88633464796729654306,
                                     0.90051313717814936409,
                                     0.91379397516524176172,
                                     0.92616392325222888998,
                                     0.93761065073551865215,
                                     0.94812274716235324466,
                                     0.95768973368097411946,
                                     0.96630207344081899866,
                                     0.97395118100766038933,
                                     0.98062943072201649401,
                                     0.98633016381681099006,
                                     0.99104769371292829546,
                                     0.99477730719045528218,
                                     0.99751524903712861019,
                                     0.99925857796524492281,
                                     1};
  std::array<double, 100> ref_wgt = {
      0.00020202020202020202020, 0.0012450766591352942893,
      0.0022410797550829630450,  0.0032343259236349601274,
      0.0042242763316545074348,  0.0052099980705850798667,
      0.0061905203191467993692,  0.0071648692230117860388,
      0.0081320748477389990538,  0.0090911736265803263805,
      0.010041209778500831941,   0.010981236426462550781,
      0.011910316608771469478,   0.012827524243262733436,
      0.013731945065015462698,   0.014622677545198368306,
      0.015498833793784865807,   0.016359540446913776030,
      0.017203939538825604536,   0.018031189357921348572,
      0.018840465286312474030,   0.019630960622148179418,
      0.020401887383970712731,   0.021152477096338553971,
      0.021881981555959572786,   0.022589673577586142378,
      0.023274847718938643155,   0.023936820983941188731,
      0.024574933503572831284,   0.025188549193658416299,
      0.025777056388945333874,   0.026339868452835451554,
      0.026876424362165378012,   0.027386189266452805112,
      0.027868655021051939597,   0.028323340693686911759,
      0.028749793043858492721,   0.029147586974646425933,
      0.029516325956457147251,   0.029855642422294598437,
      0.030165198134160199712,   0.030444684520216807012,
      0.030693822982380608454,   0.030912365174034381835,
      0.031100093247585310487,   0.031256820071620608072,
      0.031382389417444503601,   0.031476676114810655384,
      0.031539586176694766221,   0.031571056892983030979,
      0.031571056892983030979,   0.031539586176694766221,
      0.031476676114810655384,   0.031382389417444503601,
      0.031256820071620608072,   0.031100093247585310487,
      0.030912365174034381835,   0.030693822982380608454,
      0.030444684520216807012,   0.030165198134160199712,
      0.029855642422294598437,   0.029516325956457147251,
      0.029147586974646425933,   0.028749793043858492721,
      0.028323340693686911759,   0.027868655021051939597,
      0.027386189266452805112,   0.026876424362165378012,
      0.026339868452835451554,   0.025777056388945333874,
      0.025188549193658416299,   0.024574933503572831284,
      0.023936820983941188731,   0.023274847718938643155,
      0.022589673577586142378,   0.021881981555959572786,
      0.021152477096338553971,   0.020401887383970712731,
      0.019630960622148179418,   0.018840465286312474030,
      0.018031189357921348572,   0.017203939538825604536,
      0.016359540446913776030,   0.015498833793784865807,
      0.014622677545198368306,   0.013731945065015462698,
      0.012827524243262733436,   0.011910316608771469478,
      0.010981236426462550781,   0.010041209778500831941,
      0.0090911736265803263805,  0.0081320748477389990538,
      0.0071648692230117860388,  0.0061905203191467993692,
      0.0052099980705850798667,  0.0042242763316545074348,
      0.0032343259236349601274,  0.0022410797550829630450,
      0.0012450766591352942893,  0.00020202020202020202020};
  IntegratorXX::GaussLobatto<double, double> quad(100);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 100; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}
