
/* THIS FILE IS AUTOGENERATED BY generate_quadrature_tests.py.
   DO NOT EDIT THIS FILE, EDIT THE AUTOGENERATOR INSTEAD.
*/

// clang-format off
#include "catch2/catch_all.hpp"
#include <integratorxx/quadratures/gausschebyshev2.hpp>
#include <numeric>
#include <vector>
// clang-format on

const double x_tolerance = 10 * std::numeric_limits<double>::epsilon();
const double w_tolerance = 10 * std::numeric_limits<double>::epsilon();

TEST_CASE("2 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 2> ref_pts = {0.50000000000000000000,
                                   -0.50000000000000000000};
  std::array<double, 2> ref_wgt = {0.64127491508093204777,
                                   1.1107207345395915618};
  IntegratorXX::GaussChebyshev2<double, double> quad(2);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 2; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("3 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 3> ref_pts = {0.70710678118654752440, 0,
                                   -0.70710678118654752440};
  std::array<double, 3> ref_wgt = {
      0.30055886494217313536, 0.78539816339744830962, 0.72561328803485775351};
  IntegratorXX::GaussChebyshev2<double, double> quad(3);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 3; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("4 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 4> ref_pts = {
      0.80901699437494742410, 0.30901699437494742410, -0.30901699437494742410,
      -0.80901699437494742410};
  std::array<double, 4> ref_wgt = {
      0.16139717007607324330, 0.49672941328980506172, 0.68368938381834116247,
      0.49672941328980506172};
  IntegratorXX::GaussChebyshev2<double, double> quad(4);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 4; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("5 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 5> ref_pts = {
      0.86602540378443864676, 0.50000000000000000000, 0,
      -0.50000000000000000000, -0.86602540378443864676};
  std::array<double, 5> ref_wgt = {
      0.095825226629702513055, 0.32063745754046602389, 0.52359877559829887308,
      0.55536036726979578088, 0.35762461442885194959};
  IntegratorXX::GaussChebyshev2<double, double> quad(5);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 5; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("6 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 6> ref_pts = {
      0.90096886790241912624,  0.62348980185873353053,
      0.22252093395631440429,  -0.22252093395631440429,
      -0.62348980185873353053, -0.90096886790241912624};
  std::array<double, 6> ref_wgt = {
      0.061278916642479331903, 0.21530462501128163813, 0.38580574397443044102,
      0.48378510098638746230,  0.44708466061690977293, 0.26848047597510582417};
  IntegratorXX::GaussChebyshev2<double, double> quad(6);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 6; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("7 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 7> ref_pts = {
      0.92387953251128675613,  0.70710678118654752440,
      0.38268343236508977173,  0,
      -0.38268343236508977173, -0.70710678118654752440,
      -0.92387953251128675613};
  std::array<double, 7> ref_wgt = {
      0.041462002137765734793, 0.15027943247108656768, 0.28505535107383797587,
      0.39269908169872415481,  0.42661548109574000769, 0.36280664401742887676,
      0.20844356076979601755};
  IntegratorXX::GaussChebyshev2<double, double> quad(7);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 7; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("8 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 8> ref_pts = {
      0.93969262078590838405,  0.76604444311897803520,  0.50000000000000000000,
      0.17364817766693034885,  -0.17364817766693034885, -0.50000000000000000000,
      -0.76604444311897803520, -0.93969262078590838405};
  std::array<double, 8> ref_wgt = {
      0.029318670707690295217, 0.10852793571799161003, 0.21375830502697734926,
      0.31249373640463987353,  0.37241553302341762496, 0.37024024484653052058,
      0.29817805276520471803,  0.16627444415988225708};
  IntegratorXX::GaussChebyshev2<double, double> quad(8);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 8; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("9 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 9> ref_pts = {0.95105651629515357212,
                                   0.80901699437494742410,
                                   0.58778525229247312917,
                                   0.30901699437494742410,
                                   0,
                                   -0.30901699437494742410,
                                   -0.58778525229247312917,
                                   -0.80901699437494742410,
                                   -0.95105651629515357212};
  std::array<double, 9> ref_wgt = {
      0.021477299627189871606, 0.080698585038036621648, 0.16318088342185580412,
      0.24836470664490253086,  0.31415926535897932385,  0.34184469190917058123,
      0.32026051610134546604,  0.24836470664490253086,  0.13560233305229979032};
  IntegratorXX::GaussChebyshev2<double, double> quad(9);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 9; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("10 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 10> ref_pts = {
      0.95949297361449738989,  0.84125353283118116886,  0.65486073394528506406,
      0.41541501300188642553,  0.14231483827328514044,  -0.14231483827328514044,
      -0.41541501300188642553, -0.65486073394528506406, -0.84125353283118116886,
      -0.95949297361449738989};
  std::array<double, 10> ref_wgt = {
      0.016194196536025865107, 0.061520244547241530494, 0.12680380464768271980,
      0.19863086974964770967,  0.26180503422565672944,  0.30213911588165800399,
      0.30907566634098069539,  0.27766160160343650103,  0.20951871178788644653,
      0.11263311092418467622};
  IntegratorXX::GaussChebyshev2<double, double> quad(10);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 10; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("11 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 11> ref_pts = {
      0.96592582628906828675,  0.86602540378443864676,  0.70710678118654752440,
      0.50000000000000000000,  0.25881904510252076235,  0,
      -0.25881904510252076235, -0.50000000000000000000, -0.70710678118654752440,
      -0.86602540378443864676, -0.96592582628906828675};
  std::array<double, 11> ref_wgt = {
      0.012507701950598556752, 0.047912613314851256527, 0.10018628831405771179,
      0.16031872877023301194,  0.21770807132840064697,  0.26179938779914943654,
      0.28372268242749475002,  0.27768018363489789044,  0.24187109601161925117,
      0.17881230721442597480,  0.095005428531999373891};
  IntegratorXX::GaussChebyshev2<double, double> quad(11);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 11; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("12 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 12> ref_pts = {
      0.97094181742605202716,  0.88545602565320989590,
      0.74851074817110109863,  0.56806474673115580251,
      0.35460488704253562597,  0.12053668025532305335,
      -0.12053668025532305335, -0.35460488704253562597,
      -0.56806474673115580251, -0.74851074817110109863,
      -0.88545602565320989590, -0.97094181742605202716};
  std::array<double, 12> ref_wgt = {
      0.0098585233754105372547, 0.038009046250351670231,
      0.080363733057226058015,  0.13070950418213606462,
      0.18152586376368326296,   0.22497656934994785707,
      0.25394605078318420504,   0.26298561560029952730,
      0.24904615274341308184,   0.21190174889588535220,
      0.15420876253467216153,   0.081192244713749287581};
  IntegratorXX::GaussChebyshev2<double, double> quad(12);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 12; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("13 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 13> ref_pts = {0.97492791218182360702,
                                    0.90096886790241912624,
                                    0.78183148246802980871,
                                    0.62348980185873353053,
                                    0.43388373911755812048,
                                    0.22252093395631440429,
                                    0,
                                    -0.22252093395631440429,
                                    -0.43388373911755812048,
                                    -0.62348980185873353053,
                                    -0.78183148246802980871,
                                    -0.90096886790241912624,
                                    -0.97492791218182360702};
  std::array<double, 13> ref_wgt = {
      0.0079065671048281773110, 0.030639458321239665952,
      0.065350246733435305273,  0.10765231250564081906,
      0.15211934137987055843,   0.19290287198721522051,
      0.22439947525641380275,   0.24189255049319373115,
      0.24209654493133171379,   0.22354233030845488646,
      0.18676027525959681558,   0.13424023798755291209,
      0.070172723919671014561};
  IntegratorXX::GaussChebyshev2<double, double> quad(13);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 13; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("14 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 14> ref_pts = {
      0.97814760073380563793,  0.91354545764260089550,  0.80901699437494742410,
      0.66913060635885821383,  0.50000000000000000000,  0.30901699437494742410,
      0.10452846326765347140,  -0.10452846326765347140, -0.30901699437494742410,
      -0.50000000000000000000, -0.66913060635885821383, -0.80901699437494742410,
      -0.91354545764260089550, -0.97814760073380563793};
  std::array<double, 14> ref_wgt = {
      0.0064370530361516502149, 0.025047582843738334758,
      0.053799056692024414432,  0.089528306502765141311,
      0.12825498301618640955,   0.16557647109660168724,
      0.19710555114685104014,   0.21890789184599833455,
      0.22789646127278038749,   0.22214414690791831235,
      0.20108386871057846561,   0.16557647109660168724,
      0.11783961241630733388,   0.061244468597106828756};
  IntegratorXX::GaussChebyshev2<double, double> quad(14);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 14; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("15 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 15> ref_pts = {
      0.98078528040323044913,  0.92387953251128675613,
      0.83146961230254523708,  0.70710678118654752440,
      0.55557023301960222474,  0.38268343236508977173,
      0.19509032201612826785,  0,
      -0.19509032201612826785, -0.38268343236508977173,
      -0.55557023301960222474, -0.70710678118654752440,
      -0.83146961230254523708, -0.92387953251128675613,
      -0.98078528040323044913};
  std::array<double, 15> ref_wgt = {
      0.0053098547496103494519, 0.020731001068882867397,
      0.044782462255226777663,  0.075139716235543283839,
      0.10883732055484630339,   0.14252767553691898794,
      0.17277360854409756538,   0.19634954084936207740,
      0.21052525113953979619,   0.21330774054787000385,
      0.20362030504985797796,   0.18140332200871443838,
      0.14762799356393832391,   0.10422178038489800877,
      0.053911860006248060460};
  IntegratorXX::GaussChebyshev2<double, double> quad(15);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 15; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("16 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 16> ref_pts = {
      0.98297309968390177828,   0.93247222940435580457,
      0.85021713572961415213,   0.73900891722065911592,
      0.60263463637925638918,   0.44573835577653826740,
      0.27366299007208286354,   0.092268359463301995240,
      -0.092268359463301995240, -0.27366299007208286354,
      -0.44573835577653826740,  -0.60263463637925638918,
      -0.73900891722065911592,  -0.85021713572961415213,
      -0.93247222940435580457,  -0.98297309968390177828};
  std::array<double, 16> ref_wgt = {
      0.0044309306843137901528, 0.017347623740919752057,
      0.037650819378435498871,  0.063602988898963556322,
      0.092962591659559584712,  0.12315743311924547236,
      0.15148386937337132544,   0.17531662509938894501,
      0.19231317659143326519,   0.20059706183058163908,
      0.19890608403964687568,   0.18669405144166457895,
      0.16417823968476161116,   0.13232890408421218121,
      0.092801590357284624081,  0.047817357334941964436};
  IntegratorXX::GaussChebyshev2<double, double> quad(16);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 16; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("17 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 17> ref_pts = {
      0.98480775301220805937,  0.93969262078590838405,  0.86602540378443864676,
      0.76604444311897803520,  0.64278760968653932632,  0.50000000000000000000,
      0.34202014332566873304,  0.17364817766693034885,  0,
      -0.17364817766693034885, -0.34202014332566873304, -0.50000000000000000000,
      -0.64278760968653932632, -0.76604444311897803520, -0.86602540378443864676,
      -0.93969262078590838405, -0.98480775301220805937};
  std::array<double, 17> ref_wgt = {
      0.0037355848358171556829, 0.014659335353845147609,
      0.031941742209900837685,  0.054263967858995805015,
      0.079908796783021336350,  0.10687915251348867463,
      0.13303609335793161542,   0.15624686820231993677,
      0.17453292519943295769,   0.18620776651170881248,
      0.18999523155388789504,   0.18512012242326526029,
      0.17136496771078121023,   0.14908902638260235902,
      0.11920820480961731653,   0.083137222079941128540,
      0.042697930054792233980};
  IntegratorXX::GaussChebyshev2<double, double> quad(17);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 17; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("18 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 18> ref_pts = {
      0.98636130340272237360,  0.94581724170063467902,
      0.87947375120648907139,  0.78914050939639359922,
      0.67728157162574107476,  0.54694815812242687471,
      0.40169542465296945752,  0.24548548714079914892,
      0.082579345472332324600, -0.082579345472332324600,
      -0.24548548714079914892, -0.40169542465296945752,
      -0.54694815812242687471, -0.67728157162574107476,
      -0.78914050939639359922, -0.87947375120648907139,
      -0.94581724170063467902, -0.98636130340272237360};
  std::array<double, 18> ref_wgt = {
      0.0031783247006448739031, 0.012497075840898861757,
      0.027320965575348092324,  0.046634964368117969531,
      0.069107156748887283259,  0.093171277861845672380,
      0.11712387261953038103,   0.13923012246141569980,
      0.15783185240878153217,   0.17145109589241914487,
      0.17888286499539933403,   0.17927143277702309258,
      0.17216544190520808411,   0.15754844827091355307,
      0.13584301037971792461,   0.10788805319180105371,
      0.074890869706758092904,  0.038356674932280583547};
  IntegratorXX::GaussChebyshev2<double, double> quad(18);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 18; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("19 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 19> ref_pts = {
      0.98768834059513772619,  0.95105651629515357212,
      0.89100652418836786236,  0.80901699437494742410,
      0.70710678118654752440,  0.58778525229247312917,
      0.45399049973954679156,  0.30901699437494742410,
      0.15643446504023086901,  0,
      -0.15643446504023086901, -0.30901699437494742410,
      -0.45399049973954679156, -0.58778525229247312917,
      -0.70710678118654752440, -0.80901699437494742410,
      -0.89100652418836786236, -0.95105651629515357212,
      -0.98768834059513772619};
  std::array<double, 19> ref_wgt = {
      0.0027265320970999515854, 0.010738649813594935803,
      0.023543275956875777442,  0.040349292519018310824,
      0.060111772988434627071,  0.081590441710927902060,
      0.10341912540874794537,   0.12418235332245126543,
      0.14249486622567347980,   0.15707963267948966192,
      0.16684005229359411372,   0.17092234595458529062,
      0.16876467427964920883,   0.16013025805067273302,
      0.14512265760697155070,   0.12418235332245126543,
      0.098064801930349922878,  0.067801166526149895159,
      0.034643875045503754524};
  IntegratorXX::GaussChebyshev2<double, double> quad(19);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 19; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("20 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 20> ref_pts = {
      0.98883082622512854507,   0.95557280578614073281,
      0.90096886790241912624,   0.82623877431599487195,
      0.73305187182982632852,   0.62348980185873353053,
      0.50000000000000000000,   0.36534102436639501454,
      0.22252093395631440429,   0.074730093586424254291,
      -0.074730093586424254291, -0.22252093395631440429,
      -0.36534102436639501454,  -0.50000000000000000000,
      -0.62348980185873353053,  -0.73305187182982632852,
      -0.82623877431599487195,  -0.90096886790241912624,
      -0.95557280578614073281,  -0.98883082622512854507};
  std::array<double, 20> ref_wgt = {
      0.0023564083189528349098, 0.0092942951320273129396,
      0.020426305547493110634,  0.035128712195272742587,
      0.052573057946692857450,  0.071768208337093879376,
      0.091610702154418863967,  0.11094087176454734477,
      0.12860191465814348034,   0.14349894897456420327,
      0.15465508584797985239,   0.16126170032879582077,
      0.16272037289667211050,   0.15867439064851308025,
      0.14902822020563659098,   0.13395396701862555240,
      0.11388448784038979291,   0.089493491991701941390,
      0.061663619122103283471,  0.031444083776658956706};
  IntegratorXX::GaussChebyshev2<double, double> quad(20);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 20; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("21 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 21> ref_pts = {0.98982144188093273238,
                                    0.95949297361449738989,
                                    0.90963199535451837141,
                                    0.84125353283118116886,
                                    0.75574957435425828377,
                                    0.65486073394528506406,
                                    0.54064081745559758211,
                                    0.41541501300188642553,
                                    0.28173255684142969771,
                                    0.14231483827328514044,
                                    0,
                                    -0.14231483827328514044,
                                    -0.28173255684142969771,
                                    -0.41541501300188642553,
                                    -0.54064081745559758211,
                                    -0.65486073394528506406,
                                    -0.75574957435425828377,
                                    -0.84125353283118116886,
                                    -0.90963199535451837141,
                                    -0.95949297361449738989,
                                    -0.98982144188093273238};
  std::array<double, 21> ref_wgt = {
      0.0020503146075839594452, 0.0080970982680129325533,
      0.017832684506891309361,  0.030760122273620765247,
      0.046216154565577016832,  0.063401902323841359901,
      0.081419849274327531039,  0.099315434874823854837,
      0.11612135140075708887,   0.13090251711282836472,
      0.14279966607226332902,   0.15106955794082900199,
      0.15511996515627812081,   0.15453783317049034769,
      0.14910932108772965154,   0.13883080080171825051,
      0.12391030565833590261,   0.10475935589394322326,
      0.081975527680959898010,  0.056316555462092338111,
      0.028667144046764459475};
  IntegratorXX::GaussChebyshev2<double, double> quad(21);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 21; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("22 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 22> ref_pts = {
      0.99068594603633075234,  0.96291728734779929502,
      0.91721130150545301784,  0.85441940454648855255,
      0.77571129070441980704,  0.68255314321865408287,
      0.57668032211486714125,  0.46006503773115212604,
      0.33487961217098615196,  0.20345601305263378988,
      0.068242413364670975921, -0.068242413364670975921,
      -0.20345601305263378988, -0.33487961217098615196,
      -0.46006503773115212604, -0.57668032211486714125,
      -0.68255314321865408287, -0.77571129070441980704,
      -0.85441940454648855255, -0.91721130150545301784,
      -0.96291728734779929502, -0.99068594603633075234};
  std::array<double, 22> ref_wgt = {
      0.0017949905300861216030, 0.0070965053168149479233,
      0.015657704120456160694,  0.027078805922233746714,
      0.040824006687428691624,  0.056244163628109589085,
      0.072604295779717745671,  0.089114748880166781700,
      0.10496471891280258923,   0.11935672967361721811,
      0.13154061949146634093,   0.14084561245217376643,
      0.14670912930883879296,   0.14870112936328452941,
      0.14654296128529262249,   0.14011993028906553540,
      0.12948705171297046124,   0.11486774586396934680,
      0.096645524078859894835,  0.075349008977241011360,
      0.051630910579075560907,  0.026241832675085210261};
  IntegratorXX::GaussChebyshev2<double, double> quad(22);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 22; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("23 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 23> ref_pts = {
      0.99144486137381041114,  0.96592582628906828675,  0.92387953251128675613,
      0.86602540378443864676,  0.79335334029123516458,  0.70710678118654752440,
      0.60876142900872063942,  0.50000000000000000000,  0.38268343236508977173,
      0.25881904510252076235,  0.13052619222005159155,  0,
      -0.13052619222005159155, -0.25881904510252076235, -0.38268343236508977173,
      -0.50000000000000000000, -0.60876142900872063942, -0.70710678118654752440,
      -0.79335334029123516458, -0.86602540378443864676, -0.92387953251128675613,
      -0.96592582628906828675, -0.99144486137381041114};
  std::array<double, 23> ref_wgt = {
      0.0015803374259476831097, 0.0062538509752992783761,
      0.013820667379255244931,  0.023956306657425628264,
      0.036224295973550807592,  0.050093144157028855893,
      0.064957023707700446679,  0.080159364385116505972,
      0.095018450357945991958,  0.10885403566420032349,
      0.12101395337725162570,   0.13089969389957471827,
      0.13798996721563222313,   0.14186134121374737501,
      0.14220516036524666923,   0.13884009181744894522,
      0.13171981382947486428,   0.12093554800580962559,
      0.10671333479463113741,   0.089406153607212987398,
      0.069481186923265339183,  0.047502714265999686946,
      0.024111289792584314982};
  IntegratorXX::GaussChebyshev2<double, double> quad(23);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 23; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("24 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 24> ref_pts = {
      0.99211470131447783105,   0.96858316112863111949,
      0.92977648588825140366,   0.87630668004386358731,
      0.80901699437494742410,   0.72896862742141152315,
      0.63742398974868971018,   0.53582679497899661827,
      0.42577929156507264886,   0.30901699437494742410,
      0.18738131458572463054,   0.062790519529313376076,
      -0.062790519529313376076, -0.18738131458572463054,
      -0.30901699437494742410,  -0.42577929156507264886,
      -0.53582679497899661827,  -0.63742398974868971018,
      -0.72896862742141152315,  -0.80901699437494742410,
      -0.87630668004386358731,  -0.92977648588825140366,
      -0.96858316112863111949,  -0.99211470131447783105};
  std::array<double, 24> ref_wgt = {
      0.0013985731385400174627, 0.0055392278742484412239,
      0.012258742644188584636,  0.021291586470851573729,
      0.032279434015214648659,  0.044784010710762749836,
      0.058302812336162808658,  0.072287141389323958709,
      0.086161820388212314667,  0.099345882657961012344,
      0.11127350638030491633,   0.12141444891301198168,
      0.12929325594499775466,   0.13450656331576741780,
      0.13673787676366823249,   0.13576930408772884464,
      0.13148982205243195640,   0.12389978301363017122,
      0.11311149935250678703,   0.099345882657961012344,
      0.082925254277470426507,  0.064262579414457327944,
      0.043847503584540022281,  0.022229683467949749266};
  IntegratorXX::GaussChebyshev2<double, double> quad(24);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 24; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("25 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 25> ref_pts = {0.99270887409805399280,
                                    0.97094181742605202716,
                                    0.93501624268541482344,
                                    0.88545602565320989590,
                                    0.82298386589365639458,
                                    0.74851074817110109863,
                                    0.66312265824079520238,
                                    0.56806474673115580251,
                                    0.46472317204376854566,
                                    0.35460488704253562597,
                                    0.23931566428755776715,
                                    0.12053668025532305335,
                                    0,
                                    -0.12053668025532305335,
                                    -0.23931566428755776715,
                                    -0.35460488704253562597,
                                    -0.46472317204376854566,
                                    -0.56806474673115580251,
                                    -0.66312265824079520238,
                                    -0.74851074817110109863,
                                    -0.82298386589365639458,
                                    -0.88545602565320989590,
                                    -0.93501624268541482344,
                                    -0.97094181742605202716,
                                    -0.99270887409805399280};
  std::array<double, 25> ref_wgt = {
      0.0012436353257146969107, 0.0049292616877052686273,
      0.010922540167400462511,  0.019004523125175835116,
      0.028878909455249460274,  0.040181866528613029008,
      0.052494096635465537952,  0.065354752091068032308,
      0.078276742491012955062,  0.090762931881841631482,
      0.10232269434895823589,   0.11248828467497392854,
      0.12083048667653050917,   0.12697302539159210252,
      0.13060526969055991274,   0.13149280780014976365,
      0.12948554782730005704,   0.12452307637170654092,
      0.11663709806658366587,   0.10595087444794267610,
      0.092675678792718405082,  0.077104381267336080766,
      0.059602372690279760825,  0.040596122356874643790,
      0.020559742847107818265};
  IntegratorXX::GaussChebyshev2<double, double> quad(25);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 25; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("26 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 26> ref_pts = {
      0.99323835774194298855,  0.97304487057982383883,
      0.93969262078590838405,  0.89363264032341224819,
      0.83548781141293641965,  0.76604444311897803520,
      0.68624163786873358573,  0.59715859170278616485,
      0.50000000000000000000,  0.39607976603915682370,
      0.28680323271109025310,  0.17364817766693034885,
      0.058144828910475828539, -0.058144828910475828539,
      -0.17364817766693034885, -0.28680323271109025310,
      -0.39607976603915682370, -0.50000000000000000000,
      -0.59715859170278616485, -0.68624163786873358573,
      -0.76604444311897803520, -0.83548781141293641965,
      -0.89363264032341224819, -0.93969262078590838405,
      -0.97304487057982383883, -0.99323835774194298855};
  std::array<double, 26> ref_wgt = {
      0.0011107540774759595001, 0.0044055081691311488490,
      0.0097728902358967650724, 0.017031086432542228978,
      0.025933428801207678418,  0.036175978572663870010,
      0.047406874361342141292,  0.059237160831029681906,
      0.071252768342325783086,  0.083027279040083471563,
      0.094135090864455391182,  0.10416457880154662451,
      0.11273085269901744312,   0.11948772315824413416,
      0.12413851100780587498,   0.12644537093433368311,
      0.12623684493073410306,   0.12341341494884350686,
      0.11795088488140950092,   0.10990148790163258263,
      0.099392684255068239345,  0.086623684730094461493,
      0.071859804098630510997,  0.055424814719960752360,
      0.037691531235114118886,  0.019070911001984960563};
  IntegratorXX::GaussChebyshev2<double, double> quad(26);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 26; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("27 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 27> ref_pts = {
      0.99371220989324258353,  0.97492791218182360702,
      0.94388333030836756290,  0.90096886790241912624,
      0.84672419922828416835,  0.78183148246802980871,
      0.70710678118654752440,  0.62348980185873353053,
      0.53203207651533656356,  0.43388373911755812048,
      0.33027906195516708177,  0.22252093395631440429,
      0.11196447610330785847,  0,
      -0.11196447610330785847, -0.22252093395631440429,
      -0.33027906195516708177, -0.43388373911755812048,
      -0.53203207651533656356, -0.62348980185873353053,
      -0.70710678118654752440, -0.78183148246802980871,
      -0.84672419922828416835, -0.90096886790241912624,
      -0.94388333030836756290, -0.97492791218182360702,
      -0.99371220989324258353};
  std::array<double, 27> ref_wgt = {
      0.00099614167933884961002, 0.0039532835524140886555,
      0.0087784699843660331294,  0.015319729160619832976,
      0.023370416652991794352,   0.032675123366717652637,
      0.042936980706024733622,   0.053826156252820409532,
      0.064989299551963477554,   0.076059670689935279213,
      0.086667665002044945731,   0.096451435993607610256,
      0.10506731573089516629,    0.11219973762820690137,
      0.11757038056806929046,    0.12094627524659686558,
      0.12214664291517782347,    0.12104827246566585689,
      0.11758928306834427322,    0.11177116515422744323,
      0.10365904114783682193,    0.093380137629798407792,
      0.081120511119940939564,   0.067120118993776456043,
      0.051666373784656812803,   0.035086361959835507281,
      0.017737945980731910627};
  IntegratorXX::GaussChebyshev2<double, double> quad(27);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 27; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("28 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 28> ref_pts = {
      0.99413795715435960895,   0.97662055571008668321,
      0.94765317118280244427,   0.90757541967095705362,
      0.85685717616758924452,   0.79609306570564374600,
      0.72599549192313085814,   0.64738628478182763918,
      0.56118706536238236927,   0.46840844069979013922,
      0.37013815533991435686,   0.26752833852922082119,
      0.16178199655276472654,   0.054138908585417526150,
      -0.054138908585417526150, -0.16178199655276472654,
      -0.26752833852922082119,  -0.37013815533991435686,
      -0.46840844069979013922,  -0.56118706536238236927,
      -0.64738628478182763918,  -0.72599549192313085814,
      -0.79609306570564374600,  -0.85685717616758924452,
      -0.90757541967095705362,  -0.94765317118280244427,
      -0.97662055571008668321,  -0.99413795715435960895};
  std::array<double, 28> ref_wgt = {
      0.00089676461479803672927, 0.0035608010771892189888,
      0.0079140367585387509749,  0.013828663882918871224,
      0.021130545336304506004,   0.029603856340104310862,
      0.038996839537579358799,   0.049028521662460057257,
      0.059396214580698111717,   0.069783602787555288907,
      0.079869203948872284634,   0.089334979205705315130,
      0.097874865975720987270,   0.10520300798793247044,
      0.11106146522687772368,    0.11522720012911129216,
      0.11751815540893287118,    0.11779826279022032476,
      0.11598125005747776107,    0.11203314547053758125,
      0.10597341288046589744,    0.097874686935674663065,
      0.087861114627269747020,   0.076105346120181012732,
      0.062824253384822599971,   0.048273488645860974215,
      0.032741025217502857598,   0.016539850093623121486};
  IntegratorXX::GaussChebyshev2<double, double> quad(28);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 28; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("29 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 29> ref_pts = {
      0.99452189536827333692,  0.97814760073380563793,  0.95105651629515357212,
      0.91354545764260089550,  0.86602540378443864676,  0.80901699437494742410,
      0.74314482547739423501,  0.66913060635885821383,  0.58778525229247312917,
      0.50000000000000000000,  0.40673664307580020775,  0.30901699437494742410,
      0.20791169081775933710,  0.10452846326765347140,  0,
      -0.10452846326765347140, -0.20791169081775933710, -0.30901699437494742410,
      -0.40673664307580020775, -0.50000000000000000000, -0.58778525229247312917,
      -0.66913060635885821383, -0.74314482547739423501, -0.80901699437494742410,
      -0.86602540378443864676, -0.91354545764260089550, -0.95105651629515357212,
      -0.97814760073380563793, -0.99452189536827333692};
  std::array<double, 29> ref_wgt = {
      0.00081017408090061379508, 0.0032185265180758251075,
      0.0071590998757299572021,  0.012523791421869167379,
      0.019165045325940502611,   0.026899528346012207216,
      0.035512698381736762134,   0.044764153251382570655,
      0.054393627807285268040,   0.064127491508093204777,
      0.073685586212124739957,   0.082788235548300843620,
      0.091163252966577964814,   0.098552775573425520072,
      0.10471975511965977462,    0.10945394592299916728,
      0.11257724186891271780,    0.11394823063639019374,
      0.11346585254618979171,    0.11107207345395915618,
      0.10675350536711515535,    0.10054193435528923280,
      0.092513742212031701057,   0.082788235548300843620,
      0.071524922885770389919,   0.058919806208153666938,
      0.045200777684099930106,   0.030622234298553414378,
      0.015459042378519185615};
  IntegratorXX::GaussChebyshev2<double, double> quad(29);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 29; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("30 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 30> ref_pts = {
      0.99486932339189514632,  0.97952994125249449394,
      0.95413925640004885148,  0.91895781162023062913,
      0.87434661614458211883,  0.82076344120727632636,
      0.75875812269279090191,  0.68896691907568656780,
      0.61210598254766284415,  0.52896401032696245737,
      0.44039415155763430952,  0.34730525284482028554,
      0.25065253225872053931,  0.15142777750457666366,
      0.050649168838712712279, -0.050649168838712712279,
      -0.15142777750457666366, -0.25065253225872053931,
      -0.34730525284482028554, -0.44039415155763430952,
      -0.52896401032696245737, -0.61210598254766284415,
      -0.68896691907568656780, -0.75875812269279090191,
      -0.82076344120727632636, -0.87434661614458211883,
      -0.91895781162023062913, -0.95413925640004885148,
      -0.97952994125249449394, -0.99486932339189514632};
  std::array<double, 30> ref_wgt = {
      0.00073437865645212389551, 0.0029186922533567928442,
      0.0064969126194738803215,  0.011377112487129343225,
      0.017433609776639736722,   0.024509899946471191105,
      0.032422308692802947241,   0.040964280644158762255,
      0.049911205004540949741,   0.059025666690965276242,
      0.068063001674670621759,   0.076777028196490553619,
      0.084925821448321377707,   0.092277398288425166747,
      0.098615180612143876291,   0.10374311108415768835,
      0.10749030293648258843,    0.10971511626355720398,
      0.11030856645466135525,    0.10919698578994348875,
      0.10634387643470159325,    0.10175091170042125458,
      0.095458062070704986999,   0.087542842662940252691,
      0.078118699047133007769,   0.067332568204763914108,
      0.055361670424762472210,   0.042409605662233356308,
      0.028701843919551793827,   0.014480713179092645593};
  IntegratorXX::GaussChebyshev2<double, double> quad(30);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 30; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("31 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 31> ref_pts = {
      0.99518472667219688624,   0.98078528040323044913,
      0.95694033573220886494,   0.92387953251128675613,
      0.88192126434835502971,   0.83146961230254523708,
      0.77301045336273696081,   0.70710678118654752440,
      0.63439328416364549822,   0.55557023301960222474,
      0.47139673682599764856,   0.38268343236508977173,
      0.29028467725446236764,   0.19509032201612826785,
      0.098017140329560601994,  0,
      -0.098017140329560601994, -0.19509032201612826785,
      -0.29028467725446236764,  -0.38268343236508977173,
      -0.47139673682599764856,  -0.55557023301960222474,
      -0.63439328416364549822,  -0.70710678118654752440,
      -0.77301045336273696081,  -0.83146961230254523708,
      -0.88192126434835502971,  -0.92387953251128675613,
      -0.95694033573220886494,  -0.98078528040323044913,
      -0.99518472667219688624};
  std::array<double, 31> ref_wgt = {
      0.00066774768960152499222, 0.0026549273748051747260,
      0.0059137005039621256557,  0.010365500534441433698,
      0.015902752991400454995,   0.022391231127613388832,
      0.029672996126397683706,   0.037569858117771641920,
      0.045887282985830109548,   0.054418660277423151693,
      0.062949839687889015628,   0.071263837768459493968,
      0.079145612798290999629,   0.086386804272048782691,
      0.092790334203922282872,   0.098174770424681038702,
      0.10237835718551466927,    0.10526262556976989810,
      0.10671550529575233092,    0.10665387027393500192,
      0.10502546252688315696,    0.10181015252492898898,
      0.097020508344101940835,   0.090701661004357219189,
      0.082930468572116688790,   0.073813996781969161953,
      0.063487348719689753281,   0.052110890192449004387,
      0.039866930487339300446,   0.026955930003124030230,
      0.013592316477343836065};
  IntegratorXX::GaussChebyshev2<double, double> quad(31);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 31; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("32 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 32> ref_pts = {
      0.99547192257308460473,   0.98192869726270670040,
      0.95949297361449738989,   0.92836793301607261020,
      0.88883544865492346631,   0.84125353283118116886,
      0.78605309474278746976,   0.72373403810507016164,
      0.65486073394528506406,   0.58005690957119817920,
      0.50000000000000000000,   0.41541501300188642553,
      0.32706796331742163634,   0.23575893550942722825,
      0.14231483827328514044,   0.047581915823742297450,
      -0.047581915823742297450, -0.14231483827328514044,
      -0.23575893550942722825,  -0.32706796331742163634,
      -0.41541501300188642553,  -0.50000000000000000000,
      -0.58005690957119817920,  -0.65486073394528506406,
      -0.72373403810507016164,  -0.78605309474278746976,
      -0.84125353283118116886,  -0.88883544865492346631,
      -0.92836793301607261020,  -0.95949297361449738989,
      -0.98192869726270670040,  -0.99547192257308460473};
  std::array<double, 32> ref_wgt = {
      0.00060893731490489241878, 0.0024219736130451190378,
      0.0053980655120086217022,  0.0094697467859916280487,
      0.014544517372584925107,   0.020506748182413843498,
      0.027220062885873054828,   0.034530148127417287071,
      0.042267934882560906601,   0.050253086103759852331,
      0.058297719552812004343,   0.066210289916549236558,
      0.073799551047167637468,   0.080878517524851959165,
      0.087268344741885576482,   0.092802048354194627110,
      0.097327987204758309011,   0.10071303862721933466,
      0.10284540128958090096,    0.10363696830983988889,
      0.10302522211366023180,    0.10097461223087196016,
      0.097477387744704159312,   0.092553867201145500343,
      0.086252140229861354324,   0.078647206689731557673,
      0.069839570595962148842,   0.059953317178917956087,
      0.049133711941508675046,   0.037544370308061558740,
      0.025364055195144182914,   0.012783167405899061161};
  IntegratorXX::GaussChebyshev2<double, double> quad(32);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 32; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("33 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 33> ref_pts = {0.99573417629503452187,
                                    0.98297309968390177828,
                                    0.96182564317281907041,
                                    0.93247222940435580457,
                                    0.89516329135506232207,
                                    0.85021713572961415213,
                                    0.79801722728023950333,
                                    0.73900891722065911592,
                                    0.67369564364655721171,
                                    0.60263463637925638918,
                                    0.52643216287735580024,
                                    0.44573835577653826740,
                                    0.36124166618715294874,
                                    0.27366299007208286354,
                                    0.18374951781657033157,
                                    0.092268359463301995240,
                                    0,
                                    -0.092268359463301995240,
                                    -0.18374951781657033157,
                                    -0.27366299007208286354,
                                    -0.36124166618715294874,
                                    -0.44573835577653826740,
                                    -0.52643216287735580024,
                                    -0.60263463637925638918,
                                    -0.67369564364655721171,
                                    -0.73900891722065911592,
                                    -0.79801722728023950333,
                                    -0.85021713572961415213,
                                    -0.89516329135506232207,
                                    -0.93247222940435580457,
                                    -0.96182564317281907041,
                                    -0.98297309968390177828,
                                    -0.99573417629503452187};
  std::array<double, 33> ref_wgt = {
      0.00055683330887818725276, 0.0022154653421568950764,
      0.0049405225716501219337,  0.0086738118704598760285,
      0.013335449259525618535,   0.018825409689217749435,
      0.025025468094778830921,   0.031801494449481778161,
      0.039006058739467050497,   0.046481295829779792356,
      0.054061975196376167456,   0.061578716559622736182,
      0.068861289646646514644,   0.075741934686685662720,
      0.082058639836493978542,   0.087658312549694472504,
      0.092399783929111565837,   0.096156588295716632593,
      0.098819464510646337946,   0.10029853091529081954,
      0.10052509200651952270,    0.099453042019823437842,
      0.097059838317196704964,   0.093347025720832289473,
      0.088340301540061972350,   0.082089119842380805578,
      0.074665842351030805563,   0.066164452042106090606,
      0.056698853896816149314,   0.046400795178642312041,
      0.035417444898867543997,   0.023908678667470982218,
      0.012044120774355403727};
  IntegratorXX::GaussChebyshev2<double, double> quad(33);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 33; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("34 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 34> ref_pts = {
      0.99597429399523902958,  0.98392958859862965540,
      0.96396286069585329189,  0.93623487063973720951,
      0.90096886790241912624,  0.85844879360186611853,
      0.80901699437494742410,  0.75307146600361093353,
      0.69106264898686467591,  0.62348980185873353053,
      0.55089698145210252269,  0.47386866247299867071,
      0.39302503165392361819,  0.30901699437494742410,
      0.22252093395631440429,  0.13423326581765547604,
      0.044864830350514925458, -0.044864830350514925458,
      -0.13423326581765547604, -0.22252093395631440429,
      -0.30901699437494742410, -0.39302503165392361819,
      -0.47386866247299867071, -0.55089698145210252269,
      -0.62348980185873353053, -0.69106264898686467591,
      -0.75307146600361093353, -0.80901699437494742410,
      -0.85844879360186611853, -0.90096886790241912624,
      -0.93623487063973720951, -0.96396286069585329189,
      -0.98392958859862965540, -0.99597429399523902958};
  std::array<double, 34> ref_wgt = {
      0.00051050659348653238997, 0.0020317578690262210062,
      0.0045331362471321157690,  0.0079642354736809772251,
      0.012255783328495866381,   0.017320909920309593222,
      0.023056738582296177614,   0.029346270534928315918,
      0.036060529157460171295,   0.043060925002256327626,
      0.050201798682706018315,   0.057333095538057660761,
      0.064303123585615569764,   0.070961344755686437389,
      0.077161148794886088205,   0.082762559529969191636,
      0.087634824401691713973,   0.091658840284337374538,
      0.094729371563327017971,   0.096757020197277492460,
      0.097669911974048737495,   0.097415068301578921602,
      0.095959438560790964893,   0.093290574186642621861,
      0.089416932123381954586,   0.084367802003979466557,
      0.078192858210202689265,   0.070961344755686437389,
      0.062760907576812436313,   0.053696095195021164834,
      0.043886554713883661933,   0.033464955626270103077,
      0.022574678831500357992,   0.011367312510317293554};
  IntegratorXX::GaussChebyshev2<double, double> quad(34);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 34; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("35 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 35> ref_pts = {
      0.99619469809174553230,   0.98480775301220805937,
      0.96592582628906828675,   0.93969262078590838405,
      0.90630778703664996324,   0.86602540378443864676,
      0.81915204428899178968,   0.76604444311897803520,
      0.70710678118654752440,   0.64278760968653932632,
      0.57357643635104609611,   0.50000000000000000000,
      0.42261826174069943619,   0.34202014332566873304,
      0.25881904510252076235,   0.17364817766693034885,
      0.087155742747658173558,  0,
      -0.087155742747658173558, -0.17364817766693034885,
      -0.25881904510252076235,  -0.34202014332566873304,
      -0.42261826174069943619,  -0.50000000000000000000,
      -0.57357643635104609611,  -0.64278760968653932632,
      -0.70710678118654752440,  -0.76604444311897803520,
      -0.81915204428899178968,  -0.86602540378443864676,
      -0.90630778703664996324,  -0.93969262078590838405,
      -0.96592582628906828675,  -0.98480775301220805937,
      -0.99619469809174553230};
  std::array<double, 35> ref_wgt = {
      0.00046917832418063642814, 0.0018677924179085778414,
      0.0041692339835328522508,  0.0073296676769225738043,
      0.011288789626589079879,   0.015970871104950418843,
      0.021286069471666247931,   0.027131983929497902508,
      0.033395429438019237262,   0.039954398391510668175,
      0.046680176448498772010,   0.053439576256744337314,
      0.060097250794278231410,   0.066518046678965807712,
      0.072569357109466882324,   0.078123434101159968384,
      0.083059620371615135262,   0.087266462599716478846,
      0.090643669807130031967,   0.093103883255854406239,
      0.094574227475831583339,   0.094997615776943947522,
      0.094333787796191180958,   0.092560061211632630146,
      0.089671784641426493700,   0.085682483855390605116,
      0.080623698670539750390,   0.074544513191301179509,
      0.067510787299078925192,   0.059604102404808658266,
      0.050920439364707381206,   0.041568611039970564270,
      0.031668476177333124630,   0.021348965027396116990,
      0.010745950337439144799};
  IntegratorXX::GaussChebyshev2<double, double> quad(35);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 35; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("36 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 36> ref_pts = {
      0.99639748854252650165,   0.98561591034770846226,
      0.96773294693349883869,   0.94287744546108417004,
      0.91122849038813570283,   0.87301411316118815875,
      0.82850964924384212353,   0.77803575431843950714,
      0.72195609395452446235,   0.66067472339008144191,
      0.59463317630428661613,   0.52430728355723168780,
      0.45020374481767329246,   0.37285647778030861083,
      0.29282277127655037995,   0.21067926999572632036,
      0.12701781974687874737,   0.042441203196148305878,
      -0.042441203196148305878, -0.12701781974687874737,
      -0.21067926999572632036,  -0.29282277127655037995,
      -0.37285647778030861083,  -0.45020374481767329246,
      -0.52430728355723168780,  -0.59463317630428661613,
      -0.66067472339008144191,  -0.72195609395452446235,
      -0.77803575431843950714,  -0.82850964924384212353,
      -0.87301411316118815875,  -0.91122849038813570283,
      -0.94287744546108417004,  -0.96773294693349883869,
      -0.98561591034770846226,  -0.99639748854252650165};
  std::array<double, 36> ref_wgt = {
      0.00043219230160702970136, 0.0017209892276335076544,
      0.0038431782741013165633,  0.0067604946422426997853,
      0.010420248099897729565,   0.014756186306683006583,
      0.019689580600174461666,   0.025130516631686637506,
      0.030979368916900744406,   0.037128435382438074892,
      0.043463705392843573872,   0.049866732575408384506,
      0.056216582057932716516,   0.062391820524496094904,
      0.068272516796170751454,   0.073742220468702878066,
      0.078689886490337034560,   0.083011714434490622864,
      0.086612872599787503389,   0.089409078931720671204,
      0.091328013075781616843,   0.092310536603765230974,
      0.092311701558886519019,   0.091301530891054356776,
      0.089265558045650560462,   0.086205116867658155898,
      0.082137377024824096903,   0.077095124273259595519,
      0.071126289019744621836,   0.064293230710100063695,
      0.056671789526312587463,   0.048350120642606797493,
      0.039427329811329877525,   0.030011932266316750289,
      0.020220159792232175314,   0.010174143266899486898};
  IntegratorXX::GaussChebyshev2<double, double> quad(36);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 36; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("37 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 37> ref_pts = {0.99658449300666984982,
                                    0.98636130340272237360,
                                    0.96940026593933041674,
                                    0.94581724170063467902,
                                    0.91577332665505743992,
                                    0.87947375120648907139,
                                    0.83716647826252857481,
                                    0.78914050939639359922,
                                    0.73572391067313162477,
                                    0.67728157162574107476,
                                    0.61421271268966781744,
                                    0.54694815812242687471,
                                    0.47594739303707354443,
                                    0.40169542465296945752,
                                    0.32469946920468348741,
                                    0.24548548714079914892,
                                    0.16459459028073389414,
                                    0.082579345472332324600,
                                    0,
                                    -0.082579345472332324600,
                                    -0.16459459028073389414,
                                    -0.24548548714079914892,
                                    -0.32469946920468348741,
                                    -0.40169542465296945752,
                                    -0.47594739303707354443,
                                    -0.54694815812242687471,
                                    -0.61421271268966781744,
                                    -0.67728157162574107476,
                                    -0.73572391067313162477,
                                    -0.78914050939639359922,
                                    -0.83716647826252857481,
                                    -0.87947375120648907139,
                                    -0.91577332665505743992,
                                    -0.94581724170063467902,
                                    -0.96940026593933041674,
                                    -0.98636130340272237360,
                                    -0.99658449300666984982};
  std::array<double, 37> ref_wgt = {
      0.00039899302335664448104, 0.0015891623503224369516,
      0.0035501845059700068360,  0.0062485379204494308784,
      0.0096380235946218769931,  0.013660482787674046162,
      0.018246700689983130160,   0.023317482184058984766,
      0.028784883149422089526,   0.034553578374443641630,
      0.040522345036235532383,   0.046585638930922836190,
      0.052635239208385850442,   0.058561936309765190513,
      0.064257237138903957745,   0.069615061230707849898,
      0.074533401814262388171,   0.078915926204390766086,
      0.082673490883941927328,   0.085725547946209572433,
      0.088001421232428532327,   0.089441432497699667017,
      0.089997860239269972807,   0.089635716388511546292,
      0.088333328862773515031,   0.086082720952604042057,
      0.082889781637900273317,   0.078774224135456776537,
      0.073769333230866157402,   0.067921505189858962306,
      0.061289587228161512203,   0.053944026595900526856,
      0.045965842255236636650,   0.037445434853379046452,
      0.028481253175593576451,   0.019178337466140291774,
      0.0096467618954261132965};
  IntegratorXX::GaussChebyshev2<double, double> quad(37);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 37; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("38 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 38> ref_pts = {
      0.99675730813420998559,  0.98705026263791286379,
      0.97094181742605202716,  0.94853644194714552616,
      0.91997944365882420313,  0.88545602565320989590,
      0.84519008554379475254,  0.79944276340350114978,
      0.74851074817110109863,  0.69272435350959939260,
      0.63244537559537723782,  0.56806474673115580251,
      0.50000000000000000000,  0.42869256140305418307,
      0.35460488704253562597,  0.27821746391645263455,
      0.20002569377604442753,  0.12053668025532305335,
      0.040265940109415143362, -0.040265940109415143362,
      -0.12053668025532305335, -0.20002569377604442753,
      -0.27821746391645263455, -0.35460488704253562597,
      -0.42869256140305418307, -0.50000000000000000000,
      -0.56806474673115580251, -0.63244537559537723782,
      -0.69272435350959939260, -0.74851074817110109863,
      -0.79944276340350114978, -0.84519008554379475254,
      -0.88545602565320989590, -0.91997944365882420313,
      -0.94853644194714552616, -0.97094181742605202716,
      -0.98705026263791286379, -0.99675730813420998559};
  std::array<double, 38> ref_wgt = {
      0.00036910811132528140170, 0.0014704513231725747857,
      0.0032861744584701790849,  0.0057868115655712112957,
      0.0089317204457322155129,  0.012669682083450556744,
      0.016939656227626495281,   0.021671682091375780032,
      0.026787911019075352672,   0.032203756041786663834,
      0.037829141534679516526,   0.043569834727378688206,
      0.049328839621610157521,   0.055007832957586678959,
      0.060508621254561087655,   0.065734597640877526615,
      0.070592177189192223715,   0.074992189783315952357,
      0.078851210159822326573,   0.082092805681181055520,
      0.084648683594394735013,   0.086459720992487487452,
      0.087476862404378374784,   0.087661871866766509101,
      0.086987928451545759343,   0.085440056503045504750,
      0.083015384247804360612,   0.079723226940509221064,
      0.075584993266706105600,   0.070633916298628450732,
      0.064914612857435133735,   0.058482477636020986372,
      0.051402920844890720511,   0.043750460424256199598,
      0.035607681985271372240,   0.027064081571249762527,
      0.018214808037704038601,   0.0091593233132006715190};
  IntegratorXX::GaussChebyshev2<double, double> quad(38);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 38; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("39 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 39> ref_pts = {
      0.99691733373312797620,   0.98768834059513772619,
      0.97236992039767660183,   0.95105651629515357212,
      0.92387953251128675613,   0.89100652418836786236,
      0.85264016435409222152,   0.80901699437494742410,
      0.76040596560003093817,   0.70710678118654752440,
      0.64944804833018365573,   0.58778525229247312917,
      0.52249856471594886499,   0.45399049973954679156,
      0.38268343236508977173,   0.30901699437494742410,
      0.23344536385590541177,   0.15643446504023086901,
      0.078459095727844945033,  0,
      -0.078459095727844945033, -0.15643446504023086901,
      -0.23344536385590541177,  -0.30901699437494742410,
      -0.38268343236508977173,  -0.45399049973954679156,
      -0.52249856471594886499,  -0.58778525229247312917,
      -0.64944804833018365573,  -0.70710678118654752440,
      -0.76040596560003093817,  -0.80901699437494742410,
      -0.85264016435409222152,  -0.89100652418836786236,
      -0.92387953251128675613,  -0.95105651629515357212,
      -0.97236992039767660183,  -0.98768834059513772619,
      -0.99691733373312797620};
  std::array<double, 39> ref_wgt = {
      0.00034213415747547176768, 0.0013632660485499757927,
      0.0030476578091286113263,  0.0053693249067974679015,
      0.0082924004275531469587,  0.011771637978437888721,
      0.015753046225544998493,   0.020174646259509155412,
      0.024967341275367865816,   0.030055886494217313536,
      0.035359945862010891494,   0.040795220855463951030,
      0.046274635723047808385,   0.051709562704373972684,
      0.057011070214767595175,   0.062091176661225632715,
      0.066864092475698170002,   0.071247433112836739900,
      0.075163386159789813200,   0.078539816339744830962,
      0.081311293049930504405,   0.083420026146797056860,
      0.084816696961227287608,   0.085461172977292645309,
      0.085323096219148001539,   0.084382337139824604413,
      0.082629307668686444587,   0.080065129025336366511,
      0.076701651919749806749,   0.072561328803485775351,
      0.067676939886627631132,   0.062091176661225632715,
      0.055856088646362662277,   0.049032400965174961439,
      0.041688712153959203510,   0.033900583263074947579,
      0.025749530815701804353,   0.017321937522751877262,
      0.0087078957919021533919};
  IntegratorXX::GaussChebyshev2<double, double> quad(39);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 39; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("40 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 40> ref_pts = {
      0.99706580118374046214,   0.98828042378034852632,
      0.97369542387777904436,   0.95339639205493054595,
      0.92750245110209466461,   0.89616555696105561114,
      0.85956960698720116004,   0.81792936076671766530,
      0.77148917982194292363,   0.72052159360078700864,
      0.66532570016556536356,   0.60622541096663801827,
      0.54356755000122115073,   0.47771981851226292267,
      0.40906863717133988836,   0.33801687840850275828,
      0.26498150219666168233,   0.19039110916466836871,
      0.11468342539840043433,   0.038302733690035348803,
      -0.038302733690035348803, -0.11468342539840043433,
      -0.19039110916466836871,  -0.26498150219666168233,
      -0.33801687840850275828,  -0.40906863717133988836,
      -0.47771981851226292267,  -0.54356755000122115073,
      -0.60622541096663801827,  -0.66532570016556536356,
      -0.72052159360078700864,  -0.77148917982194292363,
      -0.81792936076671766530,  -0.85956960698720116004,
      -0.89616555696105561114,  -0.92750245110209466461,
      -0.95339639205493054595,  -0.97369542387777904436,
      -0.98828042378034852632,  -0.99706580118374046214};
  std::array<double, 40> ref_wgt = {
      0.00031772525786812855174, 0.0012662420803777983866,
      0.0028316357772949504452,  0.0049909215870995939980,
      0.0077123513965911404124,  0.010955837459814156879,
      0.014673487517975454894,   0.018810244250010679367,
      0.023304620604757978997,   0.028089521298503896662,
      0.033093139622706834730,   0.038239917711008675951,
      0.043451557575357196360,   0.048648069549258660037,
      0.053748844280729166172,   0.058673734104955496971,
      0.063344129501138489536,   0.067684016401133489233,
      0.071621000368492566068,   0.075087284102042343266,
      0.078020585332454745247,   0.080364982965281563166,
      0.082071680269270836192,   0.083099675001991226165,
      0.083416327591436167461,   0.082997819836178052093,
      0.081829498030062180678,   0.079906095941325444499,
      0.077231834660288441791,   0.073820397953498008870,
      0.069694783403965139500,   0.064887031255288004809,
      0.059437834490356015701,   0.053396035241716277070,
      0.046818014129879833775,   0.039766980538069782144,
      0.032312173138532151337,   0.024527981169302427917,
      0.016492998005625643481,   0.0082890194632730831448};
  IntegratorXX::GaussChebyshev2<double, double> quad(40);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 40; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("41 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 41> ref_pts = {0.99720379718118014823,
                                    0.98883082622512854507,
                                    0.97492791218182360702,
                                    0.95557280578614073281,
                                    0.93087374864420425564,
                                    0.90096886790241912624,
                                    0.86602540378443864676,
                                    0.82623877431599487195,
                                    0.78183148246802980871,
                                    0.73305187182982632852,
                                    0.68017273777091939019,
                                    0.62348980185873353053,
                                    0.56332005806362202775,
                                    0.50000000000000000000,
                                    0.43388373911755812048,
                                    0.36534102436639501454,
                                    0.29475517441090421683,
                                    0.22252093395631440429,
                                    0.14904226617617444693,
                                    0.074730093586424254291,
                                    0,
                                    -0.074730093586424254291,
                                    -0.14904226617617444693,
                                    -0.22252093395631440429,
                                    -0.29475517441090421683,
                                    -0.36534102436639501454,
                                    -0.43388373911755812048,
                                    -0.50000000000000000000,
                                    -0.56332005806362202775,
                                    -0.62348980185873353053,
                                    -0.68017273777091939019,
                                    -0.73305187182982632852,
                                    -0.78183148246802980871,
                                    -0.82623877431599487195,
                                    -0.86602540378443864676,
                                    -0.90096886790241912624,
                                    -0.93087374864420425564,
                                    -0.95557280578614073281,
                                    -0.97492791218182360702,
                                    -0.98883082622512854507,
                                    -0.99720379718118014823};
  std::array<double, 41> ref_wgt = {
      0.00029558367404373313360, 0.0011782041594764174549,
      0.0026355223682760591037,  0.0046471475660136564698,
      0.0071848966840174563159,  0.010213152773746555317,
      0.013689318089957501865,   0.017564356097636371293,
      0.021783415577811768424,   0.026286528973346428725,
      0.031009376180632122178,   0.035884104168546939688,
      0.040840192102447312989,   0.045805351077209431984,
      0.050706447126623519475,   0.055470435882273672384,
      0.060025297107107086518,   0.064300957329071740171,
      0.068230188948480775226,   0.071749474487282101635,
      0.074799825085471267582,   0.077327542923989926194,
      0.079284917957383364179,   0.080630850164397910383,
      0.081331389460210582309,   0.081360186448336055249,
      0.080698848310443904595,   0.079337195324256540125,
      0.077273414748397426723,   0.074514110102818295488,
      0.071074245188034897668,   0.066976983509312776199,
      0.062253425086532271861,   0.056942243920194896454,
      0.051089230632693135656,   0.044746745995850970695,
      0.037973092175865108798,   0.030831809561051641736,
      0.023390907973223671520,   0.015722041888329478353,
      0.0078996399957961722148};
  IntegratorXX::GaussChebyshev2<double, double> quad(41);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 41; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("42 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 42> ref_pts = {
      0.99733228366355167281,  0.98934336807511019779,
      0.97607587755592715901,  0.95760059990840595223,
      0.93401610873254799935,  0.90544823749314661572,
      0.87204940814380760813,  0.83399781788987793962,
      0.79149648842925410245,  0.74477218274378185418,
      0.69407419522063387436,  0.63967302155889127364,
      0.58185891555795283842,  0.52094034048793028618,
      0.45724232330463852282,  0.39110472049015601574,
      0.32288040477144621663,  0.25293338239168074656,
      0.18163685097943643970,  0.10937120837787438699,
      0.036522023057658834968, -0.036522023057658834968,
      -0.10937120837787438699, -0.18163685097943643970,
      -0.25293338239168074656, -0.32288040477144621663,
      -0.39110472049015601574, -0.45724232330463852282,
      -0.52094034048793028618, -0.58185891555795283842,
      -0.63967302155889127364, -0.69407419522063387436,
      -0.74477218274378185418, -0.79149648842925410245,
      -0.83399781788987793962, -0.87204940814380760813,
      -0.90544823749314661572, -0.93401610873254799935,
      -0.95760059990840595223, -0.97607587755592715901,
      -0.98934336807511019779, -0.99733228366355167281};
  std::array<double, 42> ref_wgt = {
      0.00027545218789541654950, 0.0010981363258387237364,
      0.0024570796889525033084,  0.0043341423750834205383,
      0.0067042373970031067014,  0.0095356351010068556840,
      0.012790348254912480503,   0.016424593179291464692,
      0.020389321382107146814,   0.024630815309753917644,
      0.029091341056953509954,   0.033709850193316061600,
      0.038422722273830851366,   0.043164539111201457915,
      0.047868881505655453580,   0.052469138857227893703,
      0.056899321929789422263,   0.061094868997133776120,
      0.064993435679724752607,   0.068535658975291528253,
      0.071665886295020350126,   0.074332860735919378051,
      0.076490354344008089752,   0.078097741746016640489,
      0.079120507241800002191,   0.079530679247105011743,
      0.079307186847109201890,   0.078436134154831965819,
      0.076910989153899975925,   0.074732684730408251354,
      0.071909630651455749649,   0.068457636315718812598,
      0.064399745171346803987,   0.059765982755685726845,
      0.054593021347149706964,   0.048923765219539970278,
      0.042806861441259200621,   0.036296142054762643294,
      0.029450004294513602344,   0.022330736244797058393,
      0.015003795993075867172,   0.0075370528922990739806};
  IntegratorXX::GaussChebyshev2<double, double> quad(42);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 42; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("43 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 43> ref_pts = {
      0.99745211461025354136,   0.98982144188093273238,
      0.97714686597115951949,   0.95949297361449738989,
      0.93694972499976173582,   0.90963199535451837141,
      0.87767898956725561521,   0.84125353283118116886,
      0.80054124092436040397,   0.75574957435425828377,
      0.70710678118654752440,   0.65486073394528506406,
      0.59927766651134693453,   0.54064081745559758211,
      0.47924898672005683120,   0.41541501300188642553,
      0.34946417959909833671,   0.28173255684142969771,
      0.21256528955297667388,   0.14231483827328514044,
      0.071339183199232340327,  0,
      -0.071339183199232340327, -0.14231483827328514044,
      -0.21256528955297667388,  -0.28173255684142969771,
      -0.34946417959909833671,  -0.41541501300188642553,
      -0.47924898672005683120,  -0.54064081745559758211,
      -0.59927766651134693453,  -0.65486073394528506406,
      -0.70710678118654752440,  -0.75574957435425828377,
      -0.80054124092436040397,  -0.84125353283118116886,
      -0.87767898956725561521,  -0.90963199535451837141,
      -0.93694972499976173582,  -0.95949297361449738989,
      -0.97714686597115951949,  -0.98982144188093273238,
      -0.99745211461025354136};
  std::array<double, 43> ref_wgt = {
      0.00025710781228692893119, 0.0010251573037919797226,
      0.0022943645734197304365,  0.0040485491340064662766,
      0.0062653214159475955002,  0.0089163422534456546805,
      0.011967651376108012153,   0.015380061136810382623,
      0.019109610958126773262,   0.023108077282788508416,
      0.027323533176561194123,   0.031700951161920679950,
      0.036182842364500500883,   0.040709924637163765520,
      0.045221811993503207118,   0.049657717437411927418,
      0.053957161120904872470,   0.058060675700378544434,
      0.061910500792685460865,   0.065451258556414182361,
      0.068630602639185352372,   0.071399833036131664511,
      0.073714469794538325612,   0.075534778970414500997,
      0.076826244789151422773,   0.077559982578139060404,
      0.077713087717205717939,   0.077268916585245173847,
      0.076217296260010894578,   0.074554660543864825771,
      0.072284110731921441095,   0.069415400400859125257,
      0.065964844366805250319,   0.061955152829167951306,
      0.057415192574135164573,   0.052379677946971611632,
      0.046888795106644359670,   0.040987763840479949005,
      0.034726341931744366926,   0.028158277731046169055,
      0.021340717175752799208,   0.014333572023382229738,
      0.0071988565092075317306};
  IntegratorXX::GaussChebyshev2<double, double> quad(43);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 43; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("44 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 44> ref_pts = {
      0.99756405025982424761,   0.99026806874157031508,
      0.97814760073380563793,   0.96126169593831886192,
      0.93969262078590838405,   0.91354545764260089550,
      0.88294759285892694203,   0.84804809615642597039,
      0.80901699437494742410,   0.76604444311897803520,
      0.71933980033865113936,   0.66913060635885821383,
      0.61566147532565827967,   0.55919290347074683016,
      0.50000000000000000000,   0.43837114678907741745,
      0.37460659341591203542,   0.30901699437494742410,
      0.24192189559966772256,   0.17364817766693034885,
      0.10452846326765347140,   0.034899496702500971646,
      -0.034899496702500971646, -0.10452846326765347140,
      -0.17364817766693034885,  -0.24192189559966772256,
      -0.30901699437494742410,  -0.37460659341591203542,
      -0.43837114678907741745,  -0.50000000000000000000,
      -0.55919290347074683016,  -0.61566147532565827967,
      -0.66913060635885821383,  -0.71933980033865113936,
      -0.76604444311897803520,  -0.80901699437494742410,
      -0.84804809615642597039,  -0.88294759285892694203,
      -0.91354545764260089550,  -0.93969262078590838405,
      -0.96126169593831886192,  -0.97814760073380563793,
      -0.99026806874157031508,  -0.99756405025982424761};
  std::array<double, 44> ref_wgt = {
      0.00024035659287220064813, 0.00095850013687512420311,
      0.0021456843453838834050,  0.0037874397758063437292,
      0.0058637341415380590435,  0.0083491942812461115862,
      0.011213387350504594333,   0.014421158151091100144,
      0.017933018897341471477,   0.021705587143598322006,
      0.025692067068282286805,   0.029842768834255047104,
      0.034105660327144547727,   0.038426945217746168139,
      0.042751661005395469851,   0.047024290479498240366,
      0.051189379888610042096,   0.055192157032200562414,
      0.058979142490332257651,   0.062498747280927974707,
      0.065701850382283680048,   0.068542349778379689775,
      0.070977680973948492456,   0.072969297281999444851,
      0.074483106604683524991,   0.075489859904424034976,
      0.075965487090926795830,   0.075891376625224291871,
      0.075254595757997364486,   0.074048048969306104117,
      0.072270572853428887338,   0.069926966388343062769,
      0.067027956236859488536,   0.063590097437795241626,
      0.059635610553040943607,   0.055192157032200562414,
      0.050292555233029155492,   0.044974440185755849244,
      0.039279870805435777958,   0.033254888831976451416,
      0.026949034306126093801,   0.020414822865702276252,
      0.013707190564463852977,   0.0068829122717069649668};
  IntegratorXX::GaussChebyshev2<double, double> quad(44);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 44; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("45 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 45> ref_pts = {0.99766876919053919845,
                                    0.99068594603633075234,
                                    0.97908408768232287563,
                                    0.96291728734779929502,
                                    0.94226092211882049562,
                                    0.91721130150545301784,
                                    0.88788521840237523498,
                                    0.85441940454648855255,
                                    0.81696989301044201697,
                                    0.77571129070441980704,
                                    0.73083596427812410165,
                                    0.68255314321865408287,
                                    0.63108794432605278937,
                                    0.57668032211486714125,
                                    0.51958395003543357813,
                                    0.46006503773115212604,
                                    0.39840108984624145800,
                                    0.33487961217098615196,
                                    0.26979677115702427125,
                                    0.20345601305263378988,
                                    0.13616664909624659076,
                                    0.068242413364670975921,
                                    0,
                                    -0.068242413364670975921,
                                    -0.13616664909624659076,
                                    -0.20345601305263378988,
                                    -0.26979677115702427125,
                                    -0.33487961217098615196,
                                    -0.39840108984624145800,
                                    -0.46006503773115212604,
                                    -0.51958395003543357813,
                                    -0.57668032211486714125,
                                    -0.63108794432605278937,
                                    -0.68255314321865408287,
                                    -0.73083596427812410165,
                                    -0.77571129070441980704,
                                    -0.81696989301044201697,
                                    -0.85441940454648855255,
                                    -0.88788521840237523498,
                                    -0.91721130150545301784,
                                    -0.94226092211882049562,
                                    -0.96291728734779929502,
                                    -0.97908408768232287563,
                                    -0.99068594603633075234,
                                    -0.99766876919053919845};
  std::array<double, 45> ref_wgt = {
      0.00022502929269825312939, 0.00089749526504306080148,
      0.0020095599975424339724,  0.0035482526584074739617,
      0.0054956070362597163261,  0.0078288520602280803468,
      0.010520653307256968278,   0.013539402961116873357,
      0.016849555178868328310,   0.020412003343714345812,
      0.024184495243286106741,   0.028122081814054794543,
      0.032177594739926850941,   0.036302147889858872836,
      0.040445657328702073142,   0.044557374440083390850,
      0.048586426562000605872,   0.052482359456401294615,
      0.056195675914163514288,   0.059678364836808609055,
      0.062884415235535699787,   0.065770309745733170465,
      0.068295492469343331271,   0.070422806226086883213,
      0.072118894614777767955,   0.073354564654419396479,
      0.074105106187607248739,   0.074350564681642264706,
      0.074075964550936231750,   0.073271480642646311244,
      0.071932556070576272386,   0.070059965144532767698,
      0.067659820717632173017,   0.064743525856485230622,
      0.061327670322636355648,   0.057433872931984673402,
      0.053088571426100773487,   0.048322762039429947417,
      0.043171691473571852582,   0.037674504488620505680,
      0.031873850786707456292,   0.025815455289537780453,
      0.019547656295369809023,   0.013120916337542605130,
      0.0065873108527703415338};
  IntegratorXX::GaussChebyshev2<double, double> quad(45);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 45; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("46 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 46> ref_pts = {
      0.99776687862315315956,  0.99107748815478009891,
      0.97996170503658681679,  0.96446917505437657452,
      0.94466909160791880067,  0.92064988667642876747,
      0.89251883585988122582,  0.86040157926013936987,
      0.82444156034176031724,  0.78479938527866096605,
      0.74165210564795754011,  0.69519242767464226355,
      0.64562785155880239765,  0.59317974472935521110,
      0.53808235316337267444,  0.48058175518668378052,
      0.42093476242833496963,  0.35940777283751283660,
      0.29627558088563397732,  0.23182015026752826926,
      0.16632935458313003286,  0.10009569162409834512,
      0.033414977007674570875, -0.033414977007674570875,
      -0.10009569162409834512, -0.16632935458313003286,
      -0.23182015026752826926, -0.29627558088563397732,
      -0.35940777283751283660, -0.42093476242833496963,
      -0.48058175518668378052, -0.53808235316337267444,
      -0.59317974472935521110, -0.64562785155880239765,
      -0.69519242767464226355, -0.74165210564795754011,
      -0.78479938527866096605, -0.82444156034176031724,
      -0.86040157926013936987, -0.89251883585988122582,
      -0.92064988667642876747, -0.94466909160791880067,
      -0.96446917505437657452, -0.97996170503658681679,
      -0.99107748815478009891, -0.99776687862315315956};
  std::array<double, 46> ref_wgt = {
      0.00021097779447511717847, 0.00084155640360322988092,
      0.0018846954198911143424,  0.0033287403083360006569,
      0.0051575407832889294151,  0.0073506148660060107808,
      0.0098833569729799349311,  0.012727287942300022607,
      0.015850344483468360058,   0.019217205139539704885,
      0.022789649483137715507,   0.026526946933519734861,
      0.030386271283776121445,   0.034323136768452683341,
      0.038291851284976210866,   0.042245982209422743505,
      0.046138830120132723676,   0.049923905662723170726,
      0.053555404757978126929,   0.056988677370237570827,
      0.060180685118090221259,   0.063090443120763021225,
      0.065679441631469310767,   0.067912043211543604189,
      0.069755851444419347462,   0.071182047473934382713,
      0.072165690974210627230,   0.072685982515208217755,
      0.072726484675416162441,   0.072275299667121017995,
      0.071325201676134529288,   0.069873722572377180878,
      0.067923190115742277225,   0.065480718258503819273,
      0.062558149626391889247,   0.059171950740511887272,
      0.055343061016707272278,   0.051096697042994458445,
      0.046462114084672604714,   0.041472327196120803257,
      0.036163794723827708565,   0.030576067362780848761,
      0.024751406274182344028,   0.018734374083080957501,
      0.012571402846797459473,   0.0063103433162363752843};
  IntegratorXX::GaussChebyshev2<double, double> quad(46);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 46; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("47 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 47> ref_pts = {
      0.99785892323860350674,   0.99144486137381041114,
      0.98078528040323044913,   0.96592582628906828675,
      0.94693012949510566426,   0.92387953251128675613,
      0.89687274153268830389,   0.86602540378443864676,
      0.83146961230254523708,   0.79335334029123516458,
      0.75183980747897739641,   0.70710678118654752440,
      0.65934581510006886843,   0.60876142900872063942,
      0.55557023301960222474,   0.50000000000000000000,
      0.44228869021900128200,   0.38268343236508977173,
      0.32143946530316158070,   0.25881904510252076235,
      0.19509032201612826785,   0.13052619222005159155,
      0.065403129230143066815,  0,
      -0.065403129230143066815, -0.13052619222005159155,
      -0.19509032201612826785,  -0.25881904510252076235,
      -0.32143946530316158070,  -0.38268343236508977173,
      -0.44228869021900128200,  -0.50000000000000000000,
      -0.55557023301960222474,  -0.60876142900872063942,
      -0.65934581510006886843,  -0.70710678118654752440,
      -0.75183980747897739641,  -0.79335334029123516458,
      -0.83146961230254523708,  -0.86602540378443864676,
      -0.89687274153268830389,  -0.92387953251128675613,
      -0.94693012949510566426,  -0.96592582628906828675,
      -0.98078528040323044913,  -0.99144486137381041114,
      -0.99785892323860350674};
  std::array<double, 47> ref_wgt = {
      0.00019807208900556375527, 0.00079016871297384155487,
      0.0017699515832034498173,  0.0031269254876496391881,
      0.0048465404999506988433,  0.0069103336896276224655,
      0.0092961089670115306791,  0.011978153328712814132,
      0.014927487418408925888,   0.018112147986775403796,
      0.021497499526704805936,   0.025046572078514427946,
      0.028720421947346900961,   0.032478511853850223340,
      0.036279106851615434462,   0.040079682192558252986,
      0.043837339205922710398,   0.047509225178972995979,
      0.051052953188472302655,   0.054427017832100161743,
      0.057591202848032521794,   0.060506976688625812849,
      0.063137872229759418469,   0.065449846949787359135,
      0.067411620099762324770,   0.068994983607816111564,
      0.070175083713179932064,   0.070930670606873687504,
      0.071244313663874047601,   0.071102580182623334616,
      0.070496175898876885740,   0.069420045908724472610,
      0.067873435016619325987,   0.065859906914737432142,
      0.063387321996209700737,   0.060467774002904812793,
      0.057117486104657042113,   0.053356667397315568707,
      0.049209331187979441302,   0.044703076803606493699,
      0.039868837010303028276,   0.034740593461632669592,
      0.029355062902039614131,   0.023751357132999843473,
      0.017970620002082686820,   0.012055644896292157491,
      0.0060504764087326960107};
  IntegratorXX::GaussChebyshev2<double, double> quad(47);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 47; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("48 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 48> ref_pts = {
      0.99794539275033634201,   0.99179001382324610896,
      0.98155915699106535385,   0.96729486303902941578,
      0.94905574701066866776,   0.92691675734602176302,
      0.90096886790241912624,   0.87131870412338935155,
      0.83808810489184065771,   0.80141362186795665979,
      0.76144595836913443541,   0.71834935009772757998,
      0.67230089026131678809,   0.62348980185873353053,
      0.57211666012216964981,   0.51839256831052503154,
      0.46253829024083527770,   0.40478334312239381716,
      0.34536505442130763195,   0.28452758663103244187,
      0.22252093395631440429,   0.15959989503337922347,
      0.096023025907681763054,  0.032051577571655174234,
      -0.032051577571655174234, -0.096023025907681763054,
      -0.15959989503337922347,  -0.22252093395631440429,
      -0.28452758663103244187,  -0.34536505442130763195,
      -0.40478334312239381716,  -0.46253829024083527770,
      -0.51839256831052503154,  -0.57211666012216964981,
      -0.62348980185873353053,  -0.67230089026131678809,
      -0.71834935009772757998,  -0.76144595836913443541,
      -0.80141362186795665979,  -0.83808810489184065771,
      -0.87131870412338935155,  -0.90096886790241912624,
      -0.92691675734602176302,  -0.94905574701066866776,
      -0.96729486303902941578,  -0.98155915699106535385,
      -0.99179001382324610896,  -0.99794539275033634201};
  std::array<double, 48> ref_wgt = {
      0.00018619774450304258943, 0.00074287884975005689054,
      0.0016643247990174532839,  0.0029410641259737935337,
      0.0045599609298486134917,  0.0065043376478701577304,
      0.0087541309489256188433,  0.011286079305897884575,
      0.014073940510966752555,   0.017088737121039859426,
      0.020299027561960701639,   0.023671200382617667616,
      0.027169788935744495195,   0.030757803573040234018,
      0.034397078279994219550,   0.038048628541978552406,
      0.041673017129004270707,   0.045230724412990865206,
      0.048682519789152091661,   0.051989830762544984790,
      0.055115106282061491575,   0.058022170956967347567,
      0.060676566875022867689,   0.063045879855479890575,
      0.065100047113782574617,   0.066811643486280915187,
      0.068156143561110262028,   0.069112157283769637471,
      0.069661636850791406939,   0.069790052969972183446,
      0.069486538848480251862,   0.068744000568154552329,
      0.067559192817710577907,   0.065932759271501018029,
      0.063869237230987110418,   0.061377026475143162037,
      0.058468322596591379465,   0.055159015428292118153,
      0.051468553488064549923,   0.047419775682104729908,
      0.043038711811101367241,   0.038354353710729403453,
      0.033398399129564629571,   0.028204970699302205593,
      0.022810312582250757493,   0.017252467587285393651,
      0.011570937725871835407,   0.0058063313327524919235};
  IntegratorXX::GaussChebyshev2<double, double> quad(48);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 48; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("49 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 49> ref_pts = {0.99802672842827156195,
                                    0.99211470131447783105,
                                    0.98228725072868868109,
                                    0.96858316112863111949,
                                    0.95105651629515357212,
                                    0.92977648588825140366,
                                    0.90482705246601952771,
                                    0.87630668004386358731,
                                    0.84432792550201507855,
                                    0.80901699437494742410,
                                    0.77051324277578923080,
                                    0.72896862742141152315,
                                    0.68454710592868867373,
                                    0.63742398974868971018,
                                    0.58778525229247312917,
                                    0.53582679497899661827,
                                    0.48175367410171527499,
                                    0.42577929156507264886,
                                    0.36812455268467795916,
                                    0.30901699437494742410,
                                    0.24868988716485478824,
                                    0.18738131458572463054,
                                    0.12533323356430424537,
                                    0.062790519529313376076,
                                    0,
                                    -0.062790519529313376076,
                                    -0.12533323356430424537,
                                    -0.18738131458572463054,
                                    -0.24868988716485478824,
                                    -0.30901699437494742410,
                                    -0.36812455268467795916,
                                    -0.42577929156507264886,
                                    -0.48175367410171527499,
                                    -0.53582679497899661827,
                                    -0.58778525229247312917,
                                    -0.63742398974868971018,
                                    -0.68454710592868867373,
                                    -0.72896862742141152315,
                                    -0.77051324277578923080,
                                    -0.80901699437494742410,
                                    -0.84432792550201507855,
                                    -0.87630668004386358731,
                                    -0.90482705246601952771,
                                    -0.92977648588825140366,
                                    -0.95105651629515357212,
                                    -0.96858316112863111949,
                                    -0.98228725072868868109,
                                    -0.99211470131447783105,
                                    -0.99802672842827156195};
  std::array<double, 49> ref_wgt = {
      0.00017525377211816333762, 0.00069928656927000873133,
      0.0015669283469914408304,  0.0027696139371242206119,
      0.0042954599254379743212,  0.0061293713220942923178,
      0.0082531770769615344170,  0.010645793235425786864,
      0.013283412284671672120,   0.016139717007607324330,
      0.019186116943747481145,   0.022392005355381374918,
      0.025725034415022232420,   0.029151406168081404329,
      0.032636176684371160824,   0.036143570694661979355,
      0.039637303915144881384,   0.043080910194106157333,
      0.046438070572019348289,   0.049672941328980506172,
      0.052750478102111190524,   0.055636753190152458167,
      0.058299263222665441022,   0.060707224456505990840,
      0.062831853071795864769,   0.064646627972498877329,
      0.066127533751748103544,   0.067253281657883708900,
      0.068005506592190013728,   0.068368938381834116247,
      0.068331545799620740601,   0.067884652043864422321,
      0.067023020644795679731,   0.065744911026215978200,
      0.064052103220269093209,   0.061949891506815085610,
      0.059447047024549038094,   0.056555749676253393515,
      0.053291489922967234344,   0.049672941328980506172,
      0.045721804979045141132,   0.041462627138735213253,
      0.036922591766269843482,   0.032131289707228663972,
      0.027120466610459958063,   0.021923751792270011140,
      0.016576370445013121816,   0.011114841733974874633,
      0.0055766654516450821516};
  IntegratorXX::GaussChebyshev2<double, double> quad(49);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 49; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("50 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 50> ref_pts = {
      0.99810332873704407816,   0.99242050967193575826,
      0.98297309968390177828,   0.96979693603500947182,
      0.95294200042715655583,   0.93247222940435580457,
      0.90846527181952368611,   0.88101219428578450601,
      0.85021713572961415213,   0.81619691235622169087,
      0.77908057452567043192,   0.73900891722065911592,
      0.69613394596292660828,   0.65061830020424211372,
      0.60263463637925638918,   0.55236497296050581076,
      0.50000000000000000000,   0.44573835577653826740,
      0.38978587329267936908,   0.33235479947965966456,
      0.27366299007208286354,   0.21393308320649743991,
      0.15339165487868537265,   0.092268359463301995240,
      0.030795058556170353875,  -0.030795058556170353875,
      -0.092268359463301995240, -0.15339165487868537265,
      -0.21393308320649743991,  -0.27366299007208286354,
      -0.33235479947965966456,  -0.38978587329267936908,
      -0.44573835577653826740,  -0.50000000000000000000,
      -0.55236497296050581076,  -0.60263463637925638918,
      -0.65061830020424211372,  -0.69613394596292660828,
      -0.73900891722065911592,  -0.77908057452567043192,
      -0.81619691235622169087,  -0.85021713572961415213,
      -0.88101219428578450601,  -0.90846527181952368611,
      -0.93247222940435580457,  -0.95294200042715655583,
      -0.96979693603500947182,  -0.98297309968390177828,
      -0.99242050967193575826,  -0.99810332873704407816};
  std::array<double, 50> ref_wgt = {
      0.00016515081924108839474, 0.00065903761284935232357,
      0.0014769768947712633843,  0.0026112077605173219113,
      0.0040509588427445285749,  0.0057825412469732506857,
      0.0077894666735589113931,  0.010052589716878913903,
      0.012550273126145166290,   0.015258574616074971840,
      0.018151453631521876146,   0.021200996299654518774,
      0.024377656647830645092,   0.027650512026271616772,
      0.030987530553186528237,   0.034355848297160864773,
      0.037722053828290120457,   0.041052477706415157455,
      0.044313484432442124099,   0.047471764367467216623,
      0.050494623124457108480,   0.053350265958559452855,
      0.056008074724552790395,   0.058438875033129648336,
      0.060615191321101749948,   0.062511487653510780048,
      0.064104392197144421729,   0.065372903444058860544,
      0.066298576419209078040,   0.066865687276860546360,
      0.067061374874645313313,   0.066875758110360673990,
      0.066302028013215625228,   0.065336513796446562456,
      0.063978722300213216574,   0.062231350480554859649,
      0.060100270829999913326,   0.057594489846218729505,
      0.054726079894920537052,   0.051510085040060819400,
      0.047964401636409290466,   0.044109634694737393737,
      0.039968931236481880727,   0.035567792050965008630,
      0.030933863452428208027,   0.026096710804693463551,
      0.021087575736750061251,   0.015939119111647321479,
      0.010685151932569905943,   0.0053603564728447504247};
  IntegratorXX::GaussChebyshev2<double, double> quad(50);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 50; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("55 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 55> ref_pts = {
      0.99842681501781656213,   0.99371220989324258353,
      0.98587101851823587392,   0.97492791218182360702,
      0.96091732194509954321,   0.94388333030836756290,
      0.92387953251128675613,   0.90096886790241912624,
      0.87522342190875369750,   0.84672419922828416835,
      0.81556086895926017135,   0.78183148246802980871,
      0.74564216488316560949,   0.70710678118654752440,
      0.66634657795200394558,   0.62348980185873353053,
      0.57867129617980574163,   0.53203207651533656356,
      0.48371888710523979107,   0.43388373911755812048,
      0.38268343236508977173,   0.33027906195516708177,
      0.27683551142484938763,   0.22252093395631440429,
      0.16750622330473640809,   0.11196447610330785847,
      0.056070447237191788191,  0,
      -0.056070447237191788191, -0.11196447610330785847,
      -0.16750622330473640809,  -0.22252093395631440429,
      -0.27683551142484938763,  -0.33027906195516708177,
      -0.38268343236508977173,  -0.43388373911755812048,
      -0.48371888710523979107,  -0.53203207651533656356,
      -0.57867129617980574163,  -0.62348980185873353053,
      -0.66634657795200394558,  -0.70710678118654752440,
      -0.74564216488316560949,  -0.78183148246802980871,
      -0.81556086895926017135,  -0.84672419922828416835,
      -0.87522342190875369750,  -0.90096886790241912624,
      -0.92387953251128675613,  -0.94388333030836756290,
      -0.96091732194509954321,  -0.97492791218182360702,
      -0.98587101851823587392,  -0.99371220989324258353,
      -0.99842681501781656213};
  std::array<double, 55> ref_wgt = {
      0.00012476298643166900765, 0.00049807083966942480501,
      0.0011169872620653200410,  0.0019766417762070443277,
      0.0030702645791636207837,  0.0043892349921830165647,
      0.0059231431625379621133,  0.0076598645803099164879,
      0.0095856468820893285938,  0.011685208326495897176,
      0.013941847243701747185,   0.016337561683358826318,
      0.018853178413039937798,   0.021468490353012366811,
      0.024162401473343258844,   0.026913078126410204766,
      0.029698105742233526119,   0.032494649775981738777,
      0.035279619766798078819,   0.038029835344967639606,
      0.040722193010548282268,   0.043333832501022472865,
      0.045842301568331042924,   0.048225717996803805128,
      0.050462927712927127362,   0.052533657865447583144,
      0.054418663789808697392,   0.056099868814103450687,
      0.057560495914293042222,   0.058785190284034645231,
      0.059760131948670009354,   0.060473137623298432788,
      0.060913751090893889742,   0.061073321457588911735,
      0.060945068727962858242,   0.060524136232832928446,
      0.059807629535018190964,   0.058794641534172136611,
      0.057486263589381104882,   0.055885582577113721616,
      0.053997663901580434108,   0.051829520573918410965,
      0.049390068575152388731,   0.046690068814899203896,
      0.043742056092596197464,   0.040560255559970469782,
      0.037160487271876494919,   0.033560059496888228021,
      0.029777651538542288221,   0.025833186892328406401,
      0.021747697631887006425,   0.017543180979917753640,
      0.013242449074588090957,   0.0088689729903659553133,
      0.0044467221128453887315};
  IntegratorXX::GaussChebyshev2<double, double> quad(55);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 55; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("60 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 60> ref_pts = {
      0.99867408988483050761,   0.99469987561458904798,
      0.98808789609107714930,   0.97885568509535784755,
      0.96702772479132034919,   0.95263538080338254732,
      0.93571681904049365305,   0.91631690448700473475,
      0.89448708222879558203,   0.87028524103015521819,
      0.84377555982318564924,   0.81502833751681135428,
      0.78411980657671042880,   0.75113193087051989087,
      0.71615218831439332449,   0.67927333889729311559,
      0.64059317869817515558,   0.60021428054836821829,
      0.55824372202686475915,   0.51479280150983072731,
      0.46997674302732004488,   0.42391439070986068874,
      0.37672789363518509944,   0.32854238191083473302,
      0.27948563485160945814,   0.22968774213179555086,
      0.17928075881073566417,   0.12839835514655094445,
      0.077175462126646351235,  0.025747913654988557094,
      -0.025747913654988557094, -0.077175462126646351235,
      -0.12839835514655094445,  -0.17928075881073566417,
      -0.22968774213179555086,  -0.27948563485160945814,
      -0.32854238191083473302,  -0.37672789363518509944,
      -0.42391439070986068874,  -0.46997674302732004488,
      -0.51479280150983072731,  -0.55824372202686475915,
      -0.60021428054836821829,  -0.64059317869817515558,
      -0.67927333889729311559,  -0.71615218831439332449,
      -0.75113193087051989087,  -0.78411980657671042880,
      -0.81502833751681135428,  -0.84377555982318564924,
      -0.87028524103015521819,  -0.89448708222879558203,
      -0.91631690448700473475,  -0.93571681904049365305,
      -0.95263538080338254732,  -0.96702772479132034919,
      -0.97885568509535784755,  -0.98808789609107714930,
      -0.99469987561458904798,  -0.99867408988483050761};
  std::array<double, 60> ref_wgt = {
      0.000096539515010212014747, 0.00038551819496971133100,
      0.00086502030387048567593,  0.0015318657893357417144,
      0.0023816294635438977035,   0.0034086676959546546440,
      0.0046061524584197056936,   0.0059661125193480700982,
      0.0074794815408964847414,   0.0091361527919234911960,
      0.010925040149927801240,    0.012834145027622969003,
      0.014850628824405474189,    0.016960890469963193401,
      0.019150648596842845144,    0.021405027851129878289,
      0.023708648825657490030,    0.026045721078500596651,
      0.028400138681054879414,    0.030755577724860610578,
      0.033095595204596176814,    0.035403728686407090433,
      0.037663596166002111354,    0.039858995519767166784,
      0.041974002954527127727,    0.043993069867511020957,
      0.045901117537512607930,    0.047683629081129192086,
      0.049326738124230159580,    0.050817313658356104119,
      0.052143040574462852622,    0.053292495392166838937,
      0.054255216731265545385,    0.055021770103628473425,
      0.055583806637393509288,    0.055934115381558793991,
      0.056066668877315650765,    0.055976661722595599708,
      0.055660541898064664917,    0.055116034665941979479,
      0.054342158897289790362,    0.053339235728554311308,
      0.052108889493862276096,    0.050654040925623777336,
      0.048978892662083396258,    0.047088907146323822175,
      0.044990777046585578394,    0.042692388372352564617,
      0.040202776504199956271,    0.037532075397648829260,
      0.034691460261968712300,    0.031693084053772367000,
      0.028550008162124415494,    0.025276127696517016853,
      0.021886091821245071547,    0.018395219609248469703,
      0.014819411915203527523,    0.011175059791380633142,
      0.0074789499903986779578,   0.0037481681163761289897};
  IntegratorXX::GaussChebyshev2<double, double> quad(60);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 60; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("65 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 65> ref_pts = {0.99886733918300797666,
                                    0.99547192257308460473,
                                    0.98982144188093273238,
                                    0.98192869726270670040,
                                    0.97181156832354168738,
                                    0.95949297361449738989,
                                    0.94500081871466848739,
                                    0.92836793301607261020,
                                    0.90963199535451837141,
                                    0.88883544865492346631,
                                    0.86602540378443864676,
                                    0.84125353283118116886,
                                    0.81457595205033570778,
                                    0.78605309474278746976,
                                    0.75574957435425828377,
                                    0.72373403810507016164,
                                    0.69007901148211198967,
                                    0.65486073394528506406,
                                    0.61815898622060521322,
                                    0.58005690957119817920,
                                    0.54064081745559758211,
                                    0.50000000000000000000,
                                    0.45822652172741039456,
                                    0.41541501300188642553,
                                    0.37166245566032751915,
                                    0.32706796331742163634,
                                    0.28173255684142969771,
                                    0.23575893550942722825,
                                    0.18925124436041020362,
                                    0.14231483827328514044,
                                    0.095056043304182663632,
                                    0.047581915823742297450,
                                    0,
                                    -0.047581915823742297450,
                                    -0.095056043304182663632,
                                    -0.14231483827328514044,
                                    -0.18925124436041020362,
                                    -0.23575893550942722825,
                                    -0.28173255684142969771,
                                    -0.32706796331742163634,
                                    -0.37166245566032751915,
                                    -0.41541501300188642553,
                                    -0.45822652172741039456,
                                    -0.50000000000000000000,
                                    -0.54064081745559758211,
                                    -0.58005690957119817920,
                                    -0.61815898622060521322,
                                    -0.65486073394528506406,
                                    -0.69007901148211198967,
                                    -0.72373403810507016164,
                                    -0.75574957435425828377,
                                    -0.78605309474278746976,
                                    -0.81457595205033570778,
                                    -0.84125353283118116886,
                                    -0.86602540378443864676,
                                    -0.88883544865492346631,
                                    -0.90963199535451837141,
                                    -0.92836793301607261020,
                                    -0.94500081871466848739,
                                    -0.95949297361449738989,
                                    -0.97181156832354168738,
                                    -0.98192869726270670040,
                                    -0.98982144188093273238,
                                    -0.99547192257308460473,
                                    -0.99886733918300797666};
  std::array<double, 65> ref_wgt = {
      0.000076225064398445302096, 0.00030446865745244620939,
      0.00068343820252798648175,  0.0012109868065225595189,
      0.0018841243221440585136,   0.0026990327560043108511,
      0.0036510859439142943474,   0.0047348733929958140244,
      0.0059442281689637697870,   0.0072722586862924625536,
      0.0087113842390638648232,   0.010253374091206921749,
      0.011889389926672038382,    0.013610031442936527414,
      0.015405384855192338944,    0.017265074063708643535,
      0.019178314223264523962,    0.021133967441280453300,
      0.023120600320403919930,    0.025126543051879926166,
      0.027139949758109177013,    0.029148859776406002171,
      0.031141259571146998037,    0.033105144958274618279,
      0.035028583324503938257,    0.036899775523583818734,
      0.038707117133585696289,    0.040439258762425979582,
      0.042085165093655072059,    0.043634172370942788241,
      0.045076044027623798904,    0.046401024177097313555,
      0.047599888690754443007,    0.048663993602379154505,
      0.049585320591571910963,    0.050356519313609667331,
      0.050970946359206145840,    0.051422700644790450480,
      0.051706655052092706936,    0.051818484154919944444,
      0.051754687890926579653,    0.051512611056830115898,
      0.051090458526788835547,    0.050487306115435980080,
      0.049703107029243217181,    0.048738693872352079656,
      0.047595776195651054809,    0.046276933600572750171,
      0.044785604431724412526,    0.043126070114930677162,
      0.041303435219445300871,    0.039323603344865778837,
      0.037193248954550197444,    0.034919785297981074421,
      0.032511328584441086327,    0.029976658589458978044,
      0.027325175893653299337,    0.024566855970754337523,
      0.021712200357633311002,    0.018772185154030779370,
      0.015758207113277577921,    0.012682027597572091457,
      0.0095557146822548198251,   0.0063915837029495305803,
      0.0032021365473718002998};
  IntegratorXX::GaussChebyshev2<double, double> quad(65);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 65; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("70 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 70> ref_pts = {
      0.99902122651997360645,   0.99608682207494483175,
      0.99120253089941460737,   0.98437791422272560514,
      0.97562633155250680319,   0.96496491452280993898,
      0.95241453335813135062,   0.93799975601896745843,
      0.92174880010887838051,   0.90369347763720386360,
      0.88386913274556110692,   0.86231457252002778376,
      0.83907199102444866157,   0.81418688670357419045,
      0.78770797331771829468,   0.75968708458328495753,
      0.73017907270583424637,   0.69924170100431406636,
      0.66693553083665075146,   0.63332380304804695903,
      0.59847231417405739222,   0.56244928764078064283,
      0.52532524021429882765,   0.48717284396079651165,
      0.44806678398757846764,   0.40808361224346491058,
      0.36730159766475679845,   0.32580057296011750976,
      0.28366177833429668678,   0.24096770245661439376,
      0.19780192098551725072,   0.15424893296530230680,
      0.11039399541526974920,   0.066322956435103948986,
      0.022122087153186897604,  -0.022122087153186897604,
      -0.066322956435103948986, -0.11039399541526974920,
      -0.15424893296530230680,  -0.19780192098551725072,
      -0.24096770245661439376,  -0.28366177833429668678,
      -0.32580057296011750976,  -0.36730159766475679845,
      -0.40808361224346491058,  -0.44806678398757846764,
      -0.48717284396079651165,  -0.52532524021429882765,
      -0.56244928764078064283,  -0.59847231417405739222,
      -0.63332380304804695903,  -0.66693553083665075146,
      -0.69924170100431406636,  -0.73017907270583424637,
      -0.75968708458328495753,  -0.78770797331771829468,
      -0.81418688670357419045,  -0.83907199102444866157,
      -0.86231457252002778376,  -0.88386913274556110692,
      -0.90369347763720386360,  -0.92174880010887838051,
      -0.93799975601896745843,  -0.95241453335813135062,
      -0.96496491452280993898,  -0.97562633155250680319,
      -0.98437791422272560514,  -0.99120253089941460737,
      -0.99608682207494483175,  -0.99902122651997360645};
  std::array<double, 70> ref_wgt = {
      0.000061232560518299282998, 0.00024463062937489518685,
      0.00054929670251284730399,  0.00097373938074874732589,
      0.0015158800105798217495,   0.0021730619402867449355,
      0.0029420623505219429475,   0.0038191066072219065671,
      0.0047998850735604987980,   0.0058795723068174196311,
      0.0070528485555196330523,   0.0083139234620699848447,
      0.0096565618663511196503,   0.011074111596526978676,
      0.012559533124499435047,    0.014105430955252605134,
      0.015704086611668287532,    0.017347493069356516887,
      0.019027390489646382996,    0.020735303093152240973,
      0.022462577011294465082,    0.024200418948834159848,
      0.025939935486896766138,    0.027672172853126078014,
      0.029388156983540301792,    0.031078933699364563176,
      0.032735608821595420125,    0.034349388046314759276,
      0.035911616404811795353,    0.037413817134388176362,
      0.038847729788304430306,    0.040205347416664801986,
      0.041478952654117224056,    0.042661152555047785408,
      0.043744912022453458819,    0.044723585682858795066,
      0.045590948066474564980,    0.046341221959248852970,
      0.046969104801501062683,    0.047469793016421288147,
      0.047839004160823701286,    0.048072996800122914021,
      0.048168588019514507360,    0.048123168493740995644,
      0.047934715048566618540,    0.047601800658121226716,
      0.047123601833556552049,    0.046499903369937647832,
      0.045731100429917702038,    0.044818197954464577406,
      0.043762807402670709093,    0.042567140834432596900,
      0.041234002361480305565,    0.039766777003819640447,
      0.038169417000068996810,    0.036446425631379005875,
      0.034602838629566675615,    0.032644203250728560785,
      0.030576555105872774788,    0.028406392849982130224,
      0.026140650840346893267,    0.023786669883944052536,
      0.021352166202051276793,    0.018845198748130829735,
      0.016274135022267070659,    0.013647615532058879780,
      0.010974517055826266053,    0.0082639148692623087544,
      0.0055250441012242374600,   0.0027672603881907775252};
  IntegratorXX::GaussChebyshev2<double, double> quad(70);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 70; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("75 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 75> ref_pts = {
      0.99914575838730102919,   0.99658449300666984982,
      0.99232057973704506275,   0.98636130340272237360,
      0.97871684532735448364,   0.96940026593933041674,
      0.95842748245825270023,   0.94581724170063467902,
      0.93159108805127897294,   0.91577332665505743992,
      0.89839098189197887157,   0.87947375120648907139,
      0.85905395436988518190,   0.83716647826252857481,
      0.81384871727019496710,   0.78914050939639359922,
      0.76308406819980650614,   0.73572391067313162477,
      0.70710678118654752440,   0.67728157162574107476,
      0.64629923786094089199,   0.61421271268966781744,
      0.58107681540193828000,   0.54694815812242687471,
      0.51188504908960100217,   0.47594739303707354443,
      0.43919658884737036545,   0.40169542465296945752,
      0.36350797056382984848,   0.32469946920468348741,
      0.28533622424910530907,   0.24548548714079914892,
      0.20521534219563429132,   0.16459459028073389414,
      0.12369263126934761602,   0.082579345472332324600,
      0.041324974248813211938,  0,
      -0.041324974248813211938, -0.082579345472332324600,
      -0.12369263126934761602,  -0.16459459028073389414,
      -0.20521534219563429132,  -0.24548548714079914892,
      -0.28533622424910530907,  -0.32469946920468348741,
      -0.36350797056382984848,  -0.40169542465296945752,
      -0.43919658884737036545,  -0.47594739303707354443,
      -0.51188504908960100217,  -0.54694815812242687471,
      -0.58107681540193828000,  -0.61421271268966781744,
      -0.64629923786094089199,  -0.67728157162574107476,
      -0.70710678118654752440,  -0.73572391067313162477,
      -0.76308406819980650614,  -0.78914050939639359922,
      -0.81384871727019496710,  -0.83716647826252857481,
      -0.85905395436988518190,  -0.87947375120648907139,
      -0.89839098189197887157,  -0.91577332665505743992,
      -0.93159108805127897294,  -0.94581724170063467902,
      -0.95842748245825270023,  -0.96940026593933041674,
      -0.97871684532735448364,  -0.98636130340272237360,
      -0.99232057973704506275,  -0.99658449300666984982,
      -0.99914575838730102919};
  std::array<double, 75> ref_wgt = {
      0.000049927432562164040585, 0.00019949651167832224052,
      0.00044806841023269649797,  0.00079458117516121847578,
      0.0012375538544973191073,   0.0017750922529850034180,
      0.0024048962941108516316,   0.0031242689602247154392,
      0.0039301267763459056603,   0.0048190117973109384965,
      0.0057871050521332580969,   0.0068302413938370230811,
      0.0079439256976175923668,   0.0091233503449915650801,
      0.010363413926649070180,    0.011658741092029492383,
      0.013003703469226996620,    0.014392441574711044763,
      0.015818887628535428177,    0.017276789187221820815,
      0.018759733503353897071,    0.020261172518117766192,
      0.021774448390584616472,    0.023292819465461418095,
      0.024809486579343262459,    0.026317619604192925221,
      0.027810384125854560160,    0.029280968154882595256,
      0.030722608766835934858,    0.032128618569451978873,
      0.033492411894773738083,    0.034807530615353924949,
      0.036067669485098296445,    0.037266700907131194085,
      0.038398699033262171340,    0.039457963102195383043,
      0.040439039926543187799,    0.041336745441970963664,
      0.042146185235398911075,    0.042862773973104786216,
      0.043482253653794015993,    0.044000710616214266163,
      0.044414591235672933200,    0.044720716248849833508,
      0.044916293651564226128,    0.044998930119634986404,
      0.044966640908644189977,    0.044817858194255773146,
      0.044551437820729858477,    0.044166664431386757515,
      0.043663254960989091272,    0.043041360476302021029,
      0.042301566357436077895,    0.041444890818950136658,
      0.040472781776069205344,    0.039387112067728388268,
      0.038190173054466197553,    0.036884666615433078701,
      0.035473695574930588172,    0.033960752594929481153,
      0.032349707575907850529,    0.030644793614080756102,
      0.028850591568638473661,    0.026972013297950263428,
      0.025014283628803884868,    0.022982921127618318325,
      0.020883717747169587589,    0.018722717426689523226,
      0.016506193727218161828,    0.014240626587796788225,
      0.011932678291466152013,    0.0095891687330701458868,
      0.0072170500835475541494,   0.0048233809477130566483,
      0.0024153001144745954291};
  IntegratorXX::GaussChebyshev2<double, double> quad(75);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 75; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("80 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 80> ref_pts = {
      0.99924795250423006929,   0.99699294116779206480,
      0.99323835774194298855,   0.98798984947680897870,
      0.98125531062738467889,   0.97304487057982383883,
      0.96337087861588033308,   0.95224788533841532593,
      0.93969262078590838405,   0.92572396926889039109,
      0.91036294096614665951,   0.89363264032341224819,
      0.87555823130209085011,   0.85616689953026647765,
      0.83548781141293641965,   0.81355207026296756371,
      0.79039266951875929283,   0.76604444311897803520,
      0.74054401310900458045,   0.71392973455789904243,
      0.68624163786873358573,   0.65752136856906365554,
      0.62781212467209856145,   0.59715859170278616485,
      0.56560687548653861053,   0.53320443280169124347,
      0.50000000000000000000,   0.46604351970253882582,
      0.43138606568125345427,   0.39607976603915682370,
      0.36017772480471041725,   0.32373394205832102335,
      0.28680323271109025310,   0.24944114405798129066,
      0.21170387222941074548,   0.17364817766693034885,
      0.13533129975013109826,   0.096810870703179095791,
      0.058144828910475828539,  0.019391331771824372455,
      -0.019391331771824372455, -0.058144828910475828539,
      -0.096810870703179095791, -0.13533129975013109826,
      -0.17364817766693034885,  -0.21170387222941074548,
      -0.24944114405798129066,  -0.28680323271109025310,
      -0.32373394205832102335,  -0.36017772480471041725,
      -0.39607976603915682370,  -0.43138606568125345427,
      -0.46604351970253882582,  -0.50000000000000000000,
      -0.53320443280169124347,  -0.56560687548653861053,
      -0.59715859170278616485,  -0.62781212467209856145,
      -0.65752136856906365554,  -0.68624163786873358573,
      -0.71392973455789904243,  -0.74054401310900458045,
      -0.76604444311897803520,  -0.79039266951875929283,
      -0.81355207026296756371,  -0.83548781141293641965,
      -0.85616689953026647765,  -0.87555823130209085011,
      -0.89363264032341224819,  -0.91036294096614665951,
      -0.92572396926889039109,  -0.93969262078590838405,
      -0.95224788533841532593,  -0.96337087861588033308,
      -0.97304487057982383883,  -0.98125531062738467889,
      -0.98798984947680897870,  -0.99323835774194298855,
      -0.99699294116779206480,  -0.99924795250423006929};
  std::array<double, 80> ref_wgt = {
      0.000041242354718667462658, 0.00016481435823834045584,
      0.00037025135915865316670,  0.00065678070504380385986,
      0.0010233243859854158466,   0.0014685027230437162830,
      0.0019906390890711733573,   0.0025877656459251034310,
      0.0032576300786322550241,   0.0039977033036906495423,
      0.0048051881253934401422,   0.0056770288108474096594,
      0.0066099215512458365716,   0.0076003257739523492209,
      0.0086444762670692261392,   0.0097383960754101416509,
      0.010877910124182919391,    0.012058659524221290003,
      0.013276116510294300752,    0.014525599961875713121,
      0.015802291453780713764,    0.017101251782280238710,
      0.018417437910690252676,    0.019745720277009893969,
      0.021080900404953308717,    0.022417728758689416459,
      0.023750922780775261029,    0.025075185052144811440,
      0.026385221512598199272,    0.027675759680027823854,
      0.028941566806618231578,    0.030177467910466180683,
      0.031378363621485130394,    0.032539247781083130937,
      0.033655224735932626210,    0.034721526267182208170,
      0.035733528097690392336,    0.036686765921285856449,
      0.037576950899672481040,    0.038399984574395491641,
      0.039151973143260945370,    0.039829241052748044719,
      0.040428343860265034355,    0.040946080322566923098,
      0.041379503669268624995,    0.041725932023141482224,
      0.041982957931765199546,    0.042148456978111227703,
      0.042220595440747417782,    0.042197836977566795336,
      0.042078948310244701019,    0.041863003890007143765,
      0.041549389528737582154,    0.041137804982947835621,
      0.040628265481679592967,    0.040021102192974051170,
      0.039316961627136500306,    0.038516803978618026393,
      0.037621900411925768382,    0.036633829300544194210,
      0.035554471431390571362,    0.034386004190826219853,
      0.033130894751689413115,    0.031791892284194281268,
      0.030372019216841340710,    0.028874561576698153831,
      0.027303058441522242420,    0.025661290539202202847,
      0.023953268032876836999,    0.022183217532846262682,
      0.020355568379004081954,    0.018474938239986917453,
      0.016546118077548627302,    0.014574056526813459184,
      0.012563843745038039629,    0.010520694783309730628,
      0.0084499325372224401961,   0.0063569703339949868542,
      0.0042472942147267720713,   0.0021264449715166488414};
  IntegratorXX::GaussChebyshev2<double, double> quad(80);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 80; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("85 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 85> ref_pts = {0.99933284837023937207,
                                    0.99733228366355167281,
                                    0.99400097523994591879,
                                    0.98934336807511019779,
                                    0.98336567682946611968,
                                    0.97607587755592715901,
                                    0.96748369705742525451,
                                    0.95760059990840595223,
                                    0.94643977315760935387,
                                    0.93401610873254799935,
                                    0.92034618356915944631,
                                    0.90544823749314661572,
                                    0.88934214888251890342,
                                    0.87204940814380760813,
                                    0.85359308903734644834,
                                    0.83399781788987793962,
                                    0.81328974073556535201,
                                    0.79149648842925410245,
                                    0.76864713977853207117,
                                    0.74477218274378185418,
                                    0.71990347375799584864,
                                    0.69407419522063387436,
                                    0.66731881122223941583,
                                    0.63967302155889127364,
                                    0.61117371409784929225,
                                    0.58185891555795283842,
                                    0.55176774077044590495,
                                    0.52094034048793028618,
                                    0.48941784781108550916,
                                    0.45724232330463852282,
                                    0.42445669887581508540,
                                    0.39110472049015601574,
                                    0.35723088980113278120,
                                    0.32288040477144621663,
                                    0.28809909936523756893,
                                    0.25293338239168074656,
                                    0.21743017558155696835,
                                    0.18163685097943643970,
                                    0.14560116773500487240,
                                    0.10937120837787438699,
                                    0.072995314660907525290,
                                    0.036522023057658834968,
                                    0,
                                    -0.036522023057658834968,
                                    -0.072995314660907525290,
                                    -0.10937120837787438699,
                                    -0.14560116773500487240,
                                    -0.18163685097943643970,
                                    -0.21743017558155696835,
                                    -0.25293338239168074656,
                                    -0.28809909936523756893,
                                    -0.32288040477144621663,
                                    -0.35723088980113278120,
                                    -0.39110472049015601574,
                                    -0.42445669887581508540,
                                    -0.45724232330463852282,
                                    -0.48941784781108550916,
                                    -0.52094034048793028618,
                                    -0.55176774077044590495,
                                    -0.58185891555795283842,
                                    -0.61117371409784929225,
                                    -0.63967302155889127364,
                                    -0.66731881122223941583,
                                    -0.69407419522063387436,
                                    -0.71990347375799584864,
                                    -0.74477218274378185418,
                                    -0.76864713977853207117,
                                    -0.79149648842925410245,
                                    -0.81328974073556535201,
                                    -0.83399781788987793962,
                                    -0.85359308903734644834,
                                    -0.87204940814380760813,
                                    -0.88934214888251890342,
                                    -0.90544823749314661572,
                                    -0.92034618356915944631,
                                    -0.93401610873254799935,
                                    -0.94643977315760935387,
                                    -0.95760059990840595223,
                                    -0.96748369705742525451,
                                    -0.97607587755592715901,
                                    -0.98336567682946611968,
                                    -0.98934336807511019779,
                                    -0.99400097523994591879,
                                    -0.99733228366355167281,
                                    -0.99933284837023937207};
  std::array<double, 85> ref_wgt = {
      0.000034460257903035735057, 0.00013772609394770827475,
      0.00030945304399170506469,  0.00054906816291936186818,
      0.00085577176365752700063,  0.0012285398444762516542,
      0.0016661271972791700688,   0.0021670711875417102691,
      0.0027296961945365989553,   0.0033521186985015533507,
      0.0040322529994595464365,   0.0047678175505034278420,
      0.0055563418865096807114,   0.0063951741274562402515,
      0.0072814890337919659309,   0.0082122965896457323460,
      0.0091844510880761662306,   0.010194660691053573407,
      0.011239497435438101603,    0.012315407654876958822,
      0.013418722786292579216,    0.014545670528476754977,
      0.015692386319246407114,    0.016854925096658030800,
      0.018029273308922800692,    0.019211361136915425683,
      0.020397074892529349708,    0.021582269555600728957,
      0.022762781411705368257,    0.023934440752827726790,
      0.025093084602710122242,    0.026234569428613946852,
      0.027354783801263288643,    0.028449660964894711132,
      0.029515191279604625536,    0.030547434498566888060,
      0.031542531843186827697,    0.032496717839862376303,
      0.033406331882736518593,    0.034267829487645764127,
      0.035077793203394303892,    0.035832943147510175063,
      0.036530147134765037657,    0.037166430367959689025,
      0.037738984661789543281,    0.038245177172004044876,
      0.038682558603557167555,    0.039048870873008320245,
      0.039342054202069451382,    0.039560253620900001096,
      0.039701824861521476471,    0.039765339623552505871,
      0.039749590196347774144,    0.039653593423554600945,
      0.039476593998073305524,    0.039218067077415982909,
      0.038877720211496870124,    0.038455494576949987963,
      0.037951565514150013391,    0.037366342365204125677,
      0.036700467613279597368,    0.035954815325727874824,
      0.035130488905554520990,    0.034228818157859406299,
      0.033251355679926703690,    0.032199872585673401993,
      0.031076353577162107635,    0.029882991377842863422,
      0.028622180544103695112,    0.027296510673574853482,
      0.025908759030441652990,    0.024461882609769985139,
      0.022959009664531754943,    0.021403430720629600311,
      0.019798589106756467662,    0.018148071027381321647,
      0.016455595208523092960,    0.014725002147256801172,
      0.012960242997084781770,    0.011165368122398529197,
      0.0093445153562495611708,   0.0075018979965379335860,
      0.0056417925765119177846,   0.0037685264461495369903,
      0.0018864652015601135382};
  IntegratorXX::GaussChebyshev2<double, double> quad(85);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 85; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("90 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 90> ref_pts = {
      0.99940414055107045870,   0.99761727230124759203,
      0.99464152469519269829,   0.99048044398756317202,
      0.98513898901687381217,   0.97862352529595525258,
      0.97094181742605202716,   0.96210301984360053241,
      0.95211766591071412696,   0.94099765536237644305,
      0.92875624012530232704,   0.91540800852536634027,
      0.90096886790241912624,   0.88545602565320989590,
      0.86888796872500653870,   0.85128444158435119967,
      0.83266642268720637305,   0.81305609947853248384,
      0.79247684195109043327,   0.77095317479497958281,
      0.74851074817110109863,   0.72517630714337647253,
      0.70097765980614942224,   0.67594364414475434862,
      0.65010409366874423641,   0.62348980185873353053,
      0.59613248546922535693,   0.56806474673115580251,
      0.53932003449919919621,   0.50993260439013588184,
      0.47993747795978634314,   0.44937040096716130012,
      0.41826780077556517761,   0.38666674294141885623,
      0.35460488704253562597,   0.32212044179849062067,
      0.28925211953656763736,   0.25603909005754713206,
      0.22252093395631440429,   0.18873759545291668381,
      0.15472933479028124006,   0.12053668025532305335,
      0.086200379880619400404,  0.051761352884209381468,
      0.017260640905388497482,  -0.017260640905388497482,
      -0.051761352884209381468, -0.086200379880619400404,
      -0.12053668025532305335,  -0.15472933479028124006,
      -0.18873759545291668381,  -0.22252093395631440429,
      -0.25603909005754713206,  -0.28925211953656763736,
      -0.32212044179849062067,  -0.35460488704253562597,
      -0.38666674294141885623,  -0.41826780077556517761,
      -0.44937040096716130012,  -0.47993747795978634314,
      -0.50993260439013588184,  -0.53932003449919919621,
      -0.56806474673115580251,  -0.59613248546922535693,
      -0.62348980185873353053,  -0.65010409366874423641,
      -0.67594364414475434862,  -0.70097765980614942224,
      -0.72517630714337647253,  -0.74851074817110109863,
      -0.77095317479497958281,  -0.79247684195109043327,
      -0.81305609947853248384,  -0.83266642268720637305,
      -0.85128444158435119967,  -0.86888796872500653870,
      -0.88545602565320989590,  -0.90096886790241912624,
      -0.91540800852536634027,  -0.92875624012530232704,
      -0.94099765536237644305,  -0.95211766591071412696,
      -0.96210301984360053241,  -0.97094181742605202716,
      -0.97862352529595525258,  -0.98513898901687381217,
      -0.99048044398756317202,  -0.99464152469519269829,
      -0.99761727230124759203,  -0.99940414055107045870};
  std::array<double, 90> ref_wgt = {
      0.000029087246045061087082, 0.00011626233366528465014,
      0.00026126554621105401708,  0.00046366480495335109384,
      0.00072285684040910060554,  0.0010380688277923934490,
      0.0014083604822015053221,   0.0018326266079175241080,
      0.0023096000949713775073,   0.0028378553549353798202,
      0.0034158121867163130893,   0.0040417400619726846937,
      0.0047137628186522563003,   0.0054298637500502386045,
      0.0061878910757266305772,   0.0069855637795958984761,
      0.0078204777995162879367,   0.0086901125517621857183,
      0.0095918377728636271559,   0.010522920660444692612,
      0.011480533293889436859,    0.012461760314912302935,
      0.013463606847411702344,    0.014483006635342469044,
      0.015516830376756939755,    0.016561894231637049087,
      0.017614968480672469198,    0.018672786311733723517,
      0.019732052710445451717,    0.020789453430984520663,
      0.021841664023011215780,    0.022885358890489890091,
      0.023917220358068601459,    0.024933947720665665624,
      0.025932266251954751852,    0.026908936147549032464,
      0.027860761378858675872,    0.028784598433834179289,
      0.029677364921110033925,    0.030536048014428192795,
      0.031357712714647791209,    0.032139509907135408153,
      0.032878684192877545589,    0.033572581472262474929,
      0.034218656261140532755,    0.034814478719488566794,
      0.035357741373773617399,    0.035846265514931006899,
      0.036278007254740600720,    0.036651063224299771936,
      0.036963675899250092458,    0.037214238537414420177,
      0.037401299715539172127,    0.037523567452910386263,
      0.037579912910718800116,    0.037569373657185646757,
      0.037491156489624140574,    0.037344639805798578819,
      0.037129375518150437747,    0.036845090505685557469,
      0.036491687599555204152,    0.036069246099613151194,
      0.035578021820487583120,    0.035018446666967228358,
      0.034391127739762290225,    0.033696845973959088325,
      0.032936554313739471877,    0.032111375428178665175,
      0.031222598974164922399,    0.030271678413697907457,
      0.029260227394016821262,    0.028190015700180772419,
      0.027062964790869587246,    0.025881142929290109853,
      0.024646759922158058449,    0.023362161480775771416,
      0.022029823219238880219,    0.020652344305777371090,
      0.019232440784166036500,    0.017772938583023478873,
      0.016276766231655242342,    0.014746947301883071298,
      0.013186592596036618694,    0.011598892101964183940,
      0.0099871067365434259481,   0.0083545598997397977061,
      0.0067046288617681650603,   0.0050407360063603430521,
      0.0033663399535269090918,   0.0016849265855245996289};
  IntegratorXX::GaussChebyshev2<double, double> quad(90);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 90; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("95 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 95> ref_pts = {
      0.99946458747636564443,   0.99785892323860350674,
      0.99518472667219688624,   0.99144486137381041114,
      0.98664333208487900475,   0.98078528040323044913,
      0.97387697927733364815,   0.96592582628906828675,
      0.95694033573220886494,   0.94693012949510566426,
      0.93590592675732570029,   0.92387953251128675613,
      0.91086382492117581857,   0.89687274153268830389,
      0.88192126434835502971,   0.86602540378443864676,
      0.84920218152657888765,   0.83146961230254523708,
      0.81284668459161521658,   0.79335334029123516458,
      0.77301045336273696081,   0.75183980747897739641,
      0.72986407269783565735,   0.70710678118654752440,
      0.68359230202287128051,   0.65934581510006886843,
      0.63439328416364549822,   0.60876142900872063942,
      0.58247769686780214920,   0.55557023301960222474,
      0.52806785065036799587,   0.50000000000000000000,
      0.47139673682599764856,   0.44228869021900128200,
      0.41270702980439473705,   0.38268343236508977173,
      0.35225004792123350653,   0.32143946530316158070,
      0.29028467725446236764,   0.25881904510252076235,
      0.22707626303437320759,   0.19509032201612826785,
      0.16289547339458873948,   0.13052619222005159155,
      0.098017140329560601994,  0.065403129230143066815,
      0.032719082821776142064,  0,
      -0.032719082821776142064, -0.065403129230143066815,
      -0.098017140329560601994, -0.13052619222005159155,
      -0.16289547339458873948,  -0.19509032201612826785,
      -0.22707626303437320759,  -0.25881904510252076235,
      -0.29028467725446236764,  -0.32143946530316158070,
      -0.35225004792123350653,  -0.38268343236508977173,
      -0.41270702980439473705,  -0.44228869021900128200,
      -0.47139673682599764856,  -0.50000000000000000000,
      -0.52806785065036799587,  -0.55557023301960222474,
      -0.58247769686780214920,  -0.60876142900872063942,
      -0.63439328416364549822,  -0.65934581510006886843,
      -0.68359230202287128051,  -0.70710678118654752440,
      -0.72986407269783565735,  -0.75183980747897739641,
      -0.77301045336273696081,  -0.79335334029123516458,
      -0.81284668459161521658,  -0.83146961230254523708,
      -0.84920218152657888765,  -0.86602540378443864676,
      -0.88192126434835502971,  -0.89687274153268830389,
      -0.91086382492117581857,  -0.92387953251128675613,
      -0.93590592675732570029,  -0.94693012949510566426,
      -0.95694033573220886494,  -0.96592582628906828675,
      -0.97387697927733364815,  -0.98078528040323044913,
      -0.98664333208487900475,  -0.99144486137381041114,
      -0.99518472667219688624,  -0.99785892323860350674,
      -0.99946458747636564443};
  std::array<double, 95> ref_wgt = {
      0.000024775591024114276250, 0.000099036044502781877636,
      0.00022258256320050833074,  0.00039508435648692077744,
      0.00061607944611709902987,  0.00088497579160172490865,
      0.0012010527324526083736,   0.0015634627438248195940,
      0.0019712335013207085519,   0.0024232702499753494216,
      0.0029183584717092026463,   0.0034551668448138112328,
      0.0040322504883318740617,   0.0046480544835057653395,
      0.0053009176638001516649,   0.0059890766643564070659,
      0.0067106702211106030094,   0.0074637437092044629438,
      0.0082462539097412708599,   0.0090560739933877018980,
      0.0098909987087992279021,   0.010748749763352402968,
      0.011626981383203144639,    0.012523286039257213973,
      0.013435200325238505406,    0.014360210973673450481,
      0.015295760995276703183,    0.016239255926925111670,
      0.017188070173144510054,    0.018139553425807717231,
      0.019091037146552852543,    0.020039841096279126493,
      0.020983279895963005209,    0.021918669602961355199,
      0.022843334286930034339,    0.023754612589486497989,
      0.024649864251783335632,    0.025526476594236151328,
      0.026381870932763666543,    0.027213508916050080872,
      0.028018898768529208630,    0.028795601424016260897,
      0.029541236535175818232,    0.030253488344312906424,
      0.030930111401307427624,    0.031568936114879709235,
      0.032167874123775727806,    0.032724923474893679567,
      0.033238173595837959894,    0.033705810049881162385,
      0.034126119061838223089,    0.034497491803908055782,
      0.034818428431115622253,    0.035087541856589966032,
      0.035303561257539857423,    0.035465335303436843752,
      0.035571835098584110306,    0.035622156831937023801,
      0.035615524127745895447,    0.035551290091311667308,
      0.035428939044879158899,    0.035248087949438442870,
      0.035008487508961052320,    0.034710022954362236305,
      0.034352714505251532876,    0.033936717508309662994,
      0.033462322251908295360,    0.032929953457368716071,
      0.032340169448033980278,    0.031693660998104850368,
      0.030991249863960867813,    0.030233887001452406396,
      0.029422650473405671401,    0.028558743052328521057,
      0.027643489524038896263,    0.026678333698657784354,
      0.025664835136113277682,    0.024604665593989720651,
      0.023499605206224513471,    0.022351538401803246850,
      0.021162449573229917760,    0.019934418505151514138,
      0.018669615574093804408,    0.017370296730816334796,
      0.016038798277318095709,    0.014677531451019807066,
      0.013288976829113100149,    0.011875678566499921736,
      0.010440238481146211784,    0.0089853100010413434100,
      0.0075135919872880782751,   0.0060278224481460787455,
      0.0045307721591146120217,   0.0030252382043663480053,
      0.0015140374550335470915};
  IntegratorXX::GaussChebyshev2<double, double> quad(95);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 95; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("100 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 100> ref_pts = {
      0.99951628229198806492,   0.99806559713359434832,
      0.99564934796901858048,   0.99226987236327651009,
      0.98793043974075672075,   0.98263524822226368744,
      0.97638942056360702954,   0.96919899919966611294,
      0.96107094039872454876,   0.95201310753272989238,
      0.94203426346998913201,   0.93114406209765954260,
      0.91935303898223634754,   0.90667260117707256334,
      0.89311501618679159344,   0.87869340009926878928,
      0.86342170489666352002,   0.84731470495777750785,
      0.83038798276479752539,   0.81265791382825025871,
      0.79414165084475346832,   0.77485710710288980082,
      0.75482293915325699661,   0.73405852875946010079,
      0.71258396414750692662,   0.69042002057174677052,
      0.66758814021615357758,   0.64411041145039776835,
      0.62000954746077513736,   0.59530886427666601992,
      0.57003225821378270842,   0.54420418275602731987,
      0.51784962489832542377,   0.49099408097332221110,
      0.46366353198532731467,   0.43588441847537109607,
      0.40768361494168883413,   0.37908840384037934416,
      0.35012644919139071190,   0.32082576981536764613,
      0.29121471222725207175,   0.26132192321286065414,
      0.23117632211496964483,   0.20080707285571847165,
      0.17024355572239859086,   0.13951533894392302847,
      0.10865215008547454065,   0.077683847289006223794,
      0.046640390387417532400,  0.015551811920350874010,
      -0.015551811920350874010, -0.046640390387417532400,
      -0.077683847289006223794, -0.10865215008547454065,
      -0.13951533894392302847,  -0.17024355572239859086,
      -0.20080707285571847165,  -0.23117632211496964483,
      -0.26132192321286065414,  -0.29121471222725207175,
      -0.32082576981536764613,  -0.35012644919139071190,
      -0.37908840384037934416,  -0.40768361494168883413,
      -0.43588441847537109607,  -0.46366353198532731467,
      -0.49099408097332221110,  -0.51784962489832542377,
      -0.54420418275602731987,  -0.57003225821378270842,
      -0.59530886427666601992,  -0.62000954746077513736,
      -0.64411041145039776835,  -0.66758814021615357758,
      -0.69042002057174677052,  -0.71258396414750692662,
      -0.73405852875946010079,  -0.75482293915325699661,
      -0.77485710710288980082,  -0.79414165084475346832,
      -0.81265791382825025871,  -0.83038798276479752539,
      -0.84731470495777750785,  -0.86342170489666352002,
      -0.87869340009926878928,  -0.89311501618679159344,
      -0.90667260117707256334,  -0.91935303898223634754,
      -0.93114406209765954260,  -0.94203426346998913201,
      -0.95201310753272989238,  -0.96107094039872454876,
      -0.96919899919966611294,  -0.97638942056360702954,
      -0.98263524822226368744,  -0.98793043974075672075,
      -0.99226987236327651009,  -0.99564934796901858048,
      -0.99806559713359434832,  -0.99951628229198806492};
  std::array<double, 100> ref_wgt = {
      0.000021275655906182057377, 0.000085051170923267800866,
      0.00019117230017889641709,  0.00033938234607911640877,
      0.00052932272323526650388,  0.00076053374763735367229,
      0.0010324556483541778777,   0.0013444297995555204855,
      0.0016957001701715797091,   0.0020854149880305472731,
      0.0025126286148478080345,   0.0029763036279807261149,
      0.0034753131044123574401,   0.0040084431019866803928,
      0.0045743953324880230005,   0.0051717900207392225467,
      0.0057991689434875919597,   0.0064549986414558694181,
      0.0071376737975578464391,   0.0078455207739161270114,
      0.0085768012999732546683,   0.0093297163036580094499,
      0.010102409877256739635,    0.010892973369345833003,
      0.011699449593866488746,    0.012519837147167422485,
      0.013352094823605579560,    0.014194146120079858569,
      0.015043883819678726332,    0.015899174644449859742,
      0.016757863967148955313,    0.017617780571695932575,
      0.018476741451960203417,    0.019332556638412718101,
      0.020183034042121312888,    0.021025984305527607235,
      0.021859225649428413916,    0.022680588705592366420,
      0.023487921324473218005,    0.024279093347534958961,
      0.025052001333780416227,    0.025804573230174176116,
      0.026534772975772290772,    0.027240605029515027548,
      0.027920118811804584879,    0.028571413050176867939,
      0.029192640019584685275,    0.029782009668038640343,
      0.030337793618601051478,    0.030858329038996898251,
      0.031342022370393476778,    0.031787352907206525310,
      0.032192876220114388296,    0.032557227414802617381,
      0.032879124219318519729,    0.033157369893287780634,
      0.033390855952632597449,    0.033578564703831922836,
      0.033719571582178553907,    0.033813047288914018924,
      0.033858259722559577118,    0.033854575700209208206,
      0.033801462465007252097,    0.033698488976498372198,
      0.033545326981009745468,    0.033341751859703801244,
      0.033087643252423397777,    0.032782985455938987747,
      0.032427867595698020711,    0.032022483570669493299,
      0.031567131771370115009,    0.031062214571651934351,
      0.030508237595323393156,    0.029905808759165575092,
      0.029255637094391821691,    0.028558531349080847106,
      0.027815398374589942186,    0.027027241299424782615,
      0.026195157494504721836,    0.025320336334216251085,
      0.024404056758091558515,    0.023447684638382850039,
      0.022452669959225362428,    0.021420543813491885160,
      0.020352915223838219540,    0.019251467794821478529,
      0.018117956203340636034,    0.016954202535000470381,
      0.015762092474335247702,    0.014543571357146427582,
      0.013300640093508653480,    0.012035350970279661350,
      0.010749803342211889125,    0.0094461392210059267813,
      0.0081265387718679840517,   0.0067932157273347873364,
      0.0054484127283093109074,   0.0040943966024091084690,
      0.0027334535898653947988,   0.0013678845273251367493};
  IntegratorXX::GaussChebyshev2<double, double> quad(100);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 100; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("105 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 105> ref_pts = {0.99956083650879434943,
                                     0.99824373176432141358,
                                     0.99604984261521692498,
                                     0.99298109601351696147,
                                     0.98904018732216397911,
                                     0.98423057794759681244,
                                     0.97855649229950400214,
                                     0.97202291408041078085,
                                     0.96463558190835867291,
                                     0.95640098427652242678,
                                     0.94732635385419138443,
                                     0.93741966113412088968,
                                     0.92668960743183343805,
                                     0.91514561724301847089,
                                     0.90279782996574351572,
                                     0.88965709099474727809,
                                     0.87573494219563680773,
                                     0.86104361176735550846,
                                     0.84559600350182605991,
                                     0.82940568545020179644,
                                     0.81248687800568128041,
                                     0.79485444141335325537,
                                     0.77652386271804241942,
                                     0.75751124216162007779,
                                     0.73783327904172728401,
                                     0.71750725704433113437,
                                     0.69655102906299702757,
                                     0.67498300151821053207,
                                     0.65282211819052162401,
                                     0.63008784358171108130,
                                     0.60680014581859337038,
                                     0.58297947911447207683,
                                     0.55864676580365245686,
                                     0.53382337796479068197,
                                     0.50853111864922048501,
                                     0.48279220273074487487,
                                     0.45662923739371306445,
                                     0.43006520227652046035,
                                     0.40312342928797221419,
                                     0.37582758211423816787,
                                     0.34820163543439878724,
                                     0.32026985386283763113,
                                     0.29205677063697582044,
                                     0.26358716606906764528,
                                     0.23488604578098367943,
                                     0.20597861874109837946,
                                     0.17689027512257296266,
                                     0.14764656400248123149,
                                     0.11827317092136580395,
                                     0.088795895322934797129,
                                     0.059240627893714287219,
                                     0.029633327822559740485,
                                     0,
                                     -0.029633327822559740485,
                                     -0.059240627893714287219,
                                     -0.088795895322934797129,
                                     -0.11827317092136580395,
                                     -0.14764656400248123149,
                                     -0.17689027512257296266,
                                     -0.20597861874109837946,
                                     -0.23488604578098367943,
                                     -0.26358716606906764528,
                                     -0.29205677063697582044,
                                     -0.32026985386283763113,
                                     -0.34820163543439878724,
                                     -0.37582758211423816787,
                                     -0.40312342928797221419,
                                     -0.43006520227652046035,
                                     -0.45662923739371306445,
                                     -0.48279220273074487487,
                                     -0.50853111864922048501,
                                     -0.53382337796479068197,
                                     -0.55864676580365245686,
                                     -0.58297947911447207683,
                                     -0.60680014581859337038,
                                     -0.63008784358171108130,
                                     -0.65282211819052162401,
                                     -0.67498300151821053207,
                                     -0.69655102906299702757,
                                     -0.71750725704433113437,
                                     -0.73783327904172728401,
                                     -0.75751124216162007779,
                                     -0.77652386271804241942,
                                     -0.79485444141335325537,
                                     -0.81248687800568128041,
                                     -0.82940568545020179644,
                                     -0.84559600350182605991,
                                     -0.86104361176735550846,
                                     -0.87573494219563680773,
                                     -0.88965709099474727809,
                                     -0.90279782996574351572,
                                     -0.91514561724301847089,
                                     -0.92668960743183343805,
                                     -0.93741966113412088968,
                                     -0.94732635385419138443,
                                     -0.95640098427652242678,
                                     -0.96463558190835867291,
                                     -0.97202291408041078085,
                                     -0.97855649229950400214,
                                     -0.98423057794759681244,
                                     -0.98904018732216397911,
                                     -0.99298109601351696147,
                                     -0.99604984261521692498,
                                     -0.99824373176432141358,
                                     -0.99956083650879434943};
  std::array<double, 105> ref_wgt = {
      0.000018405073129241888534, 0.000073579881442232782027,
      0.00016540327245678931131,  0.00029367359434959679257,
      0.00045810909886790187663,  0.00065834850428943068989,
      0.00089395171731672911073,  0.0011644007124776695802,
      0.0014691005672922392973,   0.0018073806511575336794,
      0.0021784959655987356646,   0.0025816286332343668854,
      0.0030158895325098428516,   0.0034803200749649325979,
      0.0039738941215186838073,   0.0044955200339802846445,
      0.0050440428577267370777,   0.0056182466312286422220,
      0.0062168568178543592072,   0.0068385428551407914123,
      0.0074819208164865559221,   0.0081455561800007632578,
      0.0088279666990285146266,   0.0095276253686729323687,
      0.010242963482443473795,    0.010972373772981814866,
      0.011714213630650080919,    0.012466808393611975955,
      0.013228454702895724799,    0.013997423915798973579,
      0.014771965570880148059,    0.015550310897678474994,
      0.016330676364216131015,    0.017111267255260972110,
      0.017890281274267162786,    0.018665912161863888399,
      0.019436353323729290108,    0.020199801460667874845,
      0.020954460193704959992,    0.021698543677021223425,
      0.022430280191574125579,    0.023147915712290804362,
      0.023849717441768941496,    0.024533977303487957665,
      0.025199015387612583617,    0.025843183342564217740,
      0.026464867705642333190,    0.027062493166098328232,
      0.027634525754197384896,    0.028179475949949850083,
      0.028695901705352091725,    0.029182411374147397321,
      0.029637666543299936212,    0.030060384760568739720,
      0.030449342152773681678,    0.030803375929561160813,
      0.031121386767703169714,    0.031402341071199236153,
      0.031645273102695875582,    0.031849286981992214166,
      0.032013558547662827926,    0.032137337078099077007,
      0.032219946868547760791,    0.032260788661010231178,
      0.032259340924155616079,    0.032215160980697948993,
      0.032127885979988188320,    0.031997233713877746725,
      0.031823003274219632405,    0.031605075550686019174,
      0.031343413567896392809,    0.031038062661167744155,
      0.030689150490516968024,    0.030296886892865051206,
      0.029861563572712161836,    0.029383553631871754540,
      0.028863310939169650910,    0.028301369341330114833,
      0.027698341716584592611,    0.027054918872849408809,
      0.026371868292625686648,    0.025650032727077489923,
      0.024890328642042063699,    0.024093744519018494878,
      0.023261339014467543163,    0.022394238981035242166,
      0.021493637354585586291,    0.020560790911192662826,
      0.019597017898499436565,    0.018603695546098538874,
      0.017582257459829363932,    0.016534190905115059913,
      0.015461033984682168956,    0.014364372716214283906,
      0.013245838015688739746,    0.012107102592331652871,
      0.010949877761301193690,    0.0097759101803714826629,
      0.0085869785170396155191,   0.0073848900526157536038,
      0.0061714772299806883651,   0.0049485941518065590731,
      0.0037181130361342500157,   0.0024819206362852243599,
      0.0012419146321560001126};
  IntegratorXX::GaussChebyshev2<double, double> quad(105);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 105; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("110 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 110> ref_pts = {
      0.99959950711832163339,   0.99839834926238308365,
      0.99639748854252650165,   0.99359852761970295222,
      0.99000370842176380885,   0.98561591034770846226,
      0.98043864796132671488,   0.97447606817608322080,
      0.96773294693349883869,   0.96021468537768946702,
      0.95192730552912650133,   0.94287744546108417004,
      0.93307235398263734566,   0.92251988483246867451,
      0.91122849038813570283,   0.89920721489583678663,
      0.88646568722609864656,   0.87301411316118815875,
      0.85886326722042605517,   0.84402448402995034068,
      0.82850964924384212353,   0.81233119002388590821,
      0.79550206508558992714,   0.77803575431843950714,
      0.75994624798869750013,   0.74124803553340018097,
      0.72195609395452446235,   0.70208587582262253356,
      0.68165329689953284084,   0.66067472339008144191,
      0.63916695883298494002,   0.61714723064145519802,
      0.59463317630428661613,   0.57164282925847870630,
      0.54819460444470979119,   0.52430728355723168780,
      0.50000000000000000000,   0.47529222356108994559,
      0.45020374481767329246,   0.42475465928404779535,
      0.39896535131541633609,   0.37285647778030861083,
      0.34644895151472352224,   0.31976392457124527298,
      0.29282277127655037995,   0.26564707111087630513,
      0.23825859142316500466,   0.21067926999572632036,
      0.18293119747238666991,   0.15503659966419783852,
      0.12701781974687874737,   0.098897300364249794613,
      0.070697565651994663099,  0.042441203196148305878,
      0.014150845940762103580,  -0.014150845940762103580,
      -0.042441203196148305878, -0.070697565651994663099,
      -0.098897300364249794613, -0.12701781974687874737,
      -0.15503659966419783852,  -0.18293119747238666991,
      -0.21067926999572632036,  -0.23825859142316500466,
      -0.26564707111087630513,  -0.29282277127655037995,
      -0.31976392457124527298,  -0.34644895151472352224,
      -0.37285647778030861083,  -0.39896535131541633609,
      -0.42475465928404779535,  -0.45020374481767329246,
      -0.47529222356108994559,  -0.50000000000000000000,
      -0.52430728355723168780,  -0.54819460444470979119,
      -0.57164282925847870630,  -0.59463317630428661613,
      -0.61714723064145519802,  -0.63916695883298494002,
      -0.66067472339008144191,  -0.68165329689953284084,
      -0.70208587582262253356,  -0.72195609395452446235,
      -0.74124803553340018097,  -0.75994624798869750013,
      -0.77803575431843950714,  -0.79550206508558992714,
      -0.81233119002388590821,  -0.82850964924384212353,
      -0.84402448402995034068,  -0.85886326722042605517,
      -0.87301411316118815875,  -0.88646568722609864656,
      -0.89920721489583678663,  -0.91122849038813570283,
      -0.92251988483246867451,  -0.93307235398263734566,
      -0.94287744546108417004,  -0.95192730552912650133,
      -0.96021468537768946702,  -0.96773294693349883869,
      -0.97447606817608322080,  -0.98043864796132671488,
      -0.98561591034770846226,  -0.99000370842176380885,
      -0.99359852761970295222,  -0.99639748854252650165,
      -0.99839834926238308365,  -0.99959950711832163339};
  std::array<double, 110> ref_wgt = {
      0.000016028511967501526896, 0.000064081953594893433581,
      0.00014406410053567656712,  0.00025581477370297036059,
      0.00039911013113633963175,  0.00057366307587783588480,
      0.00077912377912133222703,  0.0010150803176912437137,
      0.0012810594247004388544,   0.0015765273520329349466,
      0.0019008908430951978977,   0.0022534982140808999284,
      0.0026336405417981845990,   0.0030405529559162008943,
      0.0034734160332992431885,   0.0039313572919126114034,
      0.0044134527816046176078,   0.0049187287688943355278,
      0.0054461635127250330758,   0.0059946891279790508189,
      0.0065631935333914872220,   0.0071505224803477100092,
      0.0077554816589037066712,   0.0083768388772288791688,
      0.0090133263105383295165,   0.0096636428154562131027,
      0.010326456305633581469,    0.011000406184333508801,
      0.011684105829593395994,    0.012376145127479358297,
      0.013075093048860698509,    0.013779500265053804016,
      0.014487901797614524624,    0.015198819697496315623,
      0.015910765748738278393,    0.016622244191802794835,
      0.017331754461646812102,    0.018037793935584054899,
      0.018738860685977572172,    0.019433456232793095677,
      0.020120088291043715785,    0.020797273508165364968,
      0.021463540186380525566,    0.022117430985134413342,
      0.022757505598723583818,    0.023382343404281399973,
      0.023990546075338007618,    0.024580740156234292689,
      0.025151579592739631485,    0.025701748214301963804,
      0.026229962163445678186,    0.026734972267927841397,
      0.027215566351366259597,    0.027670571478163540955,
      0.028098856128669539223,    0.028499332300650082130,
      0.028870957533262501130,    0.029212736849877941174,
      0.029523724616236489424,    0.029803026310573557068,
      0.030049800202514404018,    0.030263258937697926744,
      0.030442671025260538948,    0.030587362225485857358,
      0.030696716835105645571,    0.030770178867921743658,
      0.030807253128607188181,    0.030807506177737066719,
      0.030770567186295506340,    0.030696128678104213896,
      0.030583947158819808768,    0.030433843630351452259,
      0.030245703989756614025,    0.030019479311880853020,
      0.029755186015216853487,    0.029452905910668268370,
      0.029112786133114804083,    0.028735038955886051966,
      0.028319941488462452506,    0.027867835257932088706,
      0.027379125674941365634,    0.026854281385085667143,
      0.026293833506892413004,    0.025698374757753198506,
      0.025068558469363515870,    0.024405097494427568901,
      0.023708763006581540612,    0.022980383195681005123,
      0.022220841860786643413,    0.021431076903366687898,
      0.020612078723414251233,    0.019764888521352566355,
      0.018890596508770862488,    0.017990340031197819771,
      0.017065301606277987548,    0.016116706880868932498,
      0.015145822510722928290,    0.014153953966556444946,
      0.013142443270443292508,    0.012112666666592780811,
      0.011066032230692449166,    0.010003977422105583430,
      0.0089279665833166739808,   0.0078394883911129909814,
      0.0067400532640773917714,   0.0056311907310461726552,
      0.0045144467652560918873,   0.0033913810889664956325,
      0.0022635644533956627064,   0.0011325758988549511467};
  IntegratorXX::GaussChebyshev2<double, double> quad(110);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 110; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("115 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 115> ref_pts = {
      0.99963328622328394947,   0.99853341385112386457,
      0.99670118956022274624,   0.99413795715435960895,
      0.99084559657880676279,   0.98682652254152615177,
      0.98208368274215600109,   0.97662055571008668321,
      0.97044114825321141749,   0.96354999251922296004,
      0.95595214267161160962,   0.94765317118280244427,
      0.93865916474715050407,   0.92897671981679144179,
      0.91861293776362177172,   0.90757541967095705362,
      0.89587226075868795312,   0.88351204444602292283,
      0.87050383605617205221,   0.85685717616758924452,
      0.84258207361664910304,   0.82768899815689055614,
      0.81218887278021113418,   0.79609306570564374600,
      0.77941338204159160664,   0.76216205512763646326,
      0.74435173756227027532,   0.72599549192313085814,
      0.70710678118654752440,   0.68769945885342329308,
      0.66778775878869561567,   0.64738628478182763918,
      0.62650999983598662941,   0.60517421519376516592,
      0.58339457910749394741,   0.56118706536238236927,
      0.53856796156090431844,   0.51555385717702173971,
      0.49216163138900733507,   0.46840844069979013922,
      0.44431170635390355089,   0.41988910156026457697,
      0.39515853853015545520,   0.37013815533991435686,
      0.34484630262797043417,   0.31930153013597997320,
      0.29352257310393475414,   0.26752833852922082119,
      0.24133789129970564692,   0.21497044021102406718,
      0.18844532387831829430,   0.16178199655276472654,
      0.13500001385329010394,   0.10811901842394176303,
      0.081158725527431270252,  0.054138908585417526150,
      0.027079384676134495101,  0,
      -0.027079384676134495101, -0.054138908585417526150,
      -0.081158725527431270252, -0.10811901842394176303,
      -0.13500001385329010394,  -0.16178199655276472654,
      -0.18844532387831829430,  -0.21497044021102406718,
      -0.24133789129970564692,  -0.26752833852922082119,
      -0.29352257310393475414,  -0.31930153013597997320,
      -0.34484630262797043417,  -0.37013815533991435686,
      -0.39515853853015545520,  -0.41988910156026457697,
      -0.44431170635390355089,  -0.46840844069979013922,
      -0.49216163138900733507,  -0.51555385717702173971,
      -0.53856796156090431844,  -0.56118706536238236927,
      -0.58339457910749394741,  -0.60517421519376516592,
      -0.62650999983598662941,  -0.64738628478182763918,
      -0.66778775878869561567,  -0.68769945885342329308,
      -0.70710678118654752440,  -0.72599549192313085814,
      -0.74435173756227027532,  -0.76216205512763646326,
      -0.77941338204159160664,  -0.79609306570564374600,
      -0.81218887278021113418,  -0.82768899815689055614,
      -0.84258207361664910304,  -0.85685717616758924452,
      -0.87050383605617205221,  -0.88351204444602292283,
      -0.89587226075868795312,  -0.90757541967095705362,
      -0.91861293776362177172,  -0.92897671981679144179,
      -0.93865916474715050407,  -0.94765317118280244427,
      -0.95595214267161160962,  -0.96354999251922296004,
      -0.97044114825321141749,  -0.97662055571008668321,
      -0.98208368274215600109,  -0.98682652254152615177,
      -0.99084559657880676279,  -0.99413795715435960895,
      -0.99670118956022274624,  -0.99853341385112386457,
      -0.99963328622328394947};
  std::array<double, 115> ref_wgt = {
      0.000014044112123316864274, 0.000056150699298903878464,
      0.00012624255690425607789,  0.00022419115369950918232,
      0.00034981684627560936756,  0.00050288917878557998484,
      0.00068312726746369700922,  0.00089020026929730474721,
      0.0011237279340769714725,   0.0013832812389129306345,
      0.0016683831041695044349,   0.0019785091896346877437,
      0.0023130887696095035332,   0.0026715056854713450183,
      0.0030530993741375097030,   0.0034571659707297178060,
      0.0038829594836177990450,   0.0043296930399011298412,
      0.0047965401992700050586,   0.0052826363340761265009,
      0.0057870800733319710540,   0.0063089348082531451677,
      0.0068472302568561136840,   0.0074009640850260777155,
      0.0079691035813764294689,   0.0085505873831322856362,
      0.0091443272501862420265,   0.0097492098843948396997,
      0.010364098791109418461,    0.010987836179865180654,
      0.011619244901087512070,    0.012257130415615014314,
      0.012900282793784392642,    0.013547478740773404540,
      0.014197483644854588180,    0.014849053645174527929,
      0.015500937715641039127,    0.016151879761473919747,
      0.016800620724953866506,    0.017445900696888822227,
      0.018086461030307435107,    0.018721046452885484901,
      0.019348407174613072118,    0.019967300987218071158,
      0.020576495351874803961,    0.021174769471746075276,
      0.021760916345931592250,    0.022333744801426328782,
      0.022892081499728538554,    0.023434772914778810263,
      0.023960687278958725574,    0.024468716493930246818,
      0.024957778003154840876,    0.025426816622994442443,
      0.025874806329364569870,    0.026300751996983117610,
      0.026703691088336440009,    0.027082695289567183090,
      0.027436872090575777325,    0.027765366306719430919,
      0.028067361539588708195,    0.028342081574442182392,
      0.028588791711984051084,    0.028806800032277823039,
      0.028995458588701049310,    0.029154164529961393972,
      0.029282361148312931020,    0.029379538852233217794,
      0.029445236061946231187,    0.029479040026303455377,
      0.029480587559665068948,    0.029449565697555081191,
      0.029385712269998194417,    0.029288816391581900295,
      0.029158718867424629660,    0.028995312514369440266,
      0.028798542396862516886,    0.028568405977116442283,
      0.028304953179299543788,    0.028008286367634395314,
      0.027678560238430524633,    0.027315981626218306513,
      0.026920809224292679524,    0.026493353220116474359,
      0.026033974846173551447,    0.025543085847001383763,
      0.025021147863270957018,    0.024468671733918665766,
      0.023886216717470034623,    0.023274389633828365794,
      0.022633843927932587556,    0.021965278656817436755,
      0.021269437401735439202,    0.020547107107123746620,
      0.019799116848319543532,    0.019026336530045253183,
      0.018229675517798954295,    0.017410081204396081804,
      0.016568537514015442067,    0.015706063346205649993,
      0.014823710962407121907,    0.013922564317639570464,
      0.013003737340095390042,    0.012068372161465243554,
      0.011117637300903422828,    0.010152725805617020382,
      0.0091748533511344945523,   0.0081852563043757143995,
      0.0071851897527069258311,   0.0061759255022201848430,
      0.0051587500485275649778,   0.0041349625234057803715,
      0.0031058726206666982537,   0.0020727985046634797800,
      0.0010370647048707290656};
  IntegratorXX::GaussChebyshev2<double, double> quad(115);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 115; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("120 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 120> ref_pts = {
      0.99966296530351244286,   0.99865208839882304436,
      0.99696805068711332104,   0.99461198732666135229,
      0.99158548646766632886,   0.98789058818172511219,
      0.98352978308668241147,   0.97850601066778152492,
      0.97282265729624730617,   0.96648355394663696838,
      0.95949297361449738989,   0.95185562843606959980,
      0.94357666651198196235,   0.93466166843707311138,
      0.92511664353868377501,   0.91494802582595314288,
      0.90416266965285023134,   0.89276784509786366426,
      0.88077123306346427936,   0.86818092009864386220,
      0.85500539294801997597,   0.84125353283118116886,
      0.82693460945612867709,   0.81205827477084997947,
      0.79663455645723607644,   0.78067385117172804488,
      0.76418691753724914190,   0.74718486889114638167,
      0.72967916579402997605,   0.71168160830456020087,
      0.69320432802538901775,   0.67425977992561803865,
      0.65486073394528506406,   0.63502026638753835335,
      0.61475175110430089929,   0.59406885048136618059,
      0.57298550622900206346,   0.55151592998427062435,
      0.52967459373139858231,   0.50747622004665567615,
      0.48493577217431661529,   0.46206844394039609451,
      0.43888964951095571531,   0.41541501300188642553,
      0.39166035794717020496,   0.36764169663272011940,
      0.34337521930298847507,   0.31887728324761856855,
      0.29416440177549638621,   0.26925323308363450739,
      0.24416056902839135610,   0.21890332380659477856,
      0.19349852255419965479,   0.16796328987016484020,
      0.14231483827328514044,   0.11657045659975921581,
      0.090747498349314259572,  0.064863369987742970889,
      0.038935519213737724055,  0.012981423197930902135,
      -0.012981423197930902135, -0.038935519213737724055,
      -0.064863369987742970889, -0.090747498349314259572,
      -0.11657045659975921581,  -0.14231483827328514044,
      -0.16796328987016484020,  -0.19349852255419965479,
      -0.21890332380659477856,  -0.24416056902839135610,
      -0.26925323308363450739,  -0.29416440177549638621,
      -0.31887728324761856855,  -0.34337521930298847507,
      -0.36764169663272011940,  -0.39166035794717020496,
      -0.41541501300188642553,  -0.43888964951095571531,
      -0.46206844394039609451,  -0.48493577217431661529,
      -0.50747622004665567615,  -0.52967459373139858231,
      -0.55151592998427062435,  -0.57298550622900206346,
      -0.59406885048136618059,  -0.61475175110430089929,
      -0.63502026638753835335,  -0.65486073394528506406,
      -0.67425977992561803865,  -0.69320432802538901775,
      -0.71168160830456020087,  -0.72967916579402997605,
      -0.74718486889114638167,  -0.76418691753724914190,
      -0.78067385117172804488,  -0.79663455645723607644,
      -0.81205827477084997947,  -0.82693460945612867709,
      -0.84125353283118116886,  -0.85500539294801997597,
      -0.86818092009864386220,  -0.88077123306346427936,
      -0.89276784509786366426,  -0.90416266965285023134,
      -0.91494802582595314288,  -0.92511664353868377501,
      -0.93466166843707311138,  -0.94357666651198196235,
      -0.95185562843606959980,  -0.95949297361449738989,
      -0.96648355394663696838,  -0.97282265729624730617,
      -0.97850601066778152492,  -0.98352978308668241147,
      -0.98789058818172511219,  -0.99158548646766632886,
      -0.99461198732666135229,  -0.99696805068711332104,
      -0.99865208839882304436,  -0.99966296530351244286};
  std::array<double, 120> ref_wgt = {
      0.000012374210974024348832, 0.000049475992433856433162,
      0.00011124282196648451322,  0.00019757060208071056662,
      0.00030831381983303493284,  0.00044328576996446445393,
      0.00060225884120943162952,  0.00078496486534209037163,
      0.00099109552842999139821,  0.0012203028436706816339,
      0.0014721996850932604642,   0.0017463603813145031487,
      0.0020423213684479683240,   0.0023595819011746806369,
      0.0026976048208956573894,   0.0030558173797998636078,
      0.0034336121195962646624,   0.0038303478035756282444,
      0.0042453504005867340838,   0.0046779141194328031121,
      0.0051273024921173774296,   0.0055927495042946845903,
      0.0060734607712078169066,   0.0065686147573289574683,
      0.0070773640378494941709,   0.0075988366001042819619,
      0.0081321371829536381882,   0.0086763486520889783938,
      0.0092305334091734076645,   0.0097937348326771584622,
      0.010364978748219587832,    0.010943274926184587997,
      0.011527618604334792709,    0.012116992033111940240,
      0.012710366041276240205,    0.013306701619506637965,
      0.013904951519556523964,    0.014504061866535737703,
      0.015102973781869702909,    0.015700625014470232335,
      0.016295951577639982141,    0.016887889389223736158,
      0.017475375912514672734,    0.018057351795422519061,
      0.018632762505413031775,    0.019200559957734554302,
      0.019759704134457481468,    0.020309164691866294909,
      0.020847922553761397908,    0.021374971488249248853,
      0.021889319665624236207,    0.022389991194974317045,
      0.022876027637174612360,    0.023346489491968866852,
      0.023800457656877884495,    0.024237034855716684523,
      0.024655347034548120838,    0.025054544722950001554,
      0.025433804358525259678,    0.025792329572640381136,
      0.026129352435436008188,    0.026444134658215315568,
      0.026735968751380310091,    0.027004179136153533882,
      0.027248123208392654974,    0.027467192352878000362,
      0.027660812906528115890,    0.027828447069075810640,
      0.027969593759816743560,    0.028083789419124316168,
      0.028170608753508323401,    0.028229665423080358155,
      0.028260612670376234060,    0.028263143889574553204,
      0.028236993135240866121,    0.028181935569818513450,
      0.028097787849180063217,    0.027984408445647124033,
      0.027841697907981080180,    0.027669599057942815983,
      0.027468097123115629076,    0.027237219805782129490,
      0.026977037287742837355,    0.026687662171061279487,
      0.026369249354817496998,    0.026021995848048865067,
      0.025646140519153844982,    0.025241963782130591003,
      0.024809787220118074256,    0.024349973146802417785,
      0.023862924106345316708,    0.023349082312584602609,
      0.022808929028349060222,    0.022242983885820377849,
      0.021651804148964472866,    0.021035983919142244858,
      0.020396153285095937955,    0.019732977418591610494,
      0.019047155617080586048,    0.018339420294823070487,
      0.017610535923995243086,    0.016861297927376947399,
      0.016092531524290504661,    0.015305090531532037615,
      0.014499856121104918288,    0.013677735536630436093,
      0.012839660770373423233,    0.011986587202880277809,
      0.011119492207283500799,    0.010239373720380425111,
      0.0093472487826441820963,   0.0084441520493720468332,
      0.0075311342752200566897,   0.0066092607744131418699,
      0.0056796098589568806007,   0.0047432712572103394393,
      0.0038013445152092302893,   0.0028549373831547649668,
      0.0019051641895060758984,   0.00095314420513286364712};
  IntegratorXX::GaussChebyshev2<double, double> quad(120);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 120; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("140 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 140> ref_pts = {
      0.99975179326725907760,   0.99900729628220066624,
      0.99776687862315315956,   0.99603115605014533021,
      0.99380099019923476006,   0.99107748815478009891,
      0.98786200189986948137,   0.98415612764517791687,
      0.97996170503658681679,   0.97528081624195900725,
      0.97011578491752256457,   0.96446917505437657452,
      0.95834378970569142537,   0.95174266959523546964,
      0.94466909160791880067,   0.93712656716310345840,
      0.92911884047148757517,   0.92064988667642876747,
      0.91172390988062944607,   0.90234534105916362424,
      0.89251883585988122582,   0.88224927229228180194,
      0.87154174830600493073,   0.86040157926013936987,
      0.84883429528460723106,   0.83684563853493302082,
      0.82444156034176031724,   0.81162821825653110095,
      0.79841197299479430496,   0.78479938527866096605,
      0.77079721257997342555,   0.75641240576580531422,
      0.74165210564795754011,   0.72652363943816315611,
      0.71103451711076079125,   0.69519242767464226355,
      0.67900523535632502993,   0.66248097569604424735,
      0.64562785155880239765,   0.62845422906235664477,
      0.61096863342416532633,   0.59317974472935521110,
      0.57509639362181036058,   0.55672755692052159608,
      0.53808235316337267444,   0.51917003808057529708,
      0.50000000000000000000,   0.48058175518668378052,
      0.46092494311882799180,   0.44103932170263156348,
      0.42093476242833496963,   0.40062124546987954897,
      0.38010885473061477258,   0.35940777283751283660,
      0.33852827608637551922,   0.31748072934054256944,
      0.29627558088563397732,   0.27492335724288030102,
      0.25343465794361578327,   0.23182015026752826926,
      0.21009056394727792954,   0.18825668584211348645,
      0.16632935458313003286,   0.14431945519282660912,
      0.12223791368163446251,   0.10009569162409834512,
      0.077903780717403307002,  0.055673197324948204994,
      0.033414977007674570875,  0.011140169045865560858,
      -0.011140169045865560858, -0.033414977007674570875,
      -0.055673197324948204994, -0.077903780717403307002,
      -0.10009569162409834512,  -0.12223791368163446251,
      -0.14431945519282660912,  -0.16632935458313003286,
      -0.18825668584211348645,  -0.21009056394727792954,
      -0.23182015026752826926,  -0.25343465794361578327,
      -0.27492335724288030102,  -0.29627558088563397732,
      -0.31748072934054256944,  -0.33852827608637551922,
      -0.35940777283751283660,  -0.38010885473061477258,
      -0.40062124546987954897,  -0.42093476242833496963,
      -0.44103932170263156348,  -0.46092494311882799180,
      -0.48058175518668378052,  -0.50000000000000000000,
      -0.51917003808057529708,  -0.53808235316337267444,
      -0.55672755692052159608,  -0.57509639362181036058,
      -0.59317974472935521110,  -0.61096863342416532633,
      -0.62845422906235664477,  -0.64562785155880239765,
      -0.66248097569604424735,  -0.67900523535632502993,
      -0.69519242767464226355,  -0.71103451711076079125,
      -0.72652363943816315611,  -0.74165210564795754011,
      -0.75641240576580531422,  -0.77079721257997342555,
      -0.78479938527866096605,  -0.79841197299479430496,
      -0.81162821825653110095,  -0.82444156034176031724,
      -0.83684563853493302082,  -0.84883429528460723106,
      -0.86040157926013936987,  -0.87154174830600493073,
      -0.88224927229228180194,  -0.89251883585988122582,
      -0.90234534105916362424,  -0.91172390988062944607,
      -0.92064988667642876747,  -0.92911884047148757517,
      -0.93712656716310345840,  -0.94466909160791880067,
      -0.95174266959523546964,  -0.95834378970569142537,
      -0.96446917505437657452,  -0.97011578491752256457,
      -0.97528081624195900725,  -0.97996170503658681679,
      -0.98415612764517791687,  -0.98786200189986948137,
      -0.99107748815478009891,  -0.99380099019923476006,
      -0.99603115605014533021,  -0.99776687862315315956,
      -0.99900729628220066624,  -0.99975179326725907760};
  std::array<double, 140> ref_wgt = {
      0.0000078204611929029046746, 0.000031272139737584641809,
      0.000070325931491705726156,  0.00012493336607158291672,
      0.00019502666158963221540,   0.00028051880120107662697,
      0.00038130363137432114487,   0.00049725598177510499052,
      0.00062823180663037144747,   0.00077406834741377569277,
      0.00093458431667090766806,   0.0011095801027786668856,
      0.0012988379954098155365,    0.0015021224314505815096,
      0.0017191802610963098050,    0.0019497410338275948877,
      0.0021935173039470929741,    0.0024502049553353369269,
      0.0027194835450623817711,    0.0030010166654710198611,
      0.0032944523243266449770,    0.0035994233426086371820,
      0.0039155477694984077124,    0.0042424293141000075357,
      0.0045796577934104859848,    0.0049268095960390079736,
      0.0052834481611561200193,    0.0056491244721375163254,
      0.0060233775643502155505,    0.0064057350465132349617,
      0.0067957136350496591352,    0.0071928197008324621762,
      0.0075965498277125718357,    0.0080063913822044763976,
      0.0084218230936921855174,    0.0088423156445065782870,
      0.0092673322692141188124,    0.0096963293624466038922,
      0.010128757094592040482,     0.010564060034657943226,
      0.011001677779610304268,     0.011441045589484227780,
      0.011881595027555748327,     0.012322754604858672507,
      0.012763950428325403622,     0.013204606851826634947,
      0.013644147129381532931,     0.014081994069807581168,
      0.014517570692077621789,     0.014950300880650815067,
      0.015379610040044241225,     0.015804925747912690850,
      0.016225678405905830885,     0.016641301887574390242,
      0.017051234182600279666,     0.017454918036629641239,
      0.017851801585992708977,     0.018241338986600048143,
      0.018622991036311220669,     0.018996225790079190276,
      0.019360519167181825394,     0.019715355549860671833,
      0.020060228372696740420,     0.020394640702063376996,
      0.020718105805007341486,     0.021030147706921007075,
      0.021330301737381086594,     0.021618115063542487059,
      0.021893147210489770256,     0.022154970567963241799,
      0.022403170882891886907,     0.022637347737181201396,
      0.022857115010220413286,     0.023062101325590635644,
      0.023251950481473115820,     0.023426321864274930371,
      0.023584890845008198357,     0.023727349157978127571,
      0.023853405261354946941,     0.023962784679224991944,
      0.024055230324736875743,     0.024130502803979773829,
      0.024188380700252350671,     0.024228660838402739252,
      0.024251158528942223923,     0.024255707791657848943,
      0.024242161558472054147,     0.024210391855320599882,
      0.024160289962843459787,     0.024091766555707005998,
      0.024004751820399660569,     0.023899195551367212651,
      0.023775067225378176429,     0.023632356054033863016,
      0.023471071014362233224,     0.023291240857459060293,
      0.023092914095164434727,     0.022876158964787160183,
      0.022641063371914092408,     0.022387734811365935166,
      0.022116300266385400648,     0.021826906086167939758,
      0.021519717841869422752,     0.021194920161249176057,
      0.020852716542130629749,     0.020493329144885475664,
      0.020116998564170651853,     0.019723983580170629091,
      0.019314560889620353429,     0.018889024816906769859,
      0.018447687005569090759,     0.017990876090539854196,
      0.017518937351490316744,     0.017032232347664819482,
      0.016531138534609430410,     0.016016048863220378871,
      0.015487371361557534905,     0.014945528699887426840,
      0.014390957739439012397,     0.013824109065373601086,
      0.013245446504487948595,     0.012655446628186587390,
      0.012054598241275902855,     0.011443401857148292696,
      0.010822369159939941255,     0.010192022454260282920,
      0.0095528941031051036862,    0.0089055259545784216844,
      0.0082504687580607813428,    0.0075882815704733778910,
      0.0069195311532984859723,    0.0062447913610269858338,
      0.0055646425217133514304,    0.0048796708103272760704,
      0.0041904676155991531576,    0.0034976289010638931145,
      0.0028017545610140346356,    0.0021034477720787917614,
      0.0014033143411505615312,    0.00070196205038449474074};
  IntegratorXX::GaussChebyshev2<double, double> quad(140);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 140; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("160 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 160> ref_pts = {
      0.99980962749807272580,    0.99923858247566988330,
      0.99828708235533072839,    0.99695548941597224720,
      0.99524431065495326847,    0.99315419759503775219,
      0.99068594603633075234,    0.98784049575328150281,
      0.98461893013686899111,    0.98102247578210625590,
      0.97705250202102046403,    0.97271052040128658256,
      0.96799818411071315346,    0.96291728734779929502,
      0.95746976463860258744,    0.95165769010017794158,
      0.94548327665086789283,    0.93894887516774499834,
      0.93205697359152713689,    0.92481019597930651073,
      0.91721130150545301784,    0.90926318341107239589,
      0.90096886790241912624,    0.89233151299868352190,
      0.88335440732959169880,    0.87404096888327623798,
      0.86439474370489428094,    0.85441940454648855255,
      0.84411874946860537042,    0.83349670039420206757,
      0.82255730161539442087,    0.81130471825361263390,
      0.79974323467375216187,    0.78787725285292318308,
      0.77571129070441980704,    0.76324998035754715997,
      0.75049806639396129461,    0.73746040404119342934,
      0.72414195732404632305,    0.71054779717456663252,
      0.69668309950131287075,    0.68255314321865408287,
      0.66816330823684957443,    0.65351907341367495888,
      0.63862601446837443275,    0.62348980185873353053,
      0.60811619862208065318,    0.59251105818103939841,
      0.57668032211486714125,    0.56063001789722841678,
      0.54436625660126443655,    0.52789523057283252179,
      0.51122321107280135621,    0.49435654588929974226,
      0.47730165692082798565,    0.46006503773115212604,
      0.44265325107691197597,    0.42507292640888431866,
      0.40733075734785264652,    0.38943349913604449011,
      0.37138796606510669017,    0.35320102888159789829,
      0.33487961217098615196,    0.31643069172114755383,
      0.29786129186636988996,    0.27917848281287244432,
      0.26038937794686030458,    0.24150113112613810406,
      0.22252093395631440429,    0.20345601305263378988,
      0.18431362728847921936,    0.16510106503159225103,
      0.14582564136906343907,    0.12649469532214947105,
      0.10711558705197749130,    0.087695695057200524167,
      0.068242413364670975921,   0.048763148714201852339,
      0.029265317738487580056,   0.0097563441392581627352,
      -0.0097563441392581627352, -0.029265317738487580056,
      -0.048763148714201852339,  -0.068242413364670975921,
      -0.087695695057200524167,  -0.10711558705197749130,
      -0.12649469532214947105,   -0.14582564136906343907,
      -0.16510106503159225103,   -0.18431362728847921936,
      -0.20345601305263378988,   -0.22252093395631440429,
      -0.24150113112613810406,   -0.26038937794686030458,
      -0.27917848281287244432,   -0.29786129186636988996,
      -0.31643069172114755383,   -0.33487961217098615196,
      -0.35320102888159789829,   -0.37138796606510669017,
      -0.38943349913604449011,   -0.40733075734785264652,
      -0.42507292640888431866,   -0.44265325107691197597,
      -0.46006503773115212604,   -0.47730165692082798565,
      -0.49435654588929974226,   -0.51122321107280135621,
      -0.52789523057283252179,   -0.54436625660126443655,
      -0.56063001789722841678,   -0.57668032211486714125,
      -0.59251105818103939841,   -0.60811619862208065318,
      -0.62348980185873353053,   -0.63862601446837443275,
      -0.65351907341367495888,   -0.66816330823684957443,
      -0.68255314321865408287,   -0.69668309950131287075,
      -0.71054779717456663252,   -0.72414195732404632305,
      -0.73746040404119342934,   -0.75049806639396129461,
      -0.76324998035754715997,   -0.77571129070441980704,
      -0.78787725285292318308,   -0.79974323467375216187,
      -0.81130471825361263390,   -0.82255730161539442087,
      -0.83349670039420206757,   -0.84411874946860537042,
      -0.85441940454648855255,   -0.86439474370489428094,
      -0.87404096888327623798,   -0.88335440732959169880,
      -0.89233151299868352190,   -0.90096886790241912624,
      -0.90926318341107239589,   -0.91721130150545301784,
      -0.92481019597930651073,   -0.93205697359152713689,
      -0.93894887516774499834,   -0.94548327665086789283,
      -0.95165769010017794158,   -0.95746976463860258744,
      -0.96291728734779929502,   -0.96799818411071315346,
      -0.97271052040128658256,   -0.97705250202102046403,
      -0.98102247578210625590,   -0.98461893013686899111,
      -0.98784049575328150281,   -0.99068594603633075234,
      -0.99315419759503775219,   -0.99524431065495326847,
      -0.99695548941597224720,   -0.99828708235533072839,
      -0.99923858247566988330,   -0.99980962749807272580};
  std::array<double, 160> ref_wgt = {
      0.0000052531831388402114592, 0.000021007732413864331073,
      0.000047248651731513756539,  0.000083950962035246034594,
      0.00013107972294161980657,   0.00018859006300482942585,
      0.00025642721858373165757,   0.00033452658127802855774,
      0.00042281375389292087677,   0.00052120461488423143742,
      0.00062960539122872416814,   0.00074791273965711805934,
      0.00087601383618012244567,   0.0010137864738307068462,
      0.0011610991685387712105,    0.0013178112730474068621,
      0.0014837730987730406733,    0.0016588260455049409648,
      0.0018428027388328391270,    0.0020355271751847917805,
      0.0022368148743508800991,    0.0024464730393619213161,
      0.0026643007235860579088,    0.0028900890048998979316,
      0.0031236211667848107335,    0.0033646728861930410626,
      0.0036130124280224964134,    0.0038684008460333923877,
      0.0041305921900344136802,    0.0043993337191606687954,
      0.0046743661210604893664,    0.0049554237368030544512,
      0.0052422347913139107854,    0.0055345216291407158592,
      0.0058320009553469559463,    0.0061343840813269897455,
      0.0064413771753315438866,    0.0067526815174887428103,
      0.0070679937591018959306,    0.0073870061860015928257,
      0.0077094069857261756389,    0.0080348805183013698693,
      0.0083631075903867631330,    0.0086937657325539289059,
      0.0090265294794583012190,    0.0093610706526644190491,
      0.0096970586458818778910,    0.010034160712367252638,
      0.010372042254245392239,     0.010710367113501834207,
      0.011048797864396647405,     0.011386996107048785759,
      0.011724622761939024812,     0.012061338365078758143,
      0.012396803363591352274,     0.012730678411452397386,
      0.013062624665135047159,     0.013392304078906714515,
      0.013719379699523680928,     0.014043515960070684999,
      0.014364378972693280723,     0.014681636819971696769,
      0.014994959844686084176,     0.015304020937724410393,
      0.015608495823885841114,     0.015908063345334246761,
      0.016202405742458476030,     0.016491208931898253089,
      0.016774162781496975697,     0.017050961381945316873,
      0.017321303314882360313,     0.017584891917224027249,
      0.017841435541491777223,     0.018090647811917984554,
      0.018332247876108003184,     0.018565960652042731978,
      0.018791517070209477276,     0.019008654310653075912,
      0.019217116034743586793,     0.019416652611461378376,
      0.019607021338005129431,     0.019787986654533117151,
      0.019959320352853185819,     0.020120801778881966632,
      0.020272218028699250451,     0.020413364138028895540,
      0.020544043264983277284,     0.020664066865914051363,
      0.020773254864217901220,     0.020871435811951969603,
      0.020958447044119827565,     0.021034134825495107057,
      0.021098354489856309980,     0.021150970571512801682,
      0.021191856929008594830,     0.021220896860897224823,
      0.021237983213487804533,     0.021243018480469218488,
      0.021235914894326368708,     0.021216594509469410302,
      0.021184989277004008634,     0.021141041111077805322,
      0.021084701946745491323,     0.021015933789302145813,
      0.020934708755041803213,     0.020841009103405551278,
      0.020734827260490834418,     0.020616165833901031964,
      0.020485037618921794703,     0.020341465596018048222,
      0.020185482919653002119,     0.020017132898437933628,
      0.019836468966628936183,     0.019643554646994231726,
      0.019438463505083033606,     0.019221279094934308593,
      0.018992094896271115342,     0.018751014243233486465,
      0.018498150244710065892,     0.018233625696335906181,
      0.017957572984230965813,     0.017670133980560918060,
      0.017371459931008884777,     0.017061711334253634377,
      0.016741057813556627388,     0.016409677980567049543,
      0.016067759291460635459,     0.015715497895534649954,
      0.015353098476387853325,     0.014980774085820625876,
      0.014598745970596660264,     0.014207243392213742430,
      0.013806503439837127834,     0.013396770836554874204,
      0.012978297739120210096,     0.012551343531351595307,
      0.012116174611366559843,     0.011673064172830688007,
      0.011222291980408238804,     0.010764144139605858766,
      0.010298912861205644339,     0.0098268962204884439411,
      0.0093483979114527507451,    0.0088637269962388224394,
      0.0083731976499717698098,    0.0078771289012412786617,
      0.0073758443684393658438,    0.0068696719921811168256,
      0.0063589437640367063577,    0.0058439954518061623309,
      0.0053251663215712933500,    0.0048027988567619602094,
      0.0042772384744764280377,    0.0037488332392978871801,
      0.0032179335748513748905,    0.0026848919733472647791,
      0.0021500627033592150492,    0.0016138015160859783689,
      0.0010764653503477744896,    0.00053841203656901030078};
  IntegratorXX::GaussChebyshev2<double, double> quad(160);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 160; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("180 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 180> ref_pts = {
      0.99984937339173838056,    0.99939753894370375504,
      0.99864463277247692988,    0.99759088169346372735,
      0.99623660315256611502,    0.99458220513055060668,
      0.99262818602014274419,    0.99037513447588468581,
      0.98782372923680113192,    0.98497473892192701068,
      0.98182902179875852148,    0.97838752552469729105,
      0.97465128686156553309,    0.97062143136327821452,
      0.96629917303676631826,    0.96168581397625335036,
      0.95678274397099526699,    0.95159144008660199075,
      0.94611346622006664471,    0.94035047262863655288,
      0.93430419543266793640,    0.92797645609261407190,
      0.92136916086030447127,    0.91448430020468038642,
      0.90732394821215963840,    0.89989026196181141269,
      0.89218548087552925124,    0.88421192604339800398,
      0.87597199952445797487,    0.86746818362307690971,
      0.85870304014114782102,    0.84967920960633792765,
      0.84039941047662120168,    0.83086643832133415984,
      0.82108316497900160882,    0.81105253769218605236,
      0.80077757821962138942,    0.79026138192589837602,
      0.77950711684897608598,    0.76851802274580028568,
      0.75729741011631623338,    0.74584865920616992244,
      0.73417521898839820779,    0.72228060612441458489,
      0.71016840390460362751,    0.69784226116884323362,
      0.68530589120727987558,    0.67256307064168799967,
      0.65961763828775056892,    0.64647349399860349098,
      0.63313459748999231698,    0.61960496714739513663,
      0.60588867881547102774,    0.59198986457019874262,
      0.57791271147407552856,    0.56366146031475108275,
      0.54924040432747663222,    0.53465388790175400510,
      0.51990630527257431939,    0.50500209919664055772,
      0.48994575961397282034,    0.47474182229529945205,
      0.45939486747564152093,    0.44390951847450228574,
      0.42829044030307732461,    0.41254233825890490720,
      0.39666995650837997667,    0.38067807665755876339,
      0.36457151631168458044,    0.34835512762386874805,
      0.33203379583336386183,    0.31561243779386975435,
      0.29909600049231550296,    0.28248945955856370529,
      0.26579781776648597889,    0.24902610352686124090,
      0.23217936937255078689,    0.21526269043640651477,
      0.19828116292237082895,    0.18123990257022881053,
      0.16414404311447515226,    0.14699873473776012915,
      0.12980914251938050943,    0.11258044487928280280,
      0.095317832018047595027,   0.078026504353324928651,
      0.060711670953191758640,   0.043378547966903439119,
      0.026032357053511982333,   0.0086783238088244736371,
      -0.0086783238088244736371, -0.026032357053511982333,
      -0.043378547966903439119,  -0.060711670953191758640,
      -0.078026504353324928651,  -0.095317832018047595027,
      -0.11258044487928280280,   -0.12980914251938050943,
      -0.14699873473776012915,   -0.16414404311447515226,
      -0.18123990257022881053,   -0.19828116292237082895,
      -0.21526269043640651477,   -0.23217936937255078689,
      -0.24902610352686124090,   -0.26579781776648597889,
      -0.28248945955856370529,   -0.29909600049231550296,
      -0.31561243779386975435,   -0.33203379583336386183,
      -0.34835512762386874805,   -0.36457151631168458044,
      -0.38067807665755876339,   -0.39666995650837997667,
      -0.41254233825890490720,   -0.42829044030307732461,
      -0.44390951847450228574,   -0.45939486747564152093,
      -0.47474182229529945205,   -0.48994575961397282034,
      -0.50500209919664055772,   -0.51990630527257431939,
      -0.53465388790175400510,   -0.54924040432747663222,
      -0.56366146031475108275,   -0.57791271147407552856,
      -0.59198986457019874262,   -0.60588867881547102774,
      -0.61960496714739513663,   -0.63313459748999231698,
      -0.64647349399860349098,   -0.65961763828775056892,
      -0.67256307064168799967,   -0.68530589120727987558,
      -0.69784226116884323362,   -0.71016840390460362751,
      -0.72228060612441458489,   -0.73417521898839820779,
      -0.74584865920616992244,   -0.75729741011631623338,
      -0.76851802274580028568,   -0.77950711684897608598,
      -0.79026138192589837602,   -0.80077757821962138942,
      -0.81105253769218605236,   -0.82108316497900160882,
      -0.83086643832133415984,   -0.84039941047662120168,
      -0.84967920960633792765,   -0.85870304014114782102,
      -0.86746818362307690971,   -0.87597199952445797487,
      -0.88421192604339800398,   -0.89218548087552925124,
      -0.89989026196181141269,   -0.90732394821215963840,
      -0.91448430020468038642,   -0.92136916086030447127,
      -0.92797645609261407190,   -0.93430419543266793640,
      -0.94035047262863655288,   -0.94611346622006664471,
      -0.95159144008660199075,   -0.95678274397099526699,
      -0.96168581397625335036,   -0.96629917303676631826,
      -0.97062143136327821452,   -0.97465128686156553309,
      -0.97838752552469729105,   -0.98182902179875852148,
      -0.98497473892192701068,   -0.98782372923680113192,
      -0.99037513447588468581,   -0.99262818602014274419,
      -0.99458220513055060668,   -0.99623660315256611502,
      -0.99759088169346372735,   -0.99864463277247692988,
      -0.99939753894370375504,   -0.99984937339173838056};
  std::array<double, 180> ref_wgt = {
      0.0000036971888782046303054, 0.000014785971111113380199,
      0.000033257995401845624108,  0.000059099349281754666301,
      0.000092290568645127715768,  0.00013280665108870591981,
      0.00018061707304697189548,   0.00023568581071157627568,
      0.00029797136472070674690,   0.00036742678860164464005,
      0.00044399972094720707756,   0.00052763242130423870707,
      0.00061826180974979788081,   0.00071581951012817947948,
      0.00082023189691943212510,   0.00093142014570756296434,
      0.0010493002872141802022,    0.0011737832648609037820,
      0.0013047749958214796818,    0.0014421764355221648529,
      0.0015858836455466094701,    0.0017357878648991524767,
      0.0018917755845781669686,    0.0020537286254088452985,
      0.0022215242190826014361,    0.0023950350923480915735,
      0.0025741295542967147121,    0.0027586715866833544383,
      0.0029485209372210627307,    0.0031435332157863678298,
      0.0033435599934699123108,    0.0035484489044051958730,
      0.0037580437503063113081,    0.0039721846076437229007,
      0.0041907079373853454127,    0.0044134466972284400060,
      0.0046402304562461521550,    0.0048708855118708769406,
      0.0051052350091350502014,    0.0053430990620884309344,
      0.0055842948773094621170,    0.0058286368794268747692,
      0.0060759368385663345568,    0.0063260039996356224749,
      0.0065786452133605920331,    0.0068336650689829557396,
      0.0070908660285298243554,    0.0073500485625638541251,
      0.0076110112873218507158,    0.0078735511031487345950,
      0.0081374633341328916777,    0.0084025418688481158939,
      0.0086685793021065974005,    0.0089353670776267220094,
      0.0092026956315188244932,    0.0094703545364914811794,
      0.0097381326466804360318,    0.010005818243001829579,
      0.010273199178931041876,     0.010540063026608169405,
      0.010806197223170931652,     0.011071389217215646187,
      0.011335426615286821496,     0.011598097328295894692,
      0.011859189717769686530,     0.012118492741829258855,
      0.012375796100800039627,     0.012630890382354327950,
      0.012883567206087605776,     0.013133619367430464079,
      0.013380840980798398988,     0.013625027621882247276,
      0.013865976468982610525,     0.014103486443292262608,
      0.014337358348031245662,     0.014567395006340134776,
      0.014793401397837790809,     0.015015184793750823397,
      0.015232554890522951830,     0.015445323941813479272,
      0.015653306888795185190,     0.015856321488663091040,
      0.016054188441266764499,     0.016246731513780096929,
      0.016433777663323816588,     0.016615157157457385327,
      0.016790703692458368242,     0.016960254509308863095,
      0.017123650507310128069,     0.017280736355248151771,
      0.017431360600034566997,     0.017575375772749018760,
      0.017712638492010856072,     0.017843009564609824912,
      0.017966354083327295459,     0.018082541521881458680,
      0.018191445826931874566,     0.018292945507080745322,
      0.018386923718810320261,     0.018473268349297913731,
      0.018551872096052131650,     0.018622632543316054709,
      0.018685452235185315590,     0.018740238745391232174,
      0.018786904743701417063,     0.018825368058892574454,
      0.018855551738252516768,     0.018877384103570783972,
      0.018890798803579626614,     0.018895734862809517633,
      0.018892136726825786308,     0.018879954303815418748,
      0.018859143002495541287,     0.018829663766317594525,
      0.018791483103943714691,     0.018744573115974363929,
      0.018688911517908790262,     0.018624481659322449607,
      0.018551272539248084665,     0.018469278817749726967,
      0.018378500823681467113,     0.018278944558625422581,
      0.018170621697005920567,     0.018053549582379503506,
      0.017927751219902955351,     0.017793255264984135694,
      0.017650096008122994550,     0.017498313355952721436,
      0.017337952808493556440,     0.017169065432634356565,
      0.016991707831859566038,     0.016805942112241782739,
      0.016611835844722642676,     0.016409462023707258870,
      0.016198899021999948362,     0.015980230542111459585,
      0.015753545563970370498,     0.015518938289073763845,
      0.015276508081114698139,     0.015026359403126379792,
      0.014768601751185301602,     0.014503349584717943983,
      0.014230722253457936317,     0.013950843921102844987,
      0.013663843485721990599,     0.013369854496968897966,
      0.013069015070154147247,     0.012761467797236521632,
      0.012447359654792434784,     0.012126841909025668398,
      0.011800070017881455425,     0.011467203530330906254,
      0.011128405982893692235,     0.010783844793468771986,
      0.010433691152544769720,     0.010078119911863390107,
      0.0097173094706109797519,    0.0093514416592150200646,
      0.0089807016208239589489,    0.0086052776905503583026,
      0.0082253612725588496787,    0.0078411467150818506207,
      0.0074528311834473981461,    0.0070606145312048026633,
      0.0066646991694351143551,    0.0062652899343346238766,
      0.0058625939531607892568,    0.0054568205086310903750,
      0.0050481809018663605483,    0.0046368883139711309086,
      0.0042231576663444466943,    0.0038072054798154747119,
      0.0033892497326990174460,    0.0029695097178667810851,
      0.0025482058989309115743,    0.0021255597656369142612,
      0.0017017936885636083692,    0.0012771307732282370159,
      0.00085179471369525653409,   0.00042600964578766510316};
  IntegratorXX::GaussChebyshev2<double, double> quad(180);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 180; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("200 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 200> ref_pts = {
      0.99987785694065300524,    0.99951145760046591424,
      0.99890089148571143334,    0.99804630774921594199,
      0.99694791515392352768,    0.99560598202189809660,
      0.99402083616877601813,    0.99219286482368531531,
      0.99012251453465096421,    0.98781029105950940999,
      0.98525675924235894811,    0.98246254287557615188,
      0.97942832454743205387,    0.97615484547534530659,
      0.97264290532481305610,    0.96889336201406376151,
      0.96490713150447968077,    0.96068518757684021975,
      0.95622856159344080516,    0.95153834224614539240,
      0.94661567529043415575,    0.94146176326551132905,
      0.93607786520054157098,    0.93046529630708661709,
      0.92462542765781735210,    0.91855968585157978872,
      0.91226955266489677259,    0.90575656468999054675,
      0.89902231295941460169,    0.89206844255738650807,
      0.88489665221791667835,    0.87750869390983122867,
      0.86990637240879031423,    0.86209154485640648819,
      0.85406612030657078524,    0.84583205925909735620,
      0.83739137318080057772,    0.82874612401412163132,
      0.81989842367342458743,    0.81085043352908504243,
      0.80160436387949733851,    0.79216247341112934772,
      0.78252706864675672147,    0.77270050338201139392,
      0.76268517811038198288,    0.75248353943680655252,
      0.74209807948000098909,    0.73153133526366899247,
      0.72078588809674240255,    0.70986436294280325918,
      0.69876942777884163690,    0.68750379294350590137,
      0.67607021047500460057,    0.66447147343882173231,
      0.65271041524540961793,    0.64078990895802606023,
      0.62871286659088487144,    0.61648223839779122334,
      0.60410101215143559607,    0.59157221241352238399,
      0.57889889979591145620,    0.56608417021295316444,
      0.55313115412519944263,    0.54004301577467574893,
      0.52682295241190066274,    0.51347419351484196498,
      0.50000000000000000000,    0.48640366342581104025,
      0.47268850518856525150,    0.45885787571103568441,
      0.44491515362401649936,    0.43086374494097036324,
      0.41670708222598664040,    0.40244862375525363413,
      0.38809185267224971925,    0.37364027613685974087,
      0.35909742446862453855,    0.34446685028433288788,
      0.32975212763016653395,    0.31495685110861032157,
      0.30008463500034070602,    0.28513911238130715472,
      0.27012393423522212461,    0.25504276856167642160,
      0.23989929948009781720,    0.22469722632977181269,
      0.20944026276614440331,    0.19413213585362760323,
      0.17877658515512934617,    0.16337736181853017706,
      0.14793822766032989562,    0.13246295424668800438,
      0.11695532197208245021,    0.10141911913581173015,
      0.085858141016565959323,   0.070276188945292970371,
      0.054677069376585930345,   0.039064592958819322149,
      0.023442573603260443428,   0.0078148275523838260410,
      -0.0078148275523838260410, -0.023442573603260443428,
      -0.039064592958819322149,  -0.054677069376585930345,
      -0.070276188945292970371,  -0.085858141016565959323,
      -0.10141911913581173015,   -0.11695532197208245021,
      -0.13246295424668800438,   -0.14793822766032989562,
      -0.16337736181853017706,   -0.17877658515512934617,
      -0.19413213585362760323,   -0.20944026276614440331,
      -0.22469722632977181269,   -0.23989929948009781720,
      -0.25504276856167642160,   -0.27012393423522212461,
      -0.28513911238130715472,   -0.30008463500034070602,
      -0.31495685110861032157,   -0.32975212763016653395,
      -0.34446685028433288788,   -0.35909742446862453855,
      -0.37364027613685974087,   -0.38809185267224971925,
      -0.40244862375525363413,   -0.41670708222598664040,
      -0.43086374494097036324,   -0.44491515362401649936,
      -0.45885787571103568441,   -0.47268850518856525150,
      -0.48640366342581104025,   -0.50000000000000000000,
      -0.51347419351484196498,   -0.52682295241190066274,
      -0.54004301577467574893,   -0.55313115412519944263,
      -0.56608417021295316444,   -0.57889889979591145620,
      -0.59157221241352238399,   -0.60410101215143559607,
      -0.61648223839779122334,   -0.62871286659088487144,
      -0.64078990895802606023,   -0.65271041524540961793,
      -0.66447147343882173231,   -0.67607021047500460057,
      -0.68750379294350590137,   -0.69876942777884163690,
      -0.70986436294280325918,   -0.72078588809674240255,
      -0.73153133526366899247,   -0.74209807948000098909,
      -0.75248353943680655252,   -0.76268517811038198288,
      -0.77270050338201139392,   -0.78252706864675672147,
      -0.79216247341112934772,   -0.80160436387949733851,
      -0.81085043352908504243,   -0.81989842367342458743,
      -0.82874612401412163132,   -0.83739137318080057772,
      -0.84583205925909735620,   -0.85406612030657078524,
      -0.86209154485640648819,   -0.86990637240879031423,
      -0.87750869390983122867,   -0.88489665221791667835,
      -0.89206844255738650807,   -0.89902231295941460169,
      -0.90575656468999054675,   -0.91226955266489677259,
      -0.91855968585157978872,   -0.92462542765781735210,
      -0.93046529630708661709,   -0.93607786520054157098,
      -0.94146176326551132905,   -0.94661567529043415575,
      -0.95153834224614539240,   -0.95622856159344080516,
      -0.96068518757684021975,   -0.96490713150447968077,
      -0.96889336201406376151,   -0.97264290532481305610,
      -0.97615484547534530659,   -0.97942832454743205387,
      -0.98246254287557615188,   -0.98525675924235894811,
      -0.98781029105950940999,   -0.99012251453465096421,
      -0.99219286482368531531,   -0.99402083616877601813,
      -0.99560598202189809660,   -0.99694791515392352768,
      -0.99804630774921594199,   -0.99890089148571143334,
      -0.99951145760046591424,   -0.99987785694065300524};
  std::array<double, 200> ref_wgt = {
      0.0000026997549421528502901, 0.000010797371022214019708,
      0.000024287902917261153349,  0.000043163111476152067068,
      0.000067411468298352851202,  0.000097018162140769198802,
      0.00013196510714905526875,   0.00017223095290887037760,
      0.00021779109631155228742,   0.00026861769522767737086,
      0.00032467968398098303830,   0.00038594279061413705130,
      0.00045236955593685226756,   0.00052391935434586450620,
      0.00060054841640531612782,   0.00068220985317511912809,
      0.00076885368227390957834,   0.00086042685566225064079,
      0.00095687328913079466490,   0.0010581338934771765546,
      0.0011641466073544812002,    0.0012748464317732078034,
      0.0013901654662377438975,    0.0015100329464974622733,
      0.0016343752838916653649,    0.0017631161062667244081,
      0.0018961763004428953543,    0.0020334740562074405608,
      0.0021749249118098451709,    0.0023204418009340902982,
      0.0024699351011221320883,    0.0026233126836219369092,
      0.0027804799646326387408,    0.0029413399579186157403,
      0.0031057933287635293653,    0.0032737384492346317643,
      0.0034450714547269257886,    0.0036196863017560573526,
      0.0037974748269681323390,    0.0039783268073339802112,
      0.0041621300214947343062,    0.0043487703122249648074,
      0.0045381316499789849839,    0.0047300961974853547684,
      0.0049245443753540284567,    0.0051213549286600355705,
      0.0053204049944670460288,    0.0055215701702536530305,
      0.0057247245832047097338,    0.0059297409603295792063,
      0.0061364906993687014783,    0.0063448439404494471024,
      0.0065546696384518136524,    0.0067658356360441303069,
      0.0069782087373485662721,    0.0071916547821958915103,
      0.0074060387209286132431,    0.0076212246897113091743,
      0.0078370760863066984870,    0.0080534556462757345730,
      0.0082702255195597692882,    0.0084872473474026274233,
      0.0087043823395702421517,    0.0089214913518253375749,
      0.0091384349636145032055,    0.0093550735559248874082,
      0.0095712673892676425041,    0.0097868766817451834990,
      0.010001761687159275256,     0.010215782773116939420,
      0.010428800499091172539,     0.010640675694393490596,
      0.010851269536015362586,     0.011060443626295666768,
      0.011268060070371397811,     0.011473981553368971150,
      0.011678071417293612381,     0.011880193737574484478,
      0.012080213399223393756,     0.012277996172565126931,
      0.012473408788497706004,     0.012666319013241105091,
      0.012856595722533253474,     0.013044108975232451916,
      0.013228730086285654573,     0.013410331699022416369,
      0.013588787856734675359,     0.013763974073502931169,
      0.013935767404229793811,     0.014104046513842311887,
      0.014268691745624945100,     0.014429585188645522836,
      0.014586610744237028194,     0.014739654191498564840,
      0.014888603251779402188,     0.015033347652110552460,
      0.015173779187548910690,     0.015309791782399585534,
      0.015441281550282664406,     0.015568146853011290704,
      0.015690288358248583333,     0.015807609095911599024,
      0.015920014513291225744,     0.016027412528857600359,
      0.016129713584721365352,     0.016226830697721817297,
      0.016318679509113753665,     0.016405178332825593867,
      0.016486248202262134892,     0.016561812915626100963,
      0.016631799079733459934,     0.016696136152298306194,
      0.016754756482663950214,     0.016807595350957708091,
      0.016854591005647749994,     0.016895684699481243953,
      0.016930820723783920297,     0.016959946441102081912,
      0.016983012316168995753,     0.016999971945178521265,
      0.017010782083349760996,     0.017015402670767457266,
      0.017013796856483805702,     0.017005931020868311313,
      0.016991774796193274994,     0.016971301085443467344,
      0.016944486079339522086,     0.016911309271565562409,
      0.016871753472192559910,     0.016825804819289916804,
      0.016773452788718757186,     0.016714690202101411891,
      0.016649513232962583212,     0.016577921411038680026,
      0.016499917624752820046,     0.016415508121854003496,
      0.016324702508219970915,     0.016227513744824266447,
      0.016123958142869036423,     0.016014055357086100561,
      0.015897828377209839320,     0.015775303517626445182,
      0.015646510405205087379,     0.015511481965317538308,
      0.015370254406053804975,     0.015222867200642299815,
      0.015069363068084071513,     0.014909787952011597548,
      0.014744190997783615474,     0.014572624527828438981,
      0.014395144015249166949,     0.014211808055705148536,
      0.014022678337585014281,     0.013827819610487521701,
      0.013627299652027393523,     0.013421189232984246802,
      0.013209562080813621474,     0.012992494841540016638,
      0.012770067040052731758,     0.012542361038826187405,
      0.012309461995087265711,     0.012071457816453063832,
      0.011828439115063294074,     0.011580499160232391295,
      0.011327733829647201461,     0.011070241559136924228,
      0.010808123291042766824,     0.010541482421215535766,
      0.010270424744670146760,     0.0099950583999267709679,
      0.0097154938120690573910,    0.0094318436345505759285,
      0.0091442226897813133752,    0.0088527479085267248590,
      0.0085575382681524955779,    0.0082587147297488018558,
      0.0079564001741684761321,    0.0076507193370140771868,
      0.0073417987426094443751,    0.0070297666369918725590,
      0.0067147529199615824924,    0.0063968890762256793355,
      0.0060763081056742894573,    0.0057531444528270424690,
      0.0054275339354885212372,    0.0050996136726517372249,
      0.0047695220116891016371,    0.0044373984548707543044,
      0.0041033835852504817827,    0.0037676189919598036017,
      0.0034302471949511307429,    0.0030914115692312031136,
      0.0027512562686262928240,    0.0024099261491209173246,
      0.0020675666918120407774,    0.0017243239255209532880,
      0.0013803443491052056942,    0.0010357748535131424064,
      0.00069076264362371620606,   0.00034545515991438687746};
  IntegratorXX::GaussChebyshev2<double, double> quad(200);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 200; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("225 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 225> ref_pts = {0.99990338470638102041,
                                     0.99961355749455400378,
                                     0.99913057436800128901,
                                     0.99845452865383604590,
                                     0.99758555098476862229,
                                     0.99652380927386430877,
                                     0.99526950868209739840,
                                     0.99382289157870781124,
                                     0.99218423749436794371,
                                     0.99035386306716879270,
                                     0.98833212198143579125,
                                     0.98611940489938617864,
                                     0.98371613938564111079,
                                     0.98112278982460709740,
                                     0.97833985733074273036,
                                     0.97536787965172804270,
                                     0.97220743106455520852,
                                     0.96885912226456066261,
                                     0.96532360024742008194,
                                     0.96160154818412903132,
                                     0.95769368528899343074,
                                     0.95360076668065535269,
                                     0.94932358323618100349,
                                     0.94486296143823908341,
                                     0.94021976321539905520,
                                     0.93539488577558018049,
                                     0.93038926143268350667,
                                     0.92520385742644030427,
                                     0.91983967573551176575,
                                     0.91429775288387608033,
                                     0.90857915974054029703,
                                     0.90268500131261567761,
                                     0.89661641653179652350,
                                     0.89037457803428373573,
                                     0.88396069193419563319,
                                     0.87737599759050981330,
                                     0.87062176736758108892,
                                     0.86369930638928177696,
                                     0.85660995228681184605,
                                     0.84935507494022765428,
                                     0.84193607621373922148,
                                     0.83435438968482718469,
                                     0.82661148036723177971,
                                     0.81870884442786737575,
                                     0.81064800889771726401,
                                     0.80243053137676456400,
                                     0.79405799973301626413,
                                     0.78553203179567855429,
                                     0.77685427504254273825,
                                     0.76802640628164213262,
                                     0.75905013132724146585,
                                     0.74992718467022138616,
                                     0.74065932914292177014,
                                     0.73124835557850859444,
                                     0.72169608246493019153,
                                     0.71200435559352975554,
                                     0.70217504770238199708,
                                     0.69221005811442286534,
                                     0.68211131237044226182,
                                     0.67188076185701066272,
                                     0.66152038342941154604,
                                     0.65103217902965248424,
                                     0.64041817529962871451,
                                     0.62968042318951393523,
                                     0.61882099756145399952,
                                     0.60784199678864008434,
                                     0.59674554234983880654,
                                     0.58553377841945763493,
                                     0.57420887145322481045,
                                     0.56277300976956383353,
                                     0.55122840312674341004,
                                     0.53957728229588456342,
                                     0.52782189862990742094,
                                     0.51596452362850096689,
                                     0.50400744849919982373,
                                     0.49195298371465287471,
                                     0.47980345856616927714,
                                     0.46756122071362813486,
                                     0.45522863573183880118,
                                     0.44280808665343946926,
                                     0.43030197350842237612,
                                     0.41771271286037459777,
                                     0.40504273733952404821,
                                     0.39229449517268091195,
                                     0.37947044971016533981,
                                     0.36657307894981281997,
                                     0.35360487505814920102,
                                     0.34056834388882789071,
                                     0.32746600449842228295,
                                     0.31430038865966697688,
                                     0.30107404037224184454,
                                     0.28778951537119347888,
                                     0.27444938063308900982,
                                     0.26105621387999771479,
                                     0.24761260308139626953,
                                     0.23412114595409388636,
                                     0.22058444946027396968,
                                     0.20700512930374928233,
                                     0.19338580942452796183,
                                     0.17972912149178805173,
                                     0.16603770439535852091,
                                     0.15231420373580503229,
                                     0.13856127131321899191,
                                     0.12478156461480866003,
                                     0.11097774630139133732,
                                     0.097152483692885851517,
                                     0.083308448252904763123,
                                     0.069448315072545882807,
                                     0.055574762353482847637,
                                     0.041690470890454638949,
                                     0.027798123553254040669,
                                     0.013900404768315133765,
                                     0,
                                     -0.013900404768315133765,
                                     -0.027798123553254040669,
                                     -0.041690470890454638949,
                                     -0.055574762353482847637,
                                     -0.069448315072545882807,
                                     -0.083308448252904763123,
                                     -0.097152483692885851517,
                                     -0.11097774630139133732,
                                     -0.12478156461480866003,
                                     -0.13856127131321899191,
                                     -0.15231420373580503229,
                                     -0.16603770439535852091,
                                     -0.17972912149178805173,
                                     -0.19338580942452796183,
                                     -0.20700512930374928233,
                                     -0.22058444946027396968,
                                     -0.23412114595409388636,
                                     -0.24761260308139626953,
                                     -0.26105621387999771479,
                                     -0.27444938063308900982,
                                     -0.28778951537119347888,
                                     -0.30107404037224184454,
                                     -0.31430038865966697688,
                                     -0.32746600449842228295,
                                     -0.34056834388882789071,
                                     -0.35360487505814920102,
                                     -0.36657307894981281997,
                                     -0.37947044971016533981,
                                     -0.39229449517268091195,
                                     -0.40504273733952404821,
                                     -0.41771271286037459777,
                                     -0.43030197350842237612,
                                     -0.44280808665343946926,
                                     -0.45522863573183880118,
                                     -0.46756122071362813486,
                                     -0.47980345856616927714,
                                     -0.49195298371465287471,
                                     -0.50400744849919982373,
                                     -0.51596452362850096689,
                                     -0.52782189862990742094,
                                     -0.53957728229588456342,
                                     -0.55122840312674341004,
                                     -0.56277300976956383353,
                                     -0.57420887145322481045,
                                     -0.58553377841945763493,
                                     -0.59674554234983880654,
                                     -0.60784199678864008434,
                                     -0.61882099756145399952,
                                     -0.62968042318951393523,
                                     -0.64041817529962871451,
                                     -0.65103217902965248424,
                                     -0.66152038342941154604,
                                     -0.67188076185701066272,
                                     -0.68211131237044226182,
                                     -0.69221005811442286534,
                                     -0.70217504770238199708,
                                     -0.71200435559352975554,
                                     -0.72169608246493019153,
                                     -0.73124835557850859444,
                                     -0.74065932914292177014,
                                     -0.74992718467022138616,
                                     -0.75905013132724146585,
                                     -0.76802640628164213262,
                                     -0.77685427504254273825,
                                     -0.78553203179567855429,
                                     -0.79405799973301626413,
                                     -0.80243053137676456400,
                                     -0.81064800889771726401,
                                     -0.81870884442786737575,
                                     -0.82661148036723177971,
                                     -0.83435438968482718469,
                                     -0.84193607621373922148,
                                     -0.84935507494022765428,
                                     -0.85660995228681184605,
                                     -0.86369930638928177696,
                                     -0.87062176736758108892,
                                     -0.87737599759050981330,
                                     -0.88396069193419563319,
                                     -0.89037457803428373573,
                                     -0.89661641653179652350,
                                     -0.90268500131261567761,
                                     -0.90857915974054029703,
                                     -0.91429775288387608033,
                                     -0.91983967573551176575,
                                     -0.92520385742644030427,
                                     -0.93038926143268350667,
                                     -0.93539488577558018049,
                                     -0.94021976321539905520,
                                     -0.94486296143823908341,
                                     -0.94932358323618100349,
                                     -0.95360076668065535269,
                                     -0.95769368528899343074,
                                     -0.96160154818412903132,
                                     -0.96532360024742008194,
                                     -0.96885912226456066261,
                                     -0.97220743106455520852,
                                     -0.97536787965172804270,
                                     -0.97833985733074273036,
                                     -0.98112278982460709740,
                                     -0.98371613938564111079,
                                     -0.98611940489938617864,
                                     -0.98833212198143579125,
                                     -0.99035386306716879270,
                                     -0.99218423749436794371,
                                     -0.99382289157870781124,
                                     -0.99526950868209739840,
                                     -0.99652380927386430877,
                                     -0.99758555098476862229,
                                     -0.99845452865383604590,
                                     -0.99913057436800128901,
                                     -0.99961355749455400378,
                                     -0.99990338470638102041};
  std::array<double, 225> ref_wgt = {
      0.0000018992923514176736821, 0.0000075962519177427040728,
      0.000017088126638510585352,  0.000030370331090503133653,
      0.000047436448503468087543,  0.000068278233580898046914,
      0.000092885616124640889558,  0.00012124670546176390279,
      0.00015334779567174465159,   0.00018917337161171322685,
      0.00022870611573712312857,   0.00027192691571488179081,
      0.00031881487282562679787,   0.00036934731115149032500,
      0.00042349978754535241106,   0.00048124610237724348357,
      0.00054255831105321825672,   0.00060740673630168685693,
      0.00067575998122185494497,   0.00074758494308859284340,
      0.00082284682790772438767,   0.00090150916571539954202,
      0.00098353382661489089868,   0.0010688810375438331523,
      0.0011575093997646066507,    0.0012493759070702513052,
      0.0013444359646979856371,    0.0014426434089420976769,
      0.0015439505274576699505,    0.0016483080802463000196,
      0.0017556653213146811186,    0.0018659700209966144755,
      0.0019791684889287360533,    0.0020952055976699558205,
      0.0022140248069543273769,    0.0023355681885667899594,
      0.0024597764518309536278,    0.0025865889696978319302,
      0.0027159438054241646564,    0.0028477777398287165491,
      0.0029820262991146861430,    0.0031186237832461123695,
      0.0032575032948659252933,    0.0033985967687430514534,
      0.0035418350017357538546,    0.0036871476832581618105,
      0.0038344634262367266609,    0.0039837097985431259779,
      0.0041348133548899313289,    0.0042876996691751530640,
      0.0044422933672615800376,    0.0045985181601766427395,
      0.0047562968777183450753,    0.0049155515024526330976,
      0.0050762032040873984005,    0.0052381723742081497483,
      0.0054013786613602288670,    0.0055657410064622952699,
      0.0057311776785356605623,    0.0058976063107339149625,
      0.0060649439366571578208,    0.0062331070269350197917,
      0.0064020115260625470629,    0.0065715728894729077166,
      0.0067417061208307769504,    0.0069123258095301615497,
      0.0070833461683803347381,    0.0072546810714634703593,
      0.0074262440921474903127,    0.0075979485412375712994,
      0.0077697075052496962698,    0.0079414338847895825226,
      0.0081130404330202722097,    0.0082844397942016320797,
      0.0084555445422849776487,    0.0086262672195460126469,
      0.0087965203752392575583,    0.0089662166042571313533,
      0.0091352685857768481210,    0.0093035891218782952357,
      0.0094710911761160719394,    0.0096376879120288867841,
      0.0098032927315695392473,    0.0099678193134387449963,
      0.010131181651306105721,     0.010293294091901573156,
      0.010454071372960812864,     0.010613428661007936509,
      0.010771281588959141691,     0.010927546293530875947,
      0.011082139452436226121,     0.011234978321353326057,
      0.011385980770649674312,     0.011535065321846359391,
      0.011682151183806302698,     0.011827158288630749076,
      0.011970007327248361284,     0.012110619784681408088,
      0.012248917974973675655,     0.012384825075764878714,
      0.012518265162496501261,     0.012649163242234156535,
      0.012777445287091722333,     0.012903038267242680585,
      0.013025870183504269209,     0.013145870099480239705,
      0.013262968173248205476,     0.013377095688577763584,
      0.013488185085665776304,     0.013596169991375408445,
      0.013700985248965731843,     0.013802566947298929604,
      0.013900852449512359462,     0.013995780421142967998,
      0.014087290857691785220,     0.014175325111616472160,
      0.014259825918740142479,     0.014340737424064932569,
      0.014418005206979053109,     0.014491576305846318466,
      0.014561399241967418456,     0.014627424042902469894,
      0.014689602265144662697,     0.014747887016135097194,
      0.014802232975609195382,     0.014852596416265359231,
      0.014898935223746843504,     0.014941208915928108844,
      0.014979378661497223036,     0.015013407297826184080,
      0.015043259348121348052,     0.015068901037846457432,
      0.015090300310411081553,     0.015107426842117599932,
      0.015120252056360181339,     0.015128749137069536407,
      0.015132893041397549209,     0.015132660511636223486,
      0.015128030086365711813,     0.015118982110826530909,
      0.015105498746511403349,     0.015087563979972504973,
      0.015065163630840238120,     0.015038285359049993419,
      0.015006918671273706921,     0.014971054926553364877,
      0.014930687341133955171,     0.014885810992493712245,
      0.014836422822569851114,     0.014782521640178335605,
      0.014724108122626576121,     0.014661184816518302930,
      0.014593756137750211915,     0.014521828370700330947,
      0.014445409666608406193,     0.014364510041148958762,
      0.014279141371198012874,     0.014189317390794847085,
      0.014095053686300469874,     0.013996367690754869937,
      0.013893278677435439655,     0.013785807752619317340,
      0.013673977847552739730,     0.013557813709630840830,
      0.013437341892791676218,     0.013312590747128593413,
      0.013183590407725408549,     0.013050372782719187285,
      0.012912971540595763554,     0.012771422096723463112,
      0.012625761599130829908,     0.012476028913534481799,
      0.012322264607623547955,     0.012164510934607463396,
      0.012002811816034216154,     0.011837212823886459614,
      0.011667761161963216356,     0.011494505646555210301,
      0.011317496686422170882,     0.011136786262080756318,
      0.010952427904412042615,     0.010764476672597820633,
      0.010572989131395235208,     0.010378023327759587838,
      0.010179638766825407738,     0.0099778963872561748953,
      0.0097728585359733531521,    0.0095645889422756610423,
      0.0093531526913597731123,    0.0091386161972539045551,
      0.0089210471751759871365,    0.0087005146133283944411,
      0.0084770887441414193254,    0.0082508410149779460177,
      0.0080218440583119934527,    0.0077901716613940350703,
      0.0075558987354162233360,    0.0073191012841908645721,
      0.0070798563723557012112,    0.0068382420931197642259,
      0.0065943375355637581394,    0.0063482227515091346140,
      0.0060999787219701980494,    0.0058496873232037678282,
      0.0055974312923710967372,    0.0053432941928269135985,
      0.0050873603790506201864,    0.0048297149612348280194,
      0.0045704437695465695282,    0.0043096333180766603506,
      0.0040473707684928250242,    0.0037837438934123270917,
      0.0035188410395099665248,    0.0032527510903774223830,
      0.0029855634291500266783,    0.0027173679009171564940,
      0.0024482547749325254331,    0.0021783147066407424386,
      0.0019076386995365858716,    0.0016363180668735134330,
      0.0013644443932379940327,    0.0010921094960063060254,
      0.00081940538670049730452,   0.00054642423226024657421,
      0.00027325831624740166292};
  IntegratorXX::GaussChebyshev2<double, double> quad(225);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 225; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("250 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 250> ref_pts = {
      0.99992167207222263661,   0.99968670055941908623,
      0.99929512227125271808,   0.99874699855075528153,
      0.99804241526471716094,   0.99718148279023584018,
      0.99616433599742468396,   0.99499113422828474486,
      0.99366206127174290582,   0.99217732533486026854,
      0.99053715901021529824,   0.98874181923946683421,
      0.98679158727310267449,   0.98468676862638004002,
      0.98242769303146482070,   0.98001471438577710075,
      0.97744821069655105569,   0.97472858402161790557,
      0.97185626040642120151,   0.96883168981727431219,
      0.96565534607087056609,   0.96232772676005709198,
      0.95884935317588398578,   0.95522077022594101510,
      0.95144254634899465454,   0.94751527342593882443,
      0.94343956668707328300,   0.93921606461572419739,
      0.93484542884822199195,   0.93032834407025214283,
      0.92566551790959515614,   0.92085768082527253254,
      0.91590558599311608436,   0.91081000918777853119,
      0.90557174866120385802,   0.90019162501757647394,
      0.89467048108476876163,   0.88900918178230715587,
      0.88320861398587743515,   0.87726968638839045237,
      0.87119332935763006943,   0.86498049479050559607,
      0.85863215596393156518,   0.85214930738235820498,
      0.84553296462197649359,   0.83878416417162220195,
      0.83190396327040384843,   0.82489343974208000178,
      0.81775369182621187813,   0.81048583800611768287,
      0.80309101683365564955,   0.79557038675086322442,
      0.78792512590848033793,   0.78015643198138519263,
      0.77226552198097148043,   0.76425363206449642148,
      0.75612201734142949146,   0.74787195167683217385,
      0.73950472749179953881,   0.73102165556099491082,
      0.72242406480730934239,   0.71371330209367806152,
      0.70489073201208650634,   0.69595773666979900011,
      0.68691571547284355527,   0.67776608490678672485,
      0.66851027831483284415,   0.65914974567328242481,
      0.64968595336438487684,   0.64012038394662114283,
      0.63045453592245223069,   0.62068992350357002856,
      0.61082807637368717675,   0.60087053944890315699,
      0.59081887263568413909,   0.58067465058649449893,
      0.57043946245311828945,   0.56011491163770930828,
      0.54970261554160876156,   0.53920420531196987307,
      0.52862132558622913139,   0.51795563423446420519,
      0.50720880209967888787,   0.49638251273605575726,
      0.48547846214521755477,   0.47449835851053860018,
      0.46344392192954786369,   0.45231688414446561587,
      0.44111898827091586857,   0.42985198852485710544,
      0.41851764994777408023,   0.40711774813017373282,
      0.39565406893342853926,   0.38412840821001087062,
      0.37254257152216218738,   0.36089837385904114184,
      0.34919763935239489856,   0.33744220099079821493,
      0.32563390033250504773,   0.31377458721695766932,
      0.30186611947499848717,   0.28991036263782996376,
      0.27790918964476823000,   0.26586448054983617426,
      0.25377812222724197091,   0.24165200807578918695,
      0.22948803772226477248,   0.21728811672385140121,
      0.20505415626961077967,   0.19278807288108468961,
      0.18049178811206066620,   0.16816722824754934546,
      0.15581632400202063787,   0.14344101021694600122,
      0.13104322555769419459,   0.11862491220982799634,
      0.10618801557484946312,   0.093734483965441393215,
      0.081266268300252736267,  0.068785321798275763253,
      0.056293599672862874153,  0.043793058825430977431,
      0.031285657538901424340,  0.018773355170923522460,
      0.0062581118469296868004, -0.0062581118469296868004,
      -0.018773355170923522460, -0.031285657538901424340,
      -0.043793058825430977431, -0.056293599672862874153,
      -0.068785321798275763253, -0.081266268300252736267,
      -0.093734483965441393215, -0.10618801557484946312,
      -0.11862491220982799634,  -0.13104322555769419459,
      -0.14344101021694600122,  -0.15581632400202063787,
      -0.16816722824754934546,  -0.18049178811206066620,
      -0.19278807288108468961,  -0.20505415626961077967,
      -0.21728811672385140121,  -0.22948803772226477248,
      -0.24165200807578918695,  -0.25377812222724197091,
      -0.26586448054983617426,  -0.27790918964476823000,
      -0.28991036263782996376,  -0.30186611947499848717,
      -0.31377458721695766932,  -0.32563390033250504773,
      -0.33744220099079821493,  -0.34919763935239489856,
      -0.36089837385904114184,  -0.37254257152216218738,
      -0.38412840821001087062,  -0.39565406893342853926,
      -0.40711774813017373282,  -0.41851764994777408023,
      -0.42985198852485710544,  -0.44111898827091586857,
      -0.45231688414446561587,  -0.46344392192954786369,
      -0.47449835851053860018,  -0.48547846214521755477,
      -0.49638251273605575726,  -0.50720880209967888787,
      -0.51795563423446420519,  -0.52862132558622913139,
      -0.53920420531196987307,  -0.54970261554160876156,
      -0.56011491163770930828,  -0.57043946245311828945,
      -0.58067465058649449893,  -0.59081887263568413909,
      -0.60087053944890315699,  -0.61082807637368717675,
      -0.62068992350357002856,  -0.63045453592245223069,
      -0.64012038394662114283,  -0.64968595336438487684,
      -0.65914974567328242481,  -0.66851027831483284415,
      -0.67776608490678672485,  -0.68691571547284355527,
      -0.69595773666979900011,  -0.70489073201208650634,
      -0.71371330209367806152,  -0.72242406480730934239,
      -0.73102165556099491082,  -0.73950472749179953881,
      -0.74787195167683217385,  -0.75612201734142949146,
      -0.76425363206449642148,  -0.77226552198097148043,
      -0.78015643198138519263,  -0.78792512590848033793,
      -0.79557038675086322442,  -0.80309101683365564955,
      -0.81048583800611768287,  -0.81775369182621187813,
      -0.82489343974208000178,  -0.83190396327040384843,
      -0.83878416417162220195,  -0.84553296462197649359,
      -0.85214930738235820498,  -0.85863215596393156518,
      -0.86498049479050559607,  -0.87119332935763006943,
      -0.87726968638839045237,  -0.88320861398587743515,
      -0.88900918178230715587,  -0.89467048108476876163,
      -0.90019162501757647394,  -0.90557174866120385802,
      -0.91081000918777853119,  -0.91590558599311608436,
      -0.92085768082527253254,  -0.92566551790959515614,
      -0.93032834407025214283,  -0.93484542884822199195,
      -0.93921606461572419739,  -0.94343956668707328300,
      -0.94751527342593882443,  -0.95144254634899465454,
      -0.95522077022594101510,  -0.95884935317588398578,
      -0.96232772676005709198,  -0.96565534607087056609,
      -0.96883168981727431219,  -0.97185626040642120151,
      -0.97472858402161790557,  -0.97744821069655105569,
      -0.98001471438577710075,  -0.98242769303146482070,
      -0.98468676862638004002,  -0.98679158727310267449,
      -0.98874181923946683421,  -0.99053715901021529824,
      -0.99217732533486026854,  -0.99366206127174290582,
      -0.99499113422828474486,  -0.99616433599742468396,
      -0.99718148279023584018,  -0.99804241526471716094,
      -0.99874699855075528153,  -0.99929512227125271808,
      -0.99968670055941908623,  -0.99992167207222263661};
  std::array<double, 250> ref_wgt = {
      0.0000013864342600453763645, 0.0000055451940650114964452,
      0.000012474650682897326429,  0.000022172090205329497989,
      0.000034633714514765851556,  0.000049854642638102505989,
      0.000067828912486206765922,  0.000088549482978761984270,
      0.00011200823655367452004,   0.00013819598206015721851,
      0.00016710245803446844011,   0.00019871633635715062317,
      0.00023302522629047773268,   0.00027001567889468676825,
      0.00030967319182143482874,   0.00035198221448279010406,
      0.00039692615359393263416,   0.00044448737908760878798,
      0.00049464723039825221723,   0.00054738602311355357774,
      0.00060268305599113163097,   0.00066051661833782948550,
      0.00072086399774903175827,   0.00078370148820527137384,
      0.00084900439852326862069,   0.00091674706115841999196,
      0.00098690284135563029776,   0.0010594441466452585910,
      0.0011343424366808266413,    0.0012115682334150180681,
      0.0012910911316103768384,    0.0013728798096809957059,
      0.0014569020408613683319,    0.0015431247046984633578,
      0.0016315137988629646032,    0.0017220344512755089071,
      0.0018146509325436419383,    0.0019093266687051026217,
      0.0020060242542729386879,    0.0021047054655778493114,
      0.0022053312744030458717,    0.0023078618619068186083,
      0.0024122566328278953713,    0.0025184742299685788305,
      0.0026264725489505504390,    0.0027362087532381331767,
      0.0028476392894237106695,    0.0029607199027699077166,
      0.0030754056530030465970,    0.0031916509303523048016,
      0.0033094094718289130718,    0.0034286343777396478644,
      0.0035492781284287896165,    0.0036712926012426375033,
      0.0037946290877105927755,    0.0039192383109367462737,
      0.0040450704431958313606,    0.0041720751237273313257,
      0.0043002014767214603133,    0.0044293981294906690403,
      0.0045596132308202610230,    0.0046907944694916417426,
      0.0048228890929716621798,    0.0049558439262614594459,
      0.0050896053908981408706,    0.0052241195241026038743,
      0.0053593319980667322956,    0.0054951881393731605614,
      0.0056316329485407502090,    0.0057686111196888788096,
      0.0059060670603135993079,    0.0060439449111686882147,
      0.0061821885662445639643,    0.0063207416928380221039,
      0.0064595477517057018198,    0.0065985500172941686435,
      0.0067376915980394710259,    0.0068769154567290038326,
      0.0070161644309184897001,    0.0071553812533968696221,
      0.0072945085726918770969,    0.0074334889736090556811,
      0.0075722649977969678623,    0.0077107791643313337824,
      0.0078489739903108315288,    0.0079867920114572864520,
      0.0081241758027129752793,    0.0082610679988277716649,
      0.0083974113149288632558,    0.0085331485670657763517,
      0.0086682226927234527965,    0.0088025767712961348624,
      0.0089361540445148275539,    0.0090688979368211239861,
      0.0092007520756801982539,    0.0093316603118257915108,
      0.0094615667394300408093,    0.0095904157161910266036,
      0.0097181518833309436821,    0.0098447201854978316613,
      0.0099700658905638350264,    0.010094134609312999042,
      0.010216872315011646650,     0.010338225362854422735,
      0.010458140509279135803,     0.010576564931143573264,
      0.010693446244757515000,     0.010808732524763220807,
      0.010922372322857720597,     0.011034314686350291848,
      0.011144509176548566771,     0.011252905886966771926,
      0.011359455461349665578,     0.011464109111505802942,
      0.011566818634943826502,     0.011667536432305547927,
      0.011766215524589659594,     0.011862809570159987381,
      0.011957272881532272245,     0.012049560441933545995,
      0.012139627921628246746,     0.012227431694005301598,
      0.012312928851420488218,     0.012396077220788473172,
      0.012476835378919012906,     0.012555162667591893392,
      0.012631019208365276370,     0.012704365917112213997,
      0.012775164518280189402,     0.012843377558868638135,
      0.012908968422119504814,     0.012971901340915990278,
      0.013032141410884747317,     0.013089654603196887436,
      0.013144407777063267171,     0.013196368691919630132,
      0.013245506019297290111,     0.013291789354375151377,
      0.013335189227208974423,     0.013375677113633909153,
      0.013413225445836432475,     0.013447807622591943758,
      0.013479398019164389284,     0.013507971996864405893,
      0.013533505912262594240,     0.013555977126054653563,
      0.013575364011575232437,     0.013591645962957473731,
      0.013604803402935356738,     0.013614817790286065272,
      0.013621671626909737290,     0.013625348464544079312,
      0.013625832911111457524,     0.013623110636696206868,
      0.013617168379150029686,     0.013607993949323486464,
      0.013595576235921712915,     0.013579905209982630001,
      0.013560971928976046459,     0.013538768540522186915,
      0.013513288285728312744,     0.013484525502142237316,
      0.013452475626321672255,     0.013417135196018476610,
      0.013378501851977016526,     0.013336574339345978894,
      0.013291352508703118649,     0.013242837316692555688,
      0.013191030826274373915,     0.013135936206586411426,
      0.013077557732418267505,     0.013015900783297688669,
      0.012950971842189632558,     0.012882778493808444899,
      0.012811329422543721068,     0.012736634410000559837,
      0.012658704332155052766,     0.012577551156125988199,
      0.012493187936563884058,     0.012405628811658598405,
      0.012314888998766901126,     0.012220984789661523956,
      0.012123933545403339422,     0.012023753690838452031,
      0.011920464708722117190,     0.011814087133471534764,
      0.011704642544549694976,     0.011592153559482584287,
      0.011476643826512188057,     0.011358138016887855134,
      0.011236661816798716857,     0.011112241918949979475,
      0.010984906013786034394,     0.010854682780363455127,
      0.010721601876877073135,     0.010585693930842446983,
      0.010446990528938160295,     0.010305524206511503799,
      0.010161328436751215389,     0.010014437619531069392,
      0.0098648870699282221966,    0.0097127130064203360032,
      0.0095579525387656155913,    0.0094006436555700047389,
      0.0092408252115458991291,    0.0090785369144668412644,
      0.0089138193118227700184,    0.0087467137771805029486,
      0.0085772624962542333459,    0.0084055084526909261603,
      0.0082314954135755973865,    0.0080552679146615601806,
      0.0078768712453308178797,    0.0076963514332898791648,
      0.0075137552290063638255,    0.0073291300898918589073,
      0.0071425241642365744192,    0.0069539862749014352306,
      0.0067635659027733312384,    0.0065713131699893313346,
      0.0063772788229357480985,    0.0061815142150280194655,
      0.0059840712892774508438,    0.0057850025606509362440,
      0.0055843610982298499270,    0.0053822005071743708272,
      0.0051785749104995705623,    0.0049735389306696621582,
      0.0047671476710168706836,    0.0045594566969914487805,
      0.0043505220172494195651,    0.0041404000645846865475,
      0.0039291476767122050540,    0.0037168220769089621040,
      0.0035034808545195617995,    0.0032891819453332609790,
      0.0030739836118393451864,    0.0028579444233677778648,
      0.0026411232361220961068,    0.0024235791731115642584,
      0.0022053716039896321662,    0.0019865601248057778712,
      0.0017672045376778450652,    0.0015473648303920136415,
      0.0013271011559375671680,    0.0011064738119836440788,
      0.00088554322030517983041,   0.00066436990616526515674,
      0.00044301447766116092963,   0.00022153760504122291726};
  IntegratorXX::GaussChebyshev2<double, double> quad(250);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 250; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("275 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 275> ref_pts = {
      0.99993521911205557144,   0.99974088484134917149,
      0.99941702236617402895,   0.99896367364672757126,
      0.99838089741967498685,   0.99766876919053919845,
      0.99682738122391823350,   0.99585684253153125890,
      0.99475727885809482918,   0.99352883266503117762,
      0.99217166311201066147,   0.99068594603633075234,
      0.98907187393013424373,   0.98732965591546962712,
      0.98545951771719686801,   0.98346170163374209223,
      0.98133646650570497147,   0.97908408768232287563,
      0.97670485698579613654,   0.97419908267347904548,
      0.97156708939794148293,   0.96880921816490635508,
      0.96592582628906828675,   0.96291728734779929502,
      0.95978399113274744147,   0.95652634359933473408,
      0.95314476681416082173,   0.94963969890031929609,
      0.94601159398063368554,   0.94226092211882049562,
      0.93838816925858691922,   0.93439383716067110687,
      0.93027844333783315439,   0.92604252098780523070,
      0.92168661892420953272,   0.91721130150545301784,
      0.91261714856160812651,   0.90790475531928896828,
      0.90307473232453270466,   0.89812770536369612031,
      0.89306431538237763126,   0.88788521840237523498,
      0.88259108543669116121,   0.87718260240259423570,
      0.87166047003275122082,   0.86602540378443864676,
      0.86027813374684689627,   0.85441940454648855255,
      0.84844997525072326593,   0.84237061926941163872,
      0.83618212425471087022,   0.82988529199902514439,
      0.82348093833112398211,   0.81696989301044201697,
      0.81035299961957388937,   0.80363111545497818741,
      0.79680511141590459530,   0.78987587189155863993,
      0.78284429464651865483,   0.77571129070441980704,
      0.76847778422992025712,   0.76114471240896474477,
      0.75371302532736111352,   0.74618368584768550622,
      0.73855766948453217972,   0.73083596427812410165,
      0.72301957066630070448,   0.71510950135489938236,
      0.70710678118654752440,   0.69901244700788208384,
      0.69082754753521388644,   0.68255314321865408287,
      0.67419030610472034905,   0.66574011969744063546,
      0.65720367881797246116,   0.64858208946275594027,
      0.63987646866021891911,   0.63108794432605278937,
      0.62221765511707772803,   0.61326675028371629767,
      0.60423638952109452076,   0.59512774281878971963,
      0.58594199030924458906,   0.57668032211486714125,
      0.56734393819383633309,   0.55793404818463335350,
      0.54845187124931871364,   0.53889863591557544522,
      0.52927557991753887221,   0.51958395003543357813,
      0.50982500193403834608,   0.50000000000000000000,
      0.49011021717801722536,   0.48015693480591559336,
      0.47014144244863515674,   0.46006503773115212604,
      0.44992902617035627321,   0.43973472100590584495,
      0.42948344303008190040,   0.41917652041666411765,
      0.40881528854885024012,   0.39840108984624145800,
      0.38793527359091614071,   0.37741919575261445467,
      0.36685421881305651570,   0.35624171158941683775,
      0.34558304905697794890,   0.33487961217098615196,
      0.32413278768773251032,   0.31334396798488224017,
      0.30251455088107578749,   0.29164593945482496260,
      0.28073954186272759649,   0.26979677115702427125,
      0.25881904510252076235,   0.24780778599289991265,
      0.23676442046644673699,   0.22569037932121063242,
      0.21458709732962864201,   0.20345601305263378988,
      0.19229856865327257202,   0.18111620970985575085,
      0.16991038502866666211,   0.15868254645625129983,
      0.14743414869131449956,   0.13616664909624659076,
      0.12488150750830493741,   0.11358018605047483044,
      0.10226414894203423714,   0.090934862308846951302,
      0.079593793993408722553,  0.068242413364670975921,
      0.056882191127666761040,  0.045514599132963596262,
      0.034141110185967895283,  0.022763197856105683154,
      0.011382336285904324548,  0,
      -0.011382336285904324548, -0.022763197856105683154,
      -0.034141110185967895283, -0.045514599132963596262,
      -0.056882191127666761040, -0.068242413364670975921,
      -0.079593793993408722553, -0.090934862308846951302,
      -0.10226414894203423714,  -0.11358018605047483044,
      -0.12488150750830493741,  -0.13616664909624659076,
      -0.14743414869131449956,  -0.15868254645625129983,
      -0.16991038502866666211,  -0.18111620970985575085,
      -0.19229856865327257202,  -0.20345601305263378988,
      -0.21458709732962864201,  -0.22569037932121063242,
      -0.23676442046644673699,  -0.24780778599289991265,
      -0.25881904510252076235,  -0.26979677115702427125,
      -0.28073954186272759649,  -0.29164593945482496260,
      -0.30251455088107578749,  -0.31334396798488224017,
      -0.32413278768773251032,  -0.33487961217098615196,
      -0.34558304905697794890,  -0.35624171158941683775,
      -0.36685421881305651570,  -0.37741919575261445467,
      -0.38793527359091614071,  -0.39840108984624145800,
      -0.40881528854885024012,  -0.41917652041666411765,
      -0.42948344303008190040,  -0.43973472100590584495,
      -0.44992902617035627321,  -0.46006503773115212604,
      -0.47014144244863515674,  -0.48015693480591559336,
      -0.49011021717801722536,  -0.50000000000000000000,
      -0.50982500193403834608,  -0.51958395003543357813,
      -0.52927557991753887221,  -0.53889863591557544522,
      -0.54845187124931871364,  -0.55793404818463335350,
      -0.56734393819383633309,  -0.57668032211486714125,
      -0.58594199030924458906,  -0.59512774281878971963,
      -0.60423638952109452076,  -0.61326675028371629767,
      -0.62221765511707772803,  -0.63108794432605278937,
      -0.63987646866021891911,  -0.64858208946275594027,
      -0.65720367881797246116,  -0.66574011969744063546,
      -0.67419030610472034905,  -0.68255314321865408287,
      -0.69082754753521388644,  -0.69901244700788208384,
      -0.70710678118654752440,  -0.71510950135489938236,
      -0.72301957066630070448,  -0.73083596427812410165,
      -0.73855766948453217972,  -0.74618368584768550622,
      -0.75371302532736111352,  -0.76114471240896474477,
      -0.76847778422992025712,  -0.77571129070441980704,
      -0.78284429464651865483,  -0.78987587189155863993,
      -0.79680511141590459530,  -0.80363111545497818741,
      -0.81035299961957388937,  -0.81696989301044201697,
      -0.82348093833112398211,  -0.82988529199902514439,
      -0.83618212425471087022,  -0.84237061926941163872,
      -0.84844997525072326593,  -0.85441940454648855255,
      -0.86027813374684689627,  -0.86602540378443864676,
      -0.87166047003275122082,  -0.87718260240259423570,
      -0.88259108543669116121,  -0.88788521840237523498,
      -0.89306431538237763126,  -0.89812770536369612031,
      -0.90307473232453270466,  -0.90790475531928896828,
      -0.91261714856160812651,  -0.91721130150545301784,
      -0.92168661892420953272,  -0.92604252098780523070,
      -0.93027844333783315439,  -0.93439383716067110687,
      -0.93838816925858691922,  -0.94226092211882049562,
      -0.94601159398063368554,  -0.94963969890031929609,
      -0.95314476681416082173,  -0.95652634359933473408,
      -0.95978399113274744147,  -0.96291728734779929502,
      -0.96592582628906828675,  -0.96880921816490635508,
      -0.97156708939794148293,  -0.97419908267347904548,
      -0.97670485698579613654,  -0.97908408768232287563,
      -0.98133646650570497147,  -0.98346170163374209223,
      -0.98545951771719686801,  -0.98732965591546962712,
      -0.98907187393013424373,  -0.99068594603633075234,
      -0.99217166311201066147,  -0.99352883266503117762,
      -0.99475727885809482918,  -0.99585684253153125890,
      -0.99682738122391823350,  -0.99766876919053919845,
      -0.99838089741967498685,  -0.99896367364672757126,
      -0.99941702236617402895,  -0.99974088484134917149,
      -0.99993521911205557144};
  std::array<double, 275> ref_wgt = {
      0.0000010427871033307085877, 0.0000041708106537795140758,
      0.0000093830574722708091430, 0.000016677839258830703399,
      0.000026052793090213516711,  0.000037504882116375521565,
      0.000051030396455592657324,  0.000066624954287960961659,
      0.000084283503146960563028,  0.00010400032140870626974,
      0.00012576901997845009265,   0.00014958254417384346691,
      0.00017543317580440950978,   0.00020331253544661838382,
      0.00023321158491390174358,   0.00026512062992088534648,
      0.00029902932294106222151,   0.00033492666625707232874,
      0.00037280101520269842524,   0.00041264008159563189533,
      0.00045443093736000662121,   0.00049816001833764357997,
      0.00054381312828689377184,   0.00059137544306791232694,
      0.00064083151501314222112,   0.00069216527748173197049,
      0.00074536004959655798568,   0.00080039854116246896512,
      0.00085726285776431680884,   0.00091593450604328605436,
      0.00097639439914998179041,   0.0010386228623726844076,
      0.0011025996389391284120,    0.0011683038959901118740,
      0.0012357142307231929241,    0.0013048086767046800578,
      0.0013755647103480738778,    0.0014479592575570693163,
      0.0015219687005311793348,    0.0015975688847319936251,
      0.0016747351260080389402,    0.0017534422178761613796,
      0.0018336644389573052561,    0.0019153755605645180953,
      0.0019985488544409668742,    0.0020831571006457068055,
      0.0021691725955849008366,    0.0022565671601861455595,
      0.0023453121482135174467,    0.0024353784547209122352,
      0.0025267365246412098987,    0.0026193563615087579879,
      0.0027132075363126271832,    0.0028082591964780547183,
      0.0029044800749734538946,    0.0030018384995403312358,
      0.0031003024020434169365,    0.0031998393279382791453,
      0.0033004164458536583099,    0.0034020005572857243020,
      0.0035045581064014263445,    0.0036080551899480738969,
      0.0037124575672662556190,    0.0038177306704031733429,
      0.0039238396143234386437,    0.0040307492072143511235,
      0.0041384239608826499116,    0.0042468281012397031550,
      0.0043559255788720744255,    0.0044656800796943800140,
      0.0045760550356813270325,    0.0046870136356757990904,
      0.0047985188362698340849,    0.0049105333727553173233,
      0.0050230197701411928152,    0.0051359403542339761096,
      0.0052492572627783335392,    0.0053629324566544751568,
      0.0054769277311290920236,    0.0055912047271565528358,
      0.0057057249427270601601,    0.0058204497442584527967,
      0.0059353403780283280004,    0.0060503579816431454726,
      0.0061654635955409641949,    0.0062806181745244533052,
      0.0063957825993208093300,    0.0065109176881652041805,
      0.0066259842084043813969,    0.0067409428881170121903,
      0.0068557544277474178828,    0.0069703795117492613888,
      0.0070847788202358074108,    0.0071989130406333490482,
      0.0073127428793343975326,    0.0074262290733472318083,
      0.0075393324019384056816,    0.0076520136982648122489,
      0.0077642338609919083015,    0.0078759538658947053762,
      0.0079871347774381390856,    0.0080977377603334343120,
      0.0082077240910670907880,    0.0083170551693991215073,
      0.0084256925298271853131,    0.0085335978530132648952,
      0.0086407329771695522846,    0.0087470599094002157692,
      0.0088525408369957349549,    0.0089571381386765044649,
      0.0090608143957824215026,    0.0091635324034051881889,
      0.0092652551814600762283,    0.0093659459856939190479,
      0.0094655683186261150858,    0.0095640859404194453761,
      0.0096614628796775289833,    0.0097576634441657611642,
      0.0098526522314526013884,    0.0099463941394681015092,
      0.010038854376976588447,     0.010129998473960440719,
      0.010219792291911924001,     0.010308202034030077671,
      0.010395194255319671893,     0.010480735872589283298,
      0.010564794174345566672,     0.010647336830580830269,
      0.010728331902451053420,     0.010807747851841516973,
      0.010885553550817249838,     0.010961718290955528411,
      0.011036211792557699996,     0.011109004213737636455,
      0.011180066159384160245,     0.011249368689994821675,
      0.011316883330378443671,     0.011382582078223888545,
      0.011446437412532540194,     0.011508422301912034867,
      0.011568510212728813989,     0.011626675117117113687,
      0.011682891500842047404,     0.011737134371014480535,
      0.011789379263655439126,     0.011839602251107838500,
      0.011887779949293362159,     0.011933889524812366367,
      0.011977908701884731555,     0.012019815769129627992,
      0.012059589586182210098,     0.012097209590145301227,
      0.012132655801874178850,     0.012165908832092618637,
      0.012196949887338405092,     0.012225760775736566080,
      0.012252323912598638715,     0.012276622325846324807,
      0.012298639661257945153,     0.012318360187536153606,
      0.012335768801195423914,     0.012350851031267874790,
      0.012363593043826051614,     0.012373981646321336473,
      0.012382004291736711936,     0.012387649082552658068,
      0.012390904774525016576,     0.012391760780273710784,
      0.012390207172681265224,     0.012386234688100124007,
      0.012379834729367822887,     0.012370999368629125837,
      0.012359721349964293248,     0.012345994091822705292,
      0.012329811689261120716,     0.012311168915985908245,
      0.012290061226198644846,     0.012266484756244532439,
      0.012240436326063142031,     0.012211913440441051874,
      0.012180914290066003931,     0.012147437752382260772,
      0.012111483392246902940,     0.012073051462386864802,
      0.012032142903656564959,     0.011988759345096045398,
      0.011942903103789591642,     0.011894577184524864343,
      0.011843785279252630820,     0.011790531766347243174,
      0.011734821709668067657,     0.011676660857422127950,
      0.011616055640828282921,     0.011553013172583317280,
      0.011487541245130381218,     0.011419648328730272743,
      0.011349343569336113833,     0.011276636786272028836,
      0.011201538469716490623,     0.011124059777991056935,
      0.011044212534655276049,     0.010962009225408597365,
      0.010877462994800178749,     0.010790587642747538437,
      0.010701397620865054990,     0.010609908028603374210,
      0.010516134609200837007,     0.010420093745448096974,
      0.010321802455267150869,     0.010221278387106059275,
      0.010118539815150688388,     0.010013605634354857233,
      0.0099064953552903274804,    0.0097972290988181255562,
      0.0096858275905827387834,    0.0095723121553307789003,
      0.0094567047110557574513,    0.0093390277629706682090,
      0.0092193043973101219573,    0.0090975582749638286304,
      0.0089738136249432709428,    0.0088480952376834622479,
      0.0087204284581817294146,    0.0085908391789755090014,
      0.0084593538329611919092,    0.0083259993860560980130,
      0.0081908033297057079804,    0.0080537936732383245695,
      0.0079149989360693801605,    0.0077744481397576510781,
      0.0076321707999156824199,    0.0074881969179767695796,
      0.0073425569728208844552,    0.0071952819122619754303,
      0.0070464031443991106102,    0.0068959525288339734687,
      0.0067439623677572590029,    0.0065904653969065566946,
      0.0064354947763983440217,    0.0062790840814367509467,
      0.0061212672929017917154,    0.0059620787878197954206,
      0.0058015533297188011100,    0.0056397260588717167395,
      0.0054766324824300739733,    0.0053123084644512427154,
      0.0051467902158220002971,    0.0049801142840813804494,
      0.0048123175431457565358,    0.0046434371829391420086,
      0.0044735106989317186723,    0.0043025758815896300755,
      0.0041306708057391032127,    0.0039578338198479866784,
      0.0037841035352278174814,    0.0036095188151595518828,
      0.0034341187639461178661,    0.0032579427158949681704,
      0.0030810302242338332151,    0.0029034210499628927082,
      0.0027251551506466032597,    0.0025462726691484369028,
      0.0023668139223118020618,    0.0021868193895904341884,
      0.0020063297016315580092,    0.0018253856288151370932,
      0.0016440280697525392416,    0.0014622980397479580264,
      0.0012802366592259416605,    0.0010978851421283902556,
      0.00091528478428439142234,   0.00073247695175627207757,
      0.00054950306916525126238,   0.00036640460800008470976,
      0.00018322307491209686136};
  IntegratorXX::GaussChebyshev2<double, double> quad(275);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 275; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("300 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 300> ref_pts = {
      0.99994553308017511163,    0.99978213825399115695,
      0.99950983332067393107,    0.99912864794344537583,
      0.99863862364629225107,    0.99803981380944276737,
      0.99733228366355167281,    0.99651611028259442725,
      0.99559138257547123833,    0.99455820127632187349,
      0.99341667893355230343,    0.99216693989757437204,
      0.99080912030725982861,    0.98934336807511019779,
      0.98776984287114410287,    0.98608871610550379758,
      0.98430017090978280111,    0.98240440211707667053,
      0.98040161624075908353,    0.97829203145198554374,
      0.97607587755592715901,    0.97375339596673708179,
      0.97132483968125233849,    0.96879047325143391254,
      0.96615057275554808358,    0.96340542576809216178,
      0.96055533132846789375,    0.95760059990840595223,
      0.95454155337814505841,    0.95137852497136942093,
      0.94811185924890831118,    0.94474191206120172916,
      0.94126905050953624872,    0.93769365290605526485,
      0.93401610873254799935,    0.93023681859802175404,
      0.92635619419506203337,    0.92237465825498529037,
      0.91829264450178918119,    0.91411059760490534467,
      0.90982897313075985381,    0.90544823749314661572,
      0.90096886790241912624,    0.89639135231350611375,
      0.89171618937275673525,    0.88694388836362111493,
      0.88207496915117214243,    0.87710996212547457438,
      0.87204940814380760813,    0.86689385847174722163,
      0.86164387472311469758,    0.85630002879879787343,
      0.85086290282445178183,    0.84533308908708546784,
      0.83971118997054189084,    0.83399781788987793962,
      0.82819359522465170873,    0.82229915425112430354,
      0.81631513707338355934,    0.81024219555339717766,
      0.80408099124000289916,    0.79783219529684344866,
      0.79149648842925410245,    0.78507456081011084250,
      0.77856711200464717505,    0.77197485089424780359,
      0.76529849559922745784,    0.75853877340060329048,
      0.75169642066086936346,    0.74477218274378185418,
      0.73776681393316371955,    0.73068107735073766299,
      0.72351574487299635506,    0.71627159704711896337,
      0.70894942300594315133,    0.70155002038200180814,
      0.69407419522063387436,    0.68652276189217872821,
      0.67889654300326369761,    0.67119636930719436172,
      0.66342307961345740360,    0.65557752069634587203,
      0.64766054720271680654,    0.63967302155889127364,
      0.63161581387670695629,    0.62348980185873353053,
      0.61529587070266115441,    0.60703491300487248484,
      0.59870782866320872632,    0.59031552477894030382,
      0.58185891555795283842,    0.57333892221115919001,
      0.56475647285414841537,    0.55611250240608257343,
      0.54740795248785239121,    0.53864377131950288468,
      0.52982091361694010841,    0.52094034048793028618,
      0.51200301932740265165,    0.50300992371206740430,
      0.49396203329436026016,    0.48486033369572515051,
      0.47570581639924669350,    0.46649947864164413481,
      0.45724232330463852282,    0.44793535880570495195,
      0.43857959898822177522,    0.42917606301102875215,
      0.41972577523740616319,    0.41022976512348698441,
      0.40068906710611427811,    0.39110472049015601574,
      0.38147776933528960795,    0.37180926234226847522,
      0.36210025273868304803,    0.35235179816422864152,
      0.34256496055549270242,    0.33274080603027397919,
      0.32288040477144621663,    0.31298483091037902634,
      0.30305516240992863234,    0.29309248094701123812,
      0.28309787179477180694,    0.27307242370436109103,
      0.26301722878633378836,    0.25293338239168074656,
      0.24282198299250817375,    0.23268413206237685423,
      0.22252093395631440429,    0.21233349579051363863,
      0.20212292732173015261,    0.19189034082639225777,
      0.18163685097943643970,    0.17136357473288153731,
      0.16107163119415487068,    0.15076214150418357199,
      0.14043622871526439963,    0.13009501766872533928,
      0.11973963487239231913,    0.10937120837787438699,
      0.098990867657680717152,   0.088599743482182833258,
      0.078198967796435449907,   0.067789673596869351601,
      0.057372994807869741226,   0.046950066158253502896,
      0.036522023057658834968,   0.026090001472860718585,
      0.015655137804025695153,   0.0052185687609194328282,
      -0.0052185687609194328282, -0.015655137804025695153,
      -0.026090001472860718585,  -0.036522023057658834968,
      -0.046950066158253502896,  -0.057372994807869741226,
      -0.067789673596869351601,  -0.078198967796435449907,
      -0.088599743482182833258,  -0.098990867657680717152,
      -0.10937120837787438699,   -0.11973963487239231913,
      -0.13009501766872533928,   -0.14043622871526439963,
      -0.15076214150418357199,   -0.16107163119415487068,
      -0.17136357473288153731,   -0.18163685097943643970,
      -0.19189034082639225777,   -0.20212292732173015261,
      -0.21233349579051363863,   -0.22252093395631440429,
      -0.23268413206237685423,   -0.24282198299250817375,
      -0.25293338239168074656,   -0.26301722878633378836,
      -0.27307242370436109103,   -0.28309787179477180694,
      -0.29309248094701123812,   -0.30305516240992863234,
      -0.31298483091037902634,   -0.32288040477144621663,
      -0.33274080603027397919,   -0.34256496055549270242,
      -0.35235179816422864152,   -0.36210025273868304803,
      -0.37180926234226847522,   -0.38147776933528960795,
      -0.39110472049015601574,   -0.40068906710611427811,
      -0.41022976512348698441,   -0.41972577523740616319,
      -0.42917606301102875215,   -0.43857959898822177522,
      -0.44793535880570495195,   -0.45724232330463852282,
      -0.46649947864164413481,   -0.47570581639924669350,
      -0.48486033369572515051,   -0.49396203329436026016,
      -0.50300992371206740430,   -0.51200301932740265165,
      -0.52094034048793028618,   -0.52982091361694010841,
      -0.53864377131950288468,   -0.54740795248785239121,
      -0.55611250240608257343,   -0.56475647285414841537,
      -0.57333892221115919001,   -0.58185891555795283842,
      -0.59031552477894030382,   -0.59870782866320872632,
      -0.60703491300487248484,   -0.61529587070266115441,
      -0.62348980185873353053,   -0.63161581387670695629,
      -0.63967302155889127364,   -0.64766054720271680654,
      -0.65557752069634587203,   -0.66342307961345740360,
      -0.67119636930719436172,   -0.67889654300326369761,
      -0.68652276189217872821,   -0.69407419522063387436,
      -0.70155002038200180814,   -0.70894942300594315133,
      -0.71627159704711896337,   -0.72351574487299635506,
      -0.73068107735073766299,   -0.73776681393316371955,
      -0.74477218274378185418,   -0.75169642066086936346,
      -0.75853877340060329048,   -0.76529849559922745784,
      -0.77197485089424780359,   -0.77856711200464717505,
      -0.78507456081011084250,   -0.79149648842925410245,
      -0.79783219529684344866,   -0.80408099124000289916,
      -0.81024219555339717766,   -0.81631513707338355934,
      -0.82229915425112430354,   -0.82819359522465170873,
      -0.83399781788987793962,   -0.83971118997054189084,
      -0.84533308908708546784,   -0.85086290282445178183,
      -0.85630002879879787343,   -0.86164387472311469758,
      -0.86689385847174722163,   -0.87204940814380760813,
      -0.87710996212547457438,   -0.88207496915117214243,
      -0.88694388836362111493,   -0.89171618937275673525,
      -0.89639135231350611375,   -0.90096886790241912624,
      -0.90544823749314661572,   -0.90982897313075985381,
      -0.91411059760490534467,   -0.91829264450178918119,
      -0.92237465825498529037,   -0.92635619419506203337,
      -0.93023681859802175404,   -0.93401610873254799935,
      -0.93769365290605526485,   -0.94126905050953624872,
      -0.94474191206120172916,   -0.94811185924890831118,
      -0.95137852497136942093,   -0.95454155337814505841,
      -0.95760059990840595223,   -0.96055533132846789375,
      -0.96340542576809216178,   -0.96615057275554808358,
      -0.96879047325143391254,   -0.97132483968125233849,
      -0.97375339596673708179,   -0.97607587755592715901,
      -0.97829203145198554374,   -0.98040161624075908353,
      -0.98240440211707667053,   -0.98430017090978280111,
      -0.98608871610550379758,   -0.98776984287114410287,
      -0.98934336807511019779,   -0.99080912030725982861,
      -0.99216693989757437204,   -0.99341667893355230343,
      -0.99455820127632187349,   -0.99559138257547123833,
      -0.99651611028259442725,   -0.99733228366355167281,
      -0.99803981380944276737,   -0.99863862364629225107,
      -0.99912864794344537583,   -0.99950983332067393107,
      -0.99978213825399115695,   -0.99994553308017511163};
  std::array<double, 300> ref_wgt = {
      8.0394303537240364739E-7,    0.0000032155532020722568755,
      0.0000072341737361054398173, 0.000012858710211661615504,
      0.000020087630812337425639,  0.000028918966710755779534,
      0.000039350312556488078500,  0.000051378827072159640602,
      0.000065001233757592042737,  0.000080213821701809584837,
      0.000097012446502710611232,  0.00011539253129417800328,
      0.00013534906788037679177,   0.00015687661797696053377,
      0.00017996931455888186304,   0.00020462086331447646216,
      0.00023082454420546362469,   0.00025857321313248058337,
      0.00028785930370574188180,   0.00031867482912038926856,
      0.00035101138413607190121,   0.00038486014716027106833,
      0.00042021188243485817794,   0.00045705694232534942601,
      0.00049538526971229535572,   0.00053518640048421845284,
      0.00057644946613148700086,   0.00061916319644048864832,
      0.00066331592228744252499,   0.00070889557853116429023,
      0.00075588970700407421162,   0.00080428545960071426041,
      0.00085406960146301627912,   0.00090522851426153953084,
      0.00095774819957187238591,   0.0010116142823453695451,
      0.0010668120144733730449,    0.0011233262784440423451,
      0.0011811415910908960709,    0.0012402421074321454680,
      0.0013006116245998773473,    0.0013622335858581222406,
      0.0014250910847088216722,    0.0014891668690846868741,
      0.0015544433456279199455,    0.0016209025840537473795,
      0.0016885263215976950619,    0.0017572959675455132905,
      0.0018271926078446400719,    0.0018981970097960709411,
      0.0019702896268254838054,    0.0020434506033324478597,
      0.0021176597796165264512,    0.0021928966968790648917,
      0.0022691406022994356346,    0.0023463704541844949560,
      0.0024245649271899872974,    0.0025037024176126157700,
      0.0025837610487514799637,    0.0026647186763375651719,
      0.0027465528940299504358,    0.0028292410389773864245,
      0.0029127601974438781162,    0.0029970872104968915278,
      0.0030821986797567883578,    0.0031680709732060773741,
      0.0032546802310570566810,    0.0033420023716764066638,
      0.0034300130975652794132,    0.0035186879013934168063,
      0.0036080020720858161426,    0.0036979307009604493259,
      0.0037884486879155290400,    0.0038795307476648031899,
      0.0039711514160193470812,    0.0040632850562143113800,
      0.0041559058652790728506,    0.0042489878804492241967,
      0.0043425049856188290510,    0.0044364309178313582548,
      0.0045307392738077140630,    0.0046254035165097397861,
      0.0047203969817376036564,    0.0048156928847594373715,
      0.0049112643269716018344,    0.0050070843025879450728,
      0.0051031257053564101832,    0.0051993613353013444166,
      0.0052957639054898541888,    0.0053923060488205448794,
      0.0054889603248329787666,    0.0055856992265361793365,
      0.0056824951872545055115,    0.0057793205874892150526,
      0.0058761477617940325175,    0.0059729490056630336976,
      0.0060696965824291554038,    0.0061663627301716368449,
      0.0062629196686306966190,    0.0063593396061277475391,
      0.0064555947464894501293,    0.0065516572959739046562,
      0.0066474994701972810092,    0.0067430935010591856079,
      0.0068384116436650647971,    0.0069334261832439448855,
      0.0070281094420598101024,    0.0071224337863149212766,
      0.0072163716330433799894,    0.0073098954569932453178,
      0.0074029777974955130597,    0.0074955912653182705291,
      0.0075877085495043436123,    0.0076793024241907567963,
      0.0077703457554083313099,    0.0078608115078597513615,
      0.0079506727516744337045,    0.0080399026691385414232,
      0.0081284745613984888947,    0.0082163618551362913544,
      0.0083035381092151193668,    0.0083899770212934257790,
      0.0084756524344060204110,    0.0085605383435104758116,
      0.0086446089019972558798,    0.0087278384281619680171,
      0.0088102014116381487331,    0.0088916725197890022749,
      0.0089722266040565218843,    0.0090518387062664337078,
      0.0091304840648874141860,    0.0092081381212430429307,
      0.0092847765256749646581,    0.0093603751436557456779,
      0.0094349100618499227455,    0.0095083575941217547542,
      0.0095806942874882007857,    0.0096518969280156614336,
      0.0097219425466590340771,    0.0097908084250416468933,
      0.0098584721011746508648,    0.0099249113751144638508,
      0.0099901043145568759526,    0.010054029260366440901,
      0.010116664832039794032,     0.010177989933101553590,
      0.010237983756431478589,     0.010296625789521573301,
      0.010353895819661845573,     0.010409773939053443652,
      0.010464240549847913955,     0.010517276369111340325,
      0.010568862433712143688,     0.010618980105131339722,
      0.010667611074194071125,     0.010714737365721250348,
      0.010760341343100168212,     0.010804405712772943671,
      0.010846913528641710090,     0.010887848196389453809,
      0.010927193477715441393,     0.010964933494484192896,
      0.011001052732786979631,     0.011035536046914846353,
      0.011068368663242179434,     0.011099536184019864495,
      0.011129024591077099122,     0.011156820249430948641,
      0.011182909910802755526,     0.011207280717040535821,
      0.011229920203446518978,     0.011250816302009010751,
      0.011269957344537782194,     0.011287332065702211458,
      0.011302929605971428884,     0.011316739514455739901,
      0.011328751751648624385,     0.011338956692068635528,
      0.011347345126800545739,     0.011353908265935111793,
      0.011358637740906856287,     0.011361525606729287392,
      0.011362564344127004071,     0.011361746861564159132,
      0.011359066497168777901,     0.011354517020552455793,
      0.011348092634524983694,     0.011339787976703475780,
      0.011329598121015600270,     0.011317518579096539508,
      0.011303545301579331837,     0.011287674679278273816,
      0.011269903544265087523,     0.011250229170837583970,
      0.011228649276380579982,     0.011205162022118852260,
      0.011179766013761938831,     0.011152460302040624546,
      0.011123244383134973838,     0.011092118198993800498,
      0.011059082137545490850,     0.011024137032800123275,
      0.010987284164842853704,     0.010948525259718563300,
      0.010907862489207791210,     0.010865298470494001879,
      0.010820836265722263043,     0.010774479381449437127,
      0.010726231767986015321,     0.010676097818629750193,
      0.010624082368791269152,     0.010570190695011877572,
      0.010514428513873786789,     0.010456801980803028520,
      0.010397317688765343556,     0.010335982666855358794,
      0.010272804378779392807,     0.010207790721232256229,
      0.010140950022168439161,     0.010072291038968103721,
      0.010001822956498325597,     0.0099295553850700541375,
      0.0098554983582912860508,    0.0097796623308169732283,
      0.0097020581759962104740,    0.0096226971834172741132,
      0.0095415910563511074614,    0.0094587519090938740193,
      0.0093741922642092239814,    0.0092879250496709442173,
      0.0091999635959066862839,    0.0091103216327434912657,
      0.0090190132862558542930,    0.0089260530755170954650,
      0.0088314559092548275953,    0.0087352370824113346871,
      0.0086374122726096983434,    0.0085379975365265324064,
      0.0084370093061722090002,    0.0083344643850794818117,
      0.0082303799444014348897,    0.0081247735189197074500,
      0.0080176630029639671624,    0.0079090666462436261304,
      0.0077990030495928152806,    0.0076874911606296541247,
      0.0075745502693308738544,    0.0074602000035228724682,
      0.0073444603242903010999,    0.0072273515213033009242,
      0.0071088942080645299437,    0.0069891093170771386111,
      0.0068680180949348726095,    0.0067456420973355001885,
      0.0066220031840187802412,    0.0064971235136302057930,
      0.0063710255385117757551,    0.0062437319994210656784,
      0.0061152659201798858031,    0.0059856506022538319544,
      0.0058549096192640517643,    0.0057230668114325653040,
      0.0055901462799624954938,    0.0054561723813545796004,
      0.0053211697216613487449,    0.0051851631506803776134,
      0.0050481777560880214922,    0.0049102388575150723269,
      0.0047713720005657797360,    0.0046316029507816967849,
      0.0044909576875518238427,    0.0043494623979705370022,
      0.0042071434706448003349,    0.0040640274894521736780,
      0.0039201412272511397075,    0.0037755116395452857291,
      0.0036301658581028869283,    0.0034841311845334487437,
      0.0033374350838227765754,    0.0031901051778281511991,
      0.0030421692387351980320,    0.0028936551824780477795,
      0.0027445910621243949875,    0.0025950050612270696229,
      0.0024449254871437450112,    0.0022943807643264132638,
      0.0021433994275822667389,    0.0019920101153076310793,
      0.0018402415626966019795,    0.0016881225949260440252,
      0.0015356821203186157461,    0.0013829491234854904010,
      0.0012299526584504469922,    0.0010767218417570105687,
      0.00092328584556032503122,   0.00076967389070544539366,
      0.00061591523979373977855,   0.00046203919023909434518,
      0.00030807506731561683642,   0.00015405221719853652559};
  IntegratorXX::GaussChebyshev2<double, double> quad(300);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 300; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("350 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 350> ref_pts = {
      0.99995994537985237039,   0.99983978472815467189,
      0.99963952767088542540,   0.99935919025048535251,
      0.99899879492457222781,   0.99855837056414181616,
      0.99803795245125503917,   0.99743758227621155609,
      0.99675730813420998559,   0.99599718452149503591,
      0.99515727233099185214,   0.99423763884742793023,
      0.99323835774194298855,   0.99215950906618722891,
      0.99100117924590845966,   0.98976346107402859467,
      0.98844645370321008287,   0.98705026263791286379,
      0.98557499972594248542,   0.98402078314949006148,
      0.98238773741566478587,   0.98067599334651976275,
      0.97888568806857195124,   0.97701696500181706433,
      0.97506997384824030199,   0.97304487057982383883,
      0.97094181742605202716,   0.96876098286091531617,
      0.96650254158941392861,   0.96416667453356237592,
      0.96175356881789593309,   0.95926341775448023430,
      0.95669642082742519022,   0.95405278367690446749,
      0.95133271808268181066,   0.94853644194714552616,
      0.94566417927785248759,   0.94271616016958306043,
      0.93969262078590838405,   0.93659380334027148744,
      0.93341995607658375426,   0.93017133324933829172,
      0.92684819510324179628,   0.92345080785236654795,
      0.91997944365882420313,   0.91643438061096309467,
      0.91281590270109078551,   0.90912429980272366071,
      0.90535986764736538023,   0.90152290780081605286,
      0.89761372763901402910,   0.89363264032341224819,
      0.88957996477589111210,   0.88545602565320989590,
      0.88126115332099874150,   0.87699568382729331792,
      0.87265995887561426852,   0.86825432579759360151,
      0.86377913752515021677,   0.85923475256221679802,
      0.85462153495602033503,   0.84993985426791857693,
      0.84519008554379475254,   0.84037260928401292959,
      0.83548781141293641965,   0.83053608324801167057,
      0.82551782146842012310,   0.82043342808330054306,
      0.81528331039954437462,   0.81006788098916669466,
      0.80478755765625538210,   0.79944276340350114978,
      0.79403392639831112033,   0.78856147993850866039,
      0.78302586241762222122,   0.77742751728976596617,
      0.77176689303411499846,   0.76604444311897803520,
      0.76026062596547040570,   0.75441590491079028413,
      0.74851074817110109863,   0.74254562880402309013,
      0.73652102467073702579,   0.73043741839770310282,
      0.72429529733799810945,   0.71809515353227394016,
      0.71183748366934059288,   0.70552278904637680572,
      0.69915157552877152088,   0.69272435350959939260,
      0.68624163786873358573,   0.67970394793159914021,
      0.67311180742757020586,   0.66646574444801448003,
      0.65976629140398820938,   0.65301398498358514462,
      0.64620936610894286504,   0.63935297989290991701,
      0.63244537559537723782,   0.62548710657927736308,
      0.61847873026625494260,   0.61142080809201211588,
      0.60431390546133232458,   0.59715859170278616485,
      0.58995544002312290803,   0.58270502746135134347,
      0.57540793484251362188,   0.56806474673115580251,
      0.56067605138449883141,   0.55324244070531370238,
      0.54576451019450457567,   0.53824285890340365294,
      0.53067808938578163014,   0.52307080764957757271,
      0.51542162310835207995,   0.50773114853246762767,
      0.50000000000000000000,   0.49222879684738474271,
      0.48441816161980259194,   0.47656872002130785269,
      0.46868110086470372237,   0.46075593602116857487,
      0.45279386036963724050,   0.44479551174594133680,
      0.43676153089171272468,   0.42869256140305418307,
      0.42058924967898141402,   0.41245224486964050867,
      0.40428219882430502219,   0.39607976603915682370,
      0.38784560360485490433,   0.37958037115389634378,
      0.37128473080777365207,   0.36295934712393271979,
      0.35460488704253562597,   0.34622201983303256841,
      0.33781141704054719644,   0.32937375243207964125,
      0.32090970194253155337,   0.31241994362055747121,
      0.30390515757424685847,   0.29536602591664116177,
      0.28680323271109025310,   0.27821746391645263455,
      0.26960940733214379529,   0.26097975254303712289,
      0.25232919086422178304,   0.24365841528562199292,
      0.23496812041648212485,   0.22625900242972208740,
      0.21753175900616744171,   0.20878708927865872053,
      0.20002569377604442753,   0.19124827436706220345,
      0.18245553420411265473,   0.17364817766693034885,
      0.16482691030615648899,   0.15599243878681778809,
      0.14714547083171607049,   0.13828671516473313590,
      0.12941688145405542762,   0.12053668025532305335,
      0.11164682295470771257,   0.10274802171192409085,
      0.093840989403179286089,  0.084926439564064837165,
      0.076005086332395929760,  0.067077644391002358527,
      0.058144828910475828539,  0.049207355491878182507,
      0.040265940109415143362,  0.031321299053080164563,
      0.022374148871272982889,  0.013425206313397470506,
      0.0044751882724433847330, -0.0044751882724433847330,
      -0.013425206313397470506, -0.022374148871272982889,
      -0.031321299053080164563, -0.040265940109415143362,
      -0.049207355491878182507, -0.058144828910475828539,
      -0.067077644391002358527, -0.076005086332395929760,
      -0.084926439564064837165, -0.093840989403179286089,
      -0.10274802171192409085,  -0.11164682295470771257,
      -0.12053668025532305335,  -0.12941688145405542762,
      -0.13828671516473313590,  -0.14714547083171607049,
      -0.15599243878681778809,  -0.16482691030615648899,
      -0.17364817766693034885,  -0.18245553420411265473,
      -0.19124827436706220345,  -0.20002569377604442753,
      -0.20878708927865872053,  -0.21753175900616744171,
      -0.22625900242972208740,  -0.23496812041648212485,
      -0.24365841528562199292,  -0.25232919086422178304,
      -0.26097975254303712289,  -0.26960940733214379529,
      -0.27821746391645263455,  -0.28680323271109025310,
      -0.29536602591664116177,  -0.30390515757424685847,
      -0.31241994362055747121,  -0.32090970194253155337,
      -0.32937375243207964125,  -0.33781141704054719644,
      -0.34622201983303256841,  -0.35460488704253562597,
      -0.36295934712393271979,  -0.37128473080777365207,
      -0.37958037115389634378,  -0.38784560360485490433,
      -0.39607976603915682370,  -0.40428219882430502219,
      -0.41245224486964050867,  -0.42058924967898141402,
      -0.42869256140305418307,  -0.43676153089171272468,
      -0.44479551174594133680,  -0.45279386036963724050,
      -0.46075593602116857487,  -0.46868110086470372237,
      -0.47656872002130785269,  -0.48441816161980259194,
      -0.49222879684738474271,  -0.50000000000000000000,
      -0.50773114853246762767,  -0.51542162310835207995,
      -0.52307080764957757271,  -0.53067808938578163014,
      -0.53824285890340365294,  -0.54576451019450457567,
      -0.55324244070531370238,  -0.56067605138449883141,
      -0.56806474673115580251,  -0.57540793484251362188,
      -0.58270502746135134347,  -0.58995544002312290803,
      -0.59715859170278616485,  -0.60431390546133232458,
      -0.61142080809201211588,  -0.61847873026625494260,
      -0.62548710657927736308,  -0.63244537559537723782,
      -0.63935297989290991701,  -0.64620936610894286504,
      -0.65301398498358514462,  -0.65976629140398820938,
      -0.66646574444801448003,  -0.67311180742757020586,
      -0.67970394793159914021,  -0.68624163786873358573,
      -0.69272435350959939260,  -0.69915157552877152088,
      -0.70552278904637680572,  -0.71183748366934059288,
      -0.71809515353227394016,  -0.72429529733799810945,
      -0.73043741839770310282,  -0.73652102467073702579,
      -0.74254562880402309013,  -0.74851074817110109863,
      -0.75441590491079028413,  -0.76026062596547040570,
      -0.76604444311897803520,  -0.77176689303411499846,
      -0.77742751728976596617,  -0.78302586241762222122,
      -0.78856147993850866039,  -0.79403392639831112033,
      -0.79944276340350114978,  -0.80478755765625538210,
      -0.81006788098916669466,  -0.81528331039954437462,
      -0.82043342808330054306,  -0.82551782146842012310,
      -0.83053608324801167057,  -0.83548781141293641965,
      -0.84037260928401292959,  -0.84519008554379475254,
      -0.84993985426791857693,  -0.85462153495602033503,
      -0.85923475256221679802,  -0.86377913752515021677,
      -0.86825432579759360151,  -0.87265995887561426852,
      -0.87699568382729331792,  -0.88126115332099874150,
      -0.88545602565320989590,  -0.88957996477589111210,
      -0.89363264032341224819,  -0.89761372763901402910,
      -0.90152290780081605286,  -0.90535986764736538023,
      -0.90912429980272366071,  -0.91281590270109078551,
      -0.91643438061096309467,  -0.91997944365882420313,
      -0.92345080785236654795,  -0.92684819510324179628,
      -0.93017133324933829172,  -0.93341995607658375426,
      -0.93659380334027148744,  -0.93969262078590838405,
      -0.94271616016958306043,  -0.94566417927785248759,
      -0.94853644194714552616,  -0.95133271808268181066,
      -0.95405278367690446749,  -0.95669642082742519022,
      -0.95926341775448023430,  -0.96175356881789593309,
      -0.96416667453356237592,  -0.96650254158941392861,
      -0.96876098286091531617,  -0.97094181742605202716,
      -0.97304487057982383883,  -0.97506997384824030199,
      -0.97701696500181706433,  -0.97888568806857195124,
      -0.98067599334651976275,  -0.98238773741566478587,
      -0.98402078314949006148,  -0.98557499972594248542,
      -0.98705026263791286379,  -0.98844645370321008287,
      -0.98976346107402859467,  -0.99100117924590845966,
      -0.99215950906618722891,  -0.99323835774194298855,
      -0.99423763884742793023,  -0.99515727233099185214,
      -0.99599718452149503591,  -0.99675730813420998559,
      -0.99743758227621155609,  -0.99803795245125503917,
      -0.99855837056414181616,  -0.99899879492457222781,
      -0.99935919025048535251,  -0.99963952767088542540,
      -0.99983978472815467189,  -0.99995994537985237039};
  std::array<double, 350> ref_wgt = {
      5.0699773911535116188E-7,    0.0000020278894191638644586,
      0.0000045623704467577924337, 0.0000081099332279304602227,
      0.000012669867260643934355,  0.000018241259264276386151,
      0.000024822993346065781863,  0.000032413751204479862357,
      0.000041012012369475711300,  0.000050616054479605553471,
      0.000061223953595918775390,  0.000072833584552603520005,
      0.000085442621344304576930,  0.000099048537550047670905,
      0.00011364860679369364491,   0.00012923990324083944195,
      0.00014581930213207621201,   0.00016338348035250830953,
      0.00018192891703743040251,   0.00020145189421405338941,
      0.00022194849747916331369,   0.00024341461671259098164,
      0.00026584594682636352582,   0.00028923798854940271713,
      0.00031358604924762841337,   0.00033888524377931914223,
      0.00036513049538557545388,   0.00039231653661572534296,
      0.00042043791028750473387,   0.00044948897048183974674,
      0.00047946388357205121696,   0.00051035662928729572851,
      0.00054216100181005124228,   0.00057487061090744925629,
      0.00060847888309624932578,   0.00064297906284124569953,
      0.00067836421378688979453,   0.00071462722002190623620,
      0.00075176078737667423634,   0.00078975744475314016742,
      0.00082860954548702131982,   0.00086830926874205500068,
      0.00090884862093604134881,   0.00095021943719842250154,
      0.00099241338285913505699,   0.0010354219549684671307,
      0.0010792364838476457088,    0.0011238481346698744532,
      0.0011692479090715366177,    0.0012154266467932722892,
      0.0012623750273506337741,    0.0013100835717340176137,
      0.0013585426441375664238,    0.0014077424537167285271,
      0.0014576730563741581721,    0.0015083243565736340169,
      0.0015596861091816684969,    0.0016117479213364756987,
      0.0016644992543439604207,    0.0017179294256003862242,
      0.0017720276105413754629,    0.0018267828446168895217,
      0.0018821840252918328090,    0.0019382199140719194163,
      0.0019948791385544368014,    0.0020521501945035363528,
      0.0021100214479496762667,    0.0021684811373128378058,
      0.0022275173755491317150,    0.0022871181523204073498,
      0.0023472713361864729124,    0.0024079646768195311146,
      0.0024691858072404305684,    0.0025309222460763292700,
      0.0025931613998393626722,    0.0026558905652259050493,
      0.0027190969314360091368,    0.0027827675825126053854,
      0.0028468894997000385979,    0.0029114495638215162260,
      0.0029764345576750391857,    0.0030418311684473827138,
      0.0031076259901456915231,    0.0031738055260462503362,
      0.0032403561911599877689,    0.0033072643147142685157,
      0.0033745161426505258429,    0.0034420978401372835338,
      0.0035099954940981136481,    0.0035781951157540737593,
      0.0036466826431801647147,    0.0037154439438753474296,
      0.0037844648173456547746,    0.0038537309976999322489,
      0.0039232281562577388456,    0.0039929419041689373196,
      0.0040628577950445009506,    0.0041329613275980618681,
      0.0042032379482977240585,    0.0042736730540276623191,
      0.0043442519947590266514,    0.0044149600762296699027,
      0.0044857825626322148647,    0.0045567046793099755313,
      0.0046277116154602457906,    0.0046987885268444674947,
      0.0047699205385047885994,    0.0048410927474865209117,
      0.0049122902255660059086,    0.0049834980219833961094,
      0.0050547011661798585926,    0.0051258846705387064413,
      0.0051970335331299631881,    0.0052681327404578647024,
      0.0053391672702108024295,    0.0054101220940132114395,
      0.0054809821801789063912,    0.0055517324964653682426,
      0.0056223580128284843672,    0.0056928437041772446408,
      0.0057631745531278960691,    0.0058333355527570586129,
      0.0059033117093533050511,    0.0059730880451667079908,
      0.0060426496011558574908,    0.0061119814397318532176,
      0.0061810686474987755886,    0.0062498963379901409859,
      0.0063184496544008468411,    0.0063867137723141131972,
      0.0064546739024229282487,    0.0065223152932455063458,
      0.0065896232338342680189,    0.0066565830564778527425,
      0.0067231801393956764061,    0.0067893999094245467948,
      0.0068552278446968518108,    0.0069206494773098366756,
      0.0069856503959854879536,    0.0070502162487205439254,
      0.0071143327454261526102,    0.0071779856605567005958,
      0.0072411608357273377833,    0.0073038441823197251795,
      0.0073660216840755349909,    0.0074276793996772344705,
      0.0074888034653156872570,    0.0075493800972441083132,
      0.0076093955943179110254,    0.0076688363405199875605,
      0.0077276888074709661987,    0.0077859395569239920580,
      0.0078435752432435804128,    0.0079005826158680946721,
      0.0079569485217554040276,    0.0080126599078112788086,
      0.0080677038233000846837,    0.0081220674222373400372,
      0.0081757379657637041059,    0.0082287028244999668075,
      0.0082809494808826146067,    0.0083324655314795502619,
      0.0083832386892855478648,    0.0084332567859970282335,
      0.0084825077742657434381,    0.0085309797299309630381,
      0.0085786608542297584728,    0.0086255394759849859953,
      0.0086716040537705725476,    0.0087168431780537130637,
      0.0087612455733135918415,    0.0088048001001362448501,
      0.0088474957572851841327,    0.0088893216837474098309,
      0.0089302671607544397817,    0.0089703216137779911420,
      0.0090094746144999530523,    0.0090477158827562939827,
      0.0090850352884545520971,    0.0091214228534645617244,
      0.0091568687534820738475,    0.0091913633198649333968,
      0.0092248970414414810799,    0.0092574605662908524769,
      0.0092890447034948521912,    0.0093196404248610859646,
      0.0093492388666170388397,    0.0093778313310747926825,
      0.0094054092882660816681,    0.0094319643775473896698,
      0.0094574884091747988887,    0.0094819733658483045055,
      0.0095054114042253156370,    0.0095277948564030684257,
      0.0095491162313696826912,    0.0095693682164235992164,
      0.0095885436785611404383,    0.0096066356658319430502,
      0.0096236374086620168106,    0.0096395423211441896820,
      0.0096543440022957052980,    0.0096680362372827446702,
      0.0096806129986116500059,    0.0096920684472866345007,
      0.0097023969339337680094,    0.0097115929998910345699,
      0.0097196513782642638649,    0.0097265669949487448547,
      0.0097323349696163359913,    0.0097369506166678926424,
      0.0097404094461508385961,    0.0097427071646417147983,
      0.0097438396760935447812,    0.0097438030826478625768,
      0.0097425936854112552768,    0.0097402079851962787890,
      0.0097366426832266117585,    0.0097318946818063190626,
      0.0097259610849531027530,    0.0097188391989954248054,
      0.0097105265331333925429,    0.0097010207999633041282,
      0.0096903199159657580650,    0.0096784220019572372088,
      0.0096653253835050843714,    0.0096510285913057931932,
      0.0096355303615265445673,    0.0096188296361099255193,
      0.0096009255630417740778,    0.0095818174965821003142,
      0.0095615049974590403802,    0.0095399878330258070295,
      0.0095172659773806067785,    0.0094933396114495005278,
      0.0094682091230321911454,    0.0094418751068107281863,
      0.0094143383643211266076,    0.0093855999038879030144,
      0.0093556609405215396551,    0.0093245228957788930598,
      0.0092921873975865708940,    0.0092586562800273072670,
      0.0092239315830893734014,    0.0091880155523790672305,
      0.0091509106387963321382,    0.0091126194981735617002,
      0.0090731449908776539167,    0.0090324901813753850456,
      0.0089906583377621797556,    0.0089476529312543609099,
      0.0089034776356449688716,    0.0088581363267232467849,
      0.0088116330816578948294,    0.0087639721783442029753,
      0.0087151580947151782709,    0.0086651955080167891825,
      0.0086140892940474559696,    0.0085618445263619225212,
      0.0085084664754396514915,    0.0084539606078178909715,
      0.0083983325851895672888,    0.0083415882634661648722,
      0.0082837336918057604199,    0.0082247751116063848916,
      0.0081647189554648930870,    0.0081035718461015267913,
      0.0080413405952503636452,    0.0079780322025158500458,
      0.0079136538541956224912,    0.0078482129220698278592,
      0.0077817169621571591421,    0.0077141737134378291587,
      0.0076455910965437107188,    0.0075759772124158776325,
      0.0075053403409297868280,    0.0074336889394883476733,
      0.0073610316415831303793,    0.0072873772553239711057,
      0.0072127347619372370817,    0.0071371133142330207008,
      0.0070605222350415371474,    0.0069829710156190056595,
      0.0069044693140233000310,    0.0068250269534596594035,
      0.0067446539205967557899,    0.0066633603638534201148,
      0.0065811565916563338414,    0.0064980530706689984858,
      0.0064140604239923004946,    0.0063291894293369940792,
      0.0062434510171684296576,    0.0061568562688238605592,
      0.0060694164146026655830,    0.0059811428318298298835,
      0.0058920470428930314742,    0.0058021407132536853946,
      0.0057114356494323022790,    0.0056199437969685226909,
      0.0055276772383561931536,    0.0054346481909538542984,
      0.0053408690048710159869,    0.0052463521608305986243,
      0.0051511102680079241717,    0.0050551560618466445972,
      0.0049585024018519996528,    0.0048611622693617999553,
      0.0047631487652955353571,    0.0046644751078820125388,
      0.0045651546303659296191,    0.0044652007786937993771,
      0.0043646271091796363984,    0.0042634472861508271046,
      0.0041616750795746051977,    0.0040593243626655585403,
      0.0039564091094745969156,    0.0038529433924598134480,
      0.0037489413800396757275,    0.0036444173341289858661,
      0.0035393856076580518178,    0.0034338606420755153195,
      0.0033278569648352847526,    0.0032213891868680240925,
      0.0031144720000376518920,    0.0030071201745833069474,
      0.0028993485565472399143,    0.0027911720651890926756,
      0.0026826056903870297167,    0.0025736644900261881309,
      0.0024643635873749151661,    0.0023547181684492644182,
      0.0022447434793662238995,    0.0021344548236861512336,
      0.0020238675597448931779,    0.0019129970979760685307,
      0.0018018588982239952529,    0.0016904684670477443203,
      0.0015788413550168044205,    0.0014669931539988431202,
      0.0013549394944400515536,    0.0012426960426385610167,
      0.0011302784980114211019,    0.0010177025903556301688,
      0.00090498407710371001544,   0.00079213874057431759907,
      0.00067918238521838754959,   0.00056613083486130002601,
      0.00045299992994156917577,   0.00033980552474654809312,
      0.00022656348464564670305,   0.00011328968332155944476};
  IntegratorXX::GaussChebyshev2<double, double> quad(350);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 350; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("400 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 400> ref_pts = {
      0.99996931127940742761,    0.99987724700122485364,
      0.99972381281612209751,    0.99950901814149683114,
      0.99923287616089656324,    0.99889540382320946684,
      0.99849662184162409995,    0.99803655469235808301,
      0.99751523061315581133,    0.99693268160155529454,
      0.99628894341292422961,    0.99558405555826542787,
      0.99481806130179173078,    0.99399100765827056321,
      0.99310294539013828733,    0.99215392900438453418,
      0.99114401674920670409,    0.99007327061043484141,
      0.98894175630772710283,    0.98774954329053605294,
      0.98649670473384603454,    0.98518331753368187536,
      0.98380946230238920680,    0.98237522336368668442,
      0.98088068874749041389,    0.97932595018451089996,
      0.97771110310062285017,    0.97603624661100817887,
      0.97430148351407257094,    0.97250692028513597871,
      0.97065266706989743925,    0.96873883767767461324,
      0.96676554957441846022,    0.96473292387550347916,
      0.96264108533829395662,    0.96049016235448667899,
      0.95828028694223057869,    0.95601159473802379796,
      0.95368422498838866770,    0.95129832054132511222,
      0.94885402783754300454,    0.94635149690147401034,
      0.94379088133206347218,    0.94117233829334289933,
      0.93849602850478364163,    0.93576211623143233960,
      0.93297076927382875622,    0.93012215895770660912,
      0.92721646012347803549,    0.92425385111550233494,
      0.92123451377113964907,    0.91815863340959024963,
      0.91502639882052012014,    0.91183800225247352934,
      0.90859363940107330742,    0.90529350939700954948,
      0.90193781479381748326,    0.89852676155544525149,
      0.89506055904361237177,    0.89153942000495964991,
      0.88796356055799133554,    0.88433320017981032131,
      0.88064856169264719990,    0.87690987125018400568,
      0.87311735832367348040,    0.86927125568785471486,
      0.86537179940666603107,    0.86141922881875598172,
      0.85741378652279335638,    0.85335571836257709601,
      0.84924527341194702959,    0.84508270395949635917,
      0.84086826549308683165,    0.83660221668416754747,
      0.83228481937189836905,    0.82791633854707890308,
      0.82349704233588404335,    0.81902720198340707220,
      0.81450709183701133079,    0.80993698932949147990,
      0.80531717496204538489,    0.80064793228705766999,
      0.79592954789069599842,    0.79116231137532114677,
      0.78634651534171195314,    0.78148245537110623003,
      0.77657043000705874431,    0.77161074073711737775,
      0.76660369197431859275,    0.76154959103850333917,
      0.75644874813745454878,    0.75130147634785737537,
      0.74610809159608334889,    0.74086891263879962319,
      0.73558426104340450739,    0.73025446116829048184,
      0.72487984014293590994,    0.71946072784782666784,
      0.71399745689420892429,    0.70849036260367431348,
      0.70293978298757875375,    0.69734605872629617546,
      0.69170953314830843140,    0.68603055220913267308,
      0.68030946447008748632,    0.67454662107689908942,
      0.66874237573814890699,    0.66289708470356384233,
      0.65701110674215058074,    0.65108480312017526592,
      0.64511853757898990096,    0.63911267631270683493,
      0.63306758794572270526,    0.62698364351009321552,
      0.62086121642276013725,    0.61470068246263193356,
      0.60850241974751941132,    0.60226680871092781742,
      0.59599423207870680370,    0.58968507484555969362,
      0.58333972425141349249,    0.57695856975765109166,
      0.57054200302320712534,    0.56409041788052894742,
      0.55760421031140420359,    0.55108377842265648244,
      0.54452952242171053734,    0.53794184459202857871,
      0.53132114926841914455,    0.52466784281222006446,
      0.51798233358635704054,    0.51126503193027937594,
      0.50451635013477438945,    0.49773670241666206193,
      0.49092650489337146781,    0.48408617555740055210,
      0.47721613425066082035,    0.47031680263870851652,
      0.46338860418486387000,    0.45643196412422000066,
      0.44944730943754307689,    0.44243506882506532875,
      0.43539567268017252468,    0.42832955306298752676,
      0.42123714367385154598,    0.41411887982670472498,
      0.40697519842236768237,    0.39980653792172565826,
      0.39261333831881690708,    0.38539604111382698936,
      0.37815508928599062007,    0.37089092726640273672,
      0.36360400091074045593,    0.35629475747189759283,
      0.34896364557253342290,    0.34161111517753737110,
      0.33423761756641131827,    0.32684360530557122012,
      0.31942953222056973859,    0.31199585336824159073,
      0.30454302500877332456,    0.29707150457769923633,
      0.28958175065782514790,    0.28207422295108176753,
      0.27454938225030936173,    0.26700769041097546973,
      0.25944961032282739674,    0.25187560588148122567,
      0.24428614195994909128,    0.23668168438010646418,
      0.22906269988410119610,    0.22142965610570608112,
      0.21378302154161669133,    0.20612326552269624842,
      0.19845085818516929624,    0.19076627044176594233,
      0.18306997395281843949,    0.17536244109731188156,
      0.16764414494389078995,    0.15991555922182337079,
      0.15217715829192522463,    0.14442941711744429337,
      0.13667281123490883142,    0.12890781672494019045,
      0.12113491018303220905,    0.11335456869029900079,
      0.10556726978419293625,    0.097773491429194616097,
      0.089973711987476634291,   0.082168410189542931982,
      0.074358065104845544149,   0.066543156112380542492,
      0.058724162871264979290,   0.050901565291296638158,
      0.043075843503498398660,   0.035247477830649022688,
      0.027416948757802171360,   0.019584736902795461901,
      0.011751322986751374579,   0.0039171878045718202840,
      -0.0039171878045718202840, -0.011751322986751374579,
      -0.019584736902795461901,  -0.027416948757802171360,
      -0.035247477830649022688,  -0.043075843503498398660,
      -0.050901565291296638158,  -0.058724162871264979290,
      -0.066543156112380542492,  -0.074358065104845544149,
      -0.082168410189542931982,  -0.089973711987476634291,
      -0.097773491429194616097,  -0.10556726978419293625,
      -0.11335456869029900079,   -0.12113491018303220905,
      -0.12890781672494019045,   -0.13667281123490883142,
      -0.14442941711744429337,   -0.15217715829192522463,
      -0.15991555922182337079,   -0.16764414494389078995,
      -0.17536244109731188156,   -0.18306997395281843949,
      -0.19076627044176594233,   -0.19845085818516929624,
      -0.20612326552269624842,   -0.21378302154161669133,
      -0.22142965610570608112,   -0.22906269988410119610,
      -0.23668168438010646418,   -0.24428614195994909128,
      -0.25187560588148122567,   -0.25944961032282739674,
      -0.26700769041097546973,   -0.27454938225030936173,
      -0.28207422295108176753,   -0.28958175065782514790,
      -0.29707150457769923633,   -0.30454302500877332456,
      -0.31199585336824159073,   -0.31942953222056973859,
      -0.32684360530557122012,   -0.33423761756641131827,
      -0.34161111517753737110,   -0.34896364557253342290,
      -0.35629475747189759283,   -0.36360400091074045593,
      -0.37089092726640273672,   -0.37815508928599062007,
      -0.38539604111382698936,   -0.39261333831881690708,
      -0.39980653792172565826,   -0.40697519842236768237,
      -0.41411887982670472498,   -0.42123714367385154598,
      -0.42832955306298752676,   -0.43539567268017252468,
      -0.44243506882506532875,   -0.44944730943754307689,
      -0.45643196412422000066,   -0.46338860418486387000,
      -0.47031680263870851652,   -0.47721613425066082035,
      -0.48408617555740055210,   -0.49092650489337146781,
      -0.49773670241666206193,   -0.50451635013477438945,
      -0.51126503193027937594,   -0.51798233358635704054,
      -0.52466784281222006446,   -0.53132114926841914455,
      -0.53794184459202857871,   -0.54452952242171053734,
      -0.55108377842265648244,   -0.55760421031140420359,
      -0.56409041788052894742,   -0.57054200302320712534,
      -0.57695856975765109166,   -0.58333972425141349249,
      -0.58968507484555969362,   -0.59599423207870680370,
      -0.60226680871092781742,   -0.60850241974751941132,
      -0.61470068246263193356,   -0.62086121642276013725,
      -0.62698364351009321552,   -0.63306758794572270526,
      -0.63911267631270683493,   -0.64511853757898990096,
      -0.65108480312017526592,   -0.65701110674215058074,
      -0.66289708470356384233,   -0.66874237573814890699,
      -0.67454662107689908942,   -0.68030946447008748632,
      -0.68603055220913267308,   -0.69170953314830843140,
      -0.69734605872629617546,   -0.70293978298757875375,
      -0.70849036260367431348,   -0.71399745689420892429,
      -0.71946072784782666784,   -0.72487984014293590994,
      -0.73025446116829048184,   -0.73558426104340450739,
      -0.74086891263879962319,   -0.74610809159608334889,
      -0.75130147634785737537,   -0.75644874813745454878,
      -0.76154959103850333917,   -0.76660369197431859275,
      -0.77161074073711737775,   -0.77657043000705874431,
      -0.78148245537110623003,   -0.78634651534171195314,
      -0.79116231137532114677,   -0.79592954789069599842,
      -0.80064793228705766999,   -0.80531717496204538489,
      -0.80993698932949147990,   -0.81450709183701133079,
      -0.81902720198340707220,   -0.82349704233588404335,
      -0.82791633854707890308,   -0.83228481937189836905,
      -0.83660221668416754747,   -0.84086826549308683165,
      -0.84508270395949635917,   -0.84924527341194702959,
      -0.85335571836257709601,   -0.85741378652279335638,
      -0.86141922881875598172,   -0.86537179940666603107,
      -0.86927125568785471486,   -0.87311735832367348040,
      -0.87690987125018400568,   -0.88064856169264719990,
      -0.88433320017981032131,   -0.88796356055799133554,
      -0.89153942000495964991,   -0.89506055904361237177,
      -0.89852676155544525149,   -0.90193781479381748326,
      -0.90529350939700954948,   -0.90859363940107330742,
      -0.91183800225247352934,   -0.91502639882052012014,
      -0.91815863340959024963,   -0.92123451377113964907,
      -0.92425385111550233494,   -0.92721646012347803549,
      -0.93012215895770660912,   -0.93297076927382875622,
      -0.93576211623143233960,   -0.93849602850478364163,
      -0.94117233829334289933,   -0.94379088133206347218,
      -0.94635149690147401034,   -0.94885402783754300454,
      -0.95129832054132511222,   -0.95368422498838866770,
      -0.95601159473802379796,   -0.95828028694223057869,
      -0.96049016235448667899,   -0.96264108533829395662,
      -0.96473292387550347916,   -0.96676554957441846022,
      -0.96873883767767461324,   -0.97065266706989743925,
      -0.97250692028513597871,   -0.97430148351407257094,
      -0.97603624661100817887,   -0.97771110310062285017,
      -0.97932595018451089996,   -0.98088068874749041389,
      -0.98237522336368668442,   -0.98380946230238920680,
      -0.98518331753368187536,   -0.98649670473384603454,
      -0.98774954329053605294,   -0.98894175630772710283,
      -0.99007327061043484141,   -0.99114401674920670409,
      -0.99215392900438453418,   -0.99310294539013828733,
      -0.99399100765827056321,   -0.99481806130179173078,
      -0.99558405555826542787,   -0.99628894341292422961,
      -0.99693268160155529454,   -0.99751523061315581133,
      -0.99803655469235808301,   -0.99849662184162409995,
      -0.99889540382320946684,   -0.99923287616089656324,
      -0.99950901814149683114,   -0.99972381281612209751,
      -0.99987724700122485364,   -0.99996931127940742761};
  std::array<double, 400> ref_wgt = {
      3.4001333425572520865E-7,    0.0000013600011644320339075,
      0.0000030598069800413310840, 0.0000054391699545533036710,
      0.0000084977249818149131512, 0.000012235002727031335052,
      0.000016650429692300796347,  0.000021743328296694249461,
      0.000027512916970868810481,  0.000033958310266201879667,
      0.000041078518978430854572,  0.000048872450285781340470,
      0.000057338907901564759464,  0.000066476592241224259014,
      0.000076284100603805822870,  0.000086759927367829492850,
      0.000097902464201533618822,  0.00010971000028746306688,
      0.00012218072256137033244,   0.00013531271596539652580,
      0.00014910396371549722346,   0.00016355234758307620861,
      0.00017865564819078815974,   0.00019441154532246938741,
      0.00021081761824715376516,   0.00022787134605712905360,
      0.00024557010801998687479,   0.00026391118394461765938,
      0.00028289175456109996066,   0.00030250890191443160842,
      0.00032275960977204826152,   0.00034364076404507301178,
      0.00036514915322323879279,   0.00038728146882342345710,
      0.00041003430585173550227,   0.00043340416327908655326,
      0.00045738744453018484298,   0.00048198045798588207751,
      0.00050717941749880422570,   0.00053298044292219493597,
      0.00055937956065189845622,   0.00058637270418140711553,
      0.00061395571466989661996,   0.00064212434152317061854,
      0.00067087424298743421053,   0.00070020098675581429071,
      0.00073010005058754286715,   0.00076056682293971773416,
      0.00079159660361155314439,   0.00082318460440103139633,
      0.00085532594977386453874,   0.00088801567754467369109,
      0.00092124873957029178930,   0.00095502000245509388965,
      0.00098932424826825750023,   0.0010241561752728537593,
      0.0010595103986666686437,    0.0010953814513346517687,
      0.0011317637846128887316,    0.0011686517690639913575,
      0.0012060396952637986290,    0.0012439217745992795131,
      0.0012822921400775273525,    0.0013211448471457339525,
      0.0013604738745220299788,    0.0014002731250370767726,
      0.0014405364264862932112,    0.0014812575324925997608,
      0.0015224301233795604240,    0.0015640478070548018363,
      0.0016061041199035873531,    0.0016485925276924225559,
      0.0016915064264825672262,    0.0017348391435533274594,
      0.0017785839383350002399,    0.0018227340033513414658,
      0.0018672824651714270893,    0.0019122223853707757438,
      0.0019575467615015999435,    0.0020032485280720516830,
      0.0020493205575343270140,    0.0020957556612814929565,
      0.0021425465906528988896,    0.0021896860379480333843,
      0.0022371666374486862675,    0.0022849809664492745596,
      0.0023331215462951897987,    0.0023815808434290231523,
      0.0024303512704445236296,    0.0024794251871481436345,
      0.0025287949016280250526,    0.0025784526713302780325,
      0.0026283907041424036137,    0.0026786011594837103661,
      0.0027290761494025742341,    0.0027798077396803898343,
      0.0028307879509420605290,    0.0028820087597728736903,
      0.0029334620998416066883,    0.0029851398630297082710,
      0.0030370339005663991670,    0.0030891360241695349160,
      0.0031414380071920731404,    0.0031939315857739866900,
      0.0032466084599994633414,    0.0032994602950592319979,
      0.0033524787224178546290,    0.0034056553409858224968,
      0.0034589817182962945550,    0.0035124493916863152586,
      0.0035660498694823484053,    0.0036197746321899630287,
      0.0036736151336875067896,    0.0037275628024236017572,
      0.0037816090426182969433,    0.0038357452354677114440,
      0.0038899627403520015612,    0.0039442528960464848123,
      0.0039986070219357533003,    0.0040530164192306085009,
      0.0041074723721876491311,    0.0041619661493313433959,
      0.0042164890046784165628,    0.0042710321789643844941,
      0.0043255869008720634678,    0.0043801443882618863402,
      0.0044346958494038548563,    0.0044892324842109576818,
      0.0045437454854738835287,    0.0045982260400968585641,
      0.0046526653303344371335,    0.0047070545350290747000,
      0.0047613848308493117849,    0.0048156473935283976136,
      0.0048698333991031821058,    0.0049239340251531048089,
      0.0049779404520391093597,    0.0050318438641423120675,
      0.0050856354511022532420,    0.0051393064090545599464,
      0.0051928479418678489347,    0.0052462512623796986355,
      0.0052995075936315191699,    0.0053526081701021495428,
      0.0054055442389400113186,    0.0054583070611936482926,
      0.0055108879130404818859,    0.0055632780870136122404,
      0.0056154688932264952550,    0.0056674516605953260971,
      0.0057192177380589600379,    0.0057707584957962017971,
      0.0058220653264402949453,    0.0058731296462904432965,
      0.0059239428965201966300,    0.0059744965443825335141,
      0.0060247820844114744553,    0.0060747910396200590767,
      0.0061245149626945215276,    0.0061739454371844988497,
      0.0062230740786891075708,    0.0062718925360387243667,
      0.0063203924924723072224,    0.0063685656668100941364,
      0.0064164038146215170517,    0.0064638987293881693510,
      0.0065110422436616659402,    0.0065578262302162356422,
      0.0066042426031958863531,    0.0066502833192559841584,
      0.0066959403786990883741,    0.0067412058266048852751,
      0.0067860717539540640779,    0.0068305302987459795884,
      0.0068745736471099467722,    0.0069181940344100133918,
      0.0069613837463430577458,    0.0070041351200300594700,
      0.0070464405451003922998,    0.0070882924647689886540,
      0.0071296833769062268846,    0.0071706058351003930387,
      0.0072110524497125700027,    0.0072510158889238079428,
      0.0072904888797744310209,    0.0073294642091953364467,
      0.0073679347250311430334,    0.0074058933370550475473,
      0.0074433330179752482829,    0.0074802468044327964619,
      0.0075166277979907372316,    0.0075524691661144032445,
      0.0075877641431427250156,    0.0076225060312504234970,
      0.0076566882014009515642,    0.0076903040942900523854,
      0.0077233472212798039386,    0.0077558111653230202535,
      0.0077876895818778812853,    0.0078189761998126646752,
      0.0078496648223004540169,    0.0078797493277036996316,
      0.0079092236704485092535,    0.0079380818818885474441,
      0.0079663180711584239870,    0.0079939264260164529642,
      0.0080209012136766656827,    0.0080472367816299621003,
      0.0080729275584542868994,    0.0080979680546137178706,
      0.0081223528632463557988,    0.0081460766609409065871,
      0.0081691342085018479152,    0.0081915203517030743047,
      0.0082132300220299160502,    0.0082342582374094290819,
      0.0082546001029288544424,    0.0082742508115421476914,
      0.0082932056447644802010,    0.0083114599733546159590,
      0.0083290092579850691756,    0.0083458490498999496706,
      0.0083619749915604047195,    0.0083773828172775677460,
      0.0083920683538329259745,    0.0084060275210860208902,
      0.0084192563325693971032,    0.0084317508960707169708,
      0.0084435074142019601060,    0.0084545221849556286790,
      0.0084647916022478812130,    0.0084743121564485193804,
      0.0084830804348977541153,    0.0084910931224096791892,
      0.0084983470017623822233,    0.0085048389541746249608,
      0.0085105659597690264732,    0.0085155250980216848360,
      0.0085197135481981746830,    0.0085231285897758599278,
      0.0085257676028524628267,    0.0085276280685408324578,
      0.0085287075693498575941,    0.0085290037895514708569,
      0.0085285145155336929619,    0.0085272376361396677901,
      0.0085251711429926409536,    0.0085223131308068364627,
      0.0085186617976841880504,    0.0085142154453968836580,
      0.0085089724796556835478,    0.0085029314103639744689,
      0.0084960908518575242716,    0.0084884495231299033399,
      0.0084800062480435411891,    0.0084707599555263885574,
      0.0084607096797541573076,    0.0084498545603181124454,
      0.0084381938423783925542,    0.0084257268768028369436,
      0.0084124531202912998097,    0.0083983721354854337066,
      0.0083834835910639266364,    0.0083677872618231790690,
      0.0083512830287434092168,    0.0083339708790401768961,
      0.0083158509062013183228,    0.0082969233100092862010,
      0.0082771883965488914803,    0.0082566465782004451680,
      0.0082352983736183006016,    0.0082131444076947986009,
      0.0081901854115096199307,    0.0081664222222645515235,
      0.0081418557832036749221,    0.0081164871435189874136,
      0.0080903174582414683396,    0.0080633479881176050727,
      0.0080355800994713951585,    0.0080070152640518431270,
      0.0079776550588659724778,    0.0079475011659973753436,
      0.0079165553724103243326,    0.0078848195697394730435,
      0.0078522957540651737348,    0.0078189860256744426155,
      0.0077848925888076052071,    0.0077500177513906561996,
      0.0077143639247533702001,    0.0076779336233332017358,
      0.0076407294643650148375,    0.0076027541675566844820,
      0.0075640105547506141267,    0.0075245015495712155090,
      0.0074842301770583988230,    0.0074431995632871233171,
      0.0074014129349730602787,    0.0073588736190644222906,
      0.0073155850423200145521,    0.0072715507308735659596,
      0.0072267743097843995358,    0.0071812595025745036823,
      0.0071350101307520676063,    0.0070880301133215461409,
      0.0070403234662803210397,    0.0069918943021020276727,
      0.0069427468292066178951,    0.0068928853514172316883,
      0.0068423142674039519951,    0.0067910380701145189806,
      0.0067390613461920817507,    0.0066863887753800673494,
      0.0066330251299142486342,    0.0065789752739020943953,
      0.0065242441626894868410,    0.0064688368422148933143,
      0.0064127584483510808382,    0.0063560142062344638055,
      0.0062986094295821768375,    0.0062405495199969665295,
      0.0061818399662599974822,    0.0061224863436116696862,
      0.0060624943130205459837,    0.0060018696204404899682,
      0.0059406180960561163167,    0.0058787456535166571557,
      0.0058162582891583496656,    0.0057531620812154517114,
      0.0056894631890199938571,    0.0056251678521903776754,
      0.0055602823898089318051,    0.0054948131995885387327,
      0.0054287667570284467816,    0.0053621496145593832883,
      0.0052949684006780864181,    0.0052272298190713745366,
      0.0051589406477298734956,    0.0050901077380515236205,
      0.0050207380139349895961,    0.0049508384708630978432,
      0.0048804161749764273528,    0.0048094782621371813058,
      0.0047380319369834681461,    0.0046660844719741221013,
      0.0045936432064241944468,    0.0045207155455312481022,
      0.0044473089593925894147,    0.0043734309820135722356,
      0.0042990892103071106300,    0.0042242913030845377730,
      0.0041490449800379497770,    0.0040733580207141743766,
      0.0039972382634805055458,    0.0039206936044823462669,
      0.0038437319965929027796,    0.0037663614483550747434,
      0.0036885900229156868175,    0.0036104258369522082238,
      0.0035318770595921078932,    0.0034529519113249938134,
      0.0033736586629076861915,    0.0032940056342623750204,
      0.0032140011933680135930,    0.0031336537551451004412,
      0.0030529717803340030905,    0.0029719637743669779113,
      0.0028906382862340412177,    0.0028090039073428476172,
      0.0027270692703727324353,    0.0026448430481230758517,
      0.0025623339523561471631,    0.0024795507326345883533,
      0.0023965021751536968886,    0.0023131971015686683763,
      0.0022296443678169604192,    0.0021458528629359396716,
      0.0020618315078759747559,    0.0019775892543091383236,
      0.0018931350834336821551,    0.0018084780047744497728,
      0.0017236270549793916043,    0.0016385912966123482703,
      0.0015533798169422680868,    0.0014680017267290253631,
      0.0013824661590060065483,    0.0012967822678596317209,
      0.0012109592272059793446,    0.0011250062295646826092,
      0.0010389324848302660527,    0.00095274721904109151717,
      0.00086645967314608281581,   0.00078007910176939880053,
      0.00069361477197322479806,   0.00060707596201885264601,
      0.00052047196012621979404,   0.00043381206323207814935,
      0.00034710557574696353351,   0.00026036180831113678580,
      0.00017359007654966768722,   0.000086799699826832998115};
  IntegratorXX::GaussChebyshev2<double, double> quad(400);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 400; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("450 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 450> ref_pts = {
      0.99997573865297447823,   0.99990295578912383192,
      0.99978165494006869585,   0.99961184199165305685,
      0.99939352518365865681,   0.99912671510940517622,
      0.99881142471523621783,   0.99844766929989111514,
      0.99803546651376259635,   0.99757483635804033975,
      0.99706580118374046214,   0.99650838569062098730,
      0.99590261692598334718,   0.99524852428335997395,
      0.99454613950108804668,   0.99379549666076946166,
      0.99299663218561710127,   0.99214958483868748157,
      0.99125439572099986438,   0.99031110826954192509,
      0.98931976825516207297,   0.98828042378034852632,
      0.98719312527689525019,   0.98605792550345486977,
      0.98487487954297867855,   0.98364404480004386501,
      0.98236548099806808799,   0.98103925017641153550,
      0.97966541668736660784,   0.97824404719303537101,
      0.97677521066209493194,   0.97525897836645089244,
      0.97369542387777904436,   0.97208462306395547367,
      0.97042665408537524669,   0.96872159739115985719,
      0.96696953571525361828,   0.96517055407240918850,
      0.96332473975406242705,   0.96143218232409677810,
      0.95949297361449738989,   0.95750720772089517944,
      0.95547498099800105902,   0.95339639205493054595,
      0.95127154175041898275,   0.94910053318792759947,
      0.94688347171064065611,   0.94462046489635390739,
      0.94231162255225463838,   0.93995705670959352392,
      0.93755688161824857047,   0.93511121374118140431,
      0.93262017174878617483,   0.93008387651313134733,
      0.92750245110209466461,   0.92487602077339156198,
      0.92220471296849732549,   0.91948865730646328819,
      0.91672798557762736456,   0.91392283173721922827,
      0.91107333189886044356,   0.90817962432795986560,
      0.90524184943500463040,   0.90226014976874705965,
      0.89923467000928781128,   0.89616555696105561114,
      0.89305295954568390668,   0.88989702879478478804,
      0.88669791784262052739,   0.88345578191867309193,
      0.88017077834011199125,   0.87684306650416082448,
      0.87347280788036289749,   0.87006016600274628572,
      0.86660530646188872255,   0.86310839689688269834,
      0.85956960698720116004,   0.85598910844446420605,
      0.85236707500410717580,   0.84870368241695053838,
      0.84499910844067198926,   0.84125353283118116886,
      0.83746713733389742155,   0.83364010567493101828,
      0.82977262355216827074,   0.82586487862626096961,
      0.82191706051152058423,   0.81792936076671766530,
      0.81390197288578689732,   0.80983509228843825157,
      0.80572891631067469534,   0.80158364419521691737,
      0.79739947708183553437,   0.79317661799759124736,
      0.78891527184698342180,   0.78461564540200756923,
      0.78027794729212221298,   0.77590238799412562482,
      0.77148917982194292363,   0.76703853691632403180,
      0.76255067523445298912,   0.75802581253946912842,
      0.75346416838990062138,   0.74886596412901090725,
      0.74423142287405852139,   0.73956076950547084478,
      0.73485423065593229989,   0.73011203469938752222,
      0.72533441173996004129,   0.72052159360078700864,
      0.71567381381277051468,   0.71079130760324604017,
      0.70587431188456859218,   0.70092306524261707838,
      0.69593780792521747745,   0.69091878183048536730,
      0.68586623049508837681,   0.68078039908242913065,
      0.67566153437074926046,   0.67050988474115505977,
      0.66532570016556536356,   0.66010923219458223729,
      0.65486073394528506406,   0.64958046008894862194,
      0.64426866683868574767,   0.63892561193701518617,
      0.63355155464335522910,   0.62814675572144374953,
      0.62271147742668524276,   0.61724598349342548764,
      0.61175053912215444558,   0.60622541096663801827,
      0.60067086712097928867,   0.59508717710660987276,
      0.58947461185921201366,   0.58383344371557205238,
      0.57816394640036591326,   0.57246639501287724525,
      0.56674106601364886357,   0.56098823721106813933,
      0.55520818774788698821,   0.54940119808767711203,
      0.54356755000122115073,   0.53770752655284040487,
      0.53182141208665979217,   0.52590949221281070453,
      0.51997205379357243502,   0.51400938492945284724,
      0.50802177494520896256,   0.50200951437580814341,
      0.49597289495233055399,   0.48991220958781358228,
      0.48382775236303891037,   0.47771981851226292267,
      0.47158870440889114440,   0.46543470755109740550,
      0.45925812654738842778,   0.45305926110211453570,
      0.44683841200092719386,   0.44059588109618407690,
      0.43433197129230237985,   0.42804698653106107978,
      0.42174123177685286189,   0.41541501300188642553,
      0.40906863717133988836,   0.40270241222846600894,
      0.39631664707964995044,   0.38991165157942031070,
      0.38348773651541414566,   0.37704521359329671599,
      0.37058439542163668842,   0.36410559549673752584,
      0.35760912818742580205,   0.35109530871979717939,
      0.34456445316192078934,   0.33801687840850275828,
      0.33145290216550962266,   0.32487284293475237956,
      0.31827701999843192075,   0.31166575340364660016,
      0.30503936394686268645,   0.29839817315834845420,
      0.29174250328657266910,   0.28507267728256822407,
      0.27838901878426168512,   0.27169185210076950723,
      0.26498150219666168233,   0.25825829467619358290,
      0.25152255576750676628,   0.24477461230679950639,
      0.23801479172246782088,   0.23124342201921776322,
      0.22446083176214975071,   0.21766735006081570065,
      0.21086330655324974824,   0.20404903138997332109,
      0.19722485521797534648,   0.19039110916466836871,
      0.18354812482182135490,   0.17669623422946996910,
      0.16983576985980509521,   0.16296706460104039055,
      0.15609045174125965296,   0.14920626495224478506,
      0.14231483827328514044,   0.13541650609496903747,
      0.12851160314295822705,   0.12160046446174610174,
      0.11468342539840043433,   0.10776082158629143466,
      0.10083298892880591428,   0.093900263583048349200,
      0.086962981943529631516,  0.080021480625844301522,
      0.073076096450337052176,  0.066127166425759298578,
      0.059175027732916605424,  0.052220017708307765941,
      0.045262473827756326164,  0.038302733690035348803,
      0.031341135000486211259,  0.024378015554632232670,
      0.017413713221787925081,  0.010448565928664664065,
      0.0034829116429735742965, -0.0034829116429735742965,
      -0.010448565928664664065, -0.017413713221787925081,
      -0.024378015554632232670, -0.031341135000486211259,
      -0.038302733690035348803, -0.045262473827756326164,
      -0.052220017708307765941, -0.059175027732916605424,
      -0.066127166425759298578, -0.073076096450337052176,
      -0.080021480625844301522, -0.086962981943529631516,
      -0.093900263583048349200, -0.10083298892880591428,
      -0.10776082158629143466,  -0.11468342539840043433,
      -0.12160046446174610174,  -0.12851160314295822705,
      -0.13541650609496903747,  -0.14231483827328514044,
      -0.14920626495224478506,  -0.15609045174125965296,
      -0.16296706460104039055,  -0.16983576985980509521,
      -0.17669623422946996910,  -0.18354812482182135490,
      -0.19039110916466836871,  -0.19722485521797534648,
      -0.20404903138997332109,  -0.21086330655324974824,
      -0.21766735006081570065,  -0.22446083176214975071,
      -0.23124342201921776322,  -0.23801479172246782088,
      -0.24477461230679950639,  -0.25152255576750676628,
      -0.25825829467619358290,  -0.26498150219666168233,
      -0.27169185210076950723,  -0.27838901878426168512,
      -0.28507267728256822407,  -0.29174250328657266910,
      -0.29839817315834845420,  -0.30503936394686268645,
      -0.31166575340364660016,  -0.31827701999843192075,
      -0.32487284293475237956,  -0.33145290216550962266,
      -0.33801687840850275828,  -0.34456445316192078934,
      -0.35109530871979717939,  -0.35760912818742580205,
      -0.36410559549673752584,  -0.37058439542163668842,
      -0.37704521359329671599,  -0.38348773651541414566,
      -0.38991165157942031070,  -0.39631664707964995044,
      -0.40270241222846600894,  -0.40906863717133988836,
      -0.41541501300188642553,  -0.42174123177685286189,
      -0.42804698653106107978,  -0.43433197129230237985,
      -0.44059588109618407690,  -0.44683841200092719386,
      -0.45305926110211453570,  -0.45925812654738842778,
      -0.46543470755109740550,  -0.47158870440889114440,
      -0.47771981851226292267,  -0.48382775236303891037,
      -0.48991220958781358228,  -0.49597289495233055399,
      -0.50200951437580814341,  -0.50802177494520896256,
      -0.51400938492945284724,  -0.51997205379357243502,
      -0.52590949221281070453,  -0.53182141208665979217,
      -0.53770752655284040487,  -0.54356755000122115073,
      -0.54940119808767711203,  -0.55520818774788698821,
      -0.56098823721106813933,  -0.56674106601364886357,
      -0.57246639501287724525,  -0.57816394640036591326,
      -0.58383344371557205238,  -0.58947461185921201366,
      -0.59508717710660987276,  -0.60067086712097928867,
      -0.60622541096663801827,  -0.61175053912215444558,
      -0.61724598349342548764,  -0.62271147742668524276,
      -0.62814675572144374953,  -0.63355155464335522910,
      -0.63892561193701518617,  -0.64426866683868574767,
      -0.64958046008894862194,  -0.65486073394528506406,
      -0.66010923219458223729,  -0.66532570016556536356,
      -0.67050988474115505977,  -0.67566153437074926046,
      -0.68078039908242913065,  -0.68586623049508837681,
      -0.69091878183048536730,  -0.69593780792521747745,
      -0.70092306524261707838,  -0.70587431188456859218,
      -0.71079130760324604017,  -0.71567381381277051468,
      -0.72052159360078700864,  -0.72533441173996004129,
      -0.73011203469938752222,  -0.73485423065593229989,
      -0.73956076950547084478,  -0.74423142287405852139,
      -0.74886596412901090725,  -0.75346416838990062138,
      -0.75802581253946912842,  -0.76255067523445298912,
      -0.76703853691632403180,  -0.77148917982194292363,
      -0.77590238799412562482,  -0.78027794729212221298,
      -0.78461564540200756923,  -0.78891527184698342180,
      -0.79317661799759124736,  -0.79739947708183553437,
      -0.80158364419521691737,  -0.80572891631067469534,
      -0.80983509228843825157,  -0.81390197288578689732,
      -0.81792936076671766530,  -0.82191706051152058423,
      -0.82586487862626096961,  -0.82977262355216827074,
      -0.83364010567493101828,  -0.83746713733389742155,
      -0.84125353283118116886,  -0.84499910844067198926,
      -0.84870368241695053838,  -0.85236707500410717580,
      -0.85598910844446420605,  -0.85956960698720116004,
      -0.86310839689688269834,  -0.86660530646188872255,
      -0.87006016600274628572,  -0.87347280788036289749,
      -0.87684306650416082448,  -0.88017077834011199125,
      -0.88345578191867309193,  -0.88669791784262052739,
      -0.88989702879478478804,  -0.89305295954568390668,
      -0.89616555696105561114,  -0.89923467000928781128,
      -0.90226014976874705965,  -0.90524184943500463040,
      -0.90817962432795986560,  -0.91107333189886044356,
      -0.91392283173721922827,  -0.91672798557762736456,
      -0.91948865730646328819,  -0.92220471296849732549,
      -0.92487602077339156198,  -0.92750245110209466461,
      -0.93008387651313134733,  -0.93262017174878617483,
      -0.93511121374118140431,  -0.93755688161824857047,
      -0.93995705670959352392,  -0.94231162255225463838,
      -0.94462046489635390739,  -0.94688347171064065611,
      -0.94910053318792759947,  -0.95127154175041898275,
      -0.95339639205493054595,  -0.95547498099800105902,
      -0.95750720772089517944,  -0.95949297361449738989,
      -0.96143218232409677810,  -0.96332473975406242705,
      -0.96517055407240918850,  -0.96696953571525361828,
      -0.96872159739115985719,  -0.97042665408537524669,
      -0.97208462306395547367,  -0.97369542387777904436,
      -0.97525897836645089244,  -0.97677521066209493194,
      -0.97824404719303537101,  -0.97966541668736660784,
      -0.98103925017641153550,  -0.98236548099806808799,
      -0.98364404480004386501,  -0.98487487954297867855,
      -0.98605792550345486977,  -0.98719312527689525019,
      -0.98828042378034852632,  -0.98931976825516207297,
      -0.99031110826954192509,  -0.99125439572099986438,
      -0.99214958483868748157,  -0.99299663218561710127,
      -0.99379549666076946166,  -0.99454613950108804668,
      -0.99524852428335997395,  -0.99590261692598334718,
      -0.99650838569062098730,  -0.99706580118374046214,
      -0.99757483635804033975,  -0.99803546651376259635,
      -0.99844766929989111514,  -0.99881142471523621783,
      -0.99912671510940517622,  -0.99939352518365865681,
      -0.99961184199165305685,  -0.99978165494006869585,
      -0.99990295578912383192,  -0.99997573865297447823};
  std::array<double, 450> ref_wgt = {
      2.3900148773797877808E-7,    9.5597695858484174823E-7,
      0.0000021508394386397953300, 0.0000038234439820692554273,
      0.0000059735876871072308508, 0.0000086010097184534114809,
      0.000011705391336066512860,  0.000015286355930349729846,
      0.000019343469063724453249,  0.000023876238518587705070,
      0.000028884114351648050158,  0.000034366488954634044904,
      0.000040322697121368586969,  0.000046752016121201834219,
      0.000053653665778794665992,  0.000061026808560243965620,
      0.000068870549665540309921,  0.000077183937127347959190,
      0.000085965961916096350102,  0.000095215558051371604036,
      0.00010493160271959587469,   0.00011511291639798167151,
      0.00012575826298474760944,   0.00013686634993558135138,
      0.00014843582840633482626,   0.00016046529340193612511,
      0.00017295328393150179723,   0.00018589828316963259135,
      0.00019929871862387501039,   0.00021315296230833037460,
      0.00022745933092339241567,   0.00024221608604159375481,
      0.00025742143429954094957,   0.00027307352759591712889,
      0.00028917046329553057266,   0.00030571028443938693068,
      0.00032269097996076211818,   0.00034011048490725226826,
      0.00035796668066877646896,   0.00037625739521150736127,
      0.00039498040331770402699,   0.00041413342683142094957,
      0.00043371413491006618903,   0.00045372014428178127255,
      0.00047414901950861466578,   0.00049499827325546005673,
      0.00051626536656473005370,   0.00053794770913673527188,
      0.00056004265961573815938,   0.00058254752588165029306,
      0.00060545956534734125776,   0.00062877598526152660874,
      0.00065249394301720180743,   0.00067661054646558841424,
      0.00070112285423555821931,   0.00072602787605850039359,
      0.00075132257309859614715,   0.00077700385828846479064,
      0.00080306859667014450857,   0.00082951360574137056969,
      0.00085633565580711312062,   0.00088353147033633613393,
      0.00091109772632393851084,   0.00093903105465783777220,
      0.00096732804049115620921,   0.00099598522361946880721,
      0.0010249990988630717027,    0.0010543661164542293847,
      0.0010840826824293583066,    0.0011141451590261040368,
      0.0011445498650852685378,    0.0011752930764575436375,
      0.0012063710264150062269,    0.0012377799060673302009,
      0.0012695158647826696399,    0.0013015750106131672231,
      0.0013339534107250413540,    0.0013666470918332049823,
      0.0013996520406403686072,    0.0014329642042805794597,
      0.0014665794907671483737,    0.0015004937694449153779,
      0.0015347028714468045649,    0.0015692025901546183251,
      0.0016039886816640205698,    0.0016390568652536581081,
      0.0016744028238583688923,    0.0017100222045464253970,
      0.0017459106190007609572,    0.0017820636440041264536,
      0.0018184768219281243061,    0.0018551456612260663093,
      0.0018920656369296014268,    0.0019292321911490592498,
      0.0019666407335774544170,    0.0020042866419980968938,
      0.0020421652627957526135,    0.0020802719114712985955,
      0.0021186018731598162724,    0.0021571504031520663821,
      0.0021959127274192884113,    0.0022348840431412672127,
      0.0022740595192376090601,    0.0023134342969021690562,
      0.0023530034901405714611,    0.0023927621863107641715,
      0.0024327054466665482503,    0.0024728283069040230773,
      0.0025131257777108873766,    0.0025535928453185360602,
      0.0025942244720568925229,    0.0026350155969119157253,
      0.0026759611360857211057,    0.0027170559835592540791,
      0.0027582950116574545990,    0.0027996730716168509873,
      0.0028411849941555209707,    0.0028828255900453576013,
      0.0029245896506865774898,    0.0029664719486844085313,
      0.0030084672384278940664,    0.0030505702566707501877,
      0.0030927757231142126781,    0.0031350783409918098477,
      0.0031774727976559973260,    0.0032199537651665906616,
      0.0032625159008809313863,    0.0033051538480457220061,
      0.0033478622363904652049,    0.0033906356827224423645,
      0.0034334687915231663403,    0.0034763561555462432683,
      0.0035192923564165780241,    0.0035622719652308578084,
      0.0036052895431592481927,    0.0036483396420482358252,
      0.0036914168050245518710,    0.0037345155671001101438,
      0.0037776304557778937721,    0.0038207559916587241393,
      0.0038638866890488457424,    0.0039070170565682605204,
      0.0039501415977597451236,    0.0039932548116984845191,
      0.0040363511936022552588,    0.0040794252354420916768,
      0.0041224714265533682290,    0.0041654842542472311407,
      0.0042084582044223124910,    0.0042513877621766598295,
      0.0042942674124198143977,    0.0043370916404849710089,
      0.0043798549327411526334,    0.0044225517772053327306,
      0.0044651766641544383770,    0.0045077240867371672489,
      0.0045501885415855515407,    0.0045925645294262019254,
      0.0046348465556911646970,    0.0046770291311283252786,
      0.0047191067724112913263,    0.0047610740027486887164,
      0.0048029253524928037669,    0.0048446553597475051140,
      0.0048862585709753787429,    0.0049277295416040097577,
      0.0049690628366313445660,    0.0050102530312300672570,
      0.0050512947113509240528,    0.0050921824743249298349,
      0.0051329109294643908605,    0.0051734746986626779192,
      0.0052138684169926843108,    0.0052540867333039031723,
      0.0052941243108180588279,    0.0053339758277232269974,
      0.0053736359777663788583,    0.0054130994708442841322,
      0.0054523610335927085413,    0.0054914154099738411689,
      0.0055302573618618874484,    0.0055688816696267637063,
      0.0056072831327158293905,    0.0056454565702335933286,
      0.0056833968215193305818,    0.0057210987467225466883,
      0.0057585572273762263215,    0.0057957671669678036337,
      0.0058327234915077918001,    0.0058694211500960095355,
      0.0059058551154853426160,    0.0059420203846429787083,
      0.0059779119793090540821,    0.0060135249465526510647,
      0.0060488543593250853855,    0.0060838953170104228516,
      0.0061186429459731650996,    0.0061530924001030444758,
      0.0061872388613568684121,    0.0062210775402973539874,
      0.0062546036766288936904,    0.0062878125397301937357,
      0.0063206994291837266252,    0.0063532596753019399939,
      0.0063854886396501641328,    0.0064173817155661609421,
      0.0064489343286762574317,    0.0064801419374080072612,
      0.0065110000334993241880,    0.0065415041425040316770,
      0.0065716498242937733166,    0.0066014326735562290818,
      0.0066308483202895828882,    0.0066598924302931872887,
      0.0066885607056543715805,    0.0067168488852313400098,
      0.0067447527451321071856,    0.0067722680991894182519,
      0.0067993907994316017976,    0.0068261167365493039332,
      0.0068524418403580524100,    0.0068783620802566001100,
      0.0069038734656809977003,    0.0069289720465543457055,
      0.0069536539137321767265,    0.0069779151994434190093,
      0.0070017520777268930497,    0.0070251607648632934059,
      0.0070481375198026083845,    0.0070706786445869307614,
      0.0070927804847686132043,    0.0071144394298237225676,
      0.0071356519135607477457,    0.0071564144145245162882,
      0.0071767234563952755015,    0.0071965756083828942894,
      0.0072159674856161425191,    0.0072348957495270052320,
      0.0072533571082299895639,    0.0072713483168963827841,
      0.0072888661781234204114,    0.0073059075422983239242,
      0.0073224693079571681384,    0.0073385484221385388903,
      0.0073541418807319422335,    0.0073692467288209269265,
      0.0073838600610208825688,    0.0073979790218114763197,
      0.0074116008058636917235,    0.0074247226583614337483,
      0.0074373418753176647435,    0.0074494558038850366136,
      0.0074610618426609851084,    0.0074721574419872527326,
      0.0074827401042438073870,    0.0074928073841371244633,
      0.0075023568889828007288,    0.0075113862789824689593,
      0.0075198932674949828947,    0.0075278756213018427215,
      0.0075353311608668319122,    0.0075422577605898368837,
      0.0075486533490548215710,    0.0075545159092719296513,
      0.0075598434789136877923,    0.0075646341505452839435,
      0.0075688860718488953359,    0.0075725974458420415023,
      0.0075757665310899382850,    0.0075783916419118294505,
      0.0075804711485812731888,    0.0075820034775203614322,
      0.0075829871114878505941,    0.0075834205897611829883,
      0.0075833025083123788601,    0.0075826315199777796242,
      0.0075814063346216235811,    0.0075796257192934360499,
      0.0075772884983792165376,    0.0075743935537464062344,
      0.0075709398248826198083,    0.0075669263090281261506,
      0.0075623520613020634059,    0.0075572161948223743038,
      0.0075515178808194484950,    0.0075452563487434592812,
      0.0075384308863653828144,    0.0075310408398716885338,
      0.0075230856139526902958,    0.0075145646718845483452,
      0.0075054775356049129701,    0.0074958237857822013732,
      0.0074856030618784999908,    0.0074748150622060851839,
      0.0074634595439775559214,    0.0074515363233495727756,
      0.0074390452754601982435,    0.0074259863344598341099,
      0.0074123594935357522631,    0.0073981648049302160756,
      0.0073834023799521901603,    0.0073680723889826370121,
      0.0073521750614733997465,    0.0073357106859396708426,
      0.0073186796099460475028,    0.0073010822400861749368,
      0.0072829190419559795801,    0.0072641905401204949545,
      0.0072448973180742835794,    0.0072250400181954590393,
      0.0072046193416933130123,    0.0071836360485495527629,
      0.0071620909574531552965,    0.0071399849457288450752,
      0.0071173189492592028828,    0.0070940939624004141289,
      0.0070703110378916655711,    0.0070459712867582001302,
      0.0070210758782080401628,    0.0069956260395223902503,
      0.0069696230559397312481,    0.0069430682705336180314,
      0.0069159630840841940591,    0.0068883089549434365624,
      0.0068601073988941468505,    0.0068313599890027009069,
      0.0068020683554655761305,    0.0067722341854496707568,
      0.0067418592229264331693,    0.0067109452684998189882,
      0.0066794941792280944969,    0.0066475078684395056370,
      0.0066149883055418324742,    0.0065819375158258497025,
      0.0065483575802627144197,    0.0065142506352953030711,
      0.0064796188726235201165,    0.0064444645389836016351,
      0.0064087899359214377368,    0.0063725974195599383029,
      0.0063358894003604672273,    0.0062986683428783709766,
      0.0062609367655126279348,    0.0062226972402496456353,
      0.0061839523924012336253,    0.0061447049003367803420,
      0.0061049574952096630106,    0.0060647129606779202077,
      0.0060239741326192173551,    0.0059827438988401360340,
      0.0059410251987798186309,    0.0058988210232080004372,
      0.0058561344139174619431,    0.0058129684634109346705,
      0.0057693263145824944972,    0.0057252111603934770267,
      0.0056806262435429501523,    0.0056355748561327795639,
      0.0055900603393273235288,    0.0055440860830077938716,
      0.0054976555254213206529,    0.0054507721528247586301,
      0.0054034394991232741546,    0.0053556611455037517301,
      0.0053074407200630600212,    0.0052587818974312176645,
      0.0052096883983894997876,    0.0051601639894835266977,
      0.0051102124826313767445,    0.0050598377347267659099,
      0.0050090436472373372105,    0.0049578341657981035361,
      0.0049062132798000880762,    0.0048541850219742070064,
      0.0048017534679704396323,    0.0047489227359323316967,
      0.0046956969860668780698,    0.0046420804202098315421,
      0.0045880772813864849440,    0.0045336918533679743039,
      0.0044789284602231512511,    0.0044237914658660733501,
      0.0043682852735991615310,    0.0043124143256520742558,
      0.0042561831027163485250,    0.0041995961234758582937,
      0.0041426579441331413199,    0.0040853731579316459214,
      0.0040277463946739495606,    0.0039697823202360016175,
      0.0039114856360774431451,    0.0038528610787480568283,
      0.0037939134193904007909,    0.0037346474632386803112,
      0.0036750680491139119177,    0.0036151800489154347404,
      0.0035549883671088243920,    0.0034944979402102650467,
      0.0034337137362674357687,    0.0033726407543369675260,
      0.0033112840239585276968,    0.0032496486046255892443,
      0.0031877395852529420987,    0.0031255620836410046395,
      0.0030631212459369935206,    0.0030004222460930104247,
      0.0029374702853211046670,    0.0028742705915453709035,
      0.0028108284188511415155,    0.0027471490469313335664,
      0.0026832377805300105321,    0.0026190999488832193126,
      0.0025547409051571633292,    0.0024901660258837728028,
      0.0024253807103937335921,    0.0023603903802470362482,
      0.0022952004786611072137,    0.0022298164699365843561,
      0.0021642438388807992845,    0.0020984880902290291477,
      0.0020325547480635808556,    0.0019664493552307709019,
      0.0019001774727558641968,    0.0018337446792560355398,
      0.0017671565703514175792,    0.0017004187580742993144,
      0.0016335368702765393969,    0.0015665165500352586836,
      0.0014993634550568766801,    0.0014320832570795566970,
      0.0013646816412741247116,    0.0012971643056435270958,
      0.0012295369604208925322,    0.0011618053274662635878,
      0.0010939751396620635669,    0.0010260521403073643949,
      0.00095804208251102142308,   0.00088995072858374116246,
      0.00082178384942914807357,   0.00075354722393391664953,
      0.00068524663835703512833,   0.00061688788571826726898,
      0.00054847676518587870981,   0.00048001908146369451092,
      0.00041152064417755455340,   0.00034298726726123353555,
      0.00027442476834189236069,   0.00020583896812512777055,
      0.00013723568977968711077,   0.000068620758321915163648};
  IntegratorXX::GaussChebyshev2<double, double> quad(450);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 450; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("500 point GaussChebyshev2", "[1d-quad]") {
  std::array<double, 500> ref_pts = {
      0.99998033957621498535,    0.99992135907792446822,
      0.99982306082429163149,    0.99968544868048712265,
      0.99950852805753707204,    0.99929230591211032666,
      0.99903679074624490810,    0.99874199260701370519,
      0.99840792308612941457,    0.99803459531948874472,
      0.99762202398665590138,    0.99717022531028537463,
      0.99667921705548405037,    0.99614901852911267129,
      0.99557965057902667467,    0.99497113559325643712,
      0.99432349749912695818,    0.99363676176231701766,
      0.99291095538585784356,    0.99214610690907132998,
      0.99134224640644784681,    0.99049940548646368529,
      0.98961761729033818589,    0.98869691649073059751,
      0.98773733929037671913,    0.98673892342066537753,
      0.98570170814015479714,    0.98462573423302892021,
      0.98351104400749373818,    0.98235768129411369711,
      0.98116569144408824278,    0.97993512132746857305,
      0.97866601933131466776,    0.97735843535779266851,
      0.97601242082221268316,    0.97462802865100709229,
      0.97320531327964943703,    0.97174433065051397006,
      0.97024513821067595408,    0.96870779490965279411,
      0.96713236119708609248,    0.96551889902036471770,
      0.96386747182218898066,    0.96217814453807601382,
      0.96045098359380645167,    0.95868605690281251274,
      0.95688343386350758590,    0.95504318535655742586,
      0.95316538374209306539,    0.95125010285686555360,
      0.94929741801134263231,    0.94730740598674746463,
      0.94528014503203953219,    0.94321571486083781974,
      0.94111419664828640807,    0.93897567302786259855,
      0.93680022808812769477,    0.93458794736942056905,
      0.93233891786049414378,    0.93005322799509491995,
      0.92773096764848568730,    0.92537222813391155275,
      0.92297710219900942629,    0.92054568402216110523,
      0.91807806920879010042,    0.91557435478760234997,
      0.91303463920677096827,    0.91045902233006518045,
      0.90784760543292359423,    0.90520049119847196392,
      0.90251778371348560285,    0.89979958846429660313,
      0.89704601233264602373,    0.89425716359148120972,
      0.89143315190069840833,    0.88857408830283084881,
      0.88568008521868245592,    0.88275125644290736866,
      0.87978771713953543799,    0.87678958383744387961,
      0.87375697442577525966,    0.87069000814930199383,
      0.86758880560373754172,    0.86445348873099448126,
      0.86128418081438964934,    0.85808100647379653725,
      0.85484409166074513168,    0.85157356365346939380,
      0.84826955105190257120,    0.84493218377262053956,
      0.84156159304373337273,    0.83815791139972534223,
      0.83472127267624354901,    0.83125181200483539236,
      0.82774966580763508292,    0.82421497179199940877,
      0.82064786894509296542,    0.81704849752842306268,
      0.81341699907232452337,    0.80975351637039459051,
      0.80605819347387816215,    0.80233117568600357425,
      0.79857260955626915460,    0.79478264287468077237,
      0.79096142466594060978,    0.78710910518358738453,
      0.78322583590408825329,    0.77931176952088262861,
      0.77536705993837814350,    0.77139186226589899966,
      0.76738633281158693737,    0.76335062907625506689,
      0.75928490974719480302,    0.75518933469193614624,
      0.75106406495196155601,    0.74690926273637366311,
      0.74272509141551707030,    0.73851171551455449187,
      0.73426930070699748480,    0.72999801380819202588,
      0.72569802276875919090,    0.72136949666799119388,
      0.71701260570720304603,    0.71262752120304009573,
      0.70821441558074171287,    0.70377346236736138228,
      0.69930483618494347292,    0.69480871274365695109,
      0.69028526883488630766,    0.68573468232427997097,
      0.68115713214475647880,    0.67655279828946868435,
      0.67192186180472627293,    0.66726450478287686758,
      0.66258091035514600365,    0.65787126268443625377,
      0.65313574695808578646,    0.64837454938058664305,
      0.64358785716626301915,    0.63877585853190983883,
      0.63393874268939191069,    0.62907669983820395695,
      0.62418992115799180811,    0.61927859880103505727,
      0.61434292588469146961,    0.60938309648380344419,
      0.60439930562306682667,    0.59939174926936237299,
      0.59436062432405016550,    0.58930612861522728458,
      0.58422846088994904023,    0.57912782080641406937,
      0.57400440892611360626,    0.56885842670594523468,
      0.56369007649029143194,    0.55849956150306321629,
      0.55328708583970921049,    0.54805285445919043577,
      0.54279707317592115178,    0.53751994865167605935,
      0.53222168838746418438,    0.52690250071536976231,
      0.52156259479036044393,    0.51620218058206314484,
      0.51082146886650786170,    0.50542067121783978013,
      0.50000000000000000000,    0.49455966835837520522,
      0.48909989021141660652,    0.48362088024222848665,
      0.47812285389012667872,    0.47260602734216730973,
      0.46707061752464614227,    0.46151684209456884876,
      0.45594491943109255342,    0.45035506862693897880,
      0.44474750947977953423,    0.43912246248359268509,
      0.43348014881999394269,    0.42782079034953881569,
      0.42214460960299906502,    0.41645182977261260530,
      0.41074267470330739689,    0.40501736888389967360,
      0.39927613743826685216,    0.39351920611649547056,
      0.38774680128600450331,    0.38195914992264440263,
      0.37615647960177221568,    0.37033901848930312862,
      0.36450699533273878940,    0.35866063945217276218,
      0.35280018073127346684,    0.34692584960824495831,
      0.34103787706676590107,    0.33513649462690709514,
      0.32922193433602791065,    0.32329442875965198901,
      0.31735421097232256940,    0.31140151454843780018,
      0.30543657355306639557,    0.29945962253274399880,
      0.29347089650625061349,    0.28747063095536946606,
      0.28145906181562766240,    0.27543642546701900299,
      0.26940295872470932119,    0.26335889882972471020,
      0.25730448343962300484,    0.25123995061914888493,
      0.24516553883087296778,    0.23908148692581525778,
      0.23298803413405332185,    0.22688542005531556002,
      0.22077388464955994106,    0.21465366822753857352,
      0.20852501144134848330,    0.20238815527496896919,
      0.19624334103478590862,    0.19009081034010338595,
      0.18393080511364301672,    0.17776356757203134118,
      0.17158934021627566118,    0.16540836582222869511,
      0.15922088743104242555,    0.15302714833961151517,
      0.14682739209100666667,    0.14062186246489830276,
      0.13441080346797094297,    0.12819445932432865393,
      0.12197307446589195063,    0.11574689352278652617,
      0.10951616131372418781,    0.10328112283637637776,
      0.097042023257740657082,   0.090799107904500531546,
      0.084552622253378998502,   0.078302811921486194075,
      0.072049922656661520217,   0.065794200327810631371,
      0.059535890915237660711,   0.053275240500973066100,
      0.047012495259097476075,   0.040747901446061916353,
      0.034481705391004797455,   0.028214153486066044199,
      0.021945492176698747929,   0.015675967951978722418,
      0.0094058273349123444868,  0.0031353168727430604525,
      -0.0031353168727430604525, -0.0094058273349123444868,
      -0.015675967951978722418,  -0.021945492176698747929,
      -0.028214153486066044199,  -0.034481705391004797455,
      -0.040747901446061916353,  -0.047012495259097476075,
      -0.053275240500973066100,  -0.059535890915237660711,
      -0.065794200327810631371,  -0.072049922656661520217,
      -0.078302811921486194075,  -0.084552622253378998502,
      -0.090799107904500531546,  -0.097042023257740657082,
      -0.10328112283637637776,   -0.10951616131372418781,
      -0.11574689352278652617,   -0.12197307446589195063,
      -0.12819445932432865393,   -0.13441080346797094297,
      -0.14062186246489830276,   -0.14682739209100666667,
      -0.15302714833961151517,   -0.15922088743104242555,
      -0.16540836582222869511,   -0.17158934021627566118,
      -0.17776356757203134118,   -0.18393080511364301672,
      -0.19009081034010338595,   -0.19624334103478590862,
      -0.20238815527496896919,   -0.20852501144134848330,
      -0.21465366822753857352,   -0.22077388464955994106,
      -0.22688542005531556002,   -0.23298803413405332185,
      -0.23908148692581525778,   -0.24516553883087296778,
      -0.25123995061914888493,   -0.25730448343962300484,
      -0.26335889882972471020,   -0.26940295872470932119,
      -0.27543642546701900299,   -0.28145906181562766240,
      -0.28747063095536946606,   -0.29347089650625061349,
      -0.29945962253274399880,   -0.30543657355306639557,
      -0.31140151454843780018,   -0.31735421097232256940,
      -0.32329442875965198901,   -0.32922193433602791065,
      -0.33513649462690709514,   -0.34103787706676590107,
      -0.34692584960824495831,   -0.35280018073127346684,
      -0.35866063945217276218,   -0.36450699533273878940,
      -0.37033901848930312862,   -0.37615647960177221568,
      -0.38195914992264440263,   -0.38774680128600450331,
      -0.39351920611649547056,   -0.39927613743826685216,
      -0.40501736888389967360,   -0.41074267470330739689,
      -0.41645182977261260530,   -0.42214460960299906502,
      -0.42782079034953881569,   -0.43348014881999394269,
      -0.43912246248359268509,   -0.44474750947977953423,
      -0.45035506862693897880,   -0.45594491943109255342,
      -0.46151684209456884876,   -0.46707061752464614227,
      -0.47260602734216730973,   -0.47812285389012667872,
      -0.48362088024222848665,   -0.48909989021141660652,
      -0.49455966835837520522,   -0.50000000000000000000,
      -0.50542067121783978013,   -0.51082146886650786170,
      -0.51620218058206314484,   -0.52156259479036044393,
      -0.52690250071536976231,   -0.53222168838746418438,
      -0.53751994865167605935,   -0.54279707317592115178,
      -0.54805285445919043577,   -0.55328708583970921049,
      -0.55849956150306321629,   -0.56369007649029143194,
      -0.56885842670594523468,   -0.57400440892611360626,
      -0.57912782080641406937,   -0.58422846088994904023,
      -0.58930612861522728458,   -0.59436062432405016550,
      -0.59939174926936237299,   -0.60439930562306682667,
      -0.60938309648380344419,   -0.61434292588469146961,
      -0.61927859880103505727,   -0.62418992115799180811,
      -0.62907669983820395695,   -0.63393874268939191069,
      -0.63877585853190983883,   -0.64358785716626301915,
      -0.64837454938058664305,   -0.65313574695808578646,
      -0.65787126268443625377,   -0.66258091035514600365,
      -0.66726450478287686758,   -0.67192186180472627293,
      -0.67655279828946868435,   -0.68115713214475647880,
      -0.68573468232427997097,   -0.69028526883488630766,
      -0.69480871274365695109,   -0.69930483618494347292,
      -0.70377346236736138228,   -0.70821441558074171287,
      -0.71262752120304009573,   -0.71701260570720304603,
      -0.72136949666799119388,   -0.72569802276875919090,
      -0.72999801380819202588,   -0.73426930070699748480,
      -0.73851171551455449187,   -0.74272509141551707030,
      -0.74690926273637366311,   -0.75106406495196155601,
      -0.75518933469193614624,   -0.75928490974719480302,
      -0.76335062907625506689,   -0.76738633281158693737,
      -0.77139186226589899966,   -0.77536705993837814350,
      -0.77931176952088262861,   -0.78322583590408825329,
      -0.78710910518358738453,   -0.79096142466594060978,
      -0.79478264287468077237,   -0.79857260955626915460,
      -0.80233117568600357425,   -0.80605819347387816215,
      -0.80975351637039459051,   -0.81341699907232452337,
      -0.81704849752842306268,   -0.82064786894509296542,
      -0.82421497179199940877,   -0.82774966580763508292,
      -0.83125181200483539236,   -0.83472127267624354901,
      -0.83815791139972534223,   -0.84156159304373337273,
      -0.84493218377262053956,   -0.84826955105190257120,
      -0.85157356365346939380,   -0.85484409166074513168,
      -0.85808100647379653725,   -0.86128418081438964934,
      -0.86445348873099448126,   -0.86758880560373754172,
      -0.87069000814930199383,   -0.87375697442577525966,
      -0.87678958383744387961,   -0.87978771713953543799,
      -0.88275125644290736866,   -0.88568008521868245592,
      -0.88857408830283084881,   -0.89143315190069840833,
      -0.89425716359148120972,   -0.89704601233264602373,
      -0.89979958846429660313,   -0.90251778371348560285,
      -0.90520049119847196392,   -0.90784760543292359423,
      -0.91045902233006518045,   -0.91303463920677096827,
      -0.91557435478760234997,   -0.91807806920879010042,
      -0.92054568402216110523,   -0.92297710219900942629,
      -0.92537222813391155275,   -0.92773096764848568730,
      -0.93005322799509491995,   -0.93233891786049414378,
      -0.93458794736942056905,   -0.93680022808812769477,
      -0.93897567302786259855,   -0.94111419664828640807,
      -0.94321571486083781974,   -0.94528014503203953219,
      -0.94730740598674746463,   -0.94929741801134263231,
      -0.95125010285686555360,   -0.95316538374209306539,
      -0.95504318535655742586,   -0.95688343386350758590,
      -0.95868605690281251274,   -0.96045098359380645167,
      -0.96217814453807601382,   -0.96386747182218898066,
      -0.96551889902036471770,   -0.96713236119708609248,
      -0.96870779490965279411,   -0.97024513821067595408,
      -0.97174433065051397006,   -0.97320531327964943703,
      -0.97462802865100709229,   -0.97601242082221268316,
      -0.97735843535779266851,   -0.97866601933131466776,
      -0.97993512132746857305,   -0.98116569144408824278,
      -0.98235768129411369711,   -0.98351104400749373818,
      -0.98462573423302892021,   -0.98570170814015479714,
      -0.98673892342066537753,   -0.98773733929037671913,
      -0.98869691649073059751,   -0.98961761729033818589,
      -0.99049940548646368529,   -0.99134224640644784681,
      -0.99214610690907132998,   -0.99291095538585784356,
      -0.99363676176231701766,   -0.99432349749912695818,
      -0.99497113559325643712,   -0.99557965057902667467,
      -0.99614901852911267129,   -0.99667921705548405037,
      -0.99717022531028537463,   -0.99762202398665590138,
      -0.99803459531948874472,   -0.99840792308612941457,
      -0.99874199260701370519,   -0.99903679074624490810,
      -0.99929230591211032666,   -0.99950852805753707204,
      -0.99968544868048712265,   -0.99982306082429163149,
      -0.99992135907792446822,   -0.99998033957621498535};
  std::array<double, 500> ref_wgt = {
      1.7434836738712549153E-7,    6.9737633079352416921E-7,
      0.0000015690324754874026687, 0.0000027892311153594363329,
      0.0000043578523005877903318, 0.0000062747418283681986635,
      0.0000085397112567081505703, 0.000011152537921283962487,
      0.000014112964955359242325,  0.000017420701312762981732,
      0.000021075421793925240920,  0.000025076767074968119841,
      0.000029424343739849438843,  0.000034117724315556281518,
      0.000039156447310345282308,  0.000044540017255026271565,
      0.000050267904747285621147,  0.000056339546499045364414,
      0.000062754345386853895538,  0.000069511670505303784537,
      0.000076610857223471976276,  0.000084051207244377373955,
      0.000091831988667450540333,  0.000099952436054009983103,
      0.00010841175049573922452,   0.00011720909968615858957,
      0.00012634361799508538165,   0.00013581440654607585009,
      0.00014562053329684208965,   0.00015576103312263674862,
      0.00016623490790259815918,   0.00017704112660904824171,
      0.00018817862539973527267,   0.00019964630771301334538,
      0.00021144304436595009245,   0.00022356767365535397942,
      0.00023601900146171222045,   0.00024879580135603010924,
      0.00026189681470956230097,   0.00027532075080642632538,
      0.00028906628695908835525,   0.00030313206862671100054,
      0.00031751670953635264465,   0.00033221879180700758666,
      0.00034723686607647600202,   0.00036256945163105248302,
      0.00037821503653802167112,   0.00039417207778094924431,
      0.00041043900139775627502,   0.00042701420262156472761,
      0.00044389604602430161899,   0.00046108286566304912143,
      0.00047857296522912764340,   0.00049636461819989868229,
      0.00051445606799327400159,   0.00053284552812491744573,
      0.00055153118236812546697,   0.00057051118491637220157,
      0.00058978366054850469618,   0.00060934670479657365094,
      0.00062919838411628481200,   0.00064933673606005591414,
      0.00066975976945266384315,   0.00069046546456946645855,
      0.00071145177331718328849,   0.00073271661941721908265,
      0.00075425789859151398306,   0.00077607347875090384937,
      0.00079816120018597405232,   0.00082051887576038982860,
      0.00084314429110668607047,   0.00086603520482449920602,
      0.00088918934868122360910,   0.00091260442781507476363,
      0.00093627812094054119329,   0.00096020808055620695625,
      0.00098439193315492629437,   0.0010088272794363318180,
      0.0010335116945216574007,    0.0010584427281708567527,
      0.0010836179050019984396,    0.0011090347247129179098,
      0.0011346906623051068946,    0.0011605831683098203472,
      0.0011867096690163808896,    0.0012130675667026605422,
      0.0012396542398677193166,    0.0012664670434665800643,
      0.0012935033091471187798,    0.0013207603454890493733,
      0.0013482354382449817413,    0.0013759258505835317776,
      0.0014038288233344617896,    0.0014319415752358296002,
      0.0014602613031831244407,    0.0014887851824803675634,
      0.0015175103670931553273,    0.0015464339899036223394,
      0.0015755531629673020633,    0.0016048649777718621391,
      0.0016343665054976914917,    0.0016640547972803161407,
      0.0016939268844746204638,    0.0017239797789208505044,
      0.0017542104732123757567,    0.0017846159409651857054,
      0.0018151931370890972446,    0.0018459389980606489458,
      0.0018768504421976579996,    0.0019079243699354155044,
      0.0019391576641044956316,    0.0019705471902101540557,
      0.0020020897967132908929,    0.0020337823153129532558,
      0.0020656215612303523951,    0.0020976043334943702636,
      0.0021297274152285302071,    0.0021619875739394063557,
      0.0021943815618064461629,    0.0022269061159731804126,
      0.0022595579588397948932,    0.0022923337983570378159,
      0.0023252303283214369355,    0.0023582442286718002170,
      0.0023913721657869737772,    0.0024246107927848307173,
      0.0024579567498224643559,    0.0024914066643975592634,
      0.0025249571516509133937,    0.0025586048146700845087,
      0.0025923462447941339903,    0.0026261780219194410368,
      0.0026600967148065601465,    0.0026940988813880946985,
      0.0027281810690775593496,    0.0027623398150792038801,
      0.0027965716466987710343,    0.0028308730816551608191,
      0.0028652406283929736446,    0.0028996707863959046105,
      0.0029341600465009611688,    0.0029687048912134763180,
      0.0030033017950228894158,    0.0030379472247192666250,
      0.0030726376397105329481,    0.0031073694923403877348,
      0.0031421392282068754931,    0.0031769432864815837714,
      0.0032117781002294398267,    0.0032466400967290777375,
      0.0032815256977937475720,    0.0033164313200927381726,
      0.0033513533754732850724,    0.0033862882712829350149,
      0.0034212324106923385105,    0.0034561821930184418209,
      0.0034911340140480497314,    0.0035260842663617304340,
      0.0035610293396580338165,    0.0035959656210779944236,
      0.0036308894955298903302,    0.0036657973460142291450,
      0.0037006855539489323418,    0.0037355504994946890976,
      0.0037703885618804508019,    0.0038051961197290373888,
      0.0038399695513828266334,    0.0038747052352294975448,
      0.0039093995500277989870,    0.0039440488752333146501,
      0.0039786495913241955017,    0.0040131980801268308445,
      0.0040476907251414291146,    0.0040821239118674795629,
      0.0041164940281290659706,    0.0041507974644000035632,
      0.0041850306141287703036,    0.0042191898740632037621,
      0.0042532716445749347810,    0.0042872723299835291758,
      0.0043211883388803087394,    0.0043550160844518228448,
      0.0043887519848029419712,    0.0044223924632795445131,
      0.0044559339487907682659,    0.0044893728761307980218,
      0.0045227056863001607484,    0.0045559288268264998675,
      0.0045890387520848001967,    0.0046220319236170351636,
      0.0046549048104512079561,    0.0046876538894197583223,
      0.0047202756454773067916,    0.0047527665720177081467,
      0.0047851231711903860352,    0.0048173419542159206757,
      0.0048494194417008616774,    0.0048813521639517380593,
      0.0049131366612882376296,    0.0049447694843555279543,
      0.0049762471944356912245,    0.0050075663637582454057,
      0.0050387235758097241363,    0.0050697154256422879241,
      0.0051005385201813392734,    0.0051311894785321144676,
      0.0051616649322852248175,    0.0051919615258211202811,
      0.0052220759166134484559,    0.0052520047755312820395,
      0.0052817447871401879584,    0.0053112926500021114621,
      0.0053406450769740485889,    0.0053697987955054805135,
      0.0053987505479345433973,    0.0054274970917829074732,
      0.0054560352000493392110,    0.0054843616615019205263,
      0.0055124732809688991128,    0.0055403668796281441003,
      0.0055680392952951813629,    0.0055954873827097829277,
      0.0056227080138210850626,    0.0056496980780712097497,
      0.0056764544826773643849,    0.0057029741529123946788,
      0.0057292540323837658681,    0.0057552910833109474891,
      0.0057810822868011771026,    0.0058066246431235785050,
      0.0058319151719816101038,    0.0058569509127838192860,
      0.0058817289249128787530,    0.0059062462879928809531,
      0.0059305001021548668908,    0.0059544874883005657531,
      0.0059782055883643219466,    0.0060016515655731863035,
      0.0060248226047051483731,    0.0060477159123454868816,
      0.0060703287171412156100,    0.0060926582700536021057,
      0.0061147018446087368150,    0.0061364567371461303974,
      0.0061579202670653171534,    0.0061790897770704426774,
      0.0061999626334128140218,    0.0062205362261313908423,
      0.0062408079692911961721,    0.0062607753012196256606,
      0.0062804356847406342943,    0.0062997866074067798081,
      0.0063188255817291021827,    0.0063375501454048188153,
      0.0063559578615428151452,    0.0063740463188869107080,
      0.0063918131320368807919,    0.0064092559416672140658,
      0.0064263724147435867484,    0.0064431602447370340923,
      0.0064596171518358001577,    0.0064757408831548470559,
      0.0064915292129430050512,    0.0065069799427877451174,
      0.0065220909018175557537,    0.0065368599469019060797,
      0.0065512849628487774399,    0.0065653638625997459633,
      0.0065790945874225987421,    0.0065924751071014665091,
      0.0066055034201244559142,    0.0066181775538687647205,
      0.0066304955647832634651,    0.0066424555385685273499,
      0.0066540555903543023574,    0.0066652938648743898097,
      0.0066761685366389338187,    0.0066866778101040963053,
      0.0066968199198391044959,    0.0067065931306906560363,
      0.0067159957379446670966,    0.0067250260674853490778,
      0.0067336824759515997633,    0.0067419633508906949983,
      0.0067498671109092672190,    0.0067573922058215573912,
      0.0067645371167949271611,    0.0067713003564926182621,
      0.0067776804692137464650,    0.0067836760310305176031,
      0.0067892856499226534509,    0.0067945079659090154789,
      0.0067993416511764147568,    0.0068037854102055965269,
      0.0068078379798943882158,    0.0068114981296779999069,
      0.0068147646616464665467,    0.0068176364106592214086,
      0.0068201122444567905956,    0.0068221910637695986133,
      0.0068238718024238753039,    0.0068251534274446546847,
      0.0068260349391558564950,    0.0068265153712774415106,
      0.0068265937910196319446,    0.0068262692991741885142,
      0.0068255410302027360098,    0.0068244081523221294686,
      0.0068228698675868533109,    0.0068209254119684460653,
      0.0068185740554319435673,    0.0068158151020093337814,
      0.0068126478898700166622,    0.0068090717913882627320,
      0.0068050862132076643197,    0.0068006905963025736719,
      0.0067958844160365224109,    0.0067906671822176170858,
      0.0067850384391509058242,    0.0067789977656877113663,
      0.0067725447752719260258,    0.0067656791159832643944,
      0.0067584004705774698734,    0.0067507085565234713866,
      0.0067426031260374868977,    0.0067340839661140706257,
      0.0067251508985541011212,    0.0067158037799897076380,
      0.0067060425019061325048,    0.0066958669906605274724,
      0.0066852772074976822828,    0.0066742731485626839786,
      0.0066628548449105057417,    0.0066510223625125243219,
      0.0066387758022599653881,    0.0066261152999642764057,
      0.0066130410263544269162,    0.0065995531870711363653,
      0.0065856520226580299002,    0.0065713378085497228248,
      0.0065566108550568346760,    0.0065414715073479341543,
      0.0065259201454284164139,    0.0065099571841163144886,
      0.0064935830730150469000,    0.0064767982964831037672,
      0.0064596033736006740066,    0.0064419988581332164807,
      0.0064239853384919782259,    0.0064055634376914631586,
      0.0063867338133038549296,    0.0063674971574103978635,
      0.0063478541965497401922,    0.0063278056916632440584,
      0.0063073524380372670319,    0.0062864952652424201527,
      0.0062652350370698077788,    0.0062435726514642547860,
      0.0062215090404545269313,    0.0061990451700805504595,
      0.0061761820403176372962,    0.0061529206849977224356,
      0.0061292621717276203971,    0.0061052076018043078856,
      0.0060807581101272400564,    0.0060559148651077080444,
      0.0060306790685752456832,    0.0060050519556810935971,
      0.0059790347947987291097,    0.0059526288874214706744,
      0.0059258355680571657892,    0.0058986562041199716149,
      0.0058710921958192377759,    0.0058431449760455010763,
      0.0058148160102536021211,    0.0057861067963429340855,
      0.0057570188645348341307,    0.0057275537772471282142,
      0.0056977131289658402987,    0.0056674985461140772101,
      0.0056369116869181006468,    0.0056059542412705980930,
      0.0055746279305911646321,    0.0055429345076840079071,
      0.0055108757565928887181,    0.0054784534924533099923,
      0.0054456695613419671045,    0.0054125258401234727701,
      0.0053790242362943699699,    0.0053451666878244466115,
      0.0053109551629953658638,    0.0052763916602366263454,
      0.0052414782079588665778,    0.0052062168643845283541,
      0.0051706097173758939027,    0.0051346588842605119633,
      0.0050983665116540281173,    0.0050617347752804349492,
      0.0050247658797897578415,    0.0049874620585731924316,
      0.0049498255735757099872,    0.0049118587151061471786,
      0.0048735638016447969474,    0.0048349431796485173976,
      0.0047959992233533758468,    0.0047567343345748454003,
      0.0047171509425055716224,    0.0046772515035107270973,
      0.0046370385009209718827,    0.0045965144448230380732,
      0.0045556818718479568990,    0.0045145433449569469945,
      0.0044731014532249826794,    0.0044313588116220612972,
      0.0043893180607921888624,    0.0043469818668301034680,
      0.0043043529210557561050,    0.0042614339397865687446,
      0.0042182276641074897292,    0.0041747368596388667145,
      0.0041309643163021575970,    0.0040869128480835000528,
      0.0040425852927951605021,    0.0039979845118348835036,
      0.0039531133899431627657,    0.0039079748349584551475,
      0.0038625717775703592031,    0.0038169071710707800034,
      0.0037709839911031021485,    0.0037248052354093930570,
      0.0036783739235756587966,    0.0036316930967751748893,
      0.0035847658175099146971,    0.0035375951693500981609,
      0.0034901842566718838315,    0.0034425362043932272976,
      0.0033946541577079292750,    0.0033465412818178967836,
      0.0032982007616636409968,    0.0032496358016530355008,
      0.0032008496253883588603,    0.0031518454753916455332,
      0.0031026266128283693318,    0.0030531963172294837705,
      0.0030035578862118437897,    0.0029537146351970334851,
      0.0029036698971286246159,    0.0028534270221878908007,
      0.0028029893775080024497,    0.0027523603468867276140,
      0.0027015433304976640656,    0.0026505417446000280519,
      0.0025993590212470252962,    0.0025479986079928299391,
      0.0024964639675981972434,    0.0024447585777347359995,
      0.0023928859306878666933,    0.0023408495330584916096,
      0.0022886529054634031620,    0.0022362995822344568481,
      0.0021837931111165353421,    0.0021311370529643303393,
      0.0020783349814379688762,    0.0020253904826975109480,
      0.0019723071550963453484,    0.0019190886088735107514,
      0.0018657384658449691514,    0.0018122603590938588709,
      0.0017586579326597544329,    0.0017049348412269606866,
      0.0016510947498118686573,    0.0015971413334494006753,
      0.0015430782768785724198,    0.0014889092742271995926,
      0.0014346380286957770076,    0.0013802682522405579628,
      0.0013258036652558618242,    0.0012712479962556378263,
      0.0012166049815543131531,    0.0011618783649469534340,
      0.0011070718973887638416,    0.0010521893366739590453,
      0.00099723444711403032258,   0.00094221099921543818970,
      0.00088712276935675895868,   0.00083197353946531368065,
      0.00077676709669330797820,   0.00072150723309351131356,
      0.00066619774529450428020,   0.00061084243417552254483,
      0.00055544510454092609947,   0.00050000956479432251982,
      0.00044453962661237295400,   0.00038903910461830959602,
      0.00033351181605519342159,   0.00027796158045894098963,
      0.00022239221933114912986,   0.00016680755581174635807,
      0.00011121141435149987367,   0.000055607620384407007567};
  IntegratorXX::GaussChebyshev2<double, double> quad(500);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 500; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}
