/* THIS FILE IS AUTOGENERATED BY generate_quadrature_tests.py.
   DO NOT EDIT THIS FILE, EDIT THE AUTOGENERATOR INSTEAD.
*/

#include "catch2/catch_all.hpp"
#include <integratorxx/quadratures/gausslegendre.hpp>
#include <cfloat>

const double x_tolerance = 10*DBL_EPSILON;
const double w_tolerance = 10*DBL_EPSILON;
TEST_CASE("2 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(2);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.57735026918962576451,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(1.0000000000000000000,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(0.57735026918962576451,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(1.0000000000000000000,w_tolerance));
}

TEST_CASE("3 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(3);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.77459666924148337704,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.55555555555555555556,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.88888888888888888889,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(0.77459666924148337704,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.55555555555555555556,w_tolerance));
}

TEST_CASE("4 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(4);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.86113631159405257522,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.34785484513745385737,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.33998104358485626480,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.65214515486254614263,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(0.33998104358485626480,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.65214515486254614263,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(0.86113631159405257522,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.34785484513745385737,w_tolerance));
}

TEST_CASE("5 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(5);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.90617984593866399280,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.23692688505618908751,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.53846931010568309104,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.47862867049936646804,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.56888888888888888889,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(0.53846931010568309104,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.47862867049936646804,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(0.90617984593866399280,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.23692688505618908751,w_tolerance));
}

TEST_CASE("6 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(6);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.93246951420315202781,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.17132449237917034504,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.66120938646626451366,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.36076157304813860757,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.23861918608319690863,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.46791393457269104739,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(0.23861918608319690863,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.46791393457269104739,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(0.66120938646626451366,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.36076157304813860757,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(0.93246951420315202781,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.17132449237917034504,w_tolerance));
}

TEST_CASE("7 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(7);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.94910791234275852453,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.12948496616886969327,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.74153118559939443986,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.27970539148927666790,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.40584515137739716691,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.38183005050511894495,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.41795918367346938776,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(0.40584515137739716691,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.38183005050511894495,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(0.74153118559939443986,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.27970539148927666790,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(0.94910791234275852453,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.12948496616886969327,w_tolerance));
}

TEST_CASE("8 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(8);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.96028985649753623168,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.10122853629037625915,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.79666647741362673959,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.22238103445337447054,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.52553240991632898582,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.31370664587788728734,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.18343464249564980494,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.36268378337836198297,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(0.18343464249564980494,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.36268378337836198297,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(0.52553240991632898582,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.31370664587788728734,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(0.79666647741362673959,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.22238103445337447054,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(0.96028985649753623168,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.10122853629037625915,w_tolerance));
}

TEST_CASE("9 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(9);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.96816023950762608984,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.081274388361574411972,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.83603110732663579430,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.18064816069485740406,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.61337143270059039731,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.26061069640293546232,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.32425342340380892904,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.31234707704000284007,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.33023935500125976316,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(0.32425342340380892904,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.31234707704000284007,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(0.61337143270059039731,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.26061069640293546232,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(0.83603110732663579430,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.18064816069485740406,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(0.96816023950762608984,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.081274388361574411972,w_tolerance));
}

TEST_CASE("10 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(10);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.97390652851717172008,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.066671344308688137594,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.86506336668898451073,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.14945134915058059315,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.67940956829902440623,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.21908636251598204400,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.43339539412924719080,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.26926671930999635509,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.14887433898163121088,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.29552422471475287017,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(0.14887433898163121088,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.29552422471475287017,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(0.43339539412924719080,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.26926671930999635509,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(0.67940956829902440623,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.21908636251598204400,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(0.86506336668898451073,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.14945134915058059315,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(0.97390652851717172008,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.066671344308688137594,w_tolerance));
}

TEST_CASE("11 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(11);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.97822865814605699280,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.055668567116173666483,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.88706259976809529908,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.12558036946490462463,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.73015200557404932409,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.18629021092773425143,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.51909612920681181593,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.23319376459199047992,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.26954315595234497233,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.26280454451024666218,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.27292508677790063071,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(0.26954315595234497233,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.26280454451024666218,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(0.51909612920681181593,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.23319376459199047992,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(0.73015200557404932409,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.18629021092773425143,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(0.88706259976809529908,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.12558036946490462463,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(0.97822865814605699280,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.055668567116173666483,w_tolerance));
}

TEST_CASE("12 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(12);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.98156063424671925069,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.047175336386511827195,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.90411725637047485668,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.10693932599531843096,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.76990267419430468704,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.16007832854334622633,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.58731795428661744730,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.20316742672306592175,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.36783149899818019375,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.23349253653835480876,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.12523340851146891547,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.24914704581340278500,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(0.12523340851146891547,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.24914704581340278500,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(0.36783149899818019375,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.23349253653835480876,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(0.58731795428661744730,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.20316742672306592175,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(0.76990267419430468704,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.16007832854334622633,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(0.90411725637047485668,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.10693932599531843096,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(0.98156063424671925069,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.047175336386511827195,w_tolerance));
}

TEST_CASE("13 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(13);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.98418305471858814947,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.040484004765315879520,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.91759839922297796521,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.092121499837728447914,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.80157809073330991279,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.13887351021978723846,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.64234933944034022064,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.17814598076194573828,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.44849275103644685288,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.20781604753688850231,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.23045831595513479407,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.22628318026289723841,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.23255155323087391019,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(0.23045831595513479407,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.22628318026289723841,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(0.44849275103644685288,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.20781604753688850231,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(0.64234933944034022064,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.17814598076194573828,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(0.80157809073330991279,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.13887351021978723846,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(0.91759839922297796521,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.092121499837728447914,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(0.98418305471858814947,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.040484004765315879520,w_tolerance));
}

TEST_CASE("14 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(14);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.98628380869681233884,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.035119460331751863032,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.92843488366357351734,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.080158087159760209806,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.82720131506976499319,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.12151857068790318469,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.68729290481168547015,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.15720316715819353457,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.51524863635815409197,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.18553839747793781374,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.31911236892788976044,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.20519846372129560397,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.10805494870734366207,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.21526385346315779020,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(0.10805494870734366207,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.21526385346315779020,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(0.31911236892788976044,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.20519846372129560397,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(0.51524863635815409197,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.18553839747793781374,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(0.68729290481168547015,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.15720316715819353457,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(0.82720131506976499319,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.12151857068790318469,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(0.92843488366357351734,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.080158087159760209806,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(0.98628380869681233884,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.035119460331751863032,w_tolerance));
}

TEST_CASE("15 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(15);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.98799251802048542849,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.030753241996117268355,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.93727339240070590431,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.070366047488108124709,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.84820658341042721620,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.10715922046717193501,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.72441773136017004742,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.13957067792615431445,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.57097217260853884754,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.16626920581699393355,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.39415134707756336990,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.18616100001556221103,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.20119409399743452230,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.19843148532711157646,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.20257824192556127288,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(0.20119409399743452230,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.19843148532711157646,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(0.39415134707756336990,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.18616100001556221103,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(0.57097217260853884754,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.16626920581699393355,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(0.72441773136017004742,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.13957067792615431445,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(0.84820658341042721620,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.10715922046717193501,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(0.93727339240070590431,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.070366047488108124709,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(0.98799251802048542849,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.030753241996117268355,w_tolerance));
}

TEST_CASE("16 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(16);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.98940093499164993260,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.027152459411754094852,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.94457502307323257608,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.062253523938647892863,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.86563120238783174388,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.095158511682492784810,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.75540440835500303389,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.12462897125553387205,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.61787624440264374845,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.14959598881657673208,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.45801677765722738634,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.16915651939500253819,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.28160355077925891323,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.18260341504492358887,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.095012509837637440185,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.18945061045506849629,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(0.095012509837637440185,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.18945061045506849629,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(0.28160355077925891323,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.18260341504492358887,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(0.45801677765722738634,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.16915651939500253819,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(0.61787624440264374845,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.14959598881657673208,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(0.75540440835500303389,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.12462897125553387205,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(0.86563120238783174388,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.095158511682492784810,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(0.94457502307323257608,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.062253523938647892863,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(0.98940093499164993260,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.027152459411754094852,w_tolerance));
}

TEST_CASE("17 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(17);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99057547531441733568,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.024148302868547931960,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.95067552176876776122,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.055459529373987201129,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.88023915372698590212,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.085036148317179180883,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.78151400389680140693,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.11188384719340397109,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.65767115921669076585,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.13513636846852547329,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.51269053708647696789,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.15404576107681028808,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.35123176345387631530,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.16800410215645004451,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.17848418149584785585,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.17656270536699264633,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.17944647035620652546,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(0.17848418149584785585,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.17656270536699264633,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(0.35123176345387631530,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.16800410215645004451,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(0.51269053708647696789,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.15404576107681028808,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(0.65767115921669076585,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.13513636846852547329,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(0.78151400389680140693,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.11188384719340397109,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(0.88023915372698590212,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.085036148317179180883,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(0.95067552176876776122,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.055459529373987201129,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(0.99057547531441733568,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.024148302868547931960,w_tolerance));
}

TEST_CASE("18 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(18);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99156516842093094673,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.021616013526483310313,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.95582394957139775518,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.049714548894969796453,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.89260246649755573921,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.076425730254889056529,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.80370495897252311568,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.10094204410628716556,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.69168704306035320788,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.12255520671147846018,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.55977083107394753461,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.14064291467065065120,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.41175116146284264604,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.15468467512626524493,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.25188622569150550959,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.16427648374583272299,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.084775013041735301242,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.16914238296314359184,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(0.084775013041735301242,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.16914238296314359184,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(0.25188622569150550959,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.16427648374583272299,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(0.41175116146284264604,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.15468467512626524493,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(0.55977083107394753461,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.14064291467065065120,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(0.69168704306035320788,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.12255520671147846018,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(0.80370495897252311568,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.10094204410628716556,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(0.89260246649755573921,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.076425730254889056529,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(0.95582394957139775518,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.049714548894969796453,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(0.99156516842093094673,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.021616013526483310313,w_tolerance));
}

TEST_CASE("19 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(19);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99240684384358440319,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.019461788229726477036,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.96020815213483003085,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.044814226765699600333,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.90315590361481790164,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.069044542737641226581,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.82271465653714282498,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.091490021622449999465,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.72096617733522937862,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.11156664554733399472,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.60054530466168102347,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.12875396253933622768,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.46457074137596094572,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.14260670217360661178,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.31656409996362983199,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.15276604206585966678,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.16035864564022537587,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.15896884339395434765,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.16105444984878369598,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(0.16035864564022537587,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.15896884339395434765,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(0.31656409996362983199,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.15276604206585966678,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(0.46457074137596094572,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.14260670217360661178,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(0.60054530466168102347,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.12875396253933622768,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(0.72096617733522937862,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.11156664554733399472,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(0.82271465653714282498,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.091490021622449999465,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(0.90315590361481790164,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.069044542737641226581,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(0.96020815213483003085,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.044814226765699600333,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(0.99240684384358440319,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.019461788229726477036,w_tolerance));
}

TEST_CASE("20 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(20);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99312859918509492479,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.017614007139152118312,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.96397192727791379127,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.040601429800386941331,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.91223442825132590587,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.062672048334109063570,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.83911697182221882339,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.083276741576704748725,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.74633190646015079261,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.10193011981724043504,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.63605368072651502545,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.11819453196151841731,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.51086700195082709800,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.13168863844917662690,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.37370608871541956067,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.14209610931838205133,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.22778585114164507808,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.14917298647260374679,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.076526521133497333755,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.15275338713072585070,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(0.076526521133497333755,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.15275338713072585070,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(0.22778585114164507808,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.14917298647260374679,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(0.37370608871541956067,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.14209610931838205133,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(0.51086700195082709800,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.13168863844917662690,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(0.63605368072651502545,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.11819453196151841731,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(0.74633190646015079261,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.10193011981724043504,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(0.83911697182221882339,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.083276741576704748725,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(0.91223442825132590587,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.062672048334109063570,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(0.96397192727791379127,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.040601429800386941331,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(0.99312859918509492479,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.017614007139152118312,w_tolerance));
}

TEST_CASE("21 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(21);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99375217062038950026,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.016017228257774333324,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.96722683856630629432,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.036953789770852493800,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.92009933415040082879,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.057134425426857208284,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.85336336458331728365,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.076100113628379302017,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.76843996347567790862,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.093444423456033861553,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.66713880419741231931,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.10879729916714837766,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.55161883588721980706,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.12183141605372853420,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.42434212020743878357,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.13226893863333746178,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.28802131680240109660,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.13988739479107315472,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.14556185416089509094,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.14452440398997005906,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.14608113364969042719,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(0.14556185416089509094,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.14452440398997005906,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(0.28802131680240109660,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.13988739479107315472,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(0.42434212020743878357,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.13226893863333746178,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(0.55161883588721980706,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.12183141605372853420,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(0.66713880419741231931,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.10879729916714837766,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(0.76843996347567790862,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.093444423456033861553,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(0.85336336458331728365,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.076100113628379302017,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(0.92009933415040082879,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.057134425426857208284,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(0.96722683856630629432,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.036953789770852493800,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(0.99375217062038950026,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.016017228257774333324,w_tolerance));
}

TEST_CASE("22 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(22);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99429458548239929207,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.014627995298272200685,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.97006049783542872712,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.033774901584814154793,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.92695677218717400052,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.052293335152683285940,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.86581257772030013654,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.069796468424520488095,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.78781680597920816200,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.085941606217067727414,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.69448726318668278005,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.10041414444288096493,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.58764040350691159296,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.11293229608053921839,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.46935583798675702641,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.12325237681051242429,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.34193582089208422516,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.13117350478706237073,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.20786042668822128548,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.13654149834601517135,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.069739273319722221214,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.13925187285563199338,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(0.069739273319722221214,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.13925187285563199338,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(0.20786042668822128548,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.13654149834601517135,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(0.34193582089208422516,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.13117350478706237073,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(0.46935583798675702641,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.12325237681051242429,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(0.58764040350691159296,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.11293229608053921839,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(0.69448726318668278005,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.10041414444288096493,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(0.78781680597920816200,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.085941606217067727414,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(0.86581257772030013654,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.069796468424520488095,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(0.92695677218717400052,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.052293335152683285940,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(0.97006049783542872712,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.033774901584814154793,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(0.99429458548239929207,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.014627995298272200685,w_tolerance));
}

TEST_CASE("23 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(23);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99476933499755212352,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.013411859487141772081,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.97254247121811523196,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.030988005856979444311,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.93297108682601610235,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.048037671731084668572,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.87675235827044166738,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.064232421408525852127,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.80488840161883989215,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.079281411776718954923,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.71866136313195019446,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.092915766060035147477,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.61960987576364615638,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.10489209146454141007,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.50950147784600754969,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.11499664022241136494,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.39030103803029083142,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.12304908430672953047,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.26413568097034493053,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.12890572218808214998,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.13325682429846611093,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.13246203940469661737,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.13365457218610617535,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(0.13325682429846611093,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.13246203940469661737,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(0.26413568097034493053,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.12890572218808214998,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(0.39030103803029083142,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.12304908430672953047,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(0.50950147784600754969,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.11499664022241136494,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(0.61960987576364615638,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.10489209146454141007,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(0.71866136313195019446,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.092915766060035147477,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(0.80488840161883989215,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.079281411776718954923,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(0.87675235827044166738,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.064232421408525852127,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(0.93297108682601610235,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.048037671731084668572,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(0.97254247121811523196,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.030988005856979444311,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(0.99476933499755212352,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.013411859487141772081,w_tolerance));
}

TEST_CASE("24 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(24);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99518721999702136018,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.012341229799987199547,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.97472855597130949820,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.028531388628933663181,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.93827455200273275852,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.044277438817419806169,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.88641552700440103421,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.059298584915436780746,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.82000198597390292195,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.073346481411080305734,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.74012419157855436424,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.086190161531953275917,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.64809365193697556925,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.097618652104113888270,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.54542147138883953566,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.10744427011596563478,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.43379350762604513849,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.11550566805372560135,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.31504267969616337439,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.12167047292780339120,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.19111886747361630916,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.12583745634682829612,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.064056892862605626085,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.12793819534675215697,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(0.064056892862605626085,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.12793819534675215697,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(0.19111886747361630916,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.12583745634682829612,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(0.31504267969616337439,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.12167047292780339120,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(0.43379350762604513849,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.11550566805372560135,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(0.54542147138883953566,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.10744427011596563478,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(0.64809365193697556925,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.097618652104113888270,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(0.74012419157855436424,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.086190161531953275917,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(0.82000198597390292195,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.073346481411080305734,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(0.88641552700440103421,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.059298584915436780746,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(0.93827455200273275852,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.044277438817419806169,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(0.97472855597130949820,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.028531388628933663181,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(0.99518721999702136018,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.012341229799987199547,w_tolerance));
}

TEST_CASE("25 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(25);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99555696979049809791,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.011393798501026287948,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.97666392145951751150,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.026354986615032137262,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.94297457122897433941,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.040939156701306312656,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.89499199787827536885,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.054904695975835191926,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.83344262876083400142,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.068038333812356917207,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.75925926303735763058,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.080140700335001018013,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.67356636847346836448,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.091028261982963649812,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.57766293024122296772,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.10053594906705064420,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.47300273144571496052,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.10851962447426365312,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.36117230580938783774,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.11485825914571164834,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.24386688372098843205,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.11945576353578477223,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.12286469261071039639,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.12224244299031004169,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.12317605372671545120,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(0.12286469261071039639,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.12224244299031004169,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(0.24386688372098843205,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.11945576353578477223,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(0.36117230580938783774,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.11485825914571164834,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(0.47300273144571496052,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.10851962447426365312,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(0.57766293024122296772,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.10053594906705064420,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(0.67356636847346836448,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.091028261982963649812,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(0.75925926303735763058,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.080140700335001018013,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(0.83344262876083400142,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.068038333812356917207,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(0.89499199787827536885,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.054904695975835191926,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(0.94297457122897433941,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.040939156701306312656,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(0.97666392145951751150,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.026354986615032137262,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(0.99555696979049809791,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.011393798501026287948,w_tolerance));
}

TEST_CASE("26 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(26);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99588570114561692900,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.010551372617343007156,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.97838544595647099110,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.024417851092631908790,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.94715906666171425014,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.037962383294362763950,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.90263786198430707422,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.050975825297147811998,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.84544594278849801880,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.063274046329574835539,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.77638594882067885619,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.074684149765659745887,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.69642726041995726486,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.085045894313485239210,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.60669229301761806323,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.094213800355914148464,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.50844071482450571770,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.10205916109442542324,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.40305175512348630648,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.10847184052857659066,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.29200483948595689514,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.11336181654631966655,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.17685882035689018397,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.11666044348529658204,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.059230093429313207094,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.11832141527926227652,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(0.059230093429313207094,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.11832141527926227652,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(0.17685882035689018397,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.11666044348529658204,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(0.29200483948595689514,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.11336181654631966655,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(0.40305175512348630648,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.10847184052857659066,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(0.50844071482450571770,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.10205916109442542324,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(0.60669229301761806323,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.094213800355914148464,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(0.69642726041995726486,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.085045894313485239210,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(0.77638594882067885619,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.074684149765659745887,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(0.84544594278849801880,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.063274046329574835539,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(0.90263786198430707422,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.050975825297147811998,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(0.94715906666171425014,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.037962383294362763950,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(0.97838544595647099110,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.024417851092631908790,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(0.99588570114561692900,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.010551372617343007156,w_tolerance));
}

TEST_CASE("27 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(27);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99617926288898856694,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0097989960512943602611,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.97992347596150122286,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.022686231596180623196,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.95090055781470500685,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.035297053757419711023,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.90948232067749110430,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.047449412520615062704,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.85620790801829449030,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.058983536859833599110,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.79177163907050822714,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.069748823766245592984,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.71701347373942369929,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.079604867773057771263,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.63290797194649514093,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.088423158543756950194,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.54055156457945689490,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.096088727370028507566,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.44114825175002688059,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.10250163781774579867,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.33599390363850889973,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.10757828578853318721,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.22645936543953685886,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.11125248835684519267,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.11397258560952996693,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.11347634610896514862,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.11422086737895698904,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(0.11397258560952996693,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.11347634610896514862,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(0.22645936543953685886,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.11125248835684519267,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(0.33599390363850889973,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.10757828578853318721,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(0.44114825175002688059,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.10250163781774579867,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(0.54055156457945689490,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.096088727370028507566,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(0.63290797194649514093,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.088423158543756950194,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(0.71701347373942369929,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.079604867773057771263,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(0.79177163907050822714,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.069748823766245592984,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(0.85620790801829449030,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.058983536859833599110,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(0.90948232067749110430,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.047449412520615062704,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(0.95090055781470500685,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.035297053757419711023,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(0.97992347596150122286,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.022686231596180623196,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(0.99617926288898856694,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.0097989960512943602611,w_tolerance));
}

TEST_CASE("28 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(28);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99644249757395444995,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0091242825930945177388,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.98130316537087275369,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.021132112592771259752,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.95425928062893819725,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.032901427782304379978,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.91563302639213207387,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.044272934759004227840,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.86589252257439504894,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.055107345675716745432,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.80564137091717917145,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.065272923966999595793,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.73561087801363177203,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.074646214234568779024,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.65665109403886496122,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.083113417228901218390,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.56972047181140171931,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.090571744393032840942,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.47587422495511826103,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.096930657997929915850,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.37625151608907871022,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.10211296757806076981,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.27206162763517807768,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.10605576592284641791,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.16456928213338077128,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.10871119225829413525,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.055079289884034270427,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.11004701301647519628,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(0.055079289884034270427,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.11004701301647519628,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(0.16456928213338077128,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.10871119225829413525,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(0.27206162763517807768,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.10605576592284641791,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(0.37625151608907871022,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.10211296757806076981,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(0.47587422495511826103,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.096930657997929915850,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(0.56972047181140171931,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.090571744393032840942,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(0.65665109403886496122,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.083113417228901218390,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(0.73561087801363177203,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.074646214234568779024,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(0.80564137091717917145,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.065272923966999595793,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(0.86589252257439504894,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.055107345675716745432,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(0.91563302639213207387,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.044272934759004227840,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(0.95425928062893819725,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.032901427782304379978,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(0.98130316537087275369,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.021132112592771259752,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(0.99644249757395444995,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.0091242825930945177388,w_tolerance));
}

TEST_CASE("29 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(29);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99667944226059658616,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0085169038787464096543,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.98254550526141317487,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.019732085056122705984,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.95728559577808772580,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.030740492202093622644,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.92118023295305878509,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.041402062518682836105,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.87463780492010279042,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.051594826902497923913,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.81818548761525244499,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.061203090657079138542,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.75246285173447713391,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.070117933255051278570,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.67821453760268651516,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.078238327135763783828,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.59628179713822782038,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.085472257366172527545,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.50759295512422764210,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.091737757139258763348,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.41315288817400866389,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.096963834094408606302,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.31403163786763993495,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.10109127375991496612,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.21135228616600107451,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.10407331007772937391,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.10627823013267923017,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.10587615509732094141,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.10647938171831424425,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(0.10627823013267923017,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.10587615509732094141,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(0.21135228616600107451,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.10407331007772937391,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(0.31403163786763993495,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.10109127375991496612,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(0.41315288817400866389,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.096963834094408606302,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(0.50759295512422764210,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.091737757139258763348,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(0.59628179713822782038,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.085472257366172527545,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(0.67821453760268651516,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.078238327135763783828,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(0.75246285173447713391,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.070117933255051278570,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(0.81818548761525244499,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.061203090657079138542,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(0.87463780492010279042,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.051594826902497923913,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(0.92118023295305878509,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.041402062518682836105,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(0.95728559577808772580,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.030740492202093622644,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(0.98254550526141317487,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.019732085056122705984,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(0.99667944226059658616,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.0085169038787464096543,w_tolerance));
}

TEST_CASE("30 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(30);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99689348407464954027,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0079681924961666056155,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.98366812327974720997,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.018466468311090959142,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.96002186496830751222,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.028784707883323369350,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.92620004742927432588,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.038799192569627049597,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.88256053579205268154,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.048402672830594052903,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.82956576238276839744,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.057493156217619066482,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.76777743210482619492,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.065974229882180495128,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.69785049479331579693,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.073755974737705206268,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.62052618298924286114,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.080755895229420215355,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.53662414814201989926,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.086899787201082979802,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.44703376953808917678,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.092122522237786128718,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.35270472553087811347,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.096368737174644259639,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.25463692616788984644,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.099593420586795267063,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.15386991360858354696,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.10176238974840550460,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.051471842555317695833,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.10285265289355884034,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(0.051471842555317695833,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.10285265289355884034,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(0.15386991360858354696,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.10176238974840550460,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(0.25463692616788984644,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.099593420586795267063,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(0.35270472553087811347,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.096368737174644259639,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(0.44703376953808917678,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.092122522237786128718,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(0.53662414814201989926,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.086899787201082979802,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(0.62052618298924286114,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.080755895229420215355,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(0.69785049479331579693,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.073755974737705206268,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(0.76777743210482619492,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.065974229882180495128,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(0.82956576238276839744,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.057493156217619066482,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(0.88256053579205268154,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.048402672830594052903,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(0.92620004742927432588,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.038799192569627049597,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(0.96002186496830751222,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.028784707883323369350,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(0.98366812327974720997,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.018466468311090959142,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(0.99689348407464954027,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.0079681924961666056155,w_tolerance));
}

TEST_CASE("31 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(31);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99708748181947707406,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0074708315792487758587,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.98468590966515248400,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.017318620790310582463,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.96250392509294966179,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.027009019184979421801,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.93075699789664816496,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.036432273912385464024,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.88976002994827104337,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.045493707527201102902,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.83992032014626734009,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.054103082424916853712,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.78173314841662494041,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.062174786561028426910,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.71577678458685328391,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.069628583235410366168,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.64270672292426034618,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.076390386598776616426,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.56324916140714926272,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.082392991761589263904,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.47819378204490248044,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.087576740608477876126,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.38838590160823294306,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.091890113893641478215,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.29471806998170161662,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.095290242912319512807,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.19812119933557062877,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.097743335386328725093,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.099555312152341520325,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.099225011226672307875,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.099720544793426451428,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(0.099555312152341520325,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.099225011226672307875,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(0.19812119933557062877,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.097743335386328725093,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(0.29471806998170161662,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.095290242912319512807,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(0.38838590160823294306,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.091890113893641478215,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(0.47819378204490248044,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.087576740608477876126,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(0.56324916140714926272,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.082392991761589263904,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(0.64270672292426034618,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.076390386598776616426,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(0.71577678458685328391,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.069628583235410366168,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(0.78173314841662494041,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.062174786561028426910,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(0.83992032014626734009,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.054103082424916853712,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(0.88976002994827104337,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.045493707527201102902,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(0.93075699789664816496,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.036432273912385464024,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(0.96250392509294966179,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.027009019184979421801,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(0.98468590966515248400,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.017318620790310582463,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(0.99708748181947707406,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.0074708315792487758587,w_tolerance));
}

TEST_CASE("32 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(32);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99726386184948156355,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0070186100094700966004,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.98561151154526833540,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.016274394730905670605,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.96476225558750643077,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.025392065309262059456,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.93490607593773968917,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.034273862913021433103,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.89632115576605212397,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.042835898022226680657,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.84936761373256997013,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.050998059262376176196,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.79448379596794240696,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.058684093478535547145,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.73218211874028968039,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.065822222776361846838,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.66304426693021520098,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.072345794108848506225,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.58771575724076232904,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.078193895787070306472,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.50689990893222939002,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.083311924226946755222,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.42135127613063534536,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.087652093004403811143,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.33186860228212764978,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.091173878695763884713,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.23928736225213707454,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.093844399080804565639,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.14447196158279649349,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.095638720079274859419,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.048307665687738316235,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.096540088514727800567,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(0.048307665687738316235,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.096540088514727800567,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(0.14447196158279649349,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.095638720079274859419,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(0.23928736225213707454,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.093844399080804565639,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(0.33186860228212764978,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.091173878695763884713,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(0.42135127613063534536,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.087652093004403811143,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(0.50689990893222939002,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.083311924226946755222,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(0.58771575724076232904,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.078193895787070306472,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(0.66304426693021520098,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.072345794108848506225,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(0.73218211874028968039,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.065822222776361846838,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(0.79448379596794240696,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.058684093478535547145,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(0.84936761373256997013,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.050998059262376176196,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(0.89632115576605212397,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.042835898022226680657,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(0.93490607593773968917,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.034273862913021433103,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(0.96476225558750643077,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.025392065309262059456,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(0.98561151154526833540,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.016274394730905670605,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(0.99726386184948156355,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.0070186100094700966004,w_tolerance));
}

TEST_CASE("33 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(33);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99742469424645521727,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0066062278475873780586,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.98645572623064248811,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.015321701512934676128,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.96682290968999276893,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.023915548101749480351,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.93869437261116835036,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.032300358632328953282,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.90231676774343358304,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.040401541331669591563,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.85800965267650406464,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.048147742818711695670,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.80616235627416658980,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.055470846631663561285,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.74723049644956215786,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.062306482530317480032,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.68173195996974278627,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.068594572818656712806,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.61024234583637902731,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.074279854843954149343,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.53338990478634764355,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.079312364794886738364,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.45185001727245069573,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.083647876067038707614,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.36633925774807334107,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.087248287618844337607,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.27760909715249702940,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.090081958660638577240,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.18643929882799157234,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.092123986643316846213,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.093631065854733385671,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.093356426065596116161,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.093768446160209996567,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(0.093631065854733385671,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.093356426065596116161,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(0.18643929882799157234,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.092123986643316846213,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(0.27760909715249702940,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.090081958660638577240,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(0.36633925774807334107,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.087248287618844337607,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(0.45185001727245069573,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.083647876067038707614,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(0.53338990478634764355,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.079312364794886738364,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(0.61024234583637902731,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.074279854843954149343,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(0.68173195996974278627,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.068594572818656712806,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(0.74723049644956215786,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.062306482530317480032,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(0.80616235627416658980,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.055470846631663561285,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(0.85800965267650406464,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.048147742818711695670,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(0.90231676774343358304,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.040401541331669591563,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(0.93869437261116835036,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.032300358632328953282,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(0.96682290968999276893,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.023915548101749480351,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(0.98645572623064248811,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.015321701512934676128,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(0.99742469424645521727,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.0066062278475873780586,w_tolerance));
}

TEST_CASE("34 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(34);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99757175379084191924,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0062291405559086847186,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.98722781640630948505,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.014450162748595035415,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.96870826253334428176,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.022563721985494970084,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.94216239740510709163,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.030491380638446131809,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.90780967771832446880,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.038166593796387516322,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.86593463833456446926,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.045525611523353272454,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.81688422790093366459,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.052507414572678106168,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.76106487662987301419,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.059054135827524493194,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.69893911321626290793,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.065111521554076411379,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.63102172708052854532,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.070629375814255724999,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.55787550066974664274,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.075561974660031931271,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.48010654519032703419,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.079868444339771844739,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.39835927775864594063,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.083513099699845655187,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.31331108133946324746,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.086465739747035749784,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.22566669161644948387,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.088701897835693869287,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.13615235725918297589,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.090203044370640729574,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.045509821953102542749,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.090956740330259873615,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(0.045509821953102542749,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.090956740330259873615,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(0.13615235725918297589,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.090203044370640729574,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(0.22566669161644948387,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.088701897835693869287,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(0.31331108133946324746,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.086465739747035749784,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(0.39835927775864594063,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.083513099699845655187,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(0.48010654519032703419,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.079868444339771844739,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(0.55787550066974664274,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.075561974660031931271,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(0.63102172708052854532,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.070629375814255724999,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(0.69893911321626290793,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.065111521554076411379,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(0.76106487662987301419,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.059054135827524493194,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(0.81688422790093366459,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.052507414572678106168,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(0.86593463833456446926,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.045525611523353272454,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(0.90780967771832446880,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.038166593796387516322,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(0.94216239740510709163,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.030491380638446131809,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(0.96870826253334428176,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.022563721985494970084,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(0.98722781640630948505,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.014450162748595035415,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(0.99757175379084191924,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.0062291405559086847186,w_tolerance));
}

TEST_CASE("35 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(35);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99770656909960029726,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0058834334204430849758,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.98793576444385149804,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.013650828348361492266,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.97043761603922983321,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.021322979911483580883,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.94534514820782732954,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.028829260108894254049,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.91285426135931761447,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.036110115863463380533,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.87321912502522233152,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.043108422326170218782,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.82674989909222540683,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.049769370401353529805,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.77381025228691255527,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.056040816212370128578,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.71481450155662878326,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.061873671966080188887,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.65022436466589038868,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.067222285269086903964,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.58054534474976450993,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.072044794772560064665,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.50632277324148861502,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.076303457155442053539,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.42813754151781425419,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.079964942242324262933,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.34660155443081394588,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.083000593728856588380,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.26235294120929605797,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.085386653392099125226,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.17605106116598956997,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.087104446997183534243,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.088371343275659263601,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.088140530430275462971,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.088486794907104290638,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(0.088371343275659263601,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.088140530430275462971,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(0.17605106116598956997,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.087104446997183534243,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(0.26235294120929605797,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.085386653392099125226,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(0.34660155443081394588,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.083000593728856588380,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(0.42813754151781425419,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.079964942242324262933,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(0.50632277324148861502,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.076303457155442053539,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(0.58054534474976450993,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.072044794772560064665,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(0.65022436466589038868,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.067222285269086903964,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(0.71481450155662878326,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.061873671966080188887,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(0.77381025228691255527,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.056040816212370128578,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(0.82674989909222540683,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.049769370401353529805,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(0.87321912502522233152,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.043108422326170218782,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(0.91285426135931761447,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.036110115863463380533,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(0.94534514820782732954,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.028829260108894254049,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(0.97043761603922983321,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.021322979911483580883,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(0.98793576444385149804,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.013650828348361492266,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(0.99770656909960029726,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.0058834334204430849758,w_tolerance));
}

TEST_CASE("36 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(36);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99783046248408583620,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0055657196642450453612,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.98858647890221223807,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.012915947284065574404,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.97202769104969794934,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.020181515297735471532,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.94827298439950754520,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.027298621498568779094,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.91749777451565906608,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.034213810770307229921,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.87992980089039713198,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.040875750923644895474,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.83584716699247530642,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.047235083490265978417,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.78557623013220651283,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.053244713977759919092,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.72948917159355658209,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.058860144245324817310,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.66800123658552106210,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.064039797355015489556,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.60156765813598053508,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.068745323835736442614,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.53068028592624516164,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.072941885005653061354,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.45586394443342026721,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.076598410645870674529,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.37767254711968921632,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.079687828912071601909,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.29668499534402827050,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.082187266704339709517,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.21350089231686557894,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.084078218979661934934,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.12873610380938478865,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.085346685739338627492,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.043018198473708607227,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.085983275670394747490,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(0.043018198473708607227,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.085983275670394747490,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(0.12873610380938478865,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.085346685739338627492,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(0.21350089231686557894,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.084078218979661934934,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(0.29668499534402827050,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.082187266704339709517,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(0.37767254711968921632,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.079687828912071601909,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(0.45586394443342026721,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.076598410645870674529,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(0.53068028592624516164,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.072941885005653061354,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(0.60156765813598053508,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.068745323835736442614,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(0.66800123658552106210,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.064039797355015489556,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(0.72948917159355658209,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.058860144245324817310,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(0.78557623013220651283,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.053244713977759919092,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(0.83584716699247530642,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.047235083490265978417,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(0.87992980089039713198,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.040875750923644895474,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(0.91749777451565906608,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.034213810770307229921,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(0.94827298439950754520,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.027298621498568779094,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(0.97202769104969794934,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.020181515297735471532,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(0.98858647890221223807,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.012915947284065574404,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(0.99783046248408583620,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.0055657196642450453612,w_tolerance));
}

TEST_CASE("37 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(37);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99794458247791364894,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0052730572794979393518,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.98918596321431918668,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.012238780100307556526,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.97349303005648574433,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.019129044489083966044,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.95097234326209482133,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.025886036990558933523,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.92178143741246374267,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.032461639847521481067,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.88612496215548607895,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.038809602501934544489,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.84425298734055596799,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.044885364662437166657,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.79645920050990229339,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.050646297654824601604,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.74307883398196526255,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.056051987998274917809,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.68448630913095935745,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.061064516523225986131,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.62109260840892448315,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.065648722872751249484,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.55334239186158178124,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.069772451555700344885,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.48171087780320555415,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.073406777248488172725,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.40670050931832611010,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.076526207570529237886,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.32883742988370699950,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.079108861837529380767,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.24866779279136575881,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.081136624508465030510,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.16675393023985197697,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.082595272236437250891,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.083670408954769901943,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.083474573625862787252,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.083768360993138904797,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(0.083670408954769901943,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.083474573625862787252,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(0.16675393023985197697,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.082595272236437250891,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(0.24866779279136575881,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.081136624508465030510,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(0.32883742988370699950,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.079108861837529380767,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(0.40670050931832611010,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.076526207570529237886,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(0.48171087780320555415,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.073406777248488172725,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(0.55334239186158178124,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.069772451555700344885,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(0.62109260840892448315,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.065648722872751249484,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(0.68448630913095935745,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.061064516523225986131,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(0.74307883398196526255,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.056051987998274917809,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(0.79645920050990229339,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.050646297654824601604,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(0.84425298734055596799,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.044885364662437166657,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(0.88612496215548607895,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.038809602501934544489,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(0.92178143741246374267,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.032461639847521481067,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(0.95097234326209482133,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.025886036990558933523,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(0.97349303005648574433,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.019129044489083966044,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(0.98918596321431918668,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.012238780100307556526,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(0.99794458247791364894,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.0052730572794979393518,w_tolerance));
}

TEST_CASE("38 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(38);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99804993053568761981,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0050028807496393456759,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.98973945426638557194,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.011613444716468674178,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.97484632859015350764,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.018156577709613236899,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.95346633093352959567,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.024579739738232375895,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.92574133204858439683,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.030839500545175054659,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.89185573900463221680,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.036894081594024738165,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.85203502193236218886,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.042703158504674434236,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.80654416760531681555,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.048228061860758683374,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.75568590375397068074,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.053432019910332319974,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.69979868037918435591,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.058280399146997206022,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.63925441582968170718,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.062740933392133054053,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.57445602104780708113,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.066783937979140411935,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.50583471792793110324,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.070382507066898954739,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.43384716943237648437,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.073512692584743457145,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.35897244047943501326,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.076153663548446396066,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.28170880979016526136,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.078287844658210948075,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.20257045389211670320,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.079901033243527821586,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.12208402533786741987,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.080982493770597100623,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.040785147904578239913,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.081525029280385786699,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(0.040785147904578239913,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.081525029280385786699,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(0.12208402533786741987,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.080982493770597100623,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(0.20257045389211670320,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.079901033243527821586,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(0.28170880979016526136,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.078287844658210948075,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(0.35897244047943501326,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.076153663548446396066,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(0.43384716943237648437,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.073512692584743457145,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(0.50583471792793110324,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.070382507066898954739,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(0.57445602104780708113,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.066783937979140411935,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(0.63925441582968170718,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.062740933392133054053,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(0.69979868037918435591,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.058280399146997206022,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(0.75568590375397068074,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.053432019910332319974,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(0.80654416760531681555,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.048228061860758683374,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(0.85203502193236218886,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.042703158504674434236,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(0.89185573900463221680,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.036894081594024738165,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(0.92574133204858439683,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.030839500545175054659,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(0.95346633093352959567,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.024579739738232375895,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(0.97484632859015350764,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.018156577709613236899,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(0.98973945426638557194,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.011613444716468674178,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(0.99804993053568761981,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.0050028807496393456759,w_tolerance));
}

TEST_CASE("39 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(39);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99814738306643290601,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0047529446916351013707,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99025153685468598364,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.011034788939164594243,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.97609870933347105384,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.017256229093724919041,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.95577521232465227711,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.023369384832178164595,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.92940914848673822970,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.029334955983903378592,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.89716711929299288785,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.035115111498131330761,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.85925293799990615391,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.040673276847933843939,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.81590629743014310435,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.045974301108916631884,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.76740124293106349983,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.050984665292129405214,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.71404443589453467913,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.055672690340916299907,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.65617321343201091073,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.060008736088596149575,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.59415345495727798869,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.063965388138682388987,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.52837726866043747390,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.067517630966231265363,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.45926051230913604866,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.070643005970608760770,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.38724016397156145585,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.073321753414268617381,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.31277155924818592254,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.075536937322836057705,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.23632551246183576734,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.077274552544682016729,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.15838533999783779992,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.078523613287371176725,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.079443804608755477582,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.079276222568368471010,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.079527622139442852417,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(0.079443804608755477582,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.079276222568368471010,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(0.15838533999783779992,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.078523613287371176725,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(0.23632551246183576734,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.077274552544682016729,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(0.31277155924818592254,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.075536937322836057705,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(0.38724016397156145585,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.073321753414268617381,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(0.45926051230913604866,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.070643005970608760770,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(0.52837726866043747390,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.067517630966231265363,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(0.59415345495727798869,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.063965388138682388987,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(0.65617321343201091073,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.060008736088596149575,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(0.71404443589453467913,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.055672690340916299907,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(0.76740124293106349983,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.050984665292129405214,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(0.81590629743014310435,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.045974301108916631884,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(0.85925293799990615391,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.040673276847933843939,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(0.89716711929299288785,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.035115111498131330761,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(0.92940914848673822970,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.029334955983903378592,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(0.95577521232465227711,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.023369384832178164595,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(0.97609870933347105384,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.017256229093724919041,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(0.99025153685468598364,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.011034788939164594243,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(0.99814738306643290601,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.0047529446916351013707,w_tolerance));
}

TEST_CASE("40 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(40);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99823770971055920035,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0045212770985331912584,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99072623869945700645,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.010498284531152813615,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.97725994998377426266,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.016421058381907888713,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.95791681921379165580,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.022245849194166957262,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.93281280827867653336,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.027937006980023401098,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.90209880696887429673,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.033460195282547847393,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.86595950321225950382,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.038782167974472017640,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.82461223083331166320,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.043870908185673271992,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.77830565142651938769,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.048695807635072232061,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.72731825518992710328,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.053227846983936824355,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.67195668461417954838,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.057439769099391551367,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.61255388966798023795,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.061306242492928939167,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.54946712509512820208,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.064804013456601038075,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.48307580168617871291,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.067912045815233903826,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.41377920437160500153,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.070611647391286779695,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.34199409082575847301,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.072886582395804059060,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.26815218500725368114,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.074723169057968264200,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.19269758070137109972,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.076110361900626242372,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.11608407067525520848,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.077039818164247965588,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.038772417506050821933,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.077505947978424811264,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(0.038772417506050821933,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.077505947978424811264,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(0.11608407067525520848,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.077039818164247965588,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(0.19269758070137109972,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.076110361900626242372,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(0.26815218500725368114,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.074723169057968264200,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(0.34199409082575847301,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.072886582395804059060,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(0.41377920437160500153,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.070611647391286779695,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(0.48307580168617871291,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.067912045815233903826,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(0.54946712509512820208,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.064804013456601038075,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(0.61255388966798023795,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.061306242492928939167,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(0.67195668461417954838,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.057439769099391551367,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(0.72731825518992710328,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.053227846983936824355,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(0.77830565142651938769,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.048695807635072232061,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(0.82461223083331166320,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.043870908185673271992,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(0.86595950321225950382,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.038782167974472017640,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(0.90209880696887429673,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.033460195282547847393,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(0.93281280827867653336,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.027937006980023401098,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(0.95791681921379165580,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.022245849194166957262,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(0.97725994998377426266,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.016421058381907888713,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(0.99072623869945700645,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.010498284531152813615,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(0.99823770971055920035,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.0045212770985331912584,w_tolerance));
}

TEST_CASE("41 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(41);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99832158857477144152,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0043061403581648876839,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99116710969901630825,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0099999387739059453385,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.97833867356108338447,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.015644938407818588531,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.95990689173034622610,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.021201063368779553076,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.93597698749785382568,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.026635899207110445468,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.90668594475810117296,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.031918211731699281787,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.87220151169244140883,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.037017716703507988435,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.83272120040136133124,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.041905195195909689429,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.78847114504740937274,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.046552648369014342061,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.73970480306992618106,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.050933454294617494781,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.68670150203495128958,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.055022519242578741880,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.62976483907219632049,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.058796420949871944991,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.56922094161021586965,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.062233542580966316472,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.50541659919940603271,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.065314196453527410436,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.43871727705140708852,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.068020736760876766736,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.36950502264048144143,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.070337660620817497482,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.29817627734182486592,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.072251696861023073396,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.22513960563342277561,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.073751882027223469939,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.15081335486399216357,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.074829623176221551891,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.075623258989162996924,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.075478747092715824027,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.075695535647298372319,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(0.075623258989162996924,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.075478747092715824027,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(0.15081335486399216357,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.074829623176221551891,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(0.22513960563342277561,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.073751882027223469939,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(0.29817627734182486592,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.072251696861023073396,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(0.36950502264048144143,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.070337660620817497482,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(0.43871727705140708852,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.068020736760876766736,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(0.50541659919940603271,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.065314196453527410436,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(0.56922094161021586965,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.062233542580966316472,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(0.62976483907219632049,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.058796420949871944991,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(0.68670150203495128958,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.055022519242578741880,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(0.73970480306992618106,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.050933454294617494781,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(0.78847114504740937274,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.046552648369014342061,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(0.83272120040136133124,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.041905195195909689429,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(0.87220151169244140883,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.037017716703507988435,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(0.90668594475810117296,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.031918211731699281787,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(0.93597698749785382568,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.026635899207110445468,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(0.95990689173034622610,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.021201063368779553076,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(0.97833867356108338447,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.015644938407818588531,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(0.99116710969901630825,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.0099999387739059453385,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0.99832158857477144152,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.0043061403581648876839,w_tolerance));
}

TEST_CASE("42 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(42);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99839961899006241502,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0041059986046490846106,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99157728834086091979,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0095362203017485024118,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.97934250806374819371,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.014922443697357494145,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.96175936533820448875,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.020227869569052644757,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.93892355735498817853,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.025422959526113047887,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.91095972490412745258,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.030479240699603468363,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.87802056981217274271,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.035369071097592110833,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.84028598326181690093,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.040065735180692261761,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.79796205325548741323,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.044543577771965877874,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.75127993568948048957,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.048778140792803245027,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.70049459055617121374,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.052746295699174070344,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.64588338886924783396,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.056426369358018381646,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.58774459748510932284,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.059798262227586654313,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.52639574993119228759,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.062843558045002576409,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.46217191207042192976,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.065545624364908978927,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.39542385204297505768,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.067889703376521944855,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.32651612446541151220,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.069862992492594159766,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.25582507934287908397,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.071454714265170982922,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.18373680656485455085,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.072656175243804104888,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.11064502720851986835,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.073460813453467528264,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.036948943165351775813,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.073864234232172879996,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(0.036948943165351775813,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.073864234232172879996,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(0.11064502720851986835,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.073460813453467528264,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(0.18373680656485455085,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.072656175243804104888,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(0.25582507934287908397,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.071454714265170982922,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(0.32651612446541151220,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.069862992492594159766,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(0.39542385204297505768,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.067889703376521944855,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(0.46217191207042192976,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.065545624364908978927,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(0.52639574993119228759,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.062843558045002576409,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(0.58774459748510932284,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.059798262227586654313,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(0.64588338886924783396,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.056426369358018381646,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(0.70049459055617121374,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.052746295699174070344,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(0.75127993568948048957,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.048778140792803245027,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(0.79796205325548741323,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.044543577771965877874,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(0.84028598326181690093,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.040065735180692261761,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(0.87802056981217274271,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.035369071097592110833,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(0.91095972490412745258,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.030479240699603468363,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(0.93892355735498817853,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.025422959526113047887,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(0.96175936533820448875,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.020227869569052644757,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(0.97934250806374819371,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.014922443697357494145,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0.99157728834086091979,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.0095362203017485024118,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.99839961899006241502,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.0041059986046490846106,w_tolerance));
}

TEST_CASE("43 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(43);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99847233224250771352,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0039194902538441272829,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99195955759324414642,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0091039966374014033189,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.98027822098025533151,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.014248756431576486109,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.96348661301407999341,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.019319901423683900396,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.94167195684763786182,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.024290456613838815902,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.91494790720613872946,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.029134413261498494916,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.88345376521861686334,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.033826492086860292345,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.84735371620931504900,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.038342222194132657572,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.80683596413693863528,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.042658057197982083764,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.76211174719495512146,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.046751494754346580011,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.71341423526895705485,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.050601192784390156524,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.66099731375149813317,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.054187080318881786863,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.60513425963960093573,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.057490461956910519428,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.54611631666008471914,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.060494115249991294520,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.48425117678573472407,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.063182380449396112326,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.41986137602926925249,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.065541242126322797491,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.35328261286430380665,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.067558402229365169192,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.28486199803291362711,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.069223344193656684282,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.21495624486051820901,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.070527387765085028126,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.14392980951071331077,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.071463734252514141298,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.072152990874586235422,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.072027501971421974345,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.072215751693798987977,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(0.072152990874586235422,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.072027501971421974345,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(0.14392980951071331077,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.071463734252514141298,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(0.21495624486051820901,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.070527387765085028126,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(0.28486199803291362711,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.069223344193656684282,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(0.35328261286430380665,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.067558402229365169192,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(0.41986137602926925249,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.065541242126322797491,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(0.48425117678573472407,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.063182380449396112326,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(0.54611631666008471914,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.060494115249991294520,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(0.60513425963960093573,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.057490461956910519428,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(0.66099731375149813317,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.054187080318881786863,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(0.71341423526895705485,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.050601192784390156524,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(0.76211174719495512146,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.046751494754346580011,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(0.80683596413693863528,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.042658057197982083764,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(0.84735371620931504900,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.038342222194132657572,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(0.88345376521861686334,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.033826492086860292345,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(0.91494790720613872946,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.029134413261498494916,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(0.94167195684763786182,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.024290456613838815902,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(0.96348661301407999341,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.019319901423683900396,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0.98027822098025533151,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.014248756431576486109,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.99195955759324414642,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.0091039966374014033189,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.99847233224250771352,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.0039194902538441272829,w_tolerance));
}

TEST_CASE("44 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(44);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99854020063677422494,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0037454048031127775152,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99231639213851580848,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0087004813675248441225,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.98115183307791396666,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.013619586755579985520,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.96509965042249313939,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.018471481736814749172,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.94423950911819409920,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.023231481902019210629,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.91867525998417577432,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.027875782821281010081,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.88853423828604320234,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.032381222812069820881,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.85396659500471037873,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.036725347813808873643,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.81514453964513501049,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.040886512310346218908,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.77226147924875589902,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.044843984081970031446,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.72553105366071700261,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.048578046448352037528,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.67518607066612236533,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.052070096091704461881,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.62147734590357584780,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.055302735563728052549,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.56467245318547076842,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.058259859877595495334,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.50505439138820231798,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.060926736701561968039,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.44292017452541148383,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.063290079733203854950,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.37857935201470713251,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.065338114879181434984,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.31235246650278581224,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.067060638906293652396,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.24456945692820125151,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.068449070269366660985,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.17556801477551678575,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.069496491861572578037,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.10569190170865324712,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.070197685473558212587,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.035289236964135359058,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.070549157789354068811,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(0.035289236964135359058,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.070549157789354068811,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(0.10569190170865324712,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.070197685473558212587,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(0.17556801477551678575,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.069496491861572578037,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(0.24456945692820125151,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.068449070269366660985,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(0.31235246650278581224,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.067060638906293652396,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(0.37857935201470713251,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.065338114879181434984,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(0.44292017452541148383,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.063290079733203854950,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(0.50505439138820231798,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.060926736701561968039,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(0.56467245318547076842,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.058259859877595495334,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(0.62147734590357584780,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.055302735563728052549,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(0.67518607066612236533,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.052070096091704461881,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(0.72553105366071700261,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.048578046448352037528,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(0.77226147924875589902,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.044843984081970031446,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(0.81514453964513501049,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.040886512310346218908,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(0.85396659500471037873,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.036725347813808873643,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(0.88853423828604320234,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.032381222812069820881,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(0.91867525998417577432,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.027875782821281010081,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(0.94423950911819409920,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.023231481902019210629,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0.96509965042249313939,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.018471481736814749172,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.98115183307791396666,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.013619586755579985520,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.99231639213851580848,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.0087004813675248441225,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.99854020063677422494,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.0037454048031127775152,w_tolerance));
}

TEST_CASE("45 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(45);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99860364518193663816,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0035826631552835589312,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99264999844720374175,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0083231892962182416457,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.98196871503454056824,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.013031104991582784321,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.96660831039689460474,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.017677535257937590617,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.94664169099562906178,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.022239847550578732394,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.92216393671900038810,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.026696213967577664806,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.89329167175324173846,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.031025374934515467163,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.86016247596066422534,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.035206692201609016248,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.82293422050208633704,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.039220236729302447564,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.78178431259390629131,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.043046880709164971152,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.73690884894549035262,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.046668387718373365268,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.68852168077120052523,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.050067499237952029799,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.63685339445322335927,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.053228016731268951946,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.58215021256935318668,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.056134878759786476644,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.52467282046291606709,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.058774232718841738574,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.46469512391963509858,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.061133500831066522502,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.40250294385854191408,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.063201440073819937750,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.33839265425060216164,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.064968195750723430854,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.27266976975237756061,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.066425348449842528083,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.20564748978326374572,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.067565954163607536271,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.13764520598325302876,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.068384577378669674532,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.068986980163144172490,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.068877316977661322882,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.069041824829232020111,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(0.068986980163144172490,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.068877316977661322882,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(0.13764520598325302876,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.068384577378669674532,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(0.20564748978326374572,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.067565954163607536271,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(0.27266976975237756061,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.066425348449842528083,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(0.33839265425060216164,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.064968195750723430854,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(0.40250294385854191408,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.063201440073819937750,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(0.46469512391963509858,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.061133500831066522502,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(0.52467282046291606709,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.058774232718841738574,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(0.58215021256935318668,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.056134878759786476644,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(0.63685339445322335927,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.053228016731268951946,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(0.68852168077120052523,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.050067499237952029799,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(0.73690884894549035262,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.046668387718373365268,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(0.78178431259390629131,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.043046880709164971152,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(0.82293422050208633704,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.039220236729302447564,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(0.86016247596066422534,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.035206692201609016248,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(0.89329167175324173846,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.031025374934515467163,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(0.92216393671900038810,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.026696213967577664806,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0.94664169099562906178,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.022239847550578732394,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.96660831039689460474,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.017677535257937590617,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.98196871503454056824,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.013031104991582784321,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.99264999844720374175,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.0083231892962182416457,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.99860364518193663816,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.0035826631552835589312,w_tolerance));
}

TEST_CASE("46 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(46);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99866304213381798113,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0034303008681070482860,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99296234890617436407,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0079698982297246224516,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.98273366980416686348,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.012479883770988684207,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.96802139185399194274,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.016933514007836238046,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.94889236344608979562,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.021309998754136501054,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.92543379880675395098,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.025589286397130010635,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.89775271153394196570,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.029751829552202755799,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.86597539486685806292,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.033778627999106896521,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.83024683706606605303,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.037651305357386071328,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.79073005707527425519,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.041352190109678729704,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.74760535961566605400,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.044864395277318126767,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.70106951202040569751,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.048171895101712200530,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.65133484620199771511,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.051259598007143021335,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.59862828971271515318,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.054113415385856754492,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.54319033026180263527,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.056720325843991235817,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.48527391838816466277,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.059068434595546314808,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.42514331328282839732,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.061147027724650481015,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.36307287702099571012,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.062946621064394508179,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.29934582270187001548,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.064459003467139069588,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.23425292220626976863,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.065677274267781207379,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.16809117946710352861,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.066595874768454887376,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.10116247530558423952,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.067210613600678175862,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.033772190016052041520,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.067518685849036458820,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(0.033772190016052041520,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.067518685849036458820,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(0.10116247530558423952,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.067210613600678175862,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(0.16809117946710352861,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.066595874768454887376,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(0.23425292220626976863,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.065677274267781207379,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(0.29934582270187001548,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.064459003467139069588,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(0.36307287702099571012,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.062946621064394508179,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(0.42514331328282839732,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.061147027724650481015,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(0.48527391838816466277,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.059068434595546314808,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(0.54319033026180263527,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.056720325843991235817,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(0.59862828971271515318,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.054113415385856754492,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(0.65133484620199771511,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.051259598007143021335,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(0.70106951202040569751,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.048171895101712200530,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(0.74760535961566605400,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.044864395277318126767,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(0.79073005707527425519,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.041352190109678729704,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(0.83024683706606605303,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.037651305357386071328,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(0.86597539486685806292,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.033778627999106896521,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(0.89775271153394196570,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.029751829552202755799,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0.92543379880675395098,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.025589286397130010635,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.94889236344608979562,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.021309998754136501054,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.96802139185399194274,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.016933514007836238046,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.98273366980416686348,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.012479883770988684207,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.99296234890617436407,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.0079698982297246224516,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.99866304213381798113,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.0034303008681070482860,w_tolerance));
}

TEST_CASE("47 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(47);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99871872858421210918,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0032874538425280148832,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99325521098776863469,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0076386162958488336141,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.98345100307162370876,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.011962848464312320964,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.96934678732656449715,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.016235333146433059671,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.95100396925770844259,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.020436938147668427642,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.92850269301236064820,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.024549211659658818538,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.90194132943852535687,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.028554150700643386505,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.87143601579689631694,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.032434235515184756768,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.83712013989990212128,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.036172496584174951613,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.79914375416774194292,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.039752586122531003781,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.75767291844543863357,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.043158848648479538268,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.71288897340906430166,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.046376389086505911204,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.66498774739033272914,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.049391137747361169605,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.61417869995637360860,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.052189911780057144872,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.56068400593466419448,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.054760472781530225957,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.50473758386357791977,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.057091580293231540222,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.44658407310485570273,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.059173040942338875976,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.38647776408466713958,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.060995753008739645331,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.32468148633773590221,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.062551746220921662641,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.26146545921497457031,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.063834216605717030631,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.19710611027911180796,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.064837556238945726703,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.13188486655451489705,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.065557377766549740251,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.066086923916355675160,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.065990533588810474534,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.066135129623655479653,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(0.066086923916355675160,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.065990533588810474534,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(0.13188486655451489705,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.065557377766549740251,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(0.19710611027911180796,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.064837556238945726703,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(0.26146545921497457031,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.063834216605717030631,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(0.32468148633773590221,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.062551746220921662641,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(0.38647776408466713958,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.060995753008739645331,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(0.44658407310485570273,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.059173040942338875976,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(0.50473758386357791977,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.057091580293231540222,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(0.56068400593466419448,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.054760472781530225957,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(0.61417869995637360860,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.052189911780057144872,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(0.66498774739033272914,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.049391137747361169605,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(0.71288897340906430166,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.046376389086505911204,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(0.75767291844543863357,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.043158848648479538268,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(0.79914375416774194292,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.039752586122531003781,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(0.83712013989990212128,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.036172496584174951613,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(0.87143601579689631694,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.032434235515184756768,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0.90194132943852535687,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.028554150700643386505,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.92850269301236064820,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.024549211659658818538,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.95100396925770844259,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.020436938147668427642,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.96934678732656449715,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.016235333146433059671,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.98345100307162370876,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.011962848464312320964,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.99325521098776863469,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.0076386162958488336141,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.99871872858421210918,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.0032874538425280148832,w_tolerance));
}

TEST_CASE("48 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(48);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99877100725242611860,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0031533460523058386327,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99353017226635075755,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0073275539012762621024,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.98412458372282685774,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.011477234579234539490,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.97059159254624725046,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.015579315722943848728,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.95298770316043086072,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.019616160457355527814,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.93138669070655433311,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.023570760839324379141,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.90587913671556967282,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.027426509708356948200,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.87657202027424788591,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.031167227832798088902,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.84358826162439353071,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.034777222564770438893,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.80706620402944262708,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.038241351065830706317,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.76715903251574033925,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.041545082943464749214,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.72403413092381465467,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.044674560856694280419,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.67787237963266390521,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.047616658492490474826,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.62886739677651362400,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.050359035553854474958,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.57722472608397270382,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.052890189485193667096,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.52316097472223303368,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.055199503699984162868,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.46690290475095840454,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.057277292100403215705,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.40868648199071672992,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.059114839698395635746,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.34875588629216073816,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.060704439165893880053,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.28736248735545557674,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.062039423159892663904,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.22476379039468906122,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.063114192286254025657,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.16122235606889171806,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.063924238584648186624,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.097004699209462698930,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.064466164435950082206,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.032380170962869362033,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.064737696812683922503,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(0.032380170962869362033,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.064737696812683922503,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(0.097004699209462698930,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.064466164435950082206,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(0.16122235606889171806,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.063924238584648186624,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(0.22476379039468906122,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.063114192286254025657,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(0.28736248735545557674,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.062039423159892663904,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(0.34875588629216073816,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.060704439165893880053,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(0.40868648199071672992,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.059114839698395635746,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(0.46690290475095840454,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.057277292100403215705,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(0.52316097472223303368,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.055199503699984162868,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(0.57722472608397270382,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.052890189485193667096,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(0.62886739677651362400,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.050359035553854474958,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(0.67787237963266390521,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.047616658492490474826,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(0.72403413092381465467,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.044674560856694280419,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(0.76715903251574033925,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.041545082943464749214,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(0.80706620402944262708,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.038241351065830706317,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(0.84358826162439353071,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.034777222564770438893,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0.87657202027424788591,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.031167227832798088902,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.90587913671556967282,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.027426509708356948200,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.93138669070655433311,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.023570760839324379141,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.95298770316043086072,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.019616160457355527814,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.97059159254624725046,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.015579315722943848728,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.98412458372282685774,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.011477234579234539490,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.99353017226635075755,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.0073275539012762621024,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.99877100725242611860,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.0031533460523058386327,w_tolerance));
}

TEST_CASE("49 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(49);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99882015060663537936,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0030272789889229050775,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99378866194416779076,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0070350995900864514735,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.98475789591421300436,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.011020551031593580498,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.97176220090155538014,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.014962144935624651030,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.95485365867413723356,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.018843595853089458444,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.93410029475581014906,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.022649201587446676499,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.90958565582807328521,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.026363618927066016961,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.88140844557300891004,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.029971884620583825351,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.84968211984416570104,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.033459466791622174342,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.81453442735985543154,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.036812320963000689819,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.77610689434544663502,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.040016945766373021369,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.73455425423740269621,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.043060436981259597988,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.69004382442513211350,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.045930539355595853542,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.64275483241923766406,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.048615695887828240278,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.59287769410890071246,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.051105094330144590675,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.54061324699172606656,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.053388710708258968528,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.48617194145249204218,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.055457349674803588690,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.42977299334157652466,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.057302681530187475485,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.37164350126228488886,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.058917275760027266025,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.31201753211974876221,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.060294630953152017303,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.25113517861257727351,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.061429200979192936297,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.18924159246181358649,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.062316417320057267401,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.12658599726967205107,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.062952707465195699474,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.063420684982686786029,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.063335509296491748591,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.063463281404790597718,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(0.063420684982686786029,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.063335509296491748591,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(0.12658599726967205107,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.062952707465195699474,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(0.18924159246181358649,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.062316417320057267401,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(0.25113517861257727351,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.061429200979192936297,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(0.31201753211974876221,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.060294630953152017303,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(0.37164350126228488886,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.058917275760027266025,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(0.42977299334157652466,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.057302681530187475485,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(0.48617194145249204218,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.055457349674803588690,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(0.54061324699172606656,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.053388710708258968528,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(0.59287769410890071246,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.051105094330144590675,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(0.64275483241923766406,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.048615695887828240278,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(0.69004382442513211350,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.045930539355595853542,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(0.73455425423740269621,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.043060436981259597988,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(0.77610689434544663502,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.040016945766373021369,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(0.81453442735985543154,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.036812320963000689819,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0.84968211984416570104,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.033459466791622174342,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.88140844557300891004,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.029971884620583825351,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.90958565582807328521,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.026363618927066016961,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.93410029475581014906,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.022649201587446676499,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.95485365867413723356,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.018843595853089458444,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.97176220090155538014,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.014962144935624651030,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.98475789591421300436,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.011020551031593580498,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.99378866194416779076,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.0070350995900864514735,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.99882015060663537936,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.0030272789889229050775,w_tolerance));
}

TEST_CASE("50 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(50);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99886640442007105019,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0029086225531551409584,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99403196943209071258,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0067597991957454015028,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.98535408404800588231,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.010590548383650969264,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.97286438510669207371,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.014380822761485574419,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.95661095524280794300,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.018115560713489390351,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.93665661894487793378,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.021780243170124792982,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.91307855665579189309,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.025360673570012390440,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.88596797952361304864,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.028842993580535198030,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.85542976942994608461,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.032213728223578016648,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.82158207085933594836,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.035459835615146154161,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.78455583290039926391,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.038568756612587675245,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.74449430222606853826,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.041528463090147697422,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.70155246870682225109,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.044327504338803275492,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.65589646568543936078,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.046955051303948432966,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.60770292718495023918,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.049400938449466314921,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.55715830451465005432,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.051655703069581138490,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.50445814490746420165,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.053710621888996246523,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.44980633497403878915,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.055557744806212517624,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.39341431189756512739,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.057189925647728383723,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.33550024541943735684,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.058600849813222445835,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.27628819377953199033,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.059785058704265457510,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.21600723687604175685,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.060737970841770216032,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.15489058999814590207,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.061455899590316663756,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.093174701560086140854,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.061936067420683243384,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.031098338327188876112,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.062176616655347262321,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(0.031098338327188876112,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.062176616655347262321,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(0.093174701560086140854,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.061936067420683243384,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(0.15489058999814590207,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.061455899590316663756,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(0.21600723687604175685,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.060737970841770216032,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(0.27628819377953199033,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.059785058704265457510,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(0.33550024541943735684,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.058600849813222445835,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(0.39341431189756512739,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.057189925647728383723,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(0.44980633497403878915,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.055557744806212517624,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(0.50445814490746420165,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.053710621888996246523,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(0.55715830451465005432,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.051655703069581138490,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(0.60770292718495023918,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.049400938449466314921,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(0.65589646568543936078,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.046955051303948432966,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(0.70155246870682225109,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.044327504338803275492,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(0.74449430222606853826,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.041528463090147697422,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(0.78455583290039926391,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.038568756612587675245,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0.82158207085933594836,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.035459835615146154161,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.85542976942994608461,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.032213728223578016648,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.88596797952361304864,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.028842993580535198030,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.91307855665579189309,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.025360673570012390440,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.93665661894487793378,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.021780243170124792982,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.95661095524280794300,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.018115560713489390351,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.97286438510669207371,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.014380822761485574419,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.98535408404800588231,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.010590548383650969264,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.99403196943209071258,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.0067597991957454015028,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.99886640442007105019,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.0029086225531551409584,w_tolerance));
}

TEST_CASE("51 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(51);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99890999084890349517,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0027968071710898955755,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99426126043675257462,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0065003377832526002921,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.98591599173590299658,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.010185191297821729939,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.97390336801932386723,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.013832634006477822297,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.95826784861390819456,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.017428714723401052260,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.93906754400296238344,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.020959988401703210580,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.91637386230978023082,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.024413300573781434273,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.89027121802952730328,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.027775798594162477196,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.86085671118229237147,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.031034971290160008454,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.82823976382306483285,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.034178693204188336236,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.79254171209938120523,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.037195268923260292843,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.75389535448537552576,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.040073476285496453187,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.71244445757703664458,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.042802607997880086654,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.66834322117537008686,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.045372511407650068748,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.62175570460072327375,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.047773626240623102000,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.57285521635130383652,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.049997020150057409780,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.52182366936618584251,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.052034421936697087564,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.46885090428604106361,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.053878252313045561434,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.41413398322630387794,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.055521652095738693017,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.35787645668840950978,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.056958507720258662100,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.30028760633533193953,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.058183473982592140598,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.24158166644779870385,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.059191993922961543784,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.18197702695707754532,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.059980315777503252090,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.12169542101888876696,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.060545506934737795138,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.060961100150578724734,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.060885464844856343881,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.060998924841205880160,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(0.060961100150578724734,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.060885464844856343881,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(0.12169542101888876696,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.060545506934737795138,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(0.18197702695707754532,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.059980315777503252090,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(0.24158166644779870385,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.059191993922961543784,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(0.30028760633533193953,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.058183473982592140598,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(0.35787645668840950978,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.056958507720258662100,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(0.41413398322630387794,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.055521652095738693017,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(0.46885090428604106361,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.053878252313045561434,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(0.52182366936618584251,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.052034421936697087564,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(0.57285521635130383652,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.049997020150057409780,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(0.62175570460072327375,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.047773626240623102000,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(0.66834322117537008686,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.045372511407650068748,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(0.71244445757703664458,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.042802607997880086654,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(0.75389535448537552576,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.040073476285496453187,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0.79254171209938120523,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.037195268923260292843,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.82823976382306483285,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.034178693204188336236,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.86085671118229237147,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.031034971290160008454,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.89027121802952730328,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.027775798594162477196,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.91637386230978023082,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.024413300573781434273,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.93906754400296238344,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.020959988401703210580,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.95826784861390819456,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.017428714723401052260,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.97390336801932386723,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.013832634006477822297,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.98591599173590299658,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.010185191297821729939,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.99426126043675257462,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.0065003377832526002921,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.99890999084890349517,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.0027968071710898955755,w_tolerance));
}

TEST_CASE("52 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(52);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99895111110395027809,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0026913169500471111190,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99447759092921602925,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0062555239629732768997,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.98644619565154984065,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0098026345794627520620,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.97488388422174450314,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.013315114982340960657,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.95983182693308655253,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.016780023396300735678,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.94134385364135905684,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.020184891507980792203,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.91948612891642453989,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.023517513553984461590,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.89433689053449532252,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.026765953746504013449,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.86598616284606758524,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.029918581147143946641,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.83453543232673453496,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.032964109089718797915,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.80009728343046832433,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.035891634835097232942,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.76279499519374496028,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.038690678310423978985,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.72276209974998319368,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.041351219500560271679,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.68014190422716770209,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.043863734259000407995,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.63508697769524592430,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.046219228372784793508,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.58775860497957906990,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.048409269744074896854,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.53832620928582743838,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.050426018566342377218,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.48696674569809607778,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.052262255383906993034,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.43386406771876167031,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.053911406932757264751,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.37920826911609366925,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.055367569669302652549,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.32319500343480782550,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.056625530902368597191,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.26602478360500182747,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.057680787452526827654,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.20790226415636605969,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.058529561771813868550,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.14903550860694918049,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.059168815466042970369,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.089635244648900565489,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.059596260171248158258,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.029914109797338766044,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.059810365745291860248,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(0.029914109797338766044,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.059810365745291860248,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(0.089635244648900565489,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.059596260171248158258,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(0.14903550860694918049,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.059168815466042970369,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(0.20790226415636605969,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.058529561771813868550,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(0.26602478360500182747,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.057680787452526827654,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(0.32319500343480782550,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.056625530902368597191,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(0.37920826911609366925,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.055367569669302652549,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(0.43386406771876167031,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.053911406932757264751,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(0.48696674569809607778,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.052262255383906993034,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(0.53832620928582743838,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.050426018566342377218,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(0.58775860497957906990,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.048409269744074896854,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(0.63508697769524592430,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.046219228372784793508,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(0.68014190422716770209,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.043863734259000407995,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(0.72276209974998319368,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.041351219500560271679,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0.76279499519374496028,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.038690678310423978985,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.80009728343046832433,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.035891634835097232942,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.83453543232673453496,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.032964109089718797915,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.86598616284606758524,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.029918581147143946641,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.89433689053449532252,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.026765953746504013449,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.91948612891642453989,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.023517513553984461590,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.94134385364135905684,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.020184891507980792203,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.95983182693308655253,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.016780023396300735678,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.97488388422174450314,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.013315114982340960657,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.98644619565154984065,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.0098026345794627520620,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.99447759092921602925,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.0062555239629732768997,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.99895111110395027809,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.0026913169500471111190,w_tolerance));
}

TEST_CASE("53 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(53);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99898994777632822712,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0025916837205670318116,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99468191930800707864,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0060242762269486732812,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.98694703502337152172,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0094412022849403443867,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.97581023371498458163,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.012826026144240379179,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.96130969462313633237,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.016166725256687463928,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.94349535346444187902,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.019451721107636895388,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.92242860304281212827,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.022669673057070208399,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.89818205787542662593,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.025809482510757517714,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.87083929755824135160,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.028860323617823736263,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.84049457654580137543,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.031811678459019323063,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.80725249841689547822,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.034653372583534237958,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.77122765492553230787,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.037375609803482915674,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.73254423080751025378,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.039969005843540382127,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.69133557560136672354,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.042424620634520013592,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.64774374391651006875,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.044733989103672810213,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.60191900571376932746,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.046889150340750314022,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.55401932827706788101,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.048882675032699140420,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.50420983165713343704,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.050707691069292715297,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.45266221946184579138,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.052357907229872718200,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.39955418695395297739,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.053827634868731029042,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.34506880849572235669,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.055111807523933599002,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.28939390645162620643,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.056205998381739709809,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.23272140372427259364,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.057106435536267191773,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.17524666215532575073,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.057810014991713196320,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.11716780907195515014,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.058314311362256007556,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.058685054300259465023,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.058617586232720263318,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.058718794151164364525,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(0.058685054300259465023,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.058617586232720263318,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(0.11716780907195515014,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.058314311362256007556,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(0.17524666215532575073,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.057810014991713196320,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(0.23272140372427259364,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.057106435536267191773,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(0.28939390645162620643,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.056205998381739709809,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(0.34506880849572235669,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.055111807523933599002,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(0.39955418695395297739,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.053827634868731029042,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(0.45266221946184579138,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.052357907229872718200,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(0.50420983165713343704,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.050707691069292715297,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(0.55401932827706788101,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.048882675032699140420,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(0.60191900571376932746,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.046889150340750314022,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(0.64774374391651006875,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.044733989103672810213,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(0.69133557560136672354,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.042424620634520013592,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0.73254423080751025378,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.039969005843540382127,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.77122765492553230787,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.037375609803482915674,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.80725249841689547822,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.034653372583534237958,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.84049457654580137543,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.031811678459019323063,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.87083929755824135160,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.028860323617823736263,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.89818205787542662593,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.025809482510757517714,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.92242860304281212827,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.022669673057070208399,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.94349535346444187902,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.019451721107636895388,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.96130969462313633237,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.016166725256687463928,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.97581023371498458163,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.012826026144240379179,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.98694703502337152172,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.0094412022849403443867,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.99468191930800707864,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.0060242762269486732812,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.99898994777632822712,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.0025916837205670318116,w_tolerance));
}

TEST_CASE("54 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(54);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99902666686734098385,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0024974818357615857759,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99487511701833888492,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0058056110152399848788,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.98742063739734355855,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0090993694555093969480,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.97668632885790323720,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.012363328128847644166,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.96270764578592358326,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.015586303035924131703,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.94553097516499585376,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.018757527621469377912,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.92521335986665148626,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.021866451422853085946,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.90182228628470158076,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.024902741467208773050,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.87543545406556893942,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.027856309310595870287,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.84614051597077294943,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.030717342497870676054,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.81403478591356783547,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.033476336464372645716,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.77922491534625402154,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.036124125840383552583,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.74182653880918431629,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.038651914782102516837,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.70196388971917291939,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.041051306136644974222,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.65976938763198312469,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.043314329309597015442,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.61538319833112737073,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.045433466728276713975,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.56895276819520942973,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.047401678806444991059,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.52063233438593307333,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.049212427324528886069,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.47058241248138228368,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.050859697146188144320,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.41896926325520452804,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.052338016198298744666,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.36596434037219118198,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.053642473647553611272,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.31174372083446822888,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.054768736213057986306,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.25648752006999730008,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.055713062560589987683,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.20037929360621356978,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.056472315730625965031,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.14360542731625615395,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.057043973558794598568,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.086354518263248215285,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.057426137054112114859,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.028816748199341777656,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.057617536707147024672,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(0.028816748199341777656,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.057617536707147024672,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(0.086354518263248215285,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.057426137054112114859,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(0.14360542731625615395,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.057043973558794598568,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(0.20037929360621356978,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.056472315730625965031,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(0.25648752006999730008,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.055713062560589987683,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(0.31174372083446822888,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.054768736213057986306,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(0.36596434037219118198,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.053642473647553611272,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(0.41896926325520452804,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.052338016198298744666,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(0.47058241248138228368,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.050859697146188144320,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(0.52063233438593307333,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.049212427324528886069,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(0.56895276819520942973,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.047401678806444991059,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(0.61538319833112737073,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.045433466728276713975,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(0.65976938763198312469,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.043314329309597015442,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0.70196388971917291939,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.041051306136644974222,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.74182653880918431629,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.038651914782102516837,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.77922491534625402154,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.036124125840383552583,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.81403478591356783547,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.033476336464372645716,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.84614051597077294943,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.030717342497870676054,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.87543545406556893942,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.027856309310595870287,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.90182228628470158076,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.024902741467208773050,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.92521335986665148626,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.021866451422853085946,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.94553097516499585376,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.018757527621469377912,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.96270764578592358326,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.015586303035924131703,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.97668632885790323720,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.012363328128847644166,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.98742063739734355855,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.0090993694555093969480,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.99487511701833888492,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.0058056110152399848788,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.99902666686734098385,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.0024974818357615857759,w_tolerance));
}

TEST_CASE("55 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(55);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99906141956481854148,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0024083236199797888192,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99505797784741187504,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0055986322665607673541,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.98786894119888919852,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0087757461070585281774,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.97751573550398920886,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.011925160719848612171,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.96403132859313519878,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.015036458333511788213,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.94745886804121074186,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.018099614520729062408,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.92785142472079169682,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.021104801668016454120,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.90527180074400002578,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.024042388009725622008,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.87979232241989550607,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.026902961456396270667,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.85149460661715447146,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.029677357765161041221,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.82046929855932091245,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.032356689226185831685,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.78681578112762236590,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.034932372873589887407,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.75064185634802190867,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.037396157867965545283,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.71206339998663783891,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.039740151874337179609,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.67120399031982639580,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.041956846317718762395,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.62819451224992814009,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.044039140421606589895,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.58317273802603210297,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.045980363946283838104,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.53628288590834329672,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.047774298551200695550,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.48767515818747409721,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.049415197711551739481,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.43750526003717459181,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.050897805124493979225,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.38593390074097942976,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.052217371545632084564,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.33312627889002388519,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.053369670001605472724,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.27925155320080653855,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.054351009329911102070,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.22448230064784548340,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.055158246002508687597,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.16899396364687320828,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.055788794195284087103,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.11296428805932926659,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.056240634071084368028,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.056572753818336776327,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.056512318249772001401,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.056602976444560425440,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(0.056572753818336776327,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.056512318249772001401,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(0.11296428805932926659,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.056240634071084368028,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(0.16899396364687320828,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.055788794195284087103,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(0.22448230064784548340,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.055158246002508687597,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(0.27925155320080653855,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.054351009329911102070,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(0.33312627889002388519,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.053369670001605472724,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(0.38593390074097942976,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.052217371545632084564,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(0.43750526003717459181,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.050897805124493979225,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(0.48767515818747409721,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.049415197711551739481,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(0.53628288590834329672,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.047774298551200695550,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(0.58317273802603210297,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.045980363946283838104,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(0.62819451224992814009,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.044039140421606589895,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0.67120399031982639580,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.041956846317718762395,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.71206339998663783891,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.039740151874337179609,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.75064185634802190867,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.037396157867965545283,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.78681578112762236590,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.034932372873589887407,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.82046929855932091245,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.032356689226185831685,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.85149460661715447146,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.029677357765161041221,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.87979232241989550607,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.026902961456396270667,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.90527180074400002578,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.024042388009725622008,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.92785142472079169682,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.021104801668016454120,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.94745886804121074186,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.018099614520729062408,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.96403132859313519878,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.015036458333511788213,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.97751573550398920886,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.011925160719848612171,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.98786894119888919852,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.0087757461070585281774,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.99505797784741187504,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.0055986322665607673541,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.99906141956481854148,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.0024083236199797888192,w_tolerance));
}

TEST_CASE("56 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(56);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99909434380146558435,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0023238553757732155011,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99523122608106974722,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0054025222460153377613,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.98829371554016151109,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0084690631633078876616,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.97830170914025638338,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.011509824340383382174,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.96528590190549018363,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.014515089278021471808,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.94928647956196263565,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.017475512911400946505,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.93035288024749630055,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.020381929882402572635,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.90854362042065549085,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.023225351562565316937,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.88392610832782754079,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.025996987058391952192,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.85657643376274863540,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.028688268473822741730,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.82657913214288165167,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.031290876747310447868,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.79402692289386649803,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.033796767115611761295,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.75902042270512890220,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.036198193872315186036,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.72166783445018808352,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.038487734259247662487,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.68208461269447045550,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.040658311384744517880,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.64039310680700689427,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.042703216084667086511,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.59672218277066332010,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.044616127652692283213,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.55120682485553461875,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.046391133373001896762,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.50398771838438171420,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.048022746793600258121,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.45521081487845957895,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.049505924683047578920,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.40502688092709127812,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.050836082617798480560,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.35359103217495452097,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.052009109151741399843,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.30106225386722066905,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.053021378524010763968,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.24760290943433720397,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.053869761865714485709,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.19337823863527525824,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.054551636870889421062,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.13855584681037624201,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.055064895901762425796,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.083305186822435374440,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.055407952503245123218,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.027797035287275437094,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.055579746306514395846,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(0.027797035287275437094,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.055579746306514395846,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(0.083305186822435374440,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.055407952503245123218,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(0.13855584681037624201,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.055064895901762425796,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(0.19337823863527525824,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.054551636870889421062,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(0.24760290943433720397,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.053869761865714485709,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(0.30106225386722066905,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.053021378524010763968,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(0.35359103217495452097,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.052009109151741399843,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(0.40502688092709127812,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.050836082617798480560,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(0.45521081487845957895,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.049505924683047578920,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(0.50398771838438171420,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.048022746793600258121,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(0.55120682485553461875,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.046391133373001896762,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(0.59672218277066332010,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.044616127652692283213,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0.64039310680700689427,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.042703216084667086511,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.68208461269447045550,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.040658311384744517880,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.72166783445018808352,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.038487734259247662487,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.75902042270512890220,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.036198193872315186036,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.79402692289386649803,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.033796767115611761295,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.82657913214288165167,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.031290876747310447868,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.85657643376274863540,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.028688268473822741730,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.88392610832782754079,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.025996987058391952192,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.90854362042065549085,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.023225351562565316937,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.93035288024749630055,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.020381929882402572635,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.94928647956196263565,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.017475512911400946505,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.96528590190549018363,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.014515089278021471808,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.97830170914025638338,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.011509824340383382174,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.98829371554016151109,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.0084690631633078876616,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.99523122608106974722,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.0054025222460153377613,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.99909434380146558435,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.0023238553757732155011,w_tolerance));
}

TEST_CASE("57 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(57);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99912556562526285057,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0022437538722506629096,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99539552367843031114,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0052165334747187793905,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.98869657765022204885,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0081781600678212326262,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.97904722670946871380,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.011115763732335990146,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.96647608517188667911,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.014020270790753556170,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.95102062644787674191,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.016882959023441549035,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.93272696106710169610,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.019695270699488520382,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.91164967852139121273,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.022448807890776438080,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.88785167888222132951,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.025135350990918122647,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.86140398326204694472,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.027746881402180192321,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.83238552115043912083,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.030275604842693999458,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.80088289454721824208,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.032713974366371568542,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.76699011935945019549,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.035054712782312617506,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.73080834474452332283,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.037290834324417317355,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.69244555119951773904,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.039415665475480114090,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.65201622828097689125,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.041422864870801110363,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.60964103290871536542,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.043306442216215196596,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.56544642926923675902,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.045060776161381157797,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.51956431139118760631,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.046680631073641503784,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.47213160951797570959,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.048161172661687751269,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.42328988145156395096,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.049497982402019678994,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.37318489008659445855,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.050687070724927408657,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.32196616839537864059,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.051724888920517824721,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.26978657316183876576,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.052608339729177432440,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.21680182879612403641,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.053334786584819158427,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.16317006259126425104,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.053902061483298574643,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.10905133280878780098,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.054308471452498643139,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.054607151001646824220,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.054552803604761886480,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.054634328756584024063,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(0.054607151001646824220,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.054552803604761886480,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(0.10905133280878780098,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.054308471452498643139,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(0.16317006259126425104,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.053902061483298574643,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(0.21680182879612403641,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.053334786584819158427,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(0.26978657316183876576,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.052608339729177432440,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(0.32196616839537864059,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.051724888920517824721,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(0.37318489008659445855,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.050687070724927408657,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(0.42328988145156395096,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.049497982402019678994,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(0.47213160951797570959,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.048161172661687751269,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(0.51956431139118760631,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.046680631073641503784,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(0.56544642926923675902,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.045060776161381157797,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0.60964103290871536542,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.043306442216215196596,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.65201622828097689125,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.041422864870801110363,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.69244555119951773904,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.039415665475480114090,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.73080834474452332283,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.037290834324417317355,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.76699011935945019549,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.035054712782312617506,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.80088289454721824208,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.032713974366371568542,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.83238552115043912083,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.030275604842693999458,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.86140398326204694472,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.027746881402180192321,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.88785167888222132951,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.025135350990918122647,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.91164967852139121273,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.022448807890776438080,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.93272696106710169610,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.019695270699488520382,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.95102062644787674191,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.016882959023441549035,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.96647608517188667911,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.014020270790753556170,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.97904722670946871380,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.011115763732335990146,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.98869657765022204885,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.0081781600678212326262,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.99539552367843031114,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.0052165334747187793905,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.99912556562526285057,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.0022437538722506629096,w_tolerance));
}

TEST_CASE("58 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(58);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99915520040738660644,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0021677232496274499430,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99555147659729090260,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0050399816126502430850,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.98907900824844263650,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0079019738499986747540,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.97975501469435030911,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.010741553532878774117,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.96760620250292409015,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.013550237112988812145,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.95266755751886909144,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.016319874234970965052,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.93498213758825934848,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.019042465461893408656,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.91460092856435254069,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.021710156140146235767,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.89158269202203017640,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.024315252724963952540,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.86599379407480747928,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.026850243181981868476,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.83790801333937331635,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.029307818044160490718,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.80740632791308814105,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.031680891253809327320,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.77457668174965274527,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.033962620493416010798,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.73951373102004226785,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.036146426867087270541,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.70231857115390811348,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.038226013845858433229,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.66309844533212526643,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.040195385409867796888,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.62196643526307911103,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.042048863329582125995,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.57904113513022503049,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.043781103533640251039,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.53444630964884758640,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.045387111514819802504,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.48831053721671846362,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.046862256729026346918,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.44076683918683956519,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.048202285945417748407,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.39195229633075315037,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.049403335508962392866,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.34200765359799526125,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.050461942479953125298,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.29107691431110918953,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.051375054618285725475,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.23930692496615345443,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.052140039183669818971,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.18684695183576132137,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.052754690526370833430,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.13384825059546685702,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.053217236446579014103,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.080463630214142729310,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.053526343304058252101,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.026847012365942355803,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.053681119863334848864,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(0.026847012365942355803,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.053681119863334848864,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(0.080463630214142729310,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.053526343304058252101,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(0.13384825059546685702,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.053217236446579014103,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(0.18684695183576132137,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.052754690526370833430,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(0.23930692496615345443,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.052140039183669818971,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(0.29107691431110918953,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.051375054618285725475,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(0.34200765359799526125,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.050461942479953125298,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(0.39195229633075315037,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.049403335508962392866,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(0.44076683918683956519,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.048202285945417748407,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(0.48831053721671846362,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.046862256729026346918,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(0.53444630964884758640,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.045387111514819802504,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0.57904113513022503049,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.043781103533640251039,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.62196643526307911103,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.042048863329582125995,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.66309844533212526643,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.040195385409867796888,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.70231857115390811348,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.038226013845858433229,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.73951373102004226785,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.036146426867087270541,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.77457668174965274527,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.033962620493416010798,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.80740632791308814105,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.031680891253809327320,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.83790801333937331635,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.029307818044160490718,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.86599379407480747928,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.026850243181981868476,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.89158269202203017640,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.024315252724963952540,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.91460092856435254069,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.021710156140146235767,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.93498213758825934848,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.019042465461893408656,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.95266755751886909144,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.016319874234970965052,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.96760620250292409015,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.013550237112988812145,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.97975501469435030911,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.010741553532878774117,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.98907900824844263650,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.0079019738499986747540,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.99555147659729090260,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.0050399816126502430850,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.99915520040738660644,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.0021677232496274499430,w_tolerance));
}

TEST_CASE("59 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(59);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99918335390929468376,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0020954922845412234027,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99569964038324596469,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0048722391682652847686,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.98944236513373093178,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0076395294534875751427,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.98042757395671568845,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.010385885500995862194,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.96868022168178153135,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.013103366306345191018,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.95423300937695105586,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.015784347313081466147,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.93712619035345385941,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.018421342753610029361,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.91740743878815528135,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.021006998288437187350,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.89513171174347208536,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.023534105393713363425,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.87036109429288226096,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.025995619731298500187,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.84316462581687220147,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.028384680200534797905,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.81361810728821157143,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.030694627836111683240,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.78180388986236090563,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.032919024271045277757,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.74781064527864023189,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.035051669636400108784,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.71173311867719773160,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.037086619818870922692,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.67367186450493722702,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.039018203016160009503,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.63373296623885009751,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.040841035538686707660,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.59202774070403014446,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.042550036811067638667,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.54867242780839638437,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.044140443530297380691,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.50378786655771797877,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.045607822940509769832,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.45749915825326669023,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.046948085186962019193,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.40993531781041896672,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.048157494714606440388,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.36122891416979480999,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.049232680679361985780,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.31151570080301370032,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.050170646342996902811,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.26093423734281171161,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.050968777425393916850,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.20962550339203654492,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.051624849390891482146,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.15773250558785796812,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.052137033648375391384,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.10539987901634414384,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.052503902647828739051,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.052773484088310003952,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.052724433859127931961,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.052798012621990421416,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(0.052773484088310003952,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.052724433859127931961,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(0.10539987901634414384,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.052503902647828739051,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(0.15773250558785796812,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.052137033648375391384,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(0.20962550339203654492,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.051624849390891482146,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(0.26093423734281171161,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.050968777425393916850,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(0.31151570080301370032,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.050170646342996902811,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(0.36122891416979480999,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.049232680679361985780,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(0.40993531781041896672,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.048157494714606440388,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(0.45749915825326669023,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.046948085186962019193,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(0.50378786655771797877,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.045607822940509769832,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0.54867242780839638437,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.044140443530297380691,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.59202774070403014446,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.042550036811067638667,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.63373296623885009751,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.040841035538686707660,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.67367186450493722702,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.039018203016160009503,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.71173311867719773160,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.037086619818870922692,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.74781064527864023189,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.035051669636400108784,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.78180388986236090563,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.032919024271045277757,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.81361810728821157143,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.030694627836111683240,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.84316462581687220147,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.028384680200534797905,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.87036109429288226096,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.025995619731298500187,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.89513171174347208536,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.023534105393713363425,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.91740743878815528135,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.021006998288437187350,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.93712619035345385941,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.018421342753610029361,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.95423300937695105586,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.015784347313081466147,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.96868022168178153135,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.013103366306345191018,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.98042757395671568845,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.010385885500995862194,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.98944236513373093178,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.0076395294534875751427,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.99569964038324596469,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.0048722391682652847686,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.99918335390929468376,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.0020954922845412234027,w_tolerance));
}

TEST_CASE("60 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(60);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99921012322743602203,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0020268119688737584964,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99584052511883817388,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0047127299269535686408,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.98978789522222171737,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0073899311633454555315,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.98106720175259818562,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.010047557182287984358,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.96970178876505273372,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.012678166476815960131,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.95572225583999610740,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.015274618596784799307,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.93916627611642324950,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.017829901014207720260,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.92007847617762755286,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.020337120729457286775,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.89851031081004594194,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.022789516943997819864,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.87451992264689831513,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.025180477621521248380,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.84817198478592963249,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.027503556749924791635,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.81953752616214575937,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.029752491500788945241,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.78869373993226405457,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.031921219019296328949,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.75572377530658568687,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.034003892724946422835,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.72071651335573039944,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.035994898051084503067,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.68376632738135543722,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.037888867569243444031,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.64497282848947706781,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.039680695452380799470,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.60444059704851036344,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.041365551235584755613,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.56227890075394453918,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.042938892835935641954,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.51860140005856974742,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.044396478795787113328,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.47352584176170711111,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.045734379716114486647,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.42717374158307838931,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.046948988848912204847,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.37967005657679797716,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.048037031819971180964,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.33114284826844819425,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.048995575455756835389,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.28172293742326169169,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.049822035690550181011,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.23154355137602933801,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.050514184532509374598,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.18073996487342541724,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.051070156069855627405,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.12944913539694500315,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.051488451500980933995,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.077809333949536569419,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.051767943174910187544,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.025959772301247798589,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.051907877631220639733,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(0.025959772301247798589,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.051907877631220639733,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(0.077809333949536569419,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.051767943174910187544,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(0.12944913539694500315,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.051488451500980933995,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(0.18073996487342541724,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.051070156069855627405,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(0.23154355137602933801,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.050514184532509374598,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(0.28172293742326169169,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.049822035690550181011,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(0.33114284826844819425,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.048995575455756835389,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(0.37967005657679797716,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.048037031819971180964,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(0.42717374158307838931,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.046948988848912204847,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(0.47352584176170711111,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.045734379716114486647,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0.51860140005856974742,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.044396478795787113328,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.56227890075394453918,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.042938892835935641954,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.60444059704851036344,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.041365551235584755613,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.64497282848947706781,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.039680695452380799470,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.68376632738135543722,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.037888867569243444031,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.72071651335573039944,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.035994898051084503067,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.75572377530658568687,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.034003892724946422835,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.78869373993226405457,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.031921219019296328949,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.81953752616214575937,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.029752491500788945241,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.84817198478592963249,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.027503556749924791635,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.87451992264689831513,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.025180477621521248380,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.89851031081004594194,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.022789516943997819864,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.92007847617762755286,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.020337120729457286775,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.93916627611642324950,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.017829901014207720260,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.95572225583999610740,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.015274618596784799307,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.96970178876505273372,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.012678166476815960131,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.98106720175259818562,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.010047557182287984358,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.98978789522222171737,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.0073899311633454555315,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.99584052511883817388,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.0047127299269535686408,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.99921012322743602203,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.0020268119688737584964,w_tolerance));
}

TEST_CASE("61 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(61);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99923559763136347173,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0019614533616702826718,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99597459981512023427,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0045609240060124171846,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.99011674523251705097,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0071523549917490895859,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.98167601128403707969,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.0097254618303561337361,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.97067425883318290825,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.012273263507812104629,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.95714015191298409137,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.014789065884937914546,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.94110898668136114748,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.017266292987613743594,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.92262258138295526126,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.019698477746101181331,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.90172916247400117064,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.022079273148319044002,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.87848323721488103248,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.024402467187544202915,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.85294545084766344556,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.026661998524150889663,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.82518242810865995066,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.028851972088183401504,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.79526659928235964915,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.030966674368397394825,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.76327601117231219715,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.033000588275907410633,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.72929412344946510969,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.034948407516533351091,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.69340959089449115550,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.036805050423154817384,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.65571603209507087170,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.038565673207008172746,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.61631178519792172471,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.040225682590998247368,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.57529965135083061860,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.041780747790888492067,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.53278662650292526564,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.043226811812496097901,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.48888362226225211882,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.044560102035083488272,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.44370517653853160200,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.045777140053145959371,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.39736915472575660918,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.046874750750809065976,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.34999644220406683453,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.047850070585095607162,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.30171062896303071260,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.048700555056411526088,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.25263768716905349583,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.049423985346735589940,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.20290564251805849923,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.050018474108178253425,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.15264424023081530053,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.050482470386797404648,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.10198460656227406896,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.050814763668818343208,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.051058906707974349367,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.051014487038697263544,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.051081119440786217978,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(0.051058906707974349367,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.051014487038697263544,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(0.10198460656227406896,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.050814763668818343208,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(0.15264424023081530053,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.050482470386797404648,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(0.20290564251805849923,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.050018474108178253425,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(0.25263768716905349583,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.049423985346735589940,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(0.30171062896303071260,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.048700555056411526088,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(0.34999644220406683453,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.047850070585095607162,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(0.39736915472575660918,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.046874750750809065976,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(0.44370517653853160200,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.045777140053145959371,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0.48888362226225211882,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.044560102035083488272,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.53278662650292526564,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.043226811812496097901,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.57529965135083061860,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.041780747790888492067,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.61631178519792172471,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.040225682590998247368,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.65571603209507087170,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.038565673207008172746,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.69340959089449115550,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.036805050423154817384,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.72929412344946510969,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.034948407516533351091,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.76327601117231219715,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.033000588275907410633,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.79526659928235964915,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.030966674368397394825,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.82518242810865995066,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.028851972088183401504,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.85294545084766344556,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.026661998524150889663,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.87848323721488103248,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.024402467187544202915,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.90172916247400117064,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.022079273148319044002,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.92262258138295526126,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.019698477746101181331,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.94110898668136114748,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.017266292987613743594,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.95714015191298409137,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.014789065884937914546,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.97067425883318290825,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.012273263507812104629,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.98167601128403707969,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.0097254618303561337361,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.99011674523251705097,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.0071523549917490895859,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.99597459981512023427,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.0045609240060124171846,w_tolerance));
REQUIRE_THAT(pts[60], Catch::Matchers::WithinAbs(0.99923559763136347173,x_tolerance));
REQUIRE_THAT(wgt[60], Catch::Matchers::WithinAbs(0.0019614533616702826718,w_tolerance));
}

TEST_CASE("62 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(62);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99925985930877702970,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0018992056795136904804,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99610229631626713289,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0044163334569309048133,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.99042997118929035243,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0069260419018309608717,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.98225594909723664949,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.0094185794284203876379,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.97160072337165180645,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.011887390117010501945,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.95849117297392709203,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.014326191823806517767,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.94296040139232850383,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.016728811790177316289,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.92504763563620375523,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.019089176658573198733,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.90479812252109346576,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.021401322277669968841,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.88226301283189736307,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.023659407208682792575,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.85749923151207092282,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.025857726954024698027,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.83056933360400485135,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.027990728163314637541,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.80154134610397637154,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.030053022573989870077,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.77048859605541931899,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.032039400581624678106,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.73748952528315674986,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.033944844379410545091,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.70262749222229705512,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.035764540622768141286,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.66599056133547944700,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.037493892582280029986,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.62767128064688518073,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.039128531751963084123,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.58776644795308733800,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.040664328882417440968,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.54637686630025109582,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.042097404410385096643,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.50360708934475595592,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.043424138258047419580,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.45956515724011339521,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.044641178977124414294,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.41436232371712604813,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.045745452214570180777,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.36811277504656452966,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.046734168478415524802,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.32093334159419400407,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.047604830184101232270,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.27294320269672634319,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.048355237963477672835,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.22426358560416553167,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.048983496220517837105,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.17501745924901562856,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.049488017919699292528,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.12532922361589680862,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.049867528594952394245,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.075324395496234332764,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.050121069569043288075,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(-0.025129291421820614727,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.050248000375256281688,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(0.025129291421820614727,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.050248000375256281688,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(0.075324395496234332764,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.050121069569043288075,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(0.12532922361589680862,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.049867528594952394245,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(0.17501745924901562856,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.049488017919699292528,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(0.22426358560416553167,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.048983496220517837105,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(0.27294320269672634319,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.048355237963477672835,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(0.32093334159419400407,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.047604830184101232270,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(0.36811277504656452966,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.046734168478415524802,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(0.41436232371712604813,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.045745452214570180777,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0.45956515724011339521,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.044641178977124414294,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.50360708934475595592,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.043424138258047419580,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.54637686630025109582,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.042097404410385096643,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.58776644795308733800,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.040664328882417440968,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.62767128064688518073,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.039128531751963084123,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.66599056133547944700,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.037493892582280029986,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.70262749222229705512,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.035764540622768141286,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.73748952528315674986,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.033944844379410545091,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.77048859605541931899,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.032039400581624678106,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.80154134610397637154,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.030053022573989870077,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.83056933360400485135,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.027990728163314637541,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.85749923151207092282,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.025857726954024698027,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.88226301283189736307,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.023659407208682792575,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.90479812252109346576,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.021401322277669968841,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.92504763563620375523,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.019089176658573198733,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.94296040139232850383,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.016728811790177316289,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.95849117297392709203,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.014326191823806517767,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.97160072337165180645,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.011887390117010501945,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.98225594909723664949,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.0094185794284203876379,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.99042997118929035243,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.0069260419018309608717,w_tolerance));
REQUIRE_THAT(pts[60], Catch::Matchers::WithinAbs(0.99610229631626713289,x_tolerance));
REQUIRE_THAT(wgt[60], Catch::Matchers::WithinAbs(0.0044163334569309048133,w_tolerance));
REQUIRE_THAT(pts[61], Catch::Matchers::WithinAbs(0.99925985930877702970,x_tolerance));
REQUIRE_THAT(wgt[61], Catch::Matchers::WithinAbs(0.0018992056795136904804,w_tolerance));
}

TEST_CASE("63 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(63);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99928298402912378038,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0018398745955770841171,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99622401277797010860,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0042785083468637618661,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.99072854689218946681,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0067102917659601362519,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.98280881059372723486,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.0091259686763266563541,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.97248403469757002280,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.011519376076880041751,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.95977944975894192707,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.013884612616115610825,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.94472613404100980297,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.016215878410338338882,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.92736092062184320545,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.018507464460161270409,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.90772630277853155804,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.020753761258039090775,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.88587032850785342629,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.022949271004889933149,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.86184648236412371954,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.025088620553344986619,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.83571355431950284347,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.027166574359097933225,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.80753549577345676005,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.029178047208280526946,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.77738126299037233556,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.031118116622219817508,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.74532464831784741783,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.032982034883779341766,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.71144409958484580785,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.034765240645355877697,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.67582252811498609013,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.036463370085457289630,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.63854710582136538500,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.038072267584349556764,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.59970905187762523574,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.039587995891544093985,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.55940340948628501327,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.041006845759666398635,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.51772881329003324812,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.042325345020815822983,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.47478724799480439992,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.043540267083027590799,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.43068379879511160066,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.044648638825941395370,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.38552639421224789248,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.045647747876292608686,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.33942554197458440247,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.046535149245383696510,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.29249405858625144004,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.047308671312268919081,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.24484679324595336275,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.047966421137995131411,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.19660034679150668456,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.048506789097883847864,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.14787278635787196857,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.048928452820511989945,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.098783356446945279530,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.049230380423747560785,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(-0.049452187116159627234,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.049411833039918178967,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.049472366623931020889,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(0.049452187116159627234,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.049411833039918178967,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(0.098783356446945279530,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.049230380423747560785,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(0.14787278635787196857,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.048928452820511989945,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(0.19660034679150668456,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.048506789097883847864,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(0.24484679324595336275,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.047966421137995131411,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(0.29249405858625144004,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.047308671312268919081,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(0.33942554197458440247,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.046535149245383696510,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(0.38552639421224789248,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.045647747876292608686,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0.43068379879511160066,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.044648638825941395370,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.47478724799480439992,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.043540267083027590799,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.51772881329003324812,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.042325345020815822983,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.55940340948628501327,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.041006845759666398635,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.59970905187762523574,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.039587995891544093985,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.63854710582136538500,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.038072267584349556764,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.67582252811498609013,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.036463370085457289630,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.71144409958484580785,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.034765240645355877697,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.74532464831784741783,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.032982034883779341766,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.77738126299037233556,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.031118116622219817508,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.80753549577345676005,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.029178047208280526946,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.83571355431950284347,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.027166574359097933225,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.86184648236412371954,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.025088620553344986619,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.88587032850785342629,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.022949271004889933149,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.90772630277853155804,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.020753761258039090775,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.92736092062184320545,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.018507464460161270409,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.94472613404100980297,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.016215878410338338882,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.95977944975894192707,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.013884612616115610825,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.97248403469757002280,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.011519376076880041751,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.98280881059372723486,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.0091259686763266563541,w_tolerance));
REQUIRE_THAT(pts[60], Catch::Matchers::WithinAbs(0.99072854689218946681,x_tolerance));
REQUIRE_THAT(wgt[60], Catch::Matchers::WithinAbs(0.0067102917659601362519,w_tolerance));
REQUIRE_THAT(pts[61], Catch::Matchers::WithinAbs(0.99622401277797010860,x_tolerance));
REQUIRE_THAT(wgt[61], Catch::Matchers::WithinAbs(0.0042785083468637618661,w_tolerance));
REQUIRE_THAT(pts[62], Catch::Matchers::WithinAbs(0.99928298402912378038,x_tolerance));
REQUIRE_THAT(wgt[62], Catch::Matchers::WithinAbs(0.0018398745955770841171,w_tolerance));
}

TEST_CASE("64 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(64);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99930504173577213946,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0017832807216964329474,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99634011677195527935,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0041470332605624676353,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.99101337147674432074,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0065044579689783628561,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.98333625388462595693,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.0088467598263639477230,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.97332682778991096374,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.011168139460131128819,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.96100879965205371892,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.013463047896718642598,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.94641137485840281606,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.015726030476024719322,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.92956917213193957582,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.017951715775697343085,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.91052213707850280576,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.020134823153530209372,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.88931544599511410585,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.022270173808383254159,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.86599939815409281976,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.024352702568710873338,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.84062929625258036275,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.026377469715054658672,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.81326531512279755974,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.028339672614259483228,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.78397235894334140761,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.030234657072402478868,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.75281990726053189661,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.032057928354851553585,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.71988185017161082685,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.033805161837141609392,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.68523631305423324256,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.035472213256882383811,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.64896547125465733986,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.037055128540240046040,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.61115535517239325025,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.038550153178615629129,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.57189564620263403428,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.039953741132720341387,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.53127946401989454566,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.041262563242623528610,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.48940314570705295748,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.042473515123653589007,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.44636601725346408798,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.043583724529323453377,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.40227015796399160370,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.044590558163756563060,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.35722015833766811595,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.045491627927418144480,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.31132287199021095616,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.046284796581314417296,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.26468716220876741637,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.046968182816210017325,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.21742364374000708415,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.047540165714830308662,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.16964442042399281804,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.047999388596458307728,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.12146281929612055447,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.048344762234802957170,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(-0.072993121787799039450,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.048575467441503426935,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(-0.024350292663424432509,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.048690957009139720383,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(0.024350292663424432509,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.048690957009139720383,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(0.072993121787799039450,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.048575467441503426935,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(0.12146281929612055447,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.048344762234802957170,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(0.16964442042399281804,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.047999388596458307728,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(0.21742364374000708415,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.047540165714830308662,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(0.26468716220876741637,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.046968182816210017325,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(0.31132287199021095616,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.046284796581314417296,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(0.35722015833766811595,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.045491627927418144480,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0.40227015796399160370,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.044590558163756563060,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.44636601725346408798,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.043583724529323453377,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.48940314570705295748,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.042473515123653589007,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.53127946401989454566,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.041262563242623528610,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.57189564620263403428,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.039953741132720341387,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.61115535517239325025,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.038550153178615629129,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.64896547125465733986,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.037055128540240046040,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.68523631305423324256,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.035472213256882383811,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.71988185017161082685,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.033805161837141609392,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.75281990726053189661,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.032057928354851553585,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.78397235894334140761,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.030234657072402478868,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.81326531512279755974,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.028339672614259483228,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.84062929625258036275,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.026377469715054658672,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.86599939815409281976,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.024352702568710873338,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.88931544599511410585,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.022270173808383254159,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.91052213707850280576,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.020134823153530209372,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.92956917213193957582,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.017951715775697343085,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.94641137485840281606,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.015726030476024719322,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.96100879965205371892,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.013463047896718642598,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.97332682778991096374,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.011168139460131128819,w_tolerance));
REQUIRE_THAT(pts[60], Catch::Matchers::WithinAbs(0.98333625388462595693,x_tolerance));
REQUIRE_THAT(wgt[60], Catch::Matchers::WithinAbs(0.0088467598263639477230,w_tolerance));
REQUIRE_THAT(pts[61], Catch::Matchers::WithinAbs(0.99101337147674432074,x_tolerance));
REQUIRE_THAT(wgt[61], Catch::Matchers::WithinAbs(0.0065044579689783628561,w_tolerance));
REQUIRE_THAT(pts[62], Catch::Matchers::WithinAbs(0.99634011677195527935,x_tolerance));
REQUIRE_THAT(wgt[62], Catch::Matchers::WithinAbs(0.0041470332605624676353,w_tolerance));
REQUIRE_THAT(pts[63], Catch::Matchers::WithinAbs(0.99930504173577213946,x_tolerance));
REQUIRE_THAT(wgt[63], Catch::Matchers::WithinAbs(0.0017832807216964329474,w_tolerance));
}

TEST_CASE("65 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(65);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99932609707541287727,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0017292582513002508983,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99645094806184916306,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0040215241720037363471,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.99128527617680166872,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0063079425789717545502,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.98383981218703494138,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.0085801482668814598936,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.97413153983355116908,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.010832678789597968622,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.96218275471805523771,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.013060311639994846336,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.94802092816840750637,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.015257912146448310349,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.93167862822874933797,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.017420421997670248495,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.91319344054284626174,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.019542865836750062827,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.89260788050473893142,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.021620361284934062842,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.86996929492640703619,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.023648129691287236699,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.84532975289993028394,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.025621506938037758214,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.81874592592265145343,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.027535954088450343942,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.79027895749212184305,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.029387067789310668063,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.75999432244199978687,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.031170590380189142464,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.72796167632942467901,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.032882419676368574984,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.69425469521399163355,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.034518618398549058625,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.65895090619362513304,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.036075423225565273932,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.62213150908540024158,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.037549253448257709810,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.58388118966048731333,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.038936719204051197617,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.54428792486222713855,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.040234629273005533815,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.50344278045500688234,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.041439998417240293023,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.46143970156914505770,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.042550054246755802719,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.41837529662340900926,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.043562243595800486532,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.37434861512206601201,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.044474238395082974427,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.32946091983748640765,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.045283941026300230657,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.28381545390224873062,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.045989489146651696964,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.23751720334641680657,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.046589259972233498302,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.19067265562614276977,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.047081874010454522246,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.14338955469897517113,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.047466198232885503153,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(-0.095776653209197505652,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.047741348681240621559,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(-0.047943462353171857523,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.047906692500495862031,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.047961849394466618121,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(0.047943462353171857523,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.047906692500495862031,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(0.095776653209197505652,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.047741348681240621559,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(0.14338955469897517113,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.047466198232885503153,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(0.19067265562614276977,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.047081874010454522246,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(0.23751720334641680657,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.046589259972233498302,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(0.28381545390224873062,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.045989489146651696964,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(0.32946091983748640765,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.045283941026300230657,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0.37434861512206601201,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.044474238395082974427,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.41837529662340900926,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.043562243595800486532,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.46143970156914505770,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.042550054246755802719,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.50344278045500688234,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.041439998417240293023,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.54428792486222713855,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.040234629273005533815,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.58388118966048731333,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.038936719204051197617,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.62213150908540024158,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.037549253448257709810,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.65895090619362513304,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.036075423225565273932,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.69425469521399163355,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.034518618398549058625,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.72796167632942467901,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.032882419676368574984,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.75999432244199978687,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.031170590380189142464,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.79027895749212184305,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.029387067789310668063,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.81874592592265145343,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.027535954088450343942,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.84532975289993028394,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.025621506938037758214,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.86996929492640703619,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.023648129691287236699,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.89260788050473893142,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.021620361284934062842,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.91319344054284626174,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.019542865836750062827,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.93167862822874933797,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.017420421997670248495,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.94802092816840750637,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.015257912146448310349,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.96218275471805523771,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.013060311639994846336,w_tolerance));
REQUIRE_THAT(pts[60], Catch::Matchers::WithinAbs(0.97413153983355116908,x_tolerance));
REQUIRE_THAT(wgt[60], Catch::Matchers::WithinAbs(0.010832678789597968622,w_tolerance));
REQUIRE_THAT(pts[61], Catch::Matchers::WithinAbs(0.98383981218703494138,x_tolerance));
REQUIRE_THAT(wgt[61], Catch::Matchers::WithinAbs(0.0085801482668814598936,w_tolerance));
REQUIRE_THAT(pts[62], Catch::Matchers::WithinAbs(0.99128527617680166872,x_tolerance));
REQUIRE_THAT(wgt[62], Catch::Matchers::WithinAbs(0.0063079425789717545502,w_tolerance));
REQUIRE_THAT(pts[63], Catch::Matchers::WithinAbs(0.99645094806184916306,x_tolerance));
REQUIRE_THAT(wgt[63], Catch::Matchers::WithinAbs(0.0040215241720037363471,w_tolerance));
REQUIRE_THAT(pts[64], Catch::Matchers::WithinAbs(0.99932609707541287727,x_tolerance));
REQUIRE_THAT(wgt[64], Catch::Matchers::WithinAbs(0.0017292582513002508983,w_tolerance));
}

TEST_CASE("66 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(66);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99934620987217788207,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0016776537440072385994,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99655682108955269112,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0039016256417442482592,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.99154503038337574553,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0061201920184479363656,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.98432090493514013289,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.0083253887659909014167,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.97490042774628595186,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.010512065987705754657,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.96330458685925737096,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.012675303981261681876,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.94955924620623533909,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.014810265002733960174,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.93369507254479249437,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.016912181472245217180,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.91574746294520701595,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.018976361722771325935,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.89575646444656393846,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.020998199091864625777,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.87376668416694473040,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.022973181735326655918,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.84982718953601621946,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.024896902514757372638,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.82399139869558761135,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.026765068754250001909,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.79631696124582457053,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.028573511782931871183,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.76686562957531962587,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.030318196218868519194,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.73570312104951279958,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.031995228964046887271,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.70289897135887418584,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.033600867886112232670,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.66852637935096759260,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.035131530165472555901,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.63266204369096316940,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.036583800288139094414,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.59538599171413845833,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.037954437665941620949,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.55678140085172306424,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.039240383866828330188,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.51693441302823151357,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.040438769438954979126,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.47593394244423684296,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.041546920313241881318,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.43387147717337066836,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.042562363770055716319,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.39084087501618294976,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.043482833956667478648,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.34693815406633754890,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.044306276943153161905,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.30226127845643610002,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.045030855305441500215,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.25690993976153022299,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.045654952225273056120,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.21098533454807899347,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.046177175097915975472,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.16458993856471460725,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.046596358639584103626,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(-0.11782727807867599711,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.046911567487620827746,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(-0.070801698868141591289,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.047122098287644732185,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(-0.023618133385924570536,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.047227481262998554846,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(0.023618133385924570536,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.047227481262998554846,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(0.070801698868141591289,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.047122098287644732185,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(0.11782727807867599711,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.046911567487620827746,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(0.16458993856471460725,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.046596358639584103626,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(0.21098533454807899347,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.046177175097915975472,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(0.25690993976153022299,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.045654952225273056120,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(0.30226127845643610002,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.045030855305441500215,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0.34693815406633754890,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.044306276943153161905,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.39084087501618294976,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.043482833956667478648,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.43387147717337066836,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.042562363770055716319,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.47593394244423684296,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.041546920313241881318,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.51693441302823151357,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.040438769438954979126,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.55678140085172306424,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.039240383866828330188,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.59538599171413845833,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.037954437665941620949,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.63266204369096316940,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.036583800288139094414,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.66852637935096759260,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.035131530165472555901,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.70289897135887418584,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.033600867886112232670,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.73570312104951279958,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.031995228964046887271,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.76686562957531962587,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.030318196218868519194,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.79631696124582457053,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.028573511782931871183,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.82399139869558761135,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.026765068754250001909,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.84982718953601621946,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.024896902514757372638,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.87376668416694473040,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.022973181735326655918,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.89575646444656393846,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.020998199091864625777,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.91574746294520701595,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.018976361722771325935,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.93369507254479249437,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.016912181472245217180,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.94955924620623533909,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.014810265002733960174,w_tolerance));
REQUIRE_THAT(pts[60], Catch::Matchers::WithinAbs(0.96330458685925737096,x_tolerance));
REQUIRE_THAT(wgt[60], Catch::Matchers::WithinAbs(0.012675303981261681876,w_tolerance));
REQUIRE_THAT(pts[61], Catch::Matchers::WithinAbs(0.97490042774628595186,x_tolerance));
REQUIRE_THAT(wgt[61], Catch::Matchers::WithinAbs(0.010512065987705754657,w_tolerance));
REQUIRE_THAT(pts[62], Catch::Matchers::WithinAbs(0.98432090493514013289,x_tolerance));
REQUIRE_THAT(wgt[62], Catch::Matchers::WithinAbs(0.0083253887659909014167,w_tolerance));
REQUIRE_THAT(pts[63], Catch::Matchers::WithinAbs(0.99154503038337574553,x_tolerance));
REQUIRE_THAT(wgt[63], Catch::Matchers::WithinAbs(0.0061201920184479363656,w_tolerance));
REQUIRE_THAT(pts[64], Catch::Matchers::WithinAbs(0.99655682108955269112,x_tolerance));
REQUIRE_THAT(wgt[64], Catch::Matchers::WithinAbs(0.0039016256417442482592,w_tolerance));
REQUIRE_THAT(pts[65], Catch::Matchers::WithinAbs(0.99934620987217788207,x_tolerance));
REQUIRE_THAT(wgt[65], Catch::Matchers::WithinAbs(0.0016776537440072385994,w_tolerance));
}

TEST_CASE("67 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(67);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99936543555297679797,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0016283250352400128664,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99665802720611373536,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0037870083018255084460,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.99179334708230960946,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0059406931775822352165,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.98478084775595111344,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.0080817902990231362154,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.97563558392290805239,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.010205440034102440987,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.96437733042771261170,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.012307003849288150522,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.95103045954014537321,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.014381919827200550931,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.93562387327075087687,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.016425690622530879205,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.91819093681273858125,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.018433888456804573872,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.89876940496132037582,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.020402163371343540449,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.87740133983165872040,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.022326252196452076923,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.85413301953705065079,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.024201987609673164721,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.82901483785330119769,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.026025307086213238804,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.80210119502169443442,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.027792261662436769987,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.77345037989998032754,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.029499024470945669696,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.74312444370436620670,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.031141899019472823937,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.71118906561004032786,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.032717327191531205427,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.67771341049828082878,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.034221896949536646740,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.64276997915661535428,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.035652349722745006661,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.60643445125555738620,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.037005587463492582023,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.56878552144147102126,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.038278679356179480648,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.52990472890023601617,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.039468868164308882643,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.48987628076064662610,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.040573576201744525227,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.44878686971989088400,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.041590410915199243099,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.40672548628601391599,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.042517170065830491472,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.36378322604395417083,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.043351846498699517359,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.32005309236253633107,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.044092632489751018308,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.27562979496968958772,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.044737923660889825472,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.23060954483211573793,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.045286322454669531568,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.18508984578364016882,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.045736641161063690937,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(-0.13916928335352371356,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.046087904489761576197,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(-0.092947311252079876632,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.046339351682415621108,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(-0.046524035976017219565,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.046490438160264628208,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.046540836703563508250,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(0.046524035976017219565,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.046490438160264628208,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(0.092947311252079876632,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.046339351682415621108,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(0.13916928335352371356,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.046087904489761576197,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(0.18508984578364016882,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.045736641161063690937,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(0.23060954483211573793,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.045286322454669531568,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(0.27562979496968958772,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.044737923660889825472,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0.32005309236253633107,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.044092632489751018308,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.36378322604395417083,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.043351846498699517359,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.40672548628601391599,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.042517170065830491472,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.44878686971989088400,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.041590410915199243099,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.48987628076064662610,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.040573576201744525227,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.52990472890023601617,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.039468868164308882643,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.56878552144147102126,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.038278679356179480648,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.60643445125555738620,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.037005587463492582023,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.64276997915661535428,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.035652349722745006661,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.67771341049828082878,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.034221896949536646740,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.71118906561004032786,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.032717327191531205427,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.74312444370436620670,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.031141899019472823937,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.77345037989998032754,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.029499024470945669696,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.80210119502169443442,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.027792261662436769987,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.82901483785330119769,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.026025307086213238804,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.85413301953705065079,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.024201987609673164721,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.87740133983165872040,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.022326252196452076923,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.89876940496132037582,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.020402163371343540449,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.91819093681273858125,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.018433888456804573872,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.93562387327075087687,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.016425690622530879205,w_tolerance));
REQUIRE_THAT(pts[60], Catch::Matchers::WithinAbs(0.95103045954014537321,x_tolerance));
REQUIRE_THAT(wgt[60], Catch::Matchers::WithinAbs(0.014381919827200550931,w_tolerance));
REQUIRE_THAT(pts[61], Catch::Matchers::WithinAbs(0.96437733042771261170,x_tolerance));
REQUIRE_THAT(wgt[61], Catch::Matchers::WithinAbs(0.012307003849288150522,w_tolerance));
REQUIRE_THAT(pts[62], Catch::Matchers::WithinAbs(0.97563558392290805239,x_tolerance));
REQUIRE_THAT(wgt[62], Catch::Matchers::WithinAbs(0.010205440034102440987,w_tolerance));
REQUIRE_THAT(pts[63], Catch::Matchers::WithinAbs(0.98478084775595111344,x_tolerance));
REQUIRE_THAT(wgt[63], Catch::Matchers::WithinAbs(0.0080817902990231362154,w_tolerance));
REQUIRE_THAT(pts[64], Catch::Matchers::WithinAbs(0.99179334708230960946,x_tolerance));
REQUIRE_THAT(wgt[64], Catch::Matchers::WithinAbs(0.0059406931775822352165,w_tolerance));
REQUIRE_THAT(pts[65], Catch::Matchers::WithinAbs(0.99665802720611373536,x_tolerance));
REQUIRE_THAT(wgt[65], Catch::Matchers::WithinAbs(0.0037870083018255084460,w_tolerance));
REQUIRE_THAT(pts[66], Catch::Matchers::WithinAbs(0.99936543555297679797,x_tolerance));
REQUIRE_THAT(wgt[66], Catch::Matchers::WithinAbs(0.0016283250352400128664,w_tolerance));
}

TEST_CASE("68 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(68);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99938382552970434716,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0015811402563729129392,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99675483667666429254,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0036773665950117306336,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.99203088774244857465,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0057689699187299520215,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.98522086144024463889,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.0078487113931771674150,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.97633895040035695694,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.0099120012515859372091,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.96540380258219980323,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.011954462319769442103,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.95243840447960204932,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.013971789174457655816,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.93747001831280088649,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.015959735909613800072,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.92053012084791816646,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.017914120457923152489,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.90165433592010783022,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.019830832087955498291,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.88088235901745591770,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.021705839610378079801,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.85825787358265984550,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.023535199685876333361,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.83382845904167094582,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.025315065045176398324,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.80764549068970866523,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.027041692545903961558,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.77976403161889765875,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.028711451027484990711,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.75024271690291651977,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.030320828938553980342,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.71914363027647299262,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.031866441716821064939,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.68653217356601294478,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.033345038903980687903,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.65247692914467696420,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.034753510979751513167,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.61704951569988342272,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.036088895900179870715,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.58032443761635074018,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.037348385326186667716,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.54237892829100338581,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.038529330529106714493,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.50329278770908487264,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.039629247960712308025,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.46314821462293903917,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.040645824475954076141,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.42202963368631357915,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.041576922197402916485,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.38002351790767447750,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.042420583011142499301,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.33721820679588076273,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.043175032684644223226,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.29370372058063873998,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.043838684597956052011,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.24957157089841673451,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.044410143080352755909,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.20491456834193929584,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.044888206345426667826,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(-0.15982662727797896100,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.045271869018443777869,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(-0.11440256834391068443,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.045560324250648285981,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(-0.068737919038377152211,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.045752965416067950519,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(-0.022928712825422349714,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.045849387387250974687,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(0.022928712825422349714,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.045849387387250974687,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(0.068737919038377152211,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.045752965416067950519,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(0.11440256834391068443,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.045560324250648285981,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(0.15982662727797896100,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.045271869018443777869,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(0.20491456834193929584,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.044888206345426667826,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(0.24957157089841673451,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.044410143080352755909,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0.29370372058063873998,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.043838684597956052011,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.33721820679588076273,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.043175032684644223226,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.38002351790767447750,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.042420583011142499301,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.42202963368631357915,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.041576922197402916485,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.46314821462293903917,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.040645824475954076141,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.50329278770908487264,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.039629247960712308025,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.54237892829100338581,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.038529330529106714493,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.58032443761635074018,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.037348385326186667716,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.61704951569988342272,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.036088895900179870715,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.65247692914467696420,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.034753510979751513167,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.68653217356601294478,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.033345038903980687903,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.71914363027647299262,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.031866441716821064939,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.75024271690291651977,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.030320828938553980342,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.77976403161889765875,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.028711451027484990711,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.80764549068970866523,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.027041692545903961558,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.83382845904167094582,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.025315065045176398324,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.85825787358265984550,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.023535199685876333361,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.88088235901745591770,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.021705839610378079801,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.90165433592010783022,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.019830832087955498291,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.92053012084791816646,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.017914120457923152489,w_tolerance));
REQUIRE_THAT(pts[60], Catch::Matchers::WithinAbs(0.93747001831280088649,x_tolerance));
REQUIRE_THAT(wgt[60], Catch::Matchers::WithinAbs(0.015959735909613800072,w_tolerance));
REQUIRE_THAT(pts[61], Catch::Matchers::WithinAbs(0.95243840447960204932,x_tolerance));
REQUIRE_THAT(wgt[61], Catch::Matchers::WithinAbs(0.013971789174457655816,w_tolerance));
REQUIRE_THAT(pts[62], Catch::Matchers::WithinAbs(0.96540380258219980323,x_tolerance));
REQUIRE_THAT(wgt[62], Catch::Matchers::WithinAbs(0.011954462319769442103,w_tolerance));
REQUIRE_THAT(pts[63], Catch::Matchers::WithinAbs(0.97633895040035695694,x_tolerance));
REQUIRE_THAT(wgt[63], Catch::Matchers::WithinAbs(0.0099120012515859372091,w_tolerance));
REQUIRE_THAT(pts[64], Catch::Matchers::WithinAbs(0.98522086144024463889,x_tolerance));
REQUIRE_THAT(wgt[64], Catch::Matchers::WithinAbs(0.0078487113931771674150,w_tolerance));
REQUIRE_THAT(pts[65], Catch::Matchers::WithinAbs(0.99203088774244857465,x_tolerance));
REQUIRE_THAT(wgt[65], Catch::Matchers::WithinAbs(0.0057689699187299520215,w_tolerance));
REQUIRE_THAT(pts[66], Catch::Matchers::WithinAbs(0.99675483667666429254,x_tolerance));
REQUIRE_THAT(wgt[66], Catch::Matchers::WithinAbs(0.0036773665950117306336,w_tolerance));
REQUIRE_THAT(pts[67], Catch::Matchers::WithinAbs(0.99938382552970434716,x_tolerance));
REQUIRE_THAT(wgt[67], Catch::Matchers::WithinAbs(0.0015811402563729129392,w_tolerance));
}

TEST_CASE("69 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(69);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99940142754324478821,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0015359769527920840751,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99684750048519510046,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0035724167393973726097,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.99225826671685311870,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0056045799278705948285,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.98564208002263759324,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.0076255559312015106114,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.97701233162209426339,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.0096310061504155755887,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.96638662164286056686,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.011616796610671965549,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.95378664780518189753,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.013578860649075671000,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.93923814704160847297,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.015513186543406164740,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.92277083918044499719,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.017415821231969829132,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.90441836498582714007,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.019282877128849402789,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.88421821694725243666,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.021110539639871894628,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.86221166247274408386,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.022895074790740785656,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.83844365948050421326,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.024632836784542455364,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.81296276450029561386,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.026320275416869483792,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.78582103344675976034,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.027953943312187705991,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.75707391525583785160,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.029530502957906711780,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.72678013859600808866,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.031046733517890539033,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.69500159188292846093,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.032499537409646111245,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.66180319684107824402,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.033885946630832289498,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.62725277586984940177,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.035203128821683486148,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.59142091348455582557,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.036448393050700514057,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.55438081211513201454,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.037619195311640906508,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.51620814255693370917,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.038713143720492513933,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.47698088937904571034,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.039728003401761641206,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.43677919160584442087,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.040661701054061600538,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.39568517899724444735,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.041512329185654502083,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.35378280426206631796,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.042278150011280512852,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.31115767154728118659,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.042957599002305213878,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.26789686155350342858,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.043549288082926741034,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.22408875363399901328,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.044052008465909284381,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(-0.17982284524064316436,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.044464733122047138096,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(-0.13518956908568299216,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.044786618878312557542,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(-0.090280108392828742562,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.045017008140399802199,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(-0.045186210615101723532,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.045155430236145460517,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.045201602377079954242,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(0.045186210615101723532,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.045155430236145460517,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(0.090280108392828742562,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.045017008140399802199,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(0.13518956908568299216,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.044786618878312557542,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(0.17982284524064316436,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.044464733122047138096,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(0.22408875363399901328,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.044052008465909284381,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0.26789686155350342858,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.043549288082926741034,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.31115767154728118659,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.042957599002305213878,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.35378280426206631796,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.042278150011280512852,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.39568517899724444735,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.041512329185654502083,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.43677919160584442087,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.040661701054061600538,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.47698088937904571034,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.039728003401761641206,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.51620814255693370917,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.038713143720492513933,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.55438081211513201454,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.037619195311640906508,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.59142091348455582557,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.036448393050700514057,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.62725277586984940177,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.035203128821683486148,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.66180319684107824402,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.033885946630832289498,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.69500159188292846093,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.032499537409646111245,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.72678013859600808866,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.031046733517890539033,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.75707391525583785160,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.029530502957906711780,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.78582103344675976034,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.027953943312187705991,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.81296276450029561386,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.026320275416869483792,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.83844365948050421326,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.024632836784542455364,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.86221166247274408386,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.022895074790740785656,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.88421821694725243666,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.021110539639871894628,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.90441836498582714007,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.019282877128849402789,w_tolerance));
REQUIRE_THAT(pts[60], Catch::Matchers::WithinAbs(0.92277083918044499719,x_tolerance));
REQUIRE_THAT(wgt[60], Catch::Matchers::WithinAbs(0.017415821231969829132,w_tolerance));
REQUIRE_THAT(pts[61], Catch::Matchers::WithinAbs(0.93923814704160847297,x_tolerance));
REQUIRE_THAT(wgt[61], Catch::Matchers::WithinAbs(0.015513186543406164740,w_tolerance));
REQUIRE_THAT(pts[62], Catch::Matchers::WithinAbs(0.95378664780518189753,x_tolerance));
REQUIRE_THAT(wgt[62], Catch::Matchers::WithinAbs(0.013578860649075671000,w_tolerance));
REQUIRE_THAT(pts[63], Catch::Matchers::WithinAbs(0.96638662164286056686,x_tolerance));
REQUIRE_THAT(wgt[63], Catch::Matchers::WithinAbs(0.011616796610671965549,w_tolerance));
REQUIRE_THAT(pts[64], Catch::Matchers::WithinAbs(0.97701233162209426339,x_tolerance));
REQUIRE_THAT(wgt[64], Catch::Matchers::WithinAbs(0.0096310061504155755887,w_tolerance));
REQUIRE_THAT(pts[65], Catch::Matchers::WithinAbs(0.98564208002263759324,x_tolerance));
REQUIRE_THAT(wgt[65], Catch::Matchers::WithinAbs(0.0076255559312015106114,w_tolerance));
REQUIRE_THAT(pts[66], Catch::Matchers::WithinAbs(0.99225826671685311870,x_tolerance));
REQUIRE_THAT(wgt[66], Catch::Matchers::WithinAbs(0.0056045799278705948285,w_tolerance));
REQUIRE_THAT(pts[67], Catch::Matchers::WithinAbs(0.99684750048519510046,x_tolerance));
REQUIRE_THAT(wgt[67], Catch::Matchers::WithinAbs(0.0035724167393973726097,w_tolerance));
REQUIRE_THAT(pts[68], Catch::Matchers::WithinAbs(0.99940142754324478821,x_tolerance));
REQUIRE_THAT(wgt[68], Catch::Matchers::WithinAbs(0.0015359769527920840751,w_tolerance));
}

TEST_CASE("70 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(70);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99941828597357584206,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0014927212888445157310,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99693625196168015661,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0034718948930781432550,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.99247605521168998110,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0054471118742172183128,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.98604555807039865993,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.0074117693631902103621,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.97765740595759240039,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.0093617627696990268115,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.96732822366498643839,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.011293184649931537650,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.95507850911429284264,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.013202190814676747625,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.94093257900381535552,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.015084987865443127682,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.92491851689793444027,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.016937836376302932532,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.90706811626092284944,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.018757057093133423415,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.88741681686334817112,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.020539037824326453385,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.86600363421385862938,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.022280240452256595834,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.84287108199898024232,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.023977207889100292279,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.81806508762544118903,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.025626570908468482799,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.79163490100789275811,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.027225054818664417159,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.76363299677189956892,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.028769485955808280661,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.73411497006094264131,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.030256797980154237817,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.70313942615152859706,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.031684037961308481735,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.67076786409407740565,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.033048372239372420471,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.63706455460977809628,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.034347092049906537569,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.60209641248535548734,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.035577618901292380533,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.56593286371880828637,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.036737509693672695348,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.52864570767971112727,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.037824461569222817197,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.49030897455763658927,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.038836316484073403979,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.45099877838164786573,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.039771065492776567478,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.41079316590263058937,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.040626852736789616351,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.36977196163846189584,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.041401979129045208638,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.32801660938964325785,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.042094905727284406021,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.28561001054003786169,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.042704256789449777770,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.24263635946374064578,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.043228822505068699789,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(-0.19918097636485766415,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.043667561397201440253,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(-0.15533013788207024731,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.044019602390183458757,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(-0.11117090579429869374,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.044284246539055406776,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(-0.066790954167551324004,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.044460968417246370824,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(-0.022278395286140309694,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.044549417159754667202,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(0.022278395286140309694,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.044549417159754667202,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(0.066790954167551324004,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.044460968417246370824,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(0.11117090579429869374,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.044284246539055406776,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(0.15533013788207024731,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.044019602390183458757,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(0.19918097636485766415,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.043667561397201440253,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0.24263635946374064578,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.043228822505068699789,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.28561001054003786169,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.042704256789449777770,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.32801660938964325785,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.042094905727284406021,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.36977196163846189584,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.041401979129045208638,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.41079316590263058937,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.040626852736789616351,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.45099877838164786573,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.039771065492776567478,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.49030897455763658927,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.038836316484073403979,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.52864570767971112727,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.037824461569222817197,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.56593286371880828637,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.036737509693672695348,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.60209641248535548734,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.035577618901292380533,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.63706455460977809628,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.034347092049906537569,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.67076786409407740565,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.033048372239372420471,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.70313942615152859706,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.031684037961308481735,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.73411497006094264131,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.030256797980154237817,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.76363299677189956892,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.028769485955808280661,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.79163490100789275811,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.027225054818664417159,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.81806508762544118903,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.025626570908468482799,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.84287108199898024232,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.023977207889100292279,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.86600363421385862938,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.022280240452256595834,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.88741681686334817112,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.020539037824326453385,w_tolerance));
REQUIRE_THAT(pts[60], Catch::Matchers::WithinAbs(0.90706811626092284944,x_tolerance));
REQUIRE_THAT(wgt[60], Catch::Matchers::WithinAbs(0.018757057093133423415,w_tolerance));
REQUIRE_THAT(pts[61], Catch::Matchers::WithinAbs(0.92491851689793444027,x_tolerance));
REQUIRE_THAT(wgt[61], Catch::Matchers::WithinAbs(0.016937836376302932532,w_tolerance));
REQUIRE_THAT(pts[62], Catch::Matchers::WithinAbs(0.94093257900381535552,x_tolerance));
REQUIRE_THAT(wgt[62], Catch::Matchers::WithinAbs(0.015084987865443127682,w_tolerance));
REQUIRE_THAT(pts[63], Catch::Matchers::WithinAbs(0.95507850911429284264,x_tolerance));
REQUIRE_THAT(wgt[63], Catch::Matchers::WithinAbs(0.013202190814676747625,w_tolerance));
REQUIRE_THAT(pts[64], Catch::Matchers::WithinAbs(0.96732822366498643839,x_tolerance));
REQUIRE_THAT(wgt[64], Catch::Matchers::WithinAbs(0.011293184649931537650,w_tolerance));
REQUIRE_THAT(pts[65], Catch::Matchers::WithinAbs(0.97765740595759240039,x_tolerance));
REQUIRE_THAT(wgt[65], Catch::Matchers::WithinAbs(0.0093617627696990268115,w_tolerance));
REQUIRE_THAT(pts[66], Catch::Matchers::WithinAbs(0.98604555807039865993,x_tolerance));
REQUIRE_THAT(wgt[66], Catch::Matchers::WithinAbs(0.0074117693631902103621,w_tolerance));
REQUIRE_THAT(pts[67], Catch::Matchers::WithinAbs(0.99247605521168998110,x_tolerance));
REQUIRE_THAT(wgt[67], Catch::Matchers::WithinAbs(0.0054471118742172183128,w_tolerance));
REQUIRE_THAT(pts[68], Catch::Matchers::WithinAbs(0.99693625196168015661,x_tolerance));
REQUIRE_THAT(wgt[68], Catch::Matchers::WithinAbs(0.0034718948930781432550,w_tolerance));
REQUIRE_THAT(pts[69], Catch::Matchers::WithinAbs(0.99941828597357584206,x_tolerance));
REQUIRE_THAT(wgt[69], Catch::Matchers::WithinAbs(0.0014927212888445157310,w_tolerance));
}

TEST_CASE("71 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(71);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99943444211973692756,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0014512673300293972685,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99702130825125513007,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0033755554967306758651,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.99268478487064156994,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0052961828440258926327,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.98643227726826136809,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.0072068352818314933873,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.97827573611360179287,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.0091036264619920058513,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.96823087742632534568,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.010982860154298551706,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.95631708104105287488,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.012840899668087806070,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.94255733992227115912,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.014674155334611529200,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.92697821225087141077,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.016479087207462396551,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.90960976898453435944,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.018252210704678670502,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.89048553535520651167,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.019990102932350111287,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.86964242595630741115,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.021689409135985367962,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.84712067339187396894,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.023346849109223252632,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.82296375056755275239,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.024959223494313873055,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.79721828674931796064,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.026523419942157908008,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.76993397754103664741,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.028036419111741490618,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.74116348894937684801,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.029495300493708812465,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.71096235571854437097,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.030897248045090721699,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.67938887412964457628,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.032239555623443526942,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.64650398947078764280,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.033519632209454030834,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.61237117839468233631,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.034735006907682188375,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.57705632639051981049,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.035883333715648910778,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.54062760060648735600,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.036962396051982031856,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.50315531826829007083,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.037970111034831156214,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.46471181094759782295,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.038904533502262947492,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.42537128494236955586,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.039763859766857581674,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.38520967803852729599,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.040546431097246896435,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.34430451292944702471,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.041250736919866024249,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.30273474757619137643,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.041875417734733006190,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.26058062279731866202,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.042419267739624593035,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(-0.21792350738245333553,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.042881237157580435021,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(-0.17484574102858486317,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.043260434263241266599,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(-0.13143047540226608701,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.043556127104108533371,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(-0.087761513634500682362,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.043767744913402144972,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(-0.043923148558135329332,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.043894879211788586321,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.043937284595852365758,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(0.043923148558135329332,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.043894879211788586321,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(0.087761513634500682362,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.043767744913402144972,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(0.13143047540226608701,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.043556127104108533371,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(0.17484574102858486317,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.043260434263241266599,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0.21792350738245333553,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.042881237157580435021,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.26058062279731866202,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.042419267739624593035,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.30273474757619137643,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.041875417734733006190,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.34430451292944702471,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.041250736919866024249,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.38520967803852729599,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.040546431097246896435,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.42537128494236955586,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.039763859766857581674,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.46471181094759782295,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.038904533502262947492,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.50315531826829007083,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.037970111034831156214,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.54062760060648735600,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.036962396051982031856,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.57705632639051981049,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.035883333715648910778,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.61237117839468233631,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.034735006907682188375,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.64650398947078764280,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.033519632209454030834,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.67938887412964457628,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.032239555623443526942,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.71096235571854437097,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.030897248045090721699,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.74116348894937684801,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.029495300493708812465,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.76993397754103664741,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.028036419111741490618,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.79721828674931796064,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.026523419942157908008,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.82296375056755275239,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.024959223494313873055,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.84712067339187396894,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.023346849109223252632,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.86964242595630741115,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.021689409135985367962,w_tolerance));
REQUIRE_THAT(pts[60], Catch::Matchers::WithinAbs(0.89048553535520651167,x_tolerance));
REQUIRE_THAT(wgt[60], Catch::Matchers::WithinAbs(0.019990102932350111287,w_tolerance));
REQUIRE_THAT(pts[61], Catch::Matchers::WithinAbs(0.90960976898453435944,x_tolerance));
REQUIRE_THAT(wgt[61], Catch::Matchers::WithinAbs(0.018252210704678670502,w_tolerance));
REQUIRE_THAT(pts[62], Catch::Matchers::WithinAbs(0.92697821225087141077,x_tolerance));
REQUIRE_THAT(wgt[62], Catch::Matchers::WithinAbs(0.016479087207462396551,w_tolerance));
REQUIRE_THAT(pts[63], Catch::Matchers::WithinAbs(0.94255733992227115912,x_tolerance));
REQUIRE_THAT(wgt[63], Catch::Matchers::WithinAbs(0.014674155334611529200,w_tolerance));
REQUIRE_THAT(pts[64], Catch::Matchers::WithinAbs(0.95631708104105287488,x_tolerance));
REQUIRE_THAT(wgt[64], Catch::Matchers::WithinAbs(0.012840899668087806070,w_tolerance));
REQUIRE_THAT(pts[65], Catch::Matchers::WithinAbs(0.96823087742632534568,x_tolerance));
REQUIRE_THAT(wgt[65], Catch::Matchers::WithinAbs(0.010982860154298551706,w_tolerance));
REQUIRE_THAT(pts[66], Catch::Matchers::WithinAbs(0.97827573611360179287,x_tolerance));
REQUIRE_THAT(wgt[66], Catch::Matchers::WithinAbs(0.0091036264619920058513,w_tolerance));
REQUIRE_THAT(pts[67], Catch::Matchers::WithinAbs(0.98643227726826136809,x_tolerance));
REQUIRE_THAT(wgt[67], Catch::Matchers::WithinAbs(0.0072068352818314933873,w_tolerance));
REQUIRE_THAT(pts[68], Catch::Matchers::WithinAbs(0.99268478487064156994,x_tolerance));
REQUIRE_THAT(wgt[68], Catch::Matchers::WithinAbs(0.0052961828440258926327,w_tolerance));
REQUIRE_THAT(pts[69], Catch::Matchers::WithinAbs(0.99702130825125513007,x_tolerance));
REQUIRE_THAT(wgt[69], Catch::Matchers::WithinAbs(0.0033755554967306758651,w_tolerance));
REQUIRE_THAT(pts[70], Catch::Matchers::WithinAbs(0.99943444211973692756,x_tolerance));
REQUIRE_THAT(wgt[70], Catch::Matchers::WithinAbs(0.0014512673300293972685,w_tolerance));
}

TEST_CASE("72 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(72);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99944993445296264218,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0014115163939734341358,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99710287164272907847,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0032831697746674958019,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.99288495101680190823,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0051514360187908869082,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.98680315237583046581,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.0070102723218618632961,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.97886877855723377180,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.0088559960737061533840,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.96909669799878042592,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.010685108165351897159,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.95750524757769822566,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.012494165619873757768,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.94411618527253796501,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.014279769054554193267,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.92895464588091801057,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.016038564950285155218,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.91204909268867146992,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.017767250789200653594,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.89343126358809125620,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.019462580863294278043,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.87313611129877890528,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.021121372216440553510,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.85120173765443785111,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.022740510555035754456,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.82766932202275431462,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.024316956064419164326,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.80258304396929185203,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.025847749100655890284,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.77599000029998256214,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.027330015738950934434,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.74794011663283239067,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.028760973164701761095,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.71848605366223496136,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.030137934895375479293,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.68768310829046780749,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.031458315822561813978,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.65558910981120105615,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.032719637064293846704,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.62226431133946819101,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.033919530618286059497,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.58777127669165559920,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.035055743807217870434,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.55217476292771439740,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.036126143507637992986,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.51554159877600352386,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.037128720154502899461,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.47794055916894045718,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.038061591513802163834,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.43944223612496073208,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.038923006216169663800,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.40011890621916161270,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.039711347044834901782,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.36004439489141923754,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.040425133971733970043,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.31929393784671217133,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.041063026936075061102,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.27794403980784760698,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.041623828360138598208,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(-0.23607233088575992506,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.042106485397586464147,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(-0.19375742083702605980,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.042510091910057720078,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(-0.15107875148221003033,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.042833890168338813667,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(-0.10811644756210281481,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.043077272274913699745,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(-0.064951166311857114075,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.043239781305222617485,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(-0.021663946035424044670,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.043321112165486537076,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(0.021663946035424044670,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.043321112165486537076,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(0.064951166311857114075,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.043239781305222617485,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(0.10811644756210281481,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.043077272274913699745,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(0.15107875148221003033,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.042833890168338813667,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0.19375742083702605980,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.042510091910057720078,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.23607233088575992506,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.042106485397586464147,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.27794403980784760698,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.041623828360138598208,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.31929393784671217133,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.041063026936075061102,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.36004439489141923754,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.040425133971733970043,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.40011890621916161270,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.039711347044834901782,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.43944223612496073208,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.038923006216169663800,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.47794055916894045718,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.038061591513802163834,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.51554159877600352386,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.037128720154502899461,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.55217476292771439740,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.036126143507637992986,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.58777127669165559920,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.035055743807217870434,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.62226431133946819101,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.033919530618286059497,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.65558910981120105615,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.032719637064293846704,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.68768310829046780749,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.031458315822561813978,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.71848605366223496136,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.030137934895375479293,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.74794011663283239067,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.028760973164701761095,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.77599000029998256214,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.027330015738950934434,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.80258304396929185203,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.025847749100655890284,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.82766932202275431462,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.024316956064419164326,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.85120173765443785111,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.022740510555035754456,w_tolerance));
REQUIRE_THAT(pts[60], Catch::Matchers::WithinAbs(0.87313611129877890528,x_tolerance));
REQUIRE_THAT(wgt[60], Catch::Matchers::WithinAbs(0.021121372216440553510,w_tolerance));
REQUIRE_THAT(pts[61], Catch::Matchers::WithinAbs(0.89343126358809125620,x_tolerance));
REQUIRE_THAT(wgt[61], Catch::Matchers::WithinAbs(0.019462580863294278043,w_tolerance));
REQUIRE_THAT(pts[62], Catch::Matchers::WithinAbs(0.91204909268867146992,x_tolerance));
REQUIRE_THAT(wgt[62], Catch::Matchers::WithinAbs(0.017767250789200653594,w_tolerance));
REQUIRE_THAT(pts[63], Catch::Matchers::WithinAbs(0.92895464588091801057,x_tolerance));
REQUIRE_THAT(wgt[63], Catch::Matchers::WithinAbs(0.016038564950285155218,w_tolerance));
REQUIRE_THAT(pts[64], Catch::Matchers::WithinAbs(0.94411618527253796501,x_tolerance));
REQUIRE_THAT(wgt[64], Catch::Matchers::WithinAbs(0.014279769054554193267,w_tolerance));
REQUIRE_THAT(pts[65], Catch::Matchers::WithinAbs(0.95750524757769822566,x_tolerance));
REQUIRE_THAT(wgt[65], Catch::Matchers::WithinAbs(0.012494165619873757768,w_tolerance));
REQUIRE_THAT(pts[66], Catch::Matchers::WithinAbs(0.96909669799878042592,x_tolerance));
REQUIRE_THAT(wgt[66], Catch::Matchers::WithinAbs(0.010685108165351897159,w_tolerance));
REQUIRE_THAT(pts[67], Catch::Matchers::WithinAbs(0.97886877855723377180,x_tolerance));
REQUIRE_THAT(wgt[67], Catch::Matchers::WithinAbs(0.0088559960737061533840,w_tolerance));
REQUIRE_THAT(pts[68], Catch::Matchers::WithinAbs(0.98680315237583046581,x_tolerance));
REQUIRE_THAT(wgt[68], Catch::Matchers::WithinAbs(0.0070102723218618632961,w_tolerance));
REQUIRE_THAT(pts[69], Catch::Matchers::WithinAbs(0.99288495101680190823,x_tolerance));
REQUIRE_THAT(wgt[69], Catch::Matchers::WithinAbs(0.0051514360187908869082,w_tolerance));
REQUIRE_THAT(pts[70], Catch::Matchers::WithinAbs(0.99710287164272907847,x_tolerance));
REQUIRE_THAT(wgt[70], Catch::Matchers::WithinAbs(0.0032831697746674958019,w_tolerance));
REQUIRE_THAT(pts[71], Catch::Matchers::WithinAbs(0.99944993445296264218,x_tolerance));
REQUIRE_THAT(wgt[71], Catch::Matchers::WithinAbs(0.0014115163939734341358,w_tolerance));
}

TEST_CASE("73 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(73);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99946479884588117100,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0013733764627596192240,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99718113077161126725,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0031945243772890345221,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.99307701558894515156,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0050125385716061902638,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.98715903662493211478,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.0068216313491747923622,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.97943789205648362456,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.0086183104795322476139,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.96992765905498591275,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.010399260995000532201,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.95864570069797422041,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.012161220929281112728,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.94561262168948357193,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.013900968788314650868,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.93085222738122455990,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.015615325433591422996,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.91439147917625641474,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.017301158762489083006,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.89626044484669122105,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.018955389048670021690,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.87649224342065149983,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.020574994420361169166,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.85512298459429948451,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.022157016317040072057,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.83219170272490974376,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.023698564864218974627,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.80774028550273592481,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.025196824137538312813,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.78181339742164475133,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.026649057298727482952,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.75445839818332348024,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.028052611590572060324,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.72572525618155981850,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.029404923180116560105,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.69566645722326271722,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.030703521840433504938,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.66433690865219633888,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.031946035461976706487,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.63179383905011845651,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.033130194385043840677,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.59809669369827097600,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.034253835545302215414,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.56330702599001651274,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.035314906424728287509,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.52748838499287093680,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.036311468800697784690,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.49070619936525198770,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.037241702286349773157,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.45302765783994539519,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.038103907655739800596,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.41452158649257576389,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.038896509947696739520,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.37525832301925150291,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.039618061342706143317,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.33530958825302245612,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.040267243807560033365,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.29474835515383676826,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.040842871502938861549,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(-0.25364871551130139356,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.041343892949525494527,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(-0.21208574460373052653,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.041769392948692853754,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(-0.17013536406070075851,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.042118594254255636269,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(-0.12787420317961430175,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.042390858992231594405,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(-0.085379458949596300996,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.042585689826018387026,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(-0.042728755038413991186,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.042702730864857222077,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.042741768313923562411,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(0.042728755038413991186,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.042702730864857222077,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(0.085379458949596300996,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.042585689826018387026,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(0.12787420317961430175,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.042390858992231594405,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0.17013536406070075851,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.042118594254255636269,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.21208574460373052653,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.041769392948692853754,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.25364871551130139356,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.041343892949525494527,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.29474835515383676826,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.040842871502938861549,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.33530958825302245612,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.040267243807560033365,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.37525832301925150291,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.039618061342706143317,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.41452158649257576389,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.038896509947696739520,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.45302765783994539519,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.038103907655739800596,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.49070619936525198770,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.037241702286349773157,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.52748838499287093680,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.036311468800697784690,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.56330702599001651274,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.035314906424728287509,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.59809669369827097600,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.034253835545302215414,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.63179383905011845651,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.033130194385043840677,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.66433690865219633888,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.031946035461976706487,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.69566645722326271722,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.030703521840433504938,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.72572525618155981850,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.029404923180116560105,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.75445839818332348024,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.028052611590572060324,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.78181339742164475133,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.026649057298727482952,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.80774028550273592481,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.025196824137538312813,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.83219170272490974376,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.023698564864218974627,w_tolerance));
REQUIRE_THAT(pts[60], Catch::Matchers::WithinAbs(0.85512298459429948451,x_tolerance));
REQUIRE_THAT(wgt[60], Catch::Matchers::WithinAbs(0.022157016317040072057,w_tolerance));
REQUIRE_THAT(pts[61], Catch::Matchers::WithinAbs(0.87649224342065149983,x_tolerance));
REQUIRE_THAT(wgt[61], Catch::Matchers::WithinAbs(0.020574994420361169166,w_tolerance));
REQUIRE_THAT(pts[62], Catch::Matchers::WithinAbs(0.89626044484669122105,x_tolerance));
REQUIRE_THAT(wgt[62], Catch::Matchers::WithinAbs(0.018955389048670021690,w_tolerance));
REQUIRE_THAT(pts[63], Catch::Matchers::WithinAbs(0.91439147917625641474,x_tolerance));
REQUIRE_THAT(wgt[63], Catch::Matchers::WithinAbs(0.017301158762489083006,w_tolerance));
REQUIRE_THAT(pts[64], Catch::Matchers::WithinAbs(0.93085222738122455990,x_tolerance));
REQUIRE_THAT(wgt[64], Catch::Matchers::WithinAbs(0.015615325433591422996,w_tolerance));
REQUIRE_THAT(pts[65], Catch::Matchers::WithinAbs(0.94561262168948357193,x_tolerance));
REQUIRE_THAT(wgt[65], Catch::Matchers::WithinAbs(0.013900968788314650868,w_tolerance));
REQUIRE_THAT(pts[66], Catch::Matchers::WithinAbs(0.95864570069797422041,x_tolerance));
REQUIRE_THAT(wgt[66], Catch::Matchers::WithinAbs(0.012161220929281112728,w_tolerance));
REQUIRE_THAT(pts[67], Catch::Matchers::WithinAbs(0.96992765905498591275,x_tolerance));
REQUIRE_THAT(wgt[67], Catch::Matchers::WithinAbs(0.010399260995000532201,w_tolerance));
REQUIRE_THAT(pts[68], Catch::Matchers::WithinAbs(0.97943789205648362456,x_tolerance));
REQUIRE_THAT(wgt[68], Catch::Matchers::WithinAbs(0.0086183104795322476139,w_tolerance));
REQUIRE_THAT(pts[69], Catch::Matchers::WithinAbs(0.98715903662493211478,x_tolerance));
REQUIRE_THAT(wgt[69], Catch::Matchers::WithinAbs(0.0068216313491747923622,w_tolerance));
REQUIRE_THAT(pts[70], Catch::Matchers::WithinAbs(0.99307701558894515156,x_tolerance));
REQUIRE_THAT(wgt[70], Catch::Matchers::WithinAbs(0.0050125385716061902638,w_tolerance));
REQUIRE_THAT(pts[71], Catch::Matchers::WithinAbs(0.99718113077161126725,x_tolerance));
REQUIRE_THAT(wgt[71], Catch::Matchers::WithinAbs(0.0031945243772890345221,w_tolerance));
REQUIRE_THAT(pts[72], Catch::Matchers::WithinAbs(0.99946479884588117100,x_tolerance));
REQUIRE_THAT(wgt[72], Catch::Matchers::WithinAbs(0.0013733764627596192240,w_tolerance));
}

TEST_CASE("74 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(74);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99947906878032952427,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0013367616500698835503,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99725626171101639084,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0031094201498967546787,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.99326140980464497271,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0048791797585941445843,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.98750072661623855961,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.0066404929091143576348,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.97998434543130033610,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.0083900454339713970641,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.97072560404251872682,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.010124694538287305421,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.95974095545952891270,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.011841347547499667323,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.94704992642838500827,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.013536949411787494341,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.93267507946205456609,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.015208484243401234809,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.91664197164290646068,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.016852979582024853585,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.89897910876189579558,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.018467511308979879783,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.87971789445208880923,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.020049208702794944253,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.85889257426598357680,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.021595259481675888970,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.83654017474281573917,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.023102914774915823031,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.81270043755197437388,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.024569493995942767246,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.78741574881957551782,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.025992389600723787867,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.76073106375899447597,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.027369071719679352302,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.73269382673688027776,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.028697092653269875342,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.70335388691544185906,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.029974091222461187340,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.67276340962024760272,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.031197796965915426033,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.64097678359069238860,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.032366034176216999525,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.60805052427777982553,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.033476725767828766264,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.57404317336099415250,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.034527896969826461003,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.53901519466281708324,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.035517678836800959926,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.50302886664588516591,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.036444311571658564482,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.46614817168388118342,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.037306147654394155734,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.42843868230300327938,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.038101654771263248896,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.38996744459625075057,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.038829418539137707758,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.35080285901779804749,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.039488145020196468324,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.31101455876939063705,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.040076663022476966759,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(-0.27067328599498040554,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.040593926182194728058,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(-0.22985076600371703102,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.041039014824127266847,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(-0.18861957974491857831,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.041411137596753510820,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(-0.14705303476175341173,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.041709632879240754379,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(-0.10522503485307097186,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.041933969957777021470,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(-0.063209948675116291896,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.042083749969156972475,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(-0.021082477516748304448,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.042158706609943422122,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(0.021082477516748304448,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.042158706609943422122,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(0.063209948675116291896,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.042083749969156972475,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(0.10522503485307097186,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.041933969957777021470,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0.14705303476175341173,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.041709632879240754379,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.18861957974491857831,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.041411137596753510820,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.22985076600371703102,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.041039014824127266847,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.27067328599498040554,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.040593926182194728058,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.31101455876939063705,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.040076663022476966759,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.35080285901779804749,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.039488145020196468324,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.38996744459625075057,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.038829418539137707758,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.42843868230300327938,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.038101654771263248896,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.46614817168388118342,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.037306147654394155734,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.50302886664588516591,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.036444311571658564482,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.53901519466281708324,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.035517678836800959926,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.57404317336099415250,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.034527896969826461003,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.60805052427777982553,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.033476725767828766264,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.64097678359069238860,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.032366034176216999525,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.67276340962024760272,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.031197796965915426033,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.70335388691544185906,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.029974091222461187340,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.73269382673688027776,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.028697092653269875342,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.76073106375899447597,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.027369071719679352302,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.78741574881957551782,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.025992389600723787867,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.81270043755197437388,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.024569493995942767246,w_tolerance));
REQUIRE_THAT(pts[60], Catch::Matchers::WithinAbs(0.83654017474281573917,x_tolerance));
REQUIRE_THAT(wgt[60], Catch::Matchers::WithinAbs(0.023102914774915823031,w_tolerance));
REQUIRE_THAT(pts[61], Catch::Matchers::WithinAbs(0.85889257426598357680,x_tolerance));
REQUIRE_THAT(wgt[61], Catch::Matchers::WithinAbs(0.021595259481675888970,w_tolerance));
REQUIRE_THAT(pts[62], Catch::Matchers::WithinAbs(0.87971789445208880923,x_tolerance));
REQUIRE_THAT(wgt[62], Catch::Matchers::WithinAbs(0.020049208702794944253,w_tolerance));
REQUIRE_THAT(pts[63], Catch::Matchers::WithinAbs(0.89897910876189579558,x_tolerance));
REQUIRE_THAT(wgt[63], Catch::Matchers::WithinAbs(0.018467511308979879783,w_tolerance));
REQUIRE_THAT(pts[64], Catch::Matchers::WithinAbs(0.91664197164290646068,x_tolerance));
REQUIRE_THAT(wgt[64], Catch::Matchers::WithinAbs(0.016852979582024853585,w_tolerance));
REQUIRE_THAT(pts[65], Catch::Matchers::WithinAbs(0.93267507946205456609,x_tolerance));
REQUIRE_THAT(wgt[65], Catch::Matchers::WithinAbs(0.015208484243401234809,w_tolerance));
REQUIRE_THAT(pts[66], Catch::Matchers::WithinAbs(0.94704992642838500827,x_tolerance));
REQUIRE_THAT(wgt[66], Catch::Matchers::WithinAbs(0.013536949411787494341,w_tolerance));
REQUIRE_THAT(pts[67], Catch::Matchers::WithinAbs(0.95974095545952891270,x_tolerance));
REQUIRE_THAT(wgt[67], Catch::Matchers::WithinAbs(0.011841347547499667323,w_tolerance));
REQUIRE_THAT(pts[68], Catch::Matchers::WithinAbs(0.97072560404251872682,x_tolerance));
REQUIRE_THAT(wgt[68], Catch::Matchers::WithinAbs(0.010124694538287305421,w_tolerance));
REQUIRE_THAT(pts[69], Catch::Matchers::WithinAbs(0.97998434543130033610,x_tolerance));
REQUIRE_THAT(wgt[69], Catch::Matchers::WithinAbs(0.0083900454339713970641,w_tolerance));
REQUIRE_THAT(pts[70], Catch::Matchers::WithinAbs(0.98750072661623855961,x_tolerance));
REQUIRE_THAT(wgt[70], Catch::Matchers::WithinAbs(0.0066404929091143576348,w_tolerance));
REQUIRE_THAT(pts[71], Catch::Matchers::WithinAbs(0.99326140980464497271,x_tolerance));
REQUIRE_THAT(wgt[71], Catch::Matchers::WithinAbs(0.0048791797585941445843,w_tolerance));
REQUIRE_THAT(pts[72], Catch::Matchers::WithinAbs(0.99725626171101639084,x_tolerance));
REQUIRE_THAT(wgt[72], Catch::Matchers::WithinAbs(0.0031094201498967546787,w_tolerance));
REQUIRE_THAT(pts[73], Catch::Matchers::WithinAbs(0.99947906878032952427,x_tolerance));
REQUIRE_THAT(wgt[73], Catch::Matchers::WithinAbs(0.0013367616500698835503,w_tolerance));
}

TEST_CASE("75 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(75);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99949277553603545648,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0013015917173758559938,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99732842896223180331,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0030276710146060412912,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.99343853657889270438,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0047510691850152739659,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.98782896676752452014,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.0064664649070375384020,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.98050932459741660577,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.0081707107073278264037,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.97149225634306382336,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.0098608249161140183921,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.96079336374189231416,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.011533873328304495967,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.94843116507928737792,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.013186956762824802120,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.93442705996410715684,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.014817212289814468520,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.91880529122839399127,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.016421817119024640044,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.90159290254844633409,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.017997993125645050638,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.88281969144789554216,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.019543011520127889380,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.86251815762688342546,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.021054197512282842236,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.84072344665495805010,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.022528934913865776451,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.81747328910354131484,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.023964670653716959175,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.79280793521356351036,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.025358919190216379094,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.76677008520664192552,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.026709266810120851772,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.73940481535803252650,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.028013375804780540825,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.71075949995804112677,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.029268988515725986805,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.68088372929626959804,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.030473931242214539203,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.64982922381026223259,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.031626118003749648056,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.61764974454692596445,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.032723554150934220521,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.58440100009157788032,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.033764339818334092647,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.55014055012564555150,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.034746673213330406535,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.51492770577991664053,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.035668853735240453089,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.47882342695580315702,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.036529284919290339007,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.44189021679234826654,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.037326477200332090167,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.40419201346165361319,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.038059050491513603136,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.36579407948003592533,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.038725736573432575841,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.32676288872652630236,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.039325381289635162521,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(-0.28716601136429724694,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.039856946544656352576,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(-0.24707199686423475690,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.040319512101141577558,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(-0.20655025533315960711,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.040712277172937330299,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(-0.16567093735213781839,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.041034561811392106676,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(-0.12450481253290026163,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.041285808082467189083,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(-0.083123147002610991697,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.041465581032619092135,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(-0.041597580029079455975,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.041573569441781278783,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.041609586362141409380,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(0.041597580029079455975,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.041573569441781278783,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(0.083123147002610991697,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.041465581032619092135,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0.12450481253290026163,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.041285808082467189083,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.16567093735213781839,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.041034561811392106676,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.20655025533315960711,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.040712277172937330299,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.24707199686423475690,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.040319512101141577558,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.28716601136429724694,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.039856946544656352576,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.32676288872652630236,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.039325381289635162521,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.36579407948003592533,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.038725736573432575841,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.40419201346165361319,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.038059050491513603136,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.44189021679234826654,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.037326477200332090167,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.47882342695580315702,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.036529284919290339007,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.51492770577991664053,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.035668853735240453089,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.55014055012564555150,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.034746673213330406535,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.58440100009157788032,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.033764339818334092647,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.61764974454692596445,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.032723554150934220521,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.64982922381026223259,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.031626118003749648056,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.68088372929626959804,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.030473931242214539203,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.71075949995804112677,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.029268988515725986805,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.73940481535803252650,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.028013375804780540825,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.76677008520664192552,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.026709266810120851772,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.79280793521356351036,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.025358919190216379094,w_tolerance));
REQUIRE_THAT(pts[60], Catch::Matchers::WithinAbs(0.81747328910354131484,x_tolerance));
REQUIRE_THAT(wgt[60], Catch::Matchers::WithinAbs(0.023964670653716959175,w_tolerance));
REQUIRE_THAT(pts[61], Catch::Matchers::WithinAbs(0.84072344665495805010,x_tolerance));
REQUIRE_THAT(wgt[61], Catch::Matchers::WithinAbs(0.022528934913865776451,w_tolerance));
REQUIRE_THAT(pts[62], Catch::Matchers::WithinAbs(0.86251815762688342546,x_tolerance));
REQUIRE_THAT(wgt[62], Catch::Matchers::WithinAbs(0.021054197512282842236,w_tolerance));
REQUIRE_THAT(pts[63], Catch::Matchers::WithinAbs(0.88281969144789554216,x_tolerance));
REQUIRE_THAT(wgt[63], Catch::Matchers::WithinAbs(0.019543011520127889380,w_tolerance));
REQUIRE_THAT(pts[64], Catch::Matchers::WithinAbs(0.90159290254844633409,x_tolerance));
REQUIRE_THAT(wgt[64], Catch::Matchers::WithinAbs(0.017997993125645050638,w_tolerance));
REQUIRE_THAT(pts[65], Catch::Matchers::WithinAbs(0.91880529122839399127,x_tolerance));
REQUIRE_THAT(wgt[65], Catch::Matchers::WithinAbs(0.016421817119024640044,w_tolerance));
REQUIRE_THAT(pts[66], Catch::Matchers::WithinAbs(0.93442705996410715684,x_tolerance));
REQUIRE_THAT(wgt[66], Catch::Matchers::WithinAbs(0.014817212289814468520,w_tolerance));
REQUIRE_THAT(pts[67], Catch::Matchers::WithinAbs(0.94843116507928737792,x_tolerance));
REQUIRE_THAT(wgt[67], Catch::Matchers::WithinAbs(0.013186956762824802120,w_tolerance));
REQUIRE_THAT(pts[68], Catch::Matchers::WithinAbs(0.96079336374189231416,x_tolerance));
REQUIRE_THAT(wgt[68], Catch::Matchers::WithinAbs(0.011533873328304495967,w_tolerance));
REQUIRE_THAT(pts[69], Catch::Matchers::WithinAbs(0.97149225634306382336,x_tolerance));
REQUIRE_THAT(wgt[69], Catch::Matchers::WithinAbs(0.0098608249161140183921,w_tolerance));
REQUIRE_THAT(pts[70], Catch::Matchers::WithinAbs(0.98050932459741660577,x_tolerance));
REQUIRE_THAT(wgt[70], Catch::Matchers::WithinAbs(0.0081707107073278264037,w_tolerance));
REQUIRE_THAT(pts[71], Catch::Matchers::WithinAbs(0.98782896676752452014,x_tolerance));
REQUIRE_THAT(wgt[71], Catch::Matchers::WithinAbs(0.0064664649070375384020,w_tolerance));
REQUIRE_THAT(pts[72], Catch::Matchers::WithinAbs(0.99343853657889270438,x_tolerance));
REQUIRE_THAT(wgt[72], Catch::Matchers::WithinAbs(0.0047510691850152739659,w_tolerance));
REQUIRE_THAT(pts[73], Catch::Matchers::WithinAbs(0.99732842896223180331,x_tolerance));
REQUIRE_THAT(wgt[73], Catch::Matchers::WithinAbs(0.0030276710146060412912,w_tolerance));
REQUIRE_THAT(pts[74], Catch::Matchers::WithinAbs(0.99949277553603545648,x_tolerance));
REQUIRE_THAT(wgt[74], Catch::Matchers::WithinAbs(0.0013015917173758559938,w_tolerance));
}

TEST_CASE("76 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(76);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99950594836215307811,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0012677916340853596633,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99739778635535543669,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0029491029536424749004,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.99360877272352698462,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0046279352280374213261,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.98814445335983743850,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.0062991804973284458666,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.98101393897565589525,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.0079598474772397346211,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.97222922852037690448,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.0096071054147137540824,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.96180512675876782717,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.011238168569667687240,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.94975920771089638508,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.012850283847510144945,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.93611178193481079626,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.014440731748276679940,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.92088586125215011849,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.016006829912248570889,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.90410711954556682854,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.017545937291474230954,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.88580384929208278722,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.019055458467190582807,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.86600691377198195523,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.020532847967908021093,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.84474969498334239401,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.021975614534416249168,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.82206803732897461348,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.023381325307011186622,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.79800018716120016975,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.024747609920659671643,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.77258672828180976130,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.026072164497985983524,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.74587051350361044315,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.027352755531827521674,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.71789659238770363937,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.028587223650054003774,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.68871213527764059700,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.029773487255905040957,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.65836635375814263028,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.030909546037491595390,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.62691041767226655915,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.031993484340421600069,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.59439736883679291815,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.033023474397791741007,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.56088203160123747900,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.033997779412056380847,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.52642092040124259096,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.034914756483550767444,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.49107214446219386486,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.035772859380713947528,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.45489530981372633943,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.036570641147329617007,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.41795141878032729880,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.037306756542381609828,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.38030276711750444347,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.037979964308405283195,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.34201283896696202393,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.038589129264506738343,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(-0.30314619980790777810,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.039133224220518440768,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(-0.26376838758499427648,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.039611331709062058423,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(-0.22394580219647413376,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.040022645532596826116,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(-0.18374559352891447742,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.040366472122844023154,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(-0.14323554822726752145,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.040642231710294738777,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(-0.10248397539122701830,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.040849459301828492280,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(-0.061559591390611208429,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.040987805464793951541,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(-0.020531403993998635502,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.041057036916229422593,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(0.020531403993998635502,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.041057036916229422593,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(0.061559591390611208429,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.040987805464793951541,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0.10248397539122701830,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.040849459301828492280,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.14323554822726752145,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.040642231710294738777,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.18374559352891447742,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.040366472122844023154,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.22394580219647413376,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.040022645532596826116,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.26376838758499427648,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.039611331709062058423,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.30314619980790777810,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.039133224220518440768,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.34201283896696202393,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.038589129264506738343,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.38030276711750444347,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.037979964308405283195,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.41795141878032729880,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.037306756542381609828,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.45489530981372633943,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.036570641147329617007,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.49107214446219386486,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.035772859380713947528,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.52642092040124259096,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.034914756483550767444,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.56088203160123747900,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.033997779412056380847,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.59439736883679291815,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.033023474397791741007,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.62691041767226655915,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.031993484340421600069,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.65836635375814263028,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.030909546037491595390,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.68871213527764059700,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.029773487255905040957,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.71789659238770363937,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.028587223650054003774,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.74587051350361044315,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.027352755531827521674,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.77258672828180976130,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.026072164497985983524,w_tolerance));
REQUIRE_THAT(pts[60], Catch::Matchers::WithinAbs(0.79800018716120016975,x_tolerance));
REQUIRE_THAT(wgt[60], Catch::Matchers::WithinAbs(0.024747609920659671643,w_tolerance));
REQUIRE_THAT(pts[61], Catch::Matchers::WithinAbs(0.82206803732897461348,x_tolerance));
REQUIRE_THAT(wgt[61], Catch::Matchers::WithinAbs(0.023381325307011186622,w_tolerance));
REQUIRE_THAT(pts[62], Catch::Matchers::WithinAbs(0.84474969498334239401,x_tolerance));
REQUIRE_THAT(wgt[62], Catch::Matchers::WithinAbs(0.021975614534416249168,w_tolerance));
REQUIRE_THAT(pts[63], Catch::Matchers::WithinAbs(0.86600691377198195523,x_tolerance));
REQUIRE_THAT(wgt[63], Catch::Matchers::WithinAbs(0.020532847967908021093,w_tolerance));
REQUIRE_THAT(pts[64], Catch::Matchers::WithinAbs(0.88580384929208278722,x_tolerance));
REQUIRE_THAT(wgt[64], Catch::Matchers::WithinAbs(0.019055458467190582807,w_tolerance));
REQUIRE_THAT(pts[65], Catch::Matchers::WithinAbs(0.90410711954556682854,x_tolerance));
REQUIRE_THAT(wgt[65], Catch::Matchers::WithinAbs(0.017545937291474230954,w_tolerance));
REQUIRE_THAT(pts[66], Catch::Matchers::WithinAbs(0.92088586125215011849,x_tolerance));
REQUIRE_THAT(wgt[66], Catch::Matchers::WithinAbs(0.016006829912248570889,w_tolerance));
REQUIRE_THAT(pts[67], Catch::Matchers::WithinAbs(0.93611178193481079626,x_tolerance));
REQUIRE_THAT(wgt[67], Catch::Matchers::WithinAbs(0.014440731748276679940,w_tolerance));
REQUIRE_THAT(pts[68], Catch::Matchers::WithinAbs(0.94975920771089638508,x_tolerance));
REQUIRE_THAT(wgt[68], Catch::Matchers::WithinAbs(0.012850283847510144945,w_tolerance));
REQUIRE_THAT(pts[69], Catch::Matchers::WithinAbs(0.96180512675876782717,x_tolerance));
REQUIRE_THAT(wgt[69], Catch::Matchers::WithinAbs(0.011238168569667687240,w_tolerance));
REQUIRE_THAT(pts[70], Catch::Matchers::WithinAbs(0.97222922852037690448,x_tolerance));
REQUIRE_THAT(wgt[70], Catch::Matchers::WithinAbs(0.0096071054147137540824,w_tolerance));
REQUIRE_THAT(pts[71], Catch::Matchers::WithinAbs(0.98101393897565589525,x_tolerance));
REQUIRE_THAT(wgt[71], Catch::Matchers::WithinAbs(0.0079598474772397346211,w_tolerance));
REQUIRE_THAT(pts[72], Catch::Matchers::WithinAbs(0.98814445335983743850,x_tolerance));
REQUIRE_THAT(wgt[72], Catch::Matchers::WithinAbs(0.0062991804973284458666,w_tolerance));
REQUIRE_THAT(pts[73], Catch::Matchers::WithinAbs(0.99360877272352698462,x_tolerance));
REQUIRE_THAT(wgt[73], Catch::Matchers::WithinAbs(0.0046279352280374213261,w_tolerance));
REQUIRE_THAT(pts[74], Catch::Matchers::WithinAbs(0.99739778635535543669,x_tolerance));
REQUIRE_THAT(wgt[74], Catch::Matchers::WithinAbs(0.0029491029536424749004,w_tolerance));
REQUIRE_THAT(pts[75], Catch::Matchers::WithinAbs(0.99950594836215307811,x_tolerance));
REQUIRE_THAT(wgt[75], Catch::Matchers::WithinAbs(0.0012677916340853596633,w_tolerance));
}

TEST_CASE("77 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(77);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99951861463341000975,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0012352911771394096142,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99746447786921409987,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0028735530836526916573,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.99377247094987824831,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0045095236002058353332,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.98844783822256130732,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.0061382961597563418393,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.98149922733113846239,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.0077570259500830707318,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.97293803074910839035,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.0093630236923864307693,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.96277830646773431194,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.010953642853911354239,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.95103674360059187152,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.012526267369227365187,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.93773263195906104419,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.014078312340027004050,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.92288782935940219993,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.015607227268749131295,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.90652672532125781802,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.017110499906531104176,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.88867620082556406989,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.018585660248341485509,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.86936558406773405988,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.020030284534316176396,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.84862660222962403647,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.021441999205456135505,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.82649332932900211944,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.022818484790129520513,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.80300213022292522738,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.024157479707955844941,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.77819160085254314187,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.025456783981694403753,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.75210250482521594138,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.026714262849557890832,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.72477770643691172878,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.027927850271276968542,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.69626210024424222479,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.029095552321768761349,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.66660253730145149359,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.030215450466622998691,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.63584774818331236701,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.031285704713905433394,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.60404826292025738497,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.032304556637030975594,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.57125632797719825081,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.033270332263698545303,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.53752582041237773902,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.034181444826115679265,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.50291215935725151781,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.035036397367978278455,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.46747221496281179464,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.035833785203911962603,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.43126421496193568207,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.036572298227327454533,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.39434764900126356047,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.037250723062893718879,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.35678317089978107058,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.037867945060089320262,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(-0.31863249899468730878,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.038422950124554523674,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(-0.27995831473827612206,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.038914826384233785621,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(-0.24082415971243219761,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.039342765687570151937,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(-0.20129433122994435664,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.039706064931289310681,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(-0.16143377669416093161,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.040004127215591237410,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(-0.12130798689055258664,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.040236462824851084195,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(-0.080982888385503131207,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.040402690032217756170,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(-0.040524735209115925930,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.040502535726788031955,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.040535835862325650292,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(0.040524735209115925930,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.040502535726788031955,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0.080982888385503131207,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.040402690032217756170,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.12130798689055258664,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.040236462824851084195,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.16143377669416093161,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.040004127215591237410,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.20129433122994435664,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.039706064931289310681,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.24082415971243219761,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.039342765687570151937,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.27995831473827612206,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.038914826384233785621,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.31863249899468730878,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.038422950124554523674,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.35678317089978107058,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.037867945060089320262,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.39434764900126356047,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.037250723062893718879,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.43126421496193568207,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.036572298227327454533,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.46747221496281179464,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.035833785203911962603,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.50291215935725151781,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.035036397367978278455,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.53752582041237773902,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.034181444826115679265,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.57125632797719825081,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.033270332263698545303,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.60404826292025738497,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.032304556637030975594,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.63584774818331236701,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.031285704713905433394,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.66660253730145149359,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.030215450466622998691,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.69626210024424222479,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.029095552321768761349,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.72477770643691172878,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.027927850271276968542,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.75210250482521594138,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.026714262849557890832,w_tolerance));
REQUIRE_THAT(pts[60], Catch::Matchers::WithinAbs(0.77819160085254314187,x_tolerance));
REQUIRE_THAT(wgt[60], Catch::Matchers::WithinAbs(0.025456783981694403753,w_tolerance));
REQUIRE_THAT(pts[61], Catch::Matchers::WithinAbs(0.80300213022292522738,x_tolerance));
REQUIRE_THAT(wgt[61], Catch::Matchers::WithinAbs(0.024157479707955844941,w_tolerance));
REQUIRE_THAT(pts[62], Catch::Matchers::WithinAbs(0.82649332932900211944,x_tolerance));
REQUIRE_THAT(wgt[62], Catch::Matchers::WithinAbs(0.022818484790129520513,w_tolerance));
REQUIRE_THAT(pts[63], Catch::Matchers::WithinAbs(0.84862660222962403647,x_tolerance));
REQUIRE_THAT(wgt[63], Catch::Matchers::WithinAbs(0.021441999205456135505,w_tolerance));
REQUIRE_THAT(pts[64], Catch::Matchers::WithinAbs(0.86936558406773405988,x_tolerance));
REQUIRE_THAT(wgt[64], Catch::Matchers::WithinAbs(0.020030284534316176396,w_tolerance));
REQUIRE_THAT(pts[65], Catch::Matchers::WithinAbs(0.88867620082556406989,x_tolerance));
REQUIRE_THAT(wgt[65], Catch::Matchers::WithinAbs(0.018585660248341485509,w_tolerance));
REQUIRE_THAT(pts[66], Catch::Matchers::WithinAbs(0.90652672532125781802,x_tolerance));
REQUIRE_THAT(wgt[66], Catch::Matchers::WithinAbs(0.017110499906531104176,w_tolerance));
REQUIRE_THAT(pts[67], Catch::Matchers::WithinAbs(0.92288782935940219993,x_tolerance));
REQUIRE_THAT(wgt[67], Catch::Matchers::WithinAbs(0.015607227268749131295,w_tolerance));
REQUIRE_THAT(pts[68], Catch::Matchers::WithinAbs(0.93773263195906104419,x_tolerance));
REQUIRE_THAT(wgt[68], Catch::Matchers::WithinAbs(0.014078312340027004050,w_tolerance));
REQUIRE_THAT(pts[69], Catch::Matchers::WithinAbs(0.95103674360059187152,x_tolerance));
REQUIRE_THAT(wgt[69], Catch::Matchers::WithinAbs(0.012526267369227365187,w_tolerance));
REQUIRE_THAT(pts[70], Catch::Matchers::WithinAbs(0.96277830646773431194,x_tolerance));
REQUIRE_THAT(wgt[70], Catch::Matchers::WithinAbs(0.010953642853911354239,w_tolerance));
REQUIRE_THAT(pts[71], Catch::Matchers::WithinAbs(0.97293803074910839035,x_tolerance));
REQUIRE_THAT(wgt[71], Catch::Matchers::WithinAbs(0.0093630236923864307693,w_tolerance));
REQUIRE_THAT(pts[72], Catch::Matchers::WithinAbs(0.98149922733113846239,x_tolerance));
REQUIRE_THAT(wgt[72], Catch::Matchers::WithinAbs(0.0077570259500830707318,w_tolerance));
REQUIRE_THAT(pts[73], Catch::Matchers::WithinAbs(0.98844783822256130732,x_tolerance));
REQUIRE_THAT(wgt[73], Catch::Matchers::WithinAbs(0.0061382961597563418393,w_tolerance));
REQUIRE_THAT(pts[74], Catch::Matchers::WithinAbs(0.99377247094987824831,x_tolerance));
REQUIRE_THAT(wgt[74], Catch::Matchers::WithinAbs(0.0045095236002058353332,w_tolerance));
REQUIRE_THAT(pts[75], Catch::Matchers::WithinAbs(0.99746447786921409987,x_tolerance));
REQUIRE_THAT(wgt[75], Catch::Matchers::WithinAbs(0.0028735530836526916573,w_tolerance));
REQUIRE_THAT(pts[76], Catch::Matchers::WithinAbs(0.99951861463341000975,x_tolerance));
REQUIRE_THAT(wgt[76], Catch::Matchers::WithinAbs(0.0012352911771394096142,w_tolerance));
}

TEST_CASE("78 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(78);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99953079999242375952,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0012040245660673532803,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99752863837872436150,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0028008688118386304116,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.99392996169448874318,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0043955960394603467427,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.98873973209371743438,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.0059834899444404079896,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.98196616309955049778,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.0075618431894397188270,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.97362007850623644206,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.0091280992272550872769,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.96371483598675590156,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.010679742157481113354,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.95226629468986336372,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.012214284549789886398,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.93929278691494659307,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.013729267920144148394,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.92481508778006377636,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.015222265680178451693,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.90885638157318825821,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.016690886689343891866,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.89144222445881857881,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.018132778954982328644,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.87260050347272450493,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.019545633343399923378,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.85236139182255770329,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.020927187251877726785,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.83075730054591127274,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.022275228219113886763,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.80782282659420168677,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.023587597461457472096,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.78359469742114278707,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.024862193326222450761,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.75811171216231531507,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.026096974655108835030,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.73141467949883039750,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.027289964051624364865,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.70354635230392377212,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.028439251046897516262,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.67455135917675079032,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.029542995158606946412,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.64447613297279285459,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.030599428838013045289,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.61336883644518477680,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.031606860300304797739,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.58127928511595175522,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.032563676233689044408,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.54825886750061260875,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.033468344382858977973,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.51436046281386405802,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.034319416002689090290,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.47963835628810723969,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.035115528178217189475,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.44414815224040860307,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.035855406007191695445,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.40794668502709839165,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.036537864641684700648,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.37109192802859627433,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.037161811185498386851,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(-0.33364290081021056078,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.037726246444324247864,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(-0.29565957460758014522,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.038230266525850987650,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(-0.25720277628811244299,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.038673064287257674004,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(-0.21833409094221197881,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.039053930627773413147,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(-0.17911576326028915156,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.039372255624233121937,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(-0.13961059785348359491,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.039627529507810542956,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(-0.099881858677728410528,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.039819343480364089225,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(-0.059993167722217693636,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.039947390369088024879,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(-0.020008403124517922952,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.040011465118420482989,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(0.020008403124517922952,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.040011465118420482989,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0.059993167722217693636,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.039947390369088024879,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.099881858677728410528,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.039819343480364089225,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.13961059785348359491,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.039627529507810542956,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.17911576326028915156,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.039372255624233121937,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.21833409094221197881,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.039053930627773413147,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.25720277628811244299,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.038673064287257674004,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.29565957460758014522,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.038230266525850987650,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.33364290081021056078,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.037726246444324247864,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.37109192802859627433,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.037161811185498386851,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.40794668502709839165,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.036537864641684700648,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.44414815224040860307,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.035855406007191695445,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.47963835628810723969,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.035115528178217189475,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.51436046281386405802,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.034319416002689090290,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.54825886750061260875,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.033468344382858977973,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.58127928511595175522,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.032563676233689044408,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.61336883644518477680,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.031606860300304797739,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.64447613297279285459,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.030599428838013045289,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.67455135917675079032,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.029542995158606946412,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.70354635230392377212,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.028439251046897516262,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.73141467949883039750,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.027289964051624364865,w_tolerance));
REQUIRE_THAT(pts[60], Catch::Matchers::WithinAbs(0.75811171216231531507,x_tolerance));
REQUIRE_THAT(wgt[60], Catch::Matchers::WithinAbs(0.026096974655108835030,w_tolerance));
REQUIRE_THAT(pts[61], Catch::Matchers::WithinAbs(0.78359469742114278707,x_tolerance));
REQUIRE_THAT(wgt[61], Catch::Matchers::WithinAbs(0.024862193326222450761,w_tolerance));
REQUIRE_THAT(pts[62], Catch::Matchers::WithinAbs(0.80782282659420168677,x_tolerance));
REQUIRE_THAT(wgt[62], Catch::Matchers::WithinAbs(0.023587597461457472096,w_tolerance));
REQUIRE_THAT(pts[63], Catch::Matchers::WithinAbs(0.83075730054591127274,x_tolerance));
REQUIRE_THAT(wgt[63], Catch::Matchers::WithinAbs(0.022275228219113886763,w_tolerance));
REQUIRE_THAT(pts[64], Catch::Matchers::WithinAbs(0.85236139182255770329,x_tolerance));
REQUIRE_THAT(wgt[64], Catch::Matchers::WithinAbs(0.020927187251877726785,w_tolerance));
REQUIRE_THAT(pts[65], Catch::Matchers::WithinAbs(0.87260050347272450493,x_tolerance));
REQUIRE_THAT(wgt[65], Catch::Matchers::WithinAbs(0.019545633343399923378,w_tolerance));
REQUIRE_THAT(pts[66], Catch::Matchers::WithinAbs(0.89144222445881857881,x_tolerance));
REQUIRE_THAT(wgt[66], Catch::Matchers::WithinAbs(0.018132778954982328644,w_tolerance));
REQUIRE_THAT(pts[67], Catch::Matchers::WithinAbs(0.90885638157318825821,x_tolerance));
REQUIRE_THAT(wgt[67], Catch::Matchers::WithinAbs(0.016690886689343891866,w_tolerance));
REQUIRE_THAT(pts[68], Catch::Matchers::WithinAbs(0.92481508778006377636,x_tolerance));
REQUIRE_THAT(wgt[68], Catch::Matchers::WithinAbs(0.015222265680178451693,w_tolerance));
REQUIRE_THAT(pts[69], Catch::Matchers::WithinAbs(0.93929278691494659307,x_tolerance));
REQUIRE_THAT(wgt[69], Catch::Matchers::WithinAbs(0.013729267920144148394,w_tolerance));
REQUIRE_THAT(pts[70], Catch::Matchers::WithinAbs(0.95226629468986336372,x_tolerance));
REQUIRE_THAT(wgt[70], Catch::Matchers::WithinAbs(0.012214284549789886398,w_tolerance));
REQUIRE_THAT(pts[71], Catch::Matchers::WithinAbs(0.96371483598675590156,x_tolerance));
REQUIRE_THAT(wgt[71], Catch::Matchers::WithinAbs(0.010679742157481113354,w_tolerance));
REQUIRE_THAT(pts[72], Catch::Matchers::WithinAbs(0.97362007850623644206,x_tolerance));
REQUIRE_THAT(wgt[72], Catch::Matchers::WithinAbs(0.0091280992272550872769,w_tolerance));
REQUIRE_THAT(pts[73], Catch::Matchers::WithinAbs(0.98196616309955049778,x_tolerance));
REQUIRE_THAT(wgt[73], Catch::Matchers::WithinAbs(0.0075618431894397188270,w_tolerance));
REQUIRE_THAT(pts[74], Catch::Matchers::WithinAbs(0.98873973209371743438,x_tolerance));
REQUIRE_THAT(wgt[74], Catch::Matchers::WithinAbs(0.0059834899444404079896,w_tolerance));
REQUIRE_THAT(pts[75], Catch::Matchers::WithinAbs(0.99392996169448874318,x_tolerance));
REQUIRE_THAT(wgt[75], Catch::Matchers::WithinAbs(0.0043955960394603467427,w_tolerance));
REQUIRE_THAT(pts[76], Catch::Matchers::WithinAbs(0.99752863837872436150,x_tolerance));
REQUIRE_THAT(wgt[76], Catch::Matchers::WithinAbs(0.0028008688118386304116,w_tolerance));
REQUIRE_THAT(pts[77], Catch::Matchers::WithinAbs(0.99953079999242375952,x_tolerance));
REQUIRE_THAT(wgt[77], Catch::Matchers::WithinAbs(0.0012040245660673532803,w_tolerance));
}

TEST_CASE("79 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(79);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99954252847956984432,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0011739301299566130212,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99759039433694143518,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0027309070657548559185,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.99408155478554262241,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0042859291131265312182,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.98902070768778433787,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.0058344598687634655892,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.98241565925127893010,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.0073739211313301768304,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.97427669959780711818,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.0089018809826524862537,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.96461652911486478611,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.010415946204513382579,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.95345022788926913596,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.011913750215116998700,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.94079522930657725030,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.013392953344825676197,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.92667129188090387366,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.014851245526350069319,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.91110046803458080024,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.016286349576191682092,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.89410706950423510131,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.017696024624310417865,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.87571762930352947666,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.019078069558937488585,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.85596086025521937647,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.020430326438140859878,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.83486761013777788207,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.021750683846608079769,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.81247081350780677376,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.023037080185719026277,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.78880544026919776556,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.024287506888799492639,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.76390844106717010846,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.025500011555128773947,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.73781868959127820952,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.026672700997105556538,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.71057692187682416376,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.027803744195447058944,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.68222567269907105928,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.028891375157607266782,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.65280920915934399852,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.029933895674838362896,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.62237346156657723888,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.030929677973524835288,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.59096595172213998285,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.031877167256611170361,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.55863571871985890666,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.032774884131130817853,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.52543324237705454790,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.033621426918030930050,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.49141036441611982110,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.034415473840676600883,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.45662020751968913115,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.035155785088611131128,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.42111709238577192873,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.035841204753345752289,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.38495645291235088392,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.036470662633153427529,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(-0.34819474964386786724,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.037043175904046784160,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(-0.31088938161473643721,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.037557850654329770478,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(-0.27309859672752354374,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.038013883280326049546,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(-0.23488140080573191588,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.038410561741104177405,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(-0.19629746546318464166,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.038747266670239967068,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(-0.15740703493386160503,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.039023472342879796026,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(-0.11827083200766088117,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.039238747496594643555,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(-0.078949963218954405448,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.039392756004743003934,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(-0.039505823435974064059,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.039485257401291164754,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.039516107256271311709,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0.039505823435974064059,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.039485257401291164754,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.078949963218954405448,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.039392756004743003934,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.11827083200766088117,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.039238747496594643555,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.15740703493386160503,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.039023472342879796026,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.19629746546318464166,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.038747266670239967068,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.23488140080573191588,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.038410561741104177405,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.27309859672752354374,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.038013883280326049546,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.31088938161473643721,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.037557850654329770478,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.34819474964386786724,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.037043175904046784160,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.38495645291235088392,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.036470662633153427529,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.42111709238577192873,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.035841204753345752289,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.45662020751968913115,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.035155785088611131128,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.49141036441611982110,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.034415473840676600883,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.52543324237705454790,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.033621426918030930050,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.55863571871985890666,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.032774884131130817853,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.59096595172213998285,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.031877167256611170361,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.62237346156657723888,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.030929677973524835288,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.65280920915934399852,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.029933895674838362896,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.68222567269907105928,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.028891375157607266782,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.71057692187682416376,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.027803744195447058944,w_tolerance));
REQUIRE_THAT(pts[60], Catch::Matchers::WithinAbs(0.73781868959127820952,x_tolerance));
REQUIRE_THAT(wgt[60], Catch::Matchers::WithinAbs(0.026672700997105556538,w_tolerance));
REQUIRE_THAT(pts[61], Catch::Matchers::WithinAbs(0.76390844106717010846,x_tolerance));
REQUIRE_THAT(wgt[61], Catch::Matchers::WithinAbs(0.025500011555128773947,w_tolerance));
REQUIRE_THAT(pts[62], Catch::Matchers::WithinAbs(0.78880544026919776556,x_tolerance));
REQUIRE_THAT(wgt[62], Catch::Matchers::WithinAbs(0.024287506888799492639,w_tolerance));
REQUIRE_THAT(pts[63], Catch::Matchers::WithinAbs(0.81247081350780677376,x_tolerance));
REQUIRE_THAT(wgt[63], Catch::Matchers::WithinAbs(0.023037080185719026277,w_tolerance));
REQUIRE_THAT(pts[64], Catch::Matchers::WithinAbs(0.83486761013777788207,x_tolerance));
REQUIRE_THAT(wgt[64], Catch::Matchers::WithinAbs(0.021750683846608079769,w_tolerance));
REQUIRE_THAT(pts[65], Catch::Matchers::WithinAbs(0.85596086025521937647,x_tolerance));
REQUIRE_THAT(wgt[65], Catch::Matchers::WithinAbs(0.020430326438140859878,w_tolerance));
REQUIRE_THAT(pts[66], Catch::Matchers::WithinAbs(0.87571762930352947666,x_tolerance));
REQUIRE_THAT(wgt[66], Catch::Matchers::WithinAbs(0.019078069558937488585,w_tolerance));
REQUIRE_THAT(pts[67], Catch::Matchers::WithinAbs(0.89410706950423510131,x_tolerance));
REQUIRE_THAT(wgt[67], Catch::Matchers::WithinAbs(0.017696024624310417865,w_tolerance));
REQUIRE_THAT(pts[68], Catch::Matchers::WithinAbs(0.91110046803458080024,x_tolerance));
REQUIRE_THAT(wgt[68], Catch::Matchers::WithinAbs(0.016286349576191682092,w_tolerance));
REQUIRE_THAT(pts[69], Catch::Matchers::WithinAbs(0.92667129188090387366,x_tolerance));
REQUIRE_THAT(wgt[69], Catch::Matchers::WithinAbs(0.014851245526350069319,w_tolerance));
REQUIRE_THAT(pts[70], Catch::Matchers::WithinAbs(0.94079522930657725030,x_tolerance));
REQUIRE_THAT(wgt[70], Catch::Matchers::WithinAbs(0.013392953344825676197,w_tolerance));
REQUIRE_THAT(pts[71], Catch::Matchers::WithinAbs(0.95345022788926913596,x_tolerance));
REQUIRE_THAT(wgt[71], Catch::Matchers::WithinAbs(0.011913750215116998700,w_tolerance));
REQUIRE_THAT(pts[72], Catch::Matchers::WithinAbs(0.96461652911486478611,x_tolerance));
REQUIRE_THAT(wgt[72], Catch::Matchers::WithinAbs(0.010415946204513382579,w_tolerance));
REQUIRE_THAT(pts[73], Catch::Matchers::WithinAbs(0.97427669959780711818,x_tolerance));
REQUIRE_THAT(wgt[73], Catch::Matchers::WithinAbs(0.0089018809826524862537,w_tolerance));
REQUIRE_THAT(pts[74], Catch::Matchers::WithinAbs(0.98241565925127893010,x_tolerance));
REQUIRE_THAT(wgt[74], Catch::Matchers::WithinAbs(0.0073739211313301768304,w_tolerance));
REQUIRE_THAT(pts[75], Catch::Matchers::WithinAbs(0.98902070768778433787,x_tolerance));
REQUIRE_THAT(wgt[75], Catch::Matchers::WithinAbs(0.0058344598687634655892,w_tolerance));
REQUIRE_THAT(pts[76], Catch::Matchers::WithinAbs(0.99408155478554262241,x_tolerance));
REQUIRE_THAT(wgt[76], Catch::Matchers::WithinAbs(0.0042859291131265312182,w_tolerance));
REQUIRE_THAT(pts[77], Catch::Matchers::WithinAbs(0.99759039433694143518,x_tolerance));
REQUIRE_THAT(wgt[77], Catch::Matchers::WithinAbs(0.0027309070657548559185,w_tolerance));
REQUIRE_THAT(pts[78], Catch::Matchers::WithinAbs(0.99954252847956984432,x_tolerance));
REQUIRE_THAT(wgt[78], Catch::Matchers::WithinAbs(0.0011739301299566130212,w_tolerance));
}

TEST_CASE("80 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(80);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99955382265163062988,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0011449500031869415346,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99764986439823768890,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0026635335895126816693,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.99422754096568827789,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0041803131246948952367,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.98929130249975553103,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.0056909224514031986493,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.98284857273862907042,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.0071929047681173127527,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.97490914058572779339,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.0086839452692608584264,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.96548508904379925145,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.010161766041103064521,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.95459076634363490549,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.011624114120797826916,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.94224276130987267475,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.013068761592401339294,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.92845987717244579595,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.014493508040509076117,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.91326310257175765416,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.015896183583725688045,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.89667557943877068319,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.017274652056269306359,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.87872256767821382870,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.018626814208299031429,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.85943140666311109698,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.019950610878141998929,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.83883147358025527562,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.021244026115782006389,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.81695413868146347037,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.022505090246332461926,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.79383271750460544995,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.023731882865930101293,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.76950242013504137387,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.024922535764115491105,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.74400029758359727232,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.026075235767565117903,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.71736518536209988025,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.027188227500486380674,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.68963764434202760077,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.028259816057276862397,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.66085989898611980174,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.029288369583267847693,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.63107577304687196625,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.030272321759557980661,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.60033062282975174315,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.031210174188114701642,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.56867126812270978473,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.032100498673487773148,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.53614592089713193202,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.032941939397645401383,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.50280411188878498759,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.033733214984611522817,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.46869661517054447704,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.034473120451753928794,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.43387537083175609306,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.035160529044747593496,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.39839340588196922702,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.035794393953416054603,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(-0.36230475349948731562,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.036373749905835978044,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(-0.32566437074770191462,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.036897714638276008839,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(-0.28852805488451185311,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.037365490238730490027,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(-0.25095235839227212049,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.037776364362001397490,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(-0.21299450285766613257,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.038129711314477638344,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(-0.17471229183264681256,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.038424993006959423185,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(-0.13616402280914388656,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.038661759774076463327,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(-0.097408398441584599063,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.038839651059051968932,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(-0.058504437152420668629,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.038958395962769531199,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(-0.019511383256793997654,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.039017813656306654811,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0.019511383256793997654,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.039017813656306654811,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.058504437152420668629,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.038958395962769531199,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.097408398441584599063,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.038839651059051968932,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.13616402280914388656,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.038661759774076463327,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.17471229183264681256,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.038424993006959423185,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.21299450285766613257,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.038129711314477638344,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.25095235839227212049,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.037776364362001397490,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.28852805488451185311,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.037365490238730490027,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.32566437074770191462,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.036897714638276008839,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.36230475349948731562,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.036373749905835978044,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.39839340588196922702,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.035794393953416054603,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.43387537083175609306,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.035160529044747593496,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.46869661517054447704,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.034473120451753928794,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.50280411188878498759,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.033733214984611522817,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.53614592089713193202,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.032941939397645401383,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.56867126812270978473,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.032100498673487773148,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.60033062282975174315,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.031210174188114701642,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.63107577304687196625,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.030272321759557980661,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.66085989898611980174,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.029288369583267847693,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.68963764434202760077,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.028259816057276862397,w_tolerance));
REQUIRE_THAT(pts[60], Catch::Matchers::WithinAbs(0.71736518536209988025,x_tolerance));
REQUIRE_THAT(wgt[60], Catch::Matchers::WithinAbs(0.027188227500486380674,w_tolerance));
REQUIRE_THAT(pts[61], Catch::Matchers::WithinAbs(0.74400029758359727232,x_tolerance));
REQUIRE_THAT(wgt[61], Catch::Matchers::WithinAbs(0.026075235767565117903,w_tolerance));
REQUIRE_THAT(pts[62], Catch::Matchers::WithinAbs(0.76950242013504137387,x_tolerance));
REQUIRE_THAT(wgt[62], Catch::Matchers::WithinAbs(0.024922535764115491105,w_tolerance));
REQUIRE_THAT(pts[63], Catch::Matchers::WithinAbs(0.79383271750460544995,x_tolerance));
REQUIRE_THAT(wgt[63], Catch::Matchers::WithinAbs(0.023731882865930101293,w_tolerance));
REQUIRE_THAT(pts[64], Catch::Matchers::WithinAbs(0.81695413868146347037,x_tolerance));
REQUIRE_THAT(wgt[64], Catch::Matchers::WithinAbs(0.022505090246332461926,w_tolerance));
REQUIRE_THAT(pts[65], Catch::Matchers::WithinAbs(0.83883147358025527562,x_tolerance));
REQUIRE_THAT(wgt[65], Catch::Matchers::WithinAbs(0.021244026115782006389,w_tolerance));
REQUIRE_THAT(pts[66], Catch::Matchers::WithinAbs(0.85943140666311109698,x_tolerance));
REQUIRE_THAT(wgt[66], Catch::Matchers::WithinAbs(0.019950610878141998929,w_tolerance));
REQUIRE_THAT(pts[67], Catch::Matchers::WithinAbs(0.87872256767821382870,x_tolerance));
REQUIRE_THAT(wgt[67], Catch::Matchers::WithinAbs(0.018626814208299031429,w_tolerance));
REQUIRE_THAT(pts[68], Catch::Matchers::WithinAbs(0.89667557943877068319,x_tolerance));
REQUIRE_THAT(wgt[68], Catch::Matchers::WithinAbs(0.017274652056269306359,w_tolerance));
REQUIRE_THAT(pts[69], Catch::Matchers::WithinAbs(0.91326310257175765416,x_tolerance));
REQUIRE_THAT(wgt[69], Catch::Matchers::WithinAbs(0.015896183583725688045,w_tolerance));
REQUIRE_THAT(pts[70], Catch::Matchers::WithinAbs(0.92845987717244579595,x_tolerance));
REQUIRE_THAT(wgt[70], Catch::Matchers::WithinAbs(0.014493508040509076117,w_tolerance));
REQUIRE_THAT(pts[71], Catch::Matchers::WithinAbs(0.94224276130987267475,x_tolerance));
REQUIRE_THAT(wgt[71], Catch::Matchers::WithinAbs(0.013068761592401339294,w_tolerance));
REQUIRE_THAT(pts[72], Catch::Matchers::WithinAbs(0.95459076634363490549,x_tolerance));
REQUIRE_THAT(wgt[72], Catch::Matchers::WithinAbs(0.011624114120797826916,w_tolerance));
REQUIRE_THAT(pts[73], Catch::Matchers::WithinAbs(0.96548508904379925145,x_tolerance));
REQUIRE_THAT(wgt[73], Catch::Matchers::WithinAbs(0.010161766041103064521,w_tolerance));
REQUIRE_THAT(pts[74], Catch::Matchers::WithinAbs(0.97490914058572779339,x_tolerance));
REQUIRE_THAT(wgt[74], Catch::Matchers::WithinAbs(0.0086839452692608584264,w_tolerance));
REQUIRE_THAT(pts[75], Catch::Matchers::WithinAbs(0.98284857273862907042,x_tolerance));
REQUIRE_THAT(wgt[75], Catch::Matchers::WithinAbs(0.0071929047681173127527,w_tolerance));
REQUIRE_THAT(pts[76], Catch::Matchers::WithinAbs(0.98929130249975553103,x_tolerance));
REQUIRE_THAT(wgt[76], Catch::Matchers::WithinAbs(0.0056909224514031986493,w_tolerance));
REQUIRE_THAT(pts[77], Catch::Matchers::WithinAbs(0.99422754096568827789,x_tolerance));
REQUIRE_THAT(wgt[77], Catch::Matchers::WithinAbs(0.0041803131246948952367,w_tolerance));
REQUIRE_THAT(pts[78], Catch::Matchers::WithinAbs(0.99764986439823768890,x_tolerance));
REQUIRE_THAT(wgt[78], Catch::Matchers::WithinAbs(0.0026635335895126816693,w_tolerance));
REQUIRE_THAT(pts[79], Catch::Matchers::WithinAbs(0.99955382265163062988,x_tolerance));
REQUIRE_THAT(wgt[79], Catch::Matchers::WithinAbs(0.0011449500031869415346,w_tolerance));
}

TEST_CASE("81 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(81);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99956470369031903448,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0011170298471246066061,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99770715998834646366,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0025986222999289530135,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.99436819328521986502,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0040785511134213955860,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.98955202137102199913,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.0055526113702562789023,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.98326570856643022722,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.0070184604849316255116,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.97551857267236129692,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.0084738937853455654496,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.96632211633805611107,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.0099167418095958754997,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.95568999975640251525,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.011344858495416255762,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.94363801765281382118,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.012756121115134421000,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.93018407491516750302,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.014148432513236065548,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.91534815964075071729,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.015519723912464362938,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.89915231328615653085,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.016867957867635139474,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.88162059784672014617,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.018191131241255761152,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.86277906006979189467,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.019487278155601918216,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.84265569273646704621,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.020754472901445608540,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.82128039306091022346,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.021990832792751632771,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.79868491826502828216,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.023194520960273919881,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.77490283839242343141,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.024363749078563097332,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.74996948643062067222,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.025496780021665677069,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.72392190581505261444,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.026591930443219921091,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.69679879539243560968,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.027647573276924926911,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.66864045192509014660,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.028662140153560676226,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.63948871022149455464,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.029634123730905597658,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.60938688098193654606,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.030562079933052661896,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.57837968645155136948,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.031444630095774066418,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.54651319397631127308,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.032280463014732688872,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.51383474756065821552,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.033068336893488004421,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.48039289752844827014,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.033807081188396245551,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.44623732839169905665,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.034495598347659795895,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.41141878503429754169,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.035132865441939379416,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(-0.37598899732033128792,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.035717935684104568531,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(-0.34000060323904833978,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.036249939835863412798,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(-0.30350707070062616455,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.036728087499180439517,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(-0.26656261809893533915,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.037151668290563712145,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(-0.22922213375931610544,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.037520052896475837859,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(-0.19154109439104285574,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.037832694008300559248,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(-0.15357548266563063686,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.038089127135475601831,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(-0.11538170404343671126,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.038288971295583524430,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(-0.077016502972127177318,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.038431929580375172100,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(-0.038536878581511983836,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.038517789596884695238,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.038546423782980703390,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.038536878581511983836,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.038517789596884695238,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.077016502972127177318,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.038431929580375172100,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.11538170404343671126,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.038288971295583524430,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.15357548266563063686,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.038089127135475601831,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.19154109439104285574,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.037832694008300559248,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.22922213375931610544,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.037520052896475837859,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.26656261809893533915,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.037151668290563712145,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.30350707070062616455,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.036728087499180439517,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.34000060323904833978,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.036249939835863412798,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.37598899732033128792,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.035717935684104568531,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.41141878503429754169,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.035132865441939379416,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.44623732839169905665,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.034495598347659795895,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.48039289752844827014,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.033807081188396245551,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.51383474756065821552,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.033068336893488004421,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.54651319397631127308,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.032280463014732688872,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.57837968645155136948,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.031444630095774066418,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.60938688098193654606,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.030562079933052661896,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.63948871022149455464,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.029634123730905597658,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.66864045192509014660,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.028662140153560676226,w_tolerance));
REQUIRE_THAT(pts[60], Catch::Matchers::WithinAbs(0.69679879539243560968,x_tolerance));
REQUIRE_THAT(wgt[60], Catch::Matchers::WithinAbs(0.027647573276924926911,w_tolerance));
REQUIRE_THAT(pts[61], Catch::Matchers::WithinAbs(0.72392190581505261444,x_tolerance));
REQUIRE_THAT(wgt[61], Catch::Matchers::WithinAbs(0.026591930443219921091,w_tolerance));
REQUIRE_THAT(pts[62], Catch::Matchers::WithinAbs(0.74996948643062067222,x_tolerance));
REQUIRE_THAT(wgt[62], Catch::Matchers::WithinAbs(0.025496780021665677069,w_tolerance));
REQUIRE_THAT(pts[63], Catch::Matchers::WithinAbs(0.77490283839242343141,x_tolerance));
REQUIRE_THAT(wgt[63], Catch::Matchers::WithinAbs(0.024363749078563097332,w_tolerance));
REQUIRE_THAT(pts[64], Catch::Matchers::WithinAbs(0.79868491826502828216,x_tolerance));
REQUIRE_THAT(wgt[64], Catch::Matchers::WithinAbs(0.023194520960273919881,w_tolerance));
REQUIRE_THAT(pts[65], Catch::Matchers::WithinAbs(0.82128039306091022346,x_tolerance));
REQUIRE_THAT(wgt[65], Catch::Matchers::WithinAbs(0.021990832792751632771,w_tolerance));
REQUIRE_THAT(pts[66], Catch::Matchers::WithinAbs(0.84265569273646704621,x_tolerance));
REQUIRE_THAT(wgt[66], Catch::Matchers::WithinAbs(0.020754472901445608540,w_tolerance));
REQUIRE_THAT(pts[67], Catch::Matchers::WithinAbs(0.86277906006979189467,x_tolerance));
REQUIRE_THAT(wgt[67], Catch::Matchers::WithinAbs(0.019487278155601918216,w_tolerance));
REQUIRE_THAT(pts[68], Catch::Matchers::WithinAbs(0.88162059784672014617,x_tolerance));
REQUIRE_THAT(wgt[68], Catch::Matchers::WithinAbs(0.018191131241255761152,w_tolerance));
REQUIRE_THAT(pts[69], Catch::Matchers::WithinAbs(0.89915231328615653085,x_tolerance));
REQUIRE_THAT(wgt[69], Catch::Matchers::WithinAbs(0.016867957867635139474,w_tolerance));
REQUIRE_THAT(pts[70], Catch::Matchers::WithinAbs(0.91534815964075071729,x_tolerance));
REQUIRE_THAT(wgt[70], Catch::Matchers::WithinAbs(0.015519723912464362938,w_tolerance));
REQUIRE_THAT(pts[71], Catch::Matchers::WithinAbs(0.93018407491516750302,x_tolerance));
REQUIRE_THAT(wgt[71], Catch::Matchers::WithinAbs(0.014148432513236065548,w_tolerance));
REQUIRE_THAT(pts[72], Catch::Matchers::WithinAbs(0.94363801765281382118,x_tolerance));
REQUIRE_THAT(wgt[72], Catch::Matchers::WithinAbs(0.012756121115134421000,w_tolerance));
REQUIRE_THAT(pts[73], Catch::Matchers::WithinAbs(0.95568999975640251525,x_tolerance));
REQUIRE_THAT(wgt[73], Catch::Matchers::WithinAbs(0.011344858495416255762,w_tolerance));
REQUIRE_THAT(pts[74], Catch::Matchers::WithinAbs(0.96632211633805611107,x_tolerance));
REQUIRE_THAT(wgt[74], Catch::Matchers::WithinAbs(0.0099167418095958754997,w_tolerance));
REQUIRE_THAT(pts[75], Catch::Matchers::WithinAbs(0.97551857267236129692,x_tolerance));
REQUIRE_THAT(wgt[75], Catch::Matchers::WithinAbs(0.0084738937853455654496,w_tolerance));
REQUIRE_THAT(pts[76], Catch::Matchers::WithinAbs(0.98326570856643022722,x_tolerance));
REQUIRE_THAT(wgt[76], Catch::Matchers::WithinAbs(0.0070184604849316255116,w_tolerance));
REQUIRE_THAT(pts[77], Catch::Matchers::WithinAbs(0.98955202137102199913,x_tolerance));
REQUIRE_THAT(wgt[77], Catch::Matchers::WithinAbs(0.0055526113702562789023,w_tolerance));
REQUIRE_THAT(pts[78], Catch::Matchers::WithinAbs(0.99436819328521986502,x_tolerance));
REQUIRE_THAT(wgt[78], Catch::Matchers::WithinAbs(0.0040785511134213955860,w_tolerance));
REQUIRE_THAT(pts[79], Catch::Matchers::WithinAbs(0.99770715998834646366,x_tolerance));
REQUIRE_THAT(wgt[79], Catch::Matchers::WithinAbs(0.0025986222999289530135,w_tolerance));
REQUIRE_THAT(pts[80], Catch::Matchers::WithinAbs(0.99956470369031903448,x_tolerance));
REQUIRE_THAT(wgt[80], Catch::Matchers::WithinAbs(0.0011170298471246066061,w_tolerance));
}

TEST_CASE("82 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(82);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99957519150165264887,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0010901185952758308661,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99776238582638586256,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0025360546968561061098,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.99450376837807562893,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0039804579378560746190,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.98980333883990894993,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.0054192762324467650907,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.98366782352200760337,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.0068502745341835261843,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.97610609709449882869,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.0082713518183836856044,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.96712911625259069600,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.0096804407043710737370,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.95674989386161090312,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.011075495781759896320,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.94498347743896048918,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.012454493401142104680,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.93184692645462288785,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.013815433714126459388,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.91735928725328010715,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.015156343270762561788,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.90154156528884125820,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.016475277763983708891,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.88441669459672470823,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.017770324798498407147,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.86600950450476544857,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.019039606640178925073,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.84634668361291370180,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.020281282926912158902,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.82545674108576765603,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.021493553330774844043,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.80336996531010829930,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.022674660164914103102,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.78011837997535824519,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.023822890930047826342,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.75573569763956041730,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.024936580796240755156,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.73025727084759624505,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.026014115016017023754,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.70372004087216667849,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.027053931265124771520,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.67616248415164702457,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.028054521907454230472,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.64762455650234659857,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.029014436180764403961,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.61814763518597868204,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.029932282300012724635,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.58777445891628486715,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.030806729475215629814,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.55654906589176381235,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.031636509840900245538,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.52451672994432776798,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.032420420294340605078,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.49172389489644932246,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.033157324239907211328,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.45821810722196319782,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.033846153236996858745,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.42404794710815072216,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.034485908549150705507,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(-0.38926295801905481592,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.035075662592112690385,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(-0.35391357486214793641,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.035614560278727472681,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(-0.31805105086250150501,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.036101820258727023076,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(-0.28172738325048010237,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.036536736051607652842,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(-0.24499523787070453784,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.036918677070954456999,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(-0.20790787282159235097,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.037247089538727664188,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(-0.17051906123619015977,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.037521497288185020872,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(-0.13288301331625752576,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.037741502454275869672,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(-0.095054297732644873953,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.037906786050505784779,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(-0.057087762505926931903,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.038017108431435269905,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(-0.019038455482006813761,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.038072309640141871208,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0.019038455482006813761,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.038072309640141871208,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.057087762505926931903,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.038017108431435269905,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.095054297732644873953,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.037906786050505784779,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.13288301331625752576,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.037741502454275869672,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.17051906123619015977,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.037521497288185020872,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.20790787282159235097,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.037247089538727664188,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.24499523787070453784,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.036918677070954456999,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.28172738325048010237,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.036536736051607652842,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.31805105086250150501,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.036101820258727023076,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.35391357486214793641,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.035614560278727472681,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.38926295801905481592,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.035075662592112690385,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.42404794710815072216,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.034485908549150705507,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.45821810722196319782,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.033846153236996858745,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.49172389489644932246,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.033157324239907211328,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.52451672994432776798,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.032420420294340605078,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.55654906589176381235,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.031636509840900245538,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.58777445891628486715,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.030806729475215629814,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.61814763518597868204,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.029932282300012724635,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.64762455650234659857,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.029014436180764403961,w_tolerance));
REQUIRE_THAT(pts[60], Catch::Matchers::WithinAbs(0.67616248415164702457,x_tolerance));
REQUIRE_THAT(wgt[60], Catch::Matchers::WithinAbs(0.028054521907454230472,w_tolerance));
REQUIRE_THAT(pts[61], Catch::Matchers::WithinAbs(0.70372004087216667849,x_tolerance));
REQUIRE_THAT(wgt[61], Catch::Matchers::WithinAbs(0.027053931265124771520,w_tolerance));
REQUIRE_THAT(pts[62], Catch::Matchers::WithinAbs(0.73025727084759624505,x_tolerance));
REQUIRE_THAT(wgt[62], Catch::Matchers::WithinAbs(0.026014115016017023754,w_tolerance));
REQUIRE_THAT(pts[63], Catch::Matchers::WithinAbs(0.75573569763956041730,x_tolerance));
REQUIRE_THAT(wgt[63], Catch::Matchers::WithinAbs(0.024936580796240755156,w_tolerance));
REQUIRE_THAT(pts[64], Catch::Matchers::WithinAbs(0.78011837997535824519,x_tolerance));
REQUIRE_THAT(wgt[64], Catch::Matchers::WithinAbs(0.023822890930047826342,w_tolerance));
REQUIRE_THAT(pts[65], Catch::Matchers::WithinAbs(0.80336996531010829930,x_tolerance));
REQUIRE_THAT(wgt[65], Catch::Matchers::WithinAbs(0.022674660164914103102,w_tolerance));
REQUIRE_THAT(pts[66], Catch::Matchers::WithinAbs(0.82545674108576765603,x_tolerance));
REQUIRE_THAT(wgt[66], Catch::Matchers::WithinAbs(0.021493553330774844043,w_tolerance));
REQUIRE_THAT(pts[67], Catch::Matchers::WithinAbs(0.84634668361291370180,x_tolerance));
REQUIRE_THAT(wgt[67], Catch::Matchers::WithinAbs(0.020281282926912158902,w_tolerance));
REQUIRE_THAT(pts[68], Catch::Matchers::WithinAbs(0.86600950450476544857,x_tolerance));
REQUIRE_THAT(wgt[68], Catch::Matchers::WithinAbs(0.019039606640178925073,w_tolerance));
REQUIRE_THAT(pts[69], Catch::Matchers::WithinAbs(0.88441669459672470823,x_tolerance));
REQUIRE_THAT(wgt[69], Catch::Matchers::WithinAbs(0.017770324798498407147,w_tolerance));
REQUIRE_THAT(pts[70], Catch::Matchers::WithinAbs(0.90154156528884125820,x_tolerance));
REQUIRE_THAT(wgt[70], Catch::Matchers::WithinAbs(0.016475277763983708891,w_tolerance));
REQUIRE_THAT(pts[71], Catch::Matchers::WithinAbs(0.91735928725328010715,x_tolerance));
REQUIRE_THAT(wgt[71], Catch::Matchers::WithinAbs(0.015156343270762561788,w_tolerance));
REQUIRE_THAT(pts[72], Catch::Matchers::WithinAbs(0.93184692645462288785,x_tolerance));
REQUIRE_THAT(wgt[72], Catch::Matchers::WithinAbs(0.013815433714126459388,w_tolerance));
REQUIRE_THAT(pts[73], Catch::Matchers::WithinAbs(0.94498347743896048918,x_tolerance));
REQUIRE_THAT(wgt[73], Catch::Matchers::WithinAbs(0.012454493401142104680,w_tolerance));
REQUIRE_THAT(pts[74], Catch::Matchers::WithinAbs(0.95674989386161090312,x_tolerance));
REQUIRE_THAT(wgt[74], Catch::Matchers::WithinAbs(0.011075495781759896320,w_tolerance));
REQUIRE_THAT(pts[75], Catch::Matchers::WithinAbs(0.96712911625259069600,x_tolerance));
REQUIRE_THAT(wgt[75], Catch::Matchers::WithinAbs(0.0096804407043710737370,w_tolerance));
REQUIRE_THAT(pts[76], Catch::Matchers::WithinAbs(0.97610609709449882869,x_tolerance));
REQUIRE_THAT(wgt[76], Catch::Matchers::WithinAbs(0.0082713518183836856044,w_tolerance));
REQUIRE_THAT(pts[77], Catch::Matchers::WithinAbs(0.98366782352200760337,x_tolerance));
REQUIRE_THAT(wgt[77], Catch::Matchers::WithinAbs(0.0068502745341835261843,w_tolerance));
REQUIRE_THAT(pts[78], Catch::Matchers::WithinAbs(0.98980333883990894993,x_tolerance));
REQUIRE_THAT(wgt[78], Catch::Matchers::WithinAbs(0.0054192762324467650907,w_tolerance));
REQUIRE_THAT(pts[79], Catch::Matchers::WithinAbs(0.99450376837807562893,x_tolerance));
REQUIRE_THAT(wgt[79], Catch::Matchers::WithinAbs(0.0039804579378560746190,w_tolerance));
REQUIRE_THAT(pts[80], Catch::Matchers::WithinAbs(0.99776238582638586256,x_tolerance));
REQUIRE_THAT(wgt[80], Catch::Matchers::WithinAbs(0.0025360546968561061098,w_tolerance));
REQUIRE_THAT(pts[81], Catch::Matchers::WithinAbs(0.99957519150165264887,x_tolerance));
REQUIRE_THAT(wgt[81], Catch::Matchers::WithinAbs(0.0010901185952758308661,w_tolerance));
}

TEST_CASE("83 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(83);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99958530480704934381,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0010641682196665677564,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99781564040342996176,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0024757193225459397433,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.99463450763178032341,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0038858594353532021920,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.99004570129726522277,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.0052906814458598655552,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.98405562959668147154,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.0066880516352436857414,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.97667275007284293423,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.0080759665931234522836,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.96790750545012872955,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.0094524550924796998882,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.95777229912276710596,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.010815566558037158720,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.94628147501179087444,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.012163370727798612063,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.93345129640183861924,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.013493959512375234981,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.91929992258720794378,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.014805449400717877681,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.90384738302289950808,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.016095984011935370915,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.88711554890506334074,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.017363736673824622350,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.86912810217871698350,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.018606912985478472842,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.84991050199893379734,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.019823753345654939049,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.82948994868498427640,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.021012535437269917874,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.80789534521458963230,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.022171576661803622622,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.78515725631081584029,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.023299236518900549370,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.76130786517845874072,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.024393918927158557497,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.73638092795056426741,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.025454074482489496751,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.71041172590921746448,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.026478202650673762485,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.68343701554802178026,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.027464853890903261239,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.65549497654682371748,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.028412631707247641564,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.62662515773223935849,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.029320194625104527918,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.59686842110041831239,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.030186258089814417054,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.56626688398124080301,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.031009596284739194843,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.53486385942578531058,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.031789043866222150644,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.50270379490142613202,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.032523497612968065991,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.46983220938132032872,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.033211917987505015181,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.43629562891731927549,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.033853330607515198699,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(-0.40214152078748873556,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.034446827624950516833,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(-0.36741822631144036740,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.034991569010979654732,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(-0.33217489242856418232,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.035486783744947102646,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(-0.29646140213600319111,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.035931770905660647347,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(-0.26032830388482591791,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.036325900663462288900,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(-0.22382674003432739919,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.036668615171678090044,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(-0.18700837446572268079,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.036959429356184971080,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(-0.14992531945768681780,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.037197931601976730544,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(-0.11263006192724030781,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.037383784335757404411,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(-0.075175389140377282327,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.037516724503737272715,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(-0.037614313997584382668,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.037596563943955177592,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.037623189652600123326,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.037614313997584382668,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.037596563943955177592,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.075175389140377282327,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.037516724503737272715,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.11263006192724030781,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.037383784335757404411,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.14992531945768681780,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.037197931601976730544,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.18700837446572268079,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.036959429356184971080,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.22382674003432739919,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.036668615171678090044,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.26032830388482591791,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.036325900663462288900,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.29646140213600319111,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.035931770905660647347,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.33217489242856418232,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.035486783744947102646,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.36741822631144036740,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.034991569010979654732,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.40214152078748873556,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.034446827624950516833,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.43629562891731927549,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.033853330607515198699,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.46983220938132032872,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.033211917987505015181,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.50270379490142613202,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.032523497612968065991,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.53486385942578531058,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.031789043866222150644,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.56626688398124080301,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.031009596284739194843,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.59686842110041831239,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.030186258089814417054,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.62662515773223935849,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.029320194625104527918,w_tolerance));
REQUIRE_THAT(pts[60], Catch::Matchers::WithinAbs(0.65549497654682371748,x_tolerance));
REQUIRE_THAT(wgt[60], Catch::Matchers::WithinAbs(0.028412631707247641564,w_tolerance));
REQUIRE_THAT(pts[61], Catch::Matchers::WithinAbs(0.68343701554802178026,x_tolerance));
REQUIRE_THAT(wgt[61], Catch::Matchers::WithinAbs(0.027464853890903261239,w_tolerance));
REQUIRE_THAT(pts[62], Catch::Matchers::WithinAbs(0.71041172590921746448,x_tolerance));
REQUIRE_THAT(wgt[62], Catch::Matchers::WithinAbs(0.026478202650673762485,w_tolerance));
REQUIRE_THAT(pts[63], Catch::Matchers::WithinAbs(0.73638092795056426741,x_tolerance));
REQUIRE_THAT(wgt[63], Catch::Matchers::WithinAbs(0.025454074482489496751,w_tolerance));
REQUIRE_THAT(pts[64], Catch::Matchers::WithinAbs(0.76130786517845874072,x_tolerance));
REQUIRE_THAT(wgt[64], Catch::Matchers::WithinAbs(0.024393918927158557497,w_tolerance));
REQUIRE_THAT(pts[65], Catch::Matchers::WithinAbs(0.78515725631081584029,x_tolerance));
REQUIRE_THAT(wgt[65], Catch::Matchers::WithinAbs(0.023299236518900549370,w_tolerance));
REQUIRE_THAT(pts[66], Catch::Matchers::WithinAbs(0.80789534521458963230,x_tolerance));
REQUIRE_THAT(wgt[66], Catch::Matchers::WithinAbs(0.022171576661803622622,w_tolerance));
REQUIRE_THAT(pts[67], Catch::Matchers::WithinAbs(0.82948994868498427640,x_tolerance));
REQUIRE_THAT(wgt[67], Catch::Matchers::WithinAbs(0.021012535437269917874,w_tolerance));
REQUIRE_THAT(pts[68], Catch::Matchers::WithinAbs(0.84991050199893379734,x_tolerance));
REQUIRE_THAT(wgt[68], Catch::Matchers::WithinAbs(0.019823753345654939049,w_tolerance));
REQUIRE_THAT(pts[69], Catch::Matchers::WithinAbs(0.86912810217871698350,x_tolerance));
REQUIRE_THAT(wgt[69], Catch::Matchers::WithinAbs(0.018606912985478472842,w_tolerance));
REQUIRE_THAT(pts[70], Catch::Matchers::WithinAbs(0.88711554890506334074,x_tolerance));
REQUIRE_THAT(wgt[70], Catch::Matchers::WithinAbs(0.017363736673824622350,w_tolerance));
REQUIRE_THAT(pts[71], Catch::Matchers::WithinAbs(0.90384738302289950808,x_tolerance));
REQUIRE_THAT(wgt[71], Catch::Matchers::WithinAbs(0.016095984011935370915,w_tolerance));
REQUIRE_THAT(pts[72], Catch::Matchers::WithinAbs(0.91929992258720794378,x_tolerance));
REQUIRE_THAT(wgt[72], Catch::Matchers::WithinAbs(0.014805449400717877681,w_tolerance));
REQUIRE_THAT(pts[73], Catch::Matchers::WithinAbs(0.93345129640183861924,x_tolerance));
REQUIRE_THAT(wgt[73], Catch::Matchers::WithinAbs(0.013493959512375234981,w_tolerance));
REQUIRE_THAT(pts[74], Catch::Matchers::WithinAbs(0.94628147501179087444,x_tolerance));
REQUIRE_THAT(wgt[74], Catch::Matchers::WithinAbs(0.012163370727798612063,w_tolerance));
REQUIRE_THAT(pts[75], Catch::Matchers::WithinAbs(0.95777229912276710596,x_tolerance));
REQUIRE_THAT(wgt[75], Catch::Matchers::WithinAbs(0.010815566558037158720,w_tolerance));
REQUIRE_THAT(pts[76], Catch::Matchers::WithinAbs(0.96790750545012872955,x_tolerance));
REQUIRE_THAT(wgt[76], Catch::Matchers::WithinAbs(0.0094524550924796998882,w_tolerance));
REQUIRE_THAT(pts[77], Catch::Matchers::WithinAbs(0.97667275007284293423,x_tolerance));
REQUIRE_THAT(wgt[77], Catch::Matchers::WithinAbs(0.0080759665931234522836,w_tolerance));
REQUIRE_THAT(pts[78], Catch::Matchers::WithinAbs(0.98405562959668147154,x_tolerance));
REQUIRE_THAT(wgt[78], Catch::Matchers::WithinAbs(0.0066880516352436857414,w_tolerance));
REQUIRE_THAT(pts[79], Catch::Matchers::WithinAbs(0.99004570129726522277,x_tolerance));
REQUIRE_THAT(wgt[79], Catch::Matchers::WithinAbs(0.0052906814458598655552,w_tolerance));
REQUIRE_THAT(pts[80], Catch::Matchers::WithinAbs(0.99463450763178032341,x_tolerance));
REQUIRE_THAT(wgt[80], Catch::Matchers::WithinAbs(0.0038858594353532021920,w_tolerance));
REQUIRE_THAT(pts[81], Catch::Matchers::WithinAbs(0.99781564040342996176,x_tolerance));
REQUIRE_THAT(wgt[81], Catch::Matchers::WithinAbs(0.0024757193225459397433,w_tolerance));
REQUIRE_THAT(pts[82], Catch::Matchers::WithinAbs(0.99958530480704934381,x_tolerance));
REQUIRE_THAT(wgt[82], Catch::Matchers::WithinAbs(0.0010641682196665677564,w_tolerance));
}

TEST_CASE("84 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(84);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99959506122692324220,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0010391335164519718893,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99786701642171196156,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0024175112654431228553,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.99476063826128464120,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0037945916504523496964,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.99027952896535668733,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.0051666051827468083299,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.98442979712758165152,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.0065315136877136546011,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.97721950735831578265,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.0078874057526481463821,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.96865861817362189769,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.0092324007841902470144,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.95875895872969347202,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.010564637623008245265,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.94753420994744312281,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.011882274089801223495,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.93499988476355881775,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.013183488679182345987,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.92117330636305121773,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.014466482789161186242,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.90607358409400842134,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.015729483095583598202,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.88972158698831546080,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.016970743955211611343,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.87213991488357903203,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.018188549796056549928,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.85335286716891866160,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.019381217477318808648,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.83338640919002142885,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.020547098609756278612,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.81226813635612303902,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.021684581830644822989,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.79002723599659686797,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.022792095028942129339,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.76669444701883628267,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.023868107516958239385,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.74230201742260992077,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.024911132145206428884,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.71688365972927482382,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.025919727357334647725,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.69047450438724847122,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.026892499182197637516,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.66311105121801463434,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.027828103160258406036,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.63483111896969148364,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.028725246201621802213,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.60567379304783338968,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.029582688373110845290,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.57567937149567415604,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.030399244611902469773,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.54488930929844968891,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.031173786363345661292,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.51334616108876140005,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.031905243140692727484,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.48109352233215617605,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.032592604004584257184,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.44817596907420233116,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.033234918960240444075,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(-0.41463899633233121934,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.033831300270425984804,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(-0.38052895521758870054,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.034380923682372700621,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(-0.34589298887319705903,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.034883029566963308456,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(-0.31077896731846397263,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.035336923968601276160,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(-0.27523542128808856050,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.035741979564315307278,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(-0.23931147515830336571,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.036097636530772566702,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(-0.20305677905255347813,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.036403403318002122489,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(-0.16652144022054815897,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.036658857328759075637,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(-0.12975595378552474180,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.036863645502590307718,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(-0.092811132955437882746,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.037017484803794520585,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(-0.055738038794528216999,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.037120162612602094274,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(-0.018587909652332133287,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.037171537019034067603,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0.018587909652332133287,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.037171537019034067603,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.055738038794528216999,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.037120162612602094274,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.092811132955437882746,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.037017484803794520585,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.12975595378552474180,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.036863645502590307718,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.16652144022054815897,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.036658857328759075637,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.20305677905255347813,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.036403403318002122489,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.23931147515830336571,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.036097636530772566702,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.27523542128808856050,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.035741979564315307278,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.31077896731846397263,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.035336923968601276160,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.34589298887319705903,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.034883029566963308456,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.38052895521758870054,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.034380923682372700621,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.41463899633233121934,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.033831300270425984804,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.44817596907420233116,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.033234918960240444075,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.48109352233215617605,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.032592604004584257184,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.51334616108876140005,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.031905243140692727484,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.54488930929844968891,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.031173786363345661292,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.57567937149567415604,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.030399244611902469773,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.60567379304783338968,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.029582688373110845290,w_tolerance));
REQUIRE_THAT(pts[60], Catch::Matchers::WithinAbs(0.63483111896969148364,x_tolerance));
REQUIRE_THAT(wgt[60], Catch::Matchers::WithinAbs(0.028725246201621802213,w_tolerance));
REQUIRE_THAT(pts[61], Catch::Matchers::WithinAbs(0.66311105121801463434,x_tolerance));
REQUIRE_THAT(wgt[61], Catch::Matchers::WithinAbs(0.027828103160258406036,w_tolerance));
REQUIRE_THAT(pts[62], Catch::Matchers::WithinAbs(0.69047450438724847122,x_tolerance));
REQUIRE_THAT(wgt[62], Catch::Matchers::WithinAbs(0.026892499182197637516,w_tolerance));
REQUIRE_THAT(pts[63], Catch::Matchers::WithinAbs(0.71688365972927482382,x_tolerance));
REQUIRE_THAT(wgt[63], Catch::Matchers::WithinAbs(0.025919727357334647725,w_tolerance));
REQUIRE_THAT(pts[64], Catch::Matchers::WithinAbs(0.74230201742260992077,x_tolerance));
REQUIRE_THAT(wgt[64], Catch::Matchers::WithinAbs(0.024911132145206428884,w_tolerance));
REQUIRE_THAT(pts[65], Catch::Matchers::WithinAbs(0.76669444701883628267,x_tolerance));
REQUIRE_THAT(wgt[65], Catch::Matchers::WithinAbs(0.023868107516958239385,w_tolerance));
REQUIRE_THAT(pts[66], Catch::Matchers::WithinAbs(0.79002723599659686797,x_tolerance));
REQUIRE_THAT(wgt[66], Catch::Matchers::WithinAbs(0.022792095028942129339,w_tolerance));
REQUIRE_THAT(pts[67], Catch::Matchers::WithinAbs(0.81226813635612303902,x_tolerance));
REQUIRE_THAT(wgt[67], Catch::Matchers::WithinAbs(0.021684581830644822989,w_tolerance));
REQUIRE_THAT(pts[68], Catch::Matchers::WithinAbs(0.83338640919002142885,x_tolerance));
REQUIRE_THAT(wgt[68], Catch::Matchers::WithinAbs(0.020547098609756278612,w_tolerance));
REQUIRE_THAT(pts[69], Catch::Matchers::WithinAbs(0.85335286716891866160,x_tolerance));
REQUIRE_THAT(wgt[69], Catch::Matchers::WithinAbs(0.019381217477318808648,w_tolerance));
REQUIRE_THAT(pts[70], Catch::Matchers::WithinAbs(0.87213991488357903203,x_tolerance));
REQUIRE_THAT(wgt[70], Catch::Matchers::WithinAbs(0.018188549796056549928,w_tolerance));
REQUIRE_THAT(pts[71], Catch::Matchers::WithinAbs(0.88972158698831546080,x_tolerance));
REQUIRE_THAT(wgt[71], Catch::Matchers::WithinAbs(0.016970743955211611343,w_tolerance));
REQUIRE_THAT(pts[72], Catch::Matchers::WithinAbs(0.90607358409400842134,x_tolerance));
REQUIRE_THAT(wgt[72], Catch::Matchers::WithinAbs(0.015729483095583598202,w_tolerance));
REQUIRE_THAT(pts[73], Catch::Matchers::WithinAbs(0.92117330636305121773,x_tolerance));
REQUIRE_THAT(wgt[73], Catch::Matchers::WithinAbs(0.014466482789161186242,w_tolerance));
REQUIRE_THAT(pts[74], Catch::Matchers::WithinAbs(0.93499988476355881775,x_tolerance));
REQUIRE_THAT(wgt[74], Catch::Matchers::WithinAbs(0.013183488679182345987,w_tolerance));
REQUIRE_THAT(pts[75], Catch::Matchers::WithinAbs(0.94753420994744312281,x_tolerance));
REQUIRE_THAT(wgt[75], Catch::Matchers::WithinAbs(0.011882274089801223495,w_tolerance));
REQUIRE_THAT(pts[76], Catch::Matchers::WithinAbs(0.95875895872969347202,x_tolerance));
REQUIRE_THAT(wgt[76], Catch::Matchers::WithinAbs(0.010564637623008245265,w_tolerance));
REQUIRE_THAT(pts[77], Catch::Matchers::WithinAbs(0.96865861817362189769,x_tolerance));
REQUIRE_THAT(wgt[77], Catch::Matchers::WithinAbs(0.0092324007841902470144,w_tolerance));
REQUIRE_THAT(pts[78], Catch::Matchers::WithinAbs(0.97721950735831578265,x_tolerance));
REQUIRE_THAT(wgt[78], Catch::Matchers::WithinAbs(0.0078874057526481463821,w_tolerance));
REQUIRE_THAT(pts[79], Catch::Matchers::WithinAbs(0.98442979712758165152,x_tolerance));
REQUIRE_THAT(wgt[79], Catch::Matchers::WithinAbs(0.0065315136877136546011,w_tolerance));
REQUIRE_THAT(pts[80], Catch::Matchers::WithinAbs(0.99027952896535668733,x_tolerance));
REQUIRE_THAT(wgt[80], Catch::Matchers::WithinAbs(0.0051666051827468083299,w_tolerance));
REQUIRE_THAT(pts[81], Catch::Matchers::WithinAbs(0.99476063826128464120,x_tolerance));
REQUIRE_THAT(wgt[81], Catch::Matchers::WithinAbs(0.0037945916504523496964,w_tolerance));
REQUIRE_THAT(pts[82], Catch::Matchers::WithinAbs(0.99786701642171196156,x_tolerance));
REQUIRE_THAT(wgt[82], Catch::Matchers::WithinAbs(0.0024175112654431228553,w_tolerance));
REQUIRE_THAT(pts[83], Catch::Matchers::WithinAbs(0.99959506122692324220,x_tolerance));
REQUIRE_THAT(wgt[83], Catch::Matchers::WithinAbs(0.0010391335164519718893,w_tolerance));
}

TEST_CASE("85 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(85);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99960447735747845433,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.0010149719089677436954,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99791660119811693315,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0023613317042850208968,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.99488237429561627845,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0037065001257593167069,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.99050521771641596379,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.0050468384269244427255,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.98479095768558049733,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.0063803985878975150987,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.97774728841224339193,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.0077053559603827570799,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.96938371192367832801,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.0090199154399936312790,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.95971151595718836240,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.010322300230524245894,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.94874375625457895340,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.011610751286703898010,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.93649523811643069969,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.012883528856498084291,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.92298249609609004559,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.014138914548400832931,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.90822377153909188490,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.015375213542389626874,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.89223898789135590158,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.016590756831154670075,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.87504972376909708764,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.017783903451398170908,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.85667918380995618910,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.018953042688182840447,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.83715216733708265020,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.020096596243575421742,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.81649503487479161472,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.021213020364089379672,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.79473567255911650545,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.022300807922839374189,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.77190345449029307866,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.023358490452989891898,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.74802920307743407396,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.024384640129435683142,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.72314514742860102138,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.025377871695866088477,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.69728487984224954765,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.026336844334514359822,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.67048331045866266070,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.027260263476011164786,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.64277662013251471484,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.028146882546865075846,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.61420221159013699307,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.028995504652190152090,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.58479865893738808571,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.029804984191395887376,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.55460565558626943316,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.030574228404649995724,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.52366396067056787479,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.031302198848020870448,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.49201534402285131048,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.031987912795304674460,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.45970252978708872076,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.032630444564642178189,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(-0.42676913874300970172,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.033228926768132769763,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(-0.39325962942005919065,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.033782551482757530331,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(-0.35921923808043804876,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.034290571341029846708,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(-0.32469391765224755745,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.034752300539900637529,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(-0.28973027569517370354,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.035167115766555788250,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(-0.25437551148245352250,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.035534457039855699082,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(-0.21867735228405901571,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.035853828466280812557,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(-0.18268398893711267388,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.036124798909362460375,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(-0.14644401079051098921,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.036347002571695203767,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(-0.11000634011157723735,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.036520139488744884857,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(-0.073420166043291125620,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.036643975933785702486,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(-0.036734878201249663520,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.036718344733419616222,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.036743145493252106600,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.036734878201249663520,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.036718344733419616222,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.073420166043291125620,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.036643975933785702486,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.11000634011157723735,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.036520139488744884857,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.14644401079051098921,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.036347002571695203767,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.18268398893711267388,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.036124798909362460375,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.21867735228405901571,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.035853828466280812557,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.25437551148245352250,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.035534457039855699082,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.28973027569517370354,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.035167115766555788250,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.32469391765224755745,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.034752300539900637529,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.35921923808043804876,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.034290571341029846708,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.39325962942005919065,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.033782551482757530331,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.42676913874300970172,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.033228926768132769763,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.45970252978708872076,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.032630444564642178189,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.49201534402285131048,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.031987912795304674460,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.52366396067056787479,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.031302198848020870448,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.55460565558626943316,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.030574228404649995724,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.58479865893738808571,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.029804984191395887376,w_tolerance));
REQUIRE_THAT(pts[60], Catch::Matchers::WithinAbs(0.61420221159013699307,x_tolerance));
REQUIRE_THAT(wgt[60], Catch::Matchers::WithinAbs(0.028995504652190152090,w_tolerance));
REQUIRE_THAT(pts[61], Catch::Matchers::WithinAbs(0.64277662013251471484,x_tolerance));
REQUIRE_THAT(wgt[61], Catch::Matchers::WithinAbs(0.028146882546865075846,w_tolerance));
REQUIRE_THAT(pts[62], Catch::Matchers::WithinAbs(0.67048331045866266070,x_tolerance));
REQUIRE_THAT(wgt[62], Catch::Matchers::WithinAbs(0.027260263476011164786,w_tolerance));
REQUIRE_THAT(pts[63], Catch::Matchers::WithinAbs(0.69728487984224954765,x_tolerance));
REQUIRE_THAT(wgt[63], Catch::Matchers::WithinAbs(0.026336844334514359822,w_tolerance));
REQUIRE_THAT(pts[64], Catch::Matchers::WithinAbs(0.72314514742860102138,x_tolerance));
REQUIRE_THAT(wgt[64], Catch::Matchers::WithinAbs(0.025377871695866088477,w_tolerance));
REQUIRE_THAT(pts[65], Catch::Matchers::WithinAbs(0.74802920307743407396,x_tolerance));
REQUIRE_THAT(wgt[65], Catch::Matchers::WithinAbs(0.024384640129435683142,w_tolerance));
REQUIRE_THAT(pts[66], Catch::Matchers::WithinAbs(0.77190345449029307866,x_tolerance));
REQUIRE_THAT(wgt[66], Catch::Matchers::WithinAbs(0.023358490452989891898,w_tolerance));
REQUIRE_THAT(pts[67], Catch::Matchers::WithinAbs(0.79473567255911650545,x_tolerance));
REQUIRE_THAT(wgt[67], Catch::Matchers::WithinAbs(0.022300807922839374189,w_tolerance));
REQUIRE_THAT(pts[68], Catch::Matchers::WithinAbs(0.81649503487479161472,x_tolerance));
REQUIRE_THAT(wgt[68], Catch::Matchers::WithinAbs(0.021213020364089379672,w_tolerance));
REQUIRE_THAT(pts[69], Catch::Matchers::WithinAbs(0.83715216733708265020,x_tolerance));
REQUIRE_THAT(wgt[69], Catch::Matchers::WithinAbs(0.020096596243575421742,w_tolerance));
REQUIRE_THAT(pts[70], Catch::Matchers::WithinAbs(0.85667918380995618910,x_tolerance));
REQUIRE_THAT(wgt[70], Catch::Matchers::WithinAbs(0.018953042688182840447,w_tolerance));
REQUIRE_THAT(pts[71], Catch::Matchers::WithinAbs(0.87504972376909708764,x_tolerance));
REQUIRE_THAT(wgt[71], Catch::Matchers::WithinAbs(0.017783903451398170908,w_tolerance));
REQUIRE_THAT(pts[72], Catch::Matchers::WithinAbs(0.89223898789135590158,x_tolerance));
REQUIRE_THAT(wgt[72], Catch::Matchers::WithinAbs(0.016590756831154670075,w_tolerance));
REQUIRE_THAT(pts[73], Catch::Matchers::WithinAbs(0.90822377153909188490,x_tolerance));
REQUIRE_THAT(wgt[73], Catch::Matchers::WithinAbs(0.015375213542389626874,w_tolerance));
REQUIRE_THAT(pts[74], Catch::Matchers::WithinAbs(0.92298249609609004559,x_tolerance));
REQUIRE_THAT(wgt[74], Catch::Matchers::WithinAbs(0.014138914548400832931,w_tolerance));
REQUIRE_THAT(pts[75], Catch::Matchers::WithinAbs(0.93649523811643069969,x_tolerance));
REQUIRE_THAT(wgt[75], Catch::Matchers::WithinAbs(0.012883528856498084291,w_tolerance));
REQUIRE_THAT(pts[76], Catch::Matchers::WithinAbs(0.94874375625457895340,x_tolerance));
REQUIRE_THAT(wgt[76], Catch::Matchers::WithinAbs(0.011610751286703898010,w_tolerance));
REQUIRE_THAT(pts[77], Catch::Matchers::WithinAbs(0.95971151595718836240,x_tolerance));
REQUIRE_THAT(wgt[77], Catch::Matchers::WithinAbs(0.010322300230524245894,w_tolerance));
REQUIRE_THAT(pts[78], Catch::Matchers::WithinAbs(0.96938371192367832801,x_tolerance));
REQUIRE_THAT(wgt[78], Catch::Matchers::WithinAbs(0.0090199154399936312790,w_tolerance));
REQUIRE_THAT(pts[79], Catch::Matchers::WithinAbs(0.97774728841224339193,x_tolerance));
REQUIRE_THAT(wgt[79], Catch::Matchers::WithinAbs(0.0077053559603827570799,w_tolerance));
REQUIRE_THAT(pts[80], Catch::Matchers::WithinAbs(0.98479095768558049733,x_tolerance));
REQUIRE_THAT(wgt[80], Catch::Matchers::WithinAbs(0.0063803985878975150987,w_tolerance));
REQUIRE_THAT(pts[81], Catch::Matchers::WithinAbs(0.99050521771641596379,x_tolerance));
REQUIRE_THAT(wgt[81], Catch::Matchers::WithinAbs(0.0050468384269244427255,w_tolerance));
REQUIRE_THAT(pts[82], Catch::Matchers::WithinAbs(0.99488237429561627845,x_tolerance));
REQUIRE_THAT(wgt[82], Catch::Matchers::WithinAbs(0.0037065001257593167069,w_tolerance));
REQUIRE_THAT(pts[83], Catch::Matchers::WithinAbs(0.99791660119811693315,x_tolerance));
REQUIRE_THAT(wgt[83], Catch::Matchers::WithinAbs(0.0023613317042850208968,w_tolerance));
REQUIRE_THAT(pts[84], Catch::Matchers::WithinAbs(0.99960447735747845433,x_tolerance));
REQUIRE_THAT(wgt[84], Catch::Matchers::WithinAbs(0.0010149719089677436954,w_tolerance));
}

TEST_CASE("86 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(86);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99961356884132585702,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.00099164326662036352562,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99796447703524394479,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0023070874888099029260,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.99499991748533789622,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0036214392496109014376,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.99072314074551870522,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.0049311840969601036964,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.98513970673250241361,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.0062344591391401234639,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.97825696025368471662,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.0075295216121945626069,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.97008397268574013136,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.0088146571019548157038,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.96063152094289844863,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.010088168460386105655,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.94991207085221025571,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.011348375156177703977,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.93793975990989261443,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.012593614678069697810,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.92473037832286194978,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.013822244452766670867,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.91030134804616583021,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.015032643905081378685,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.89467169973944633438,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.016223216549729022588,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.87786204763336593734,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.017392392075690542387,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.85989456232268495530,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.018538628406709859206,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.84079294151443305170,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.019660413729562179807,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.82058237876616022154,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.020756268484909142791,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.79928953025366178814,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.021824747316927627801,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.77694247961102337105,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.022864440978548006446,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.75357070088880890350,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.023873978189479004973,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.72920501967892832290,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.024852027444399835918,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.70387757245726769480,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.025797298768839535408,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.67762176419758851066,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.026708545420372209575,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.65047222431252623285,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.027584565532851248387,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.62246476097975081191,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.028424203701493494757,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.59363631391349803367,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.029226352506709944584,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.56402490564374132901,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.029989953974664932491,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.53366959136724868330,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.030714000972632053183,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.50261040743665727450,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.031397538537302865559,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.47088831855549778358,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.032039665134294016110,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(-0.43854516374880909401,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.032639533847189921956,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(-0.40562360118060039615,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.033196353494551597120,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(-0.37216705189093961032,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.033709389673417554865,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(-0.33821964252687266641,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.034177965727919904634,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(-0.30382614714270573506,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.034601463641737692260,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(-0.26903192814641030510,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.034979324853210099371,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(-0.23388287647003746374,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.035311050992034205081,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(-0.19842535104305140281,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.035596204536575495591,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(-0.16270611764841171434,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.035834409390924055790,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(-0.12677228724204825299,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.036025351380935257710,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(-0.090671253817080167031,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.036168778668600637583,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(-0.054450631894731206030,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.036264502084202387432,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(-0.018158193724385815933,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.036312395375813338282,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0.018158193724385815933,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.036312395375813338282,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.054450631894731206030,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.036264502084202387432,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.090671253817080167031,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.036168778668600637583,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.12677228724204825299,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.036025351380935257710,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.16270611764841171434,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.035834409390924055790,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.19842535104305140281,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.035596204536575495591,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.23388287647003746374,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.035311050992034205081,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.26903192814641030510,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.034979324853210099371,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.30382614714270573506,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.034601463641737692260,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.33821964252687266641,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.034177965727919904634,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.37216705189093961032,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.033709389673417554865,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.40562360118060039615,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.033196353494551597120,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.43854516374880909401,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.032639533847189921956,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.47088831855549778358,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.032039665134294016110,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.50261040743665727450,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.031397538537302865559,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.53366959136724868330,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.030714000972632053183,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.56402490564374132901,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.029989953974664932491,w_tolerance));
REQUIRE_THAT(pts[60], Catch::Matchers::WithinAbs(0.59363631391349803367,x_tolerance));
REQUIRE_THAT(wgt[60], Catch::Matchers::WithinAbs(0.029226352506709944584,w_tolerance));
REQUIRE_THAT(pts[61], Catch::Matchers::WithinAbs(0.62246476097975081191,x_tolerance));
REQUIRE_THAT(wgt[61], Catch::Matchers::WithinAbs(0.028424203701493494757,w_tolerance));
REQUIRE_THAT(pts[62], Catch::Matchers::WithinAbs(0.65047222431252623285,x_tolerance));
REQUIRE_THAT(wgt[62], Catch::Matchers::WithinAbs(0.027584565532851248387,w_tolerance));
REQUIRE_THAT(pts[63], Catch::Matchers::WithinAbs(0.67762176419758851066,x_tolerance));
REQUIRE_THAT(wgt[63], Catch::Matchers::WithinAbs(0.026708545420372209575,w_tolerance));
REQUIRE_THAT(pts[64], Catch::Matchers::WithinAbs(0.70387757245726769480,x_tolerance));
REQUIRE_THAT(wgt[64], Catch::Matchers::WithinAbs(0.025797298768839535408,w_tolerance));
REQUIRE_THAT(pts[65], Catch::Matchers::WithinAbs(0.72920501967892832290,x_tolerance));
REQUIRE_THAT(wgt[65], Catch::Matchers::WithinAbs(0.024852027444399835918,w_tolerance));
REQUIRE_THAT(pts[66], Catch::Matchers::WithinAbs(0.75357070088880890350,x_tolerance));
REQUIRE_THAT(wgt[66], Catch::Matchers::WithinAbs(0.023873978189479004973,w_tolerance));
REQUIRE_THAT(pts[67], Catch::Matchers::WithinAbs(0.77694247961102337105,x_tolerance));
REQUIRE_THAT(wgt[67], Catch::Matchers::WithinAbs(0.022864440978548006446,w_tolerance));
REQUIRE_THAT(pts[68], Catch::Matchers::WithinAbs(0.79928953025366178814,x_tolerance));
REQUIRE_THAT(wgt[68], Catch::Matchers::WithinAbs(0.021824747316927627801,w_tolerance));
REQUIRE_THAT(pts[69], Catch::Matchers::WithinAbs(0.82058237876616022154,x_tolerance));
REQUIRE_THAT(wgt[69], Catch::Matchers::WithinAbs(0.020756268484909142791,w_tolerance));
REQUIRE_THAT(pts[70], Catch::Matchers::WithinAbs(0.84079294151443305170,x_tolerance));
REQUIRE_THAT(wgt[70], Catch::Matchers::WithinAbs(0.019660413729562179807,w_tolerance));
REQUIRE_THAT(pts[71], Catch::Matchers::WithinAbs(0.85989456232268495530,x_tolerance));
REQUIRE_THAT(wgt[71], Catch::Matchers::WithinAbs(0.018538628406709859206,w_tolerance));
REQUIRE_THAT(pts[72], Catch::Matchers::WithinAbs(0.87786204763336593734,x_tolerance));
REQUIRE_THAT(wgt[72], Catch::Matchers::WithinAbs(0.017392392075690542387,w_tolerance));
REQUIRE_THAT(pts[73], Catch::Matchers::WithinAbs(0.89467169973944633438,x_tolerance));
REQUIRE_THAT(wgt[73], Catch::Matchers::WithinAbs(0.016223216549729022588,w_tolerance));
REQUIRE_THAT(pts[74], Catch::Matchers::WithinAbs(0.91030134804616583021,x_tolerance));
REQUIRE_THAT(wgt[74], Catch::Matchers::WithinAbs(0.015032643905081378685,w_tolerance));
REQUIRE_THAT(pts[75], Catch::Matchers::WithinAbs(0.92473037832286194978,x_tolerance));
REQUIRE_THAT(wgt[75], Catch::Matchers::WithinAbs(0.013822244452766670867,w_tolerance));
REQUIRE_THAT(pts[76], Catch::Matchers::WithinAbs(0.93793975990989261443,x_tolerance));
REQUIRE_THAT(wgt[76], Catch::Matchers::WithinAbs(0.012593614678069697810,w_tolerance));
REQUIRE_THAT(pts[77], Catch::Matchers::WithinAbs(0.94991207085221025571,x_tolerance));
REQUIRE_THAT(wgt[77], Catch::Matchers::WithinAbs(0.011348375156177703977,w_tolerance));
REQUIRE_THAT(pts[78], Catch::Matchers::WithinAbs(0.96063152094289844863,x_tolerance));
REQUIRE_THAT(wgt[78], Catch::Matchers::WithinAbs(0.010088168460386105655,w_tolerance));
REQUIRE_THAT(pts[79], Catch::Matchers::WithinAbs(0.97008397268574013136,x_tolerance));
REQUIRE_THAT(wgt[79], Catch::Matchers::WithinAbs(0.0088146571019548157038,w_tolerance));
REQUIRE_THAT(pts[80], Catch::Matchers::WithinAbs(0.97825696025368471662,x_tolerance));
REQUIRE_THAT(wgt[80], Catch::Matchers::WithinAbs(0.0075295216121945626069,w_tolerance));
REQUIRE_THAT(pts[81], Catch::Matchers::WithinAbs(0.98513970673250241361,x_tolerance));
REQUIRE_THAT(wgt[81], Catch::Matchers::WithinAbs(0.0062344591391401234639,w_tolerance));
REQUIRE_THAT(pts[82], Catch::Matchers::WithinAbs(0.99072314074551870522,x_tolerance));
REQUIRE_THAT(wgt[82], Catch::Matchers::WithinAbs(0.0049311840969601036964,w_tolerance));
REQUIRE_THAT(pts[83], Catch::Matchers::WithinAbs(0.99499991748533789622,x_tolerance));
REQUIRE_THAT(wgt[83], Catch::Matchers::WithinAbs(0.0036214392496109014376,w_tolerance));
REQUIRE_THAT(pts[84], Catch::Matchers::WithinAbs(0.99796447703524394479,x_tolerance));
REQUIRE_THAT(wgt[84], Catch::Matchers::WithinAbs(0.0023070874888099029260,w_tolerance));
REQUIRE_THAT(pts[85], Catch::Matchers::WithinAbs(0.99961356884132585702,x_tolerance));
REQUIRE_THAT(wgt[85], Catch::Matchers::WithinAbs(0.00099164326662036352562,w_tolerance));
}

TEST_CASE("87 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(87);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99962235043248427239,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.00096910973817707533761,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99801072156298235808,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0022546907537528530924,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.99511345813799200595,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0035392716553886285402,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.99093365011096457052,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.0048194562385018858993,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.98547660606842036796,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.0060934620476348721301,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.97874934100381627243,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.0073596236488180636608,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.97076051974728427435,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.0086163028384889518330,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.96152043693607316926,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.0098618777137018267166,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.95104100138931357392,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.011094741940560719280,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.93933571997420574788,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.012313306030048036542,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.92641967989123721995,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.013515999118245658082,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.91230952909412288438,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.014701270887239842230,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.89702345476756936702,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.015867593518826319003,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.88058115985204184106,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.017013463643001534434,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.86300383762970660257,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.018137404265354252050,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.84431414439703522024,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.019237966665356558785,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.82453617025578048013,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.020313732260655569527,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.80369540805817777824,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.021363314433802531594,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.78181872054543773635,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.022385360318485478214,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.75893430572134931574,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.023378552542660172258,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.73507166050531379410,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.024341610926167632339,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.71026154271147290284,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.025273294130557073164,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.68453593140282367412,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.026172401258933558950,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.65792798567134939104,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.027037773403735807284,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.63047200189725044729,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.027868295140429205990,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.60220336954233520169,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.028662895965176218389,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.57315852553453041187,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.029420551674623048249,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.54337490730229335344,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.030140285686018824744,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.51289090451945225914,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.030821170295962234154,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.48174580962266680509,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.031462327876150763938,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(-0.44997976716528437840,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.032062932004589667778,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(-0.41763372207286905503,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.032622208530801443926,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(-0.38474936686709686366,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.033139436573662023536,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(-0.35136908792604131572,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.033613949450576935584,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(-0.31753591085011571433,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.034045135536799373455,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(-0.28329344500409187319,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.034432439053782243766,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(-0.24868582730667713160,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.034775360785547829249,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(-0.21375766534010160359,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.035073458722151536557,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(-0.17855397985304421430,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.035326348629410213698,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(-0.14312014673100813901,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.035533704544160593911,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(-0.10750183850894277161,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.035695259194409433776,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(-0.071744965501499429713,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.035810804343833741757,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(-0.035895616626800899473,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.035880191060187015878,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.035903329907265501442,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.035895616626800899473,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.035880191060187015878,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.071744965501499429713,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.035810804343833741757,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.10750183850894277161,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.035695259194409433776,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.14312014673100813901,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.035533704544160593911,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.17855397985304421430,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.035326348629410213698,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.21375766534010160359,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.035073458722151536557,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.24868582730667713160,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.034775360785547829249,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.28329344500409187319,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.034432439053782243766,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.31753591085011571433,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.034045135536799373455,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.35136908792604131572,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.033613949450576935584,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.38474936686709686366,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.033139436573662023536,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.41763372207286905503,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.032622208530801443926,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.44997976716528437840,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.032062932004589667778,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.48174580962266680509,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.031462327876150763938,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.51289090451945225914,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.030821170295962234154,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.54337490730229335344,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.030140285686018824744,w_tolerance));
REQUIRE_THAT(pts[60], Catch::Matchers::WithinAbs(0.57315852553453041187,x_tolerance));
REQUIRE_THAT(wgt[60], Catch::Matchers::WithinAbs(0.029420551674623048249,w_tolerance));
REQUIRE_THAT(pts[61], Catch::Matchers::WithinAbs(0.60220336954233520169,x_tolerance));
REQUIRE_THAT(wgt[61], Catch::Matchers::WithinAbs(0.028662895965176218389,w_tolerance));
REQUIRE_THAT(pts[62], Catch::Matchers::WithinAbs(0.63047200189725044729,x_tolerance));
REQUIRE_THAT(wgt[62], Catch::Matchers::WithinAbs(0.027868295140429205990,w_tolerance));
REQUIRE_THAT(pts[63], Catch::Matchers::WithinAbs(0.65792798567134939104,x_tolerance));
REQUIRE_THAT(wgt[63], Catch::Matchers::WithinAbs(0.027037773403735807284,w_tolerance));
REQUIRE_THAT(pts[64], Catch::Matchers::WithinAbs(0.68453593140282367412,x_tolerance));
REQUIRE_THAT(wgt[64], Catch::Matchers::WithinAbs(0.026172401258933558950,w_tolerance));
REQUIRE_THAT(pts[65], Catch::Matchers::WithinAbs(0.71026154271147290284,x_tolerance));
REQUIRE_THAT(wgt[65], Catch::Matchers::WithinAbs(0.025273294130557073164,w_tolerance));
REQUIRE_THAT(pts[66], Catch::Matchers::WithinAbs(0.73507166050531379410,x_tolerance));
REQUIRE_THAT(wgt[66], Catch::Matchers::WithinAbs(0.024341610926167632339,w_tolerance));
REQUIRE_THAT(pts[67], Catch::Matchers::WithinAbs(0.75893430572134931574,x_tolerance));
REQUIRE_THAT(wgt[67], Catch::Matchers::WithinAbs(0.023378552542660172258,w_tolerance));
REQUIRE_THAT(pts[68], Catch::Matchers::WithinAbs(0.78181872054543773635,x_tolerance));
REQUIRE_THAT(wgt[68], Catch::Matchers::WithinAbs(0.022385360318485478214,w_tolerance));
REQUIRE_THAT(pts[69], Catch::Matchers::WithinAbs(0.80369540805817777824,x_tolerance));
REQUIRE_THAT(wgt[69], Catch::Matchers::WithinAbs(0.021363314433802531594,w_tolerance));
REQUIRE_THAT(pts[70], Catch::Matchers::WithinAbs(0.82453617025578048013,x_tolerance));
REQUIRE_THAT(wgt[70], Catch::Matchers::WithinAbs(0.020313732260655569527,w_tolerance));
REQUIRE_THAT(pts[71], Catch::Matchers::WithinAbs(0.84431414439703522024,x_tolerance));
REQUIRE_THAT(wgt[71], Catch::Matchers::WithinAbs(0.019237966665356558785,w_tolerance));
REQUIRE_THAT(pts[72], Catch::Matchers::WithinAbs(0.86300383762970660257,x_tolerance));
REQUIRE_THAT(wgt[72], Catch::Matchers::WithinAbs(0.018137404265354252050,w_tolerance));
REQUIRE_THAT(pts[73], Catch::Matchers::WithinAbs(0.88058115985204184106,x_tolerance));
REQUIRE_THAT(wgt[73], Catch::Matchers::WithinAbs(0.017013463643001534434,w_tolerance));
REQUIRE_THAT(pts[74], Catch::Matchers::WithinAbs(0.89702345476756936702,x_tolerance));
REQUIRE_THAT(wgt[74], Catch::Matchers::WithinAbs(0.015867593518826319003,w_tolerance));
REQUIRE_THAT(pts[75], Catch::Matchers::WithinAbs(0.91230952909412288438,x_tolerance));
REQUIRE_THAT(wgt[75], Catch::Matchers::WithinAbs(0.014701270887239842230,w_tolerance));
REQUIRE_THAT(pts[76], Catch::Matchers::WithinAbs(0.92641967989123721995,x_tolerance));
REQUIRE_THAT(wgt[76], Catch::Matchers::WithinAbs(0.013515999118245658082,w_tolerance));
REQUIRE_THAT(pts[77], Catch::Matchers::WithinAbs(0.93933571997420574788,x_tolerance));
REQUIRE_THAT(wgt[77], Catch::Matchers::WithinAbs(0.012313306030048036542,w_tolerance));
REQUIRE_THAT(pts[78], Catch::Matchers::WithinAbs(0.95104100138931357392,x_tolerance));
REQUIRE_THAT(wgt[78], Catch::Matchers::WithinAbs(0.011094741940560719280,w_tolerance));
REQUIRE_THAT(pts[79], Catch::Matchers::WithinAbs(0.96152043693607316926,x_tolerance));
REQUIRE_THAT(wgt[79], Catch::Matchers::WithinAbs(0.0098618777137018267166,w_tolerance));
REQUIRE_THAT(pts[80], Catch::Matchers::WithinAbs(0.97076051974728427435,x_tolerance));
REQUIRE_THAT(wgt[80], Catch::Matchers::WithinAbs(0.0086163028384889518330,w_tolerance));
REQUIRE_THAT(pts[81], Catch::Matchers::WithinAbs(0.97874934100381627243,x_tolerance));
REQUIRE_THAT(wgt[81], Catch::Matchers::WithinAbs(0.0073596236488180636608,w_tolerance));
REQUIRE_THAT(pts[82], Catch::Matchers::WithinAbs(0.98547660606842036796,x_tolerance));
REQUIRE_THAT(wgt[82], Catch::Matchers::WithinAbs(0.0060934620476348721301,w_tolerance));
REQUIRE_THAT(pts[83], Catch::Matchers::WithinAbs(0.99093365011096457052,x_tolerance));
REQUIRE_THAT(wgt[83], Catch::Matchers::WithinAbs(0.0048194562385018858993,w_tolerance));
REQUIRE_THAT(pts[84], Catch::Matchers::WithinAbs(0.99511345813799200595,x_tolerance));
REQUIRE_THAT(wgt[84], Catch::Matchers::WithinAbs(0.0035392716553886285402,w_tolerance));
REQUIRE_THAT(pts[85], Catch::Matchers::WithinAbs(0.99801072156298235808,x_tolerance));
REQUIRE_THAT(wgt[85], Catch::Matchers::WithinAbs(0.0022546907537528530924,w_tolerance));
REQUIRE_THAT(pts[86], Catch::Matchers::WithinAbs(0.99962235043248427239,x_tolerance));
REQUIRE_THAT(wgt[86], Catch::Matchers::WithinAbs(0.00096910973817707533761,w_tolerance));
}

TEST_CASE("88 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(88);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99963083605627065578,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.00094733559816192726682,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99805540805324967761,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0022040585631436966285,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.99522317588798887078,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0034598676678627964240,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.99113707815401555511,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.0047114792795986617430,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.98580218608776355228,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.0059571869961380465831,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.97922520315429670378,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.0071953984597963720598,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.97141441014132227648,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.0084245474927024730151,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.96237964606377068299,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.0096430833220532044008,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.95213229346380211252,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.010849469775429271259,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.94068526330264354526,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.012042186439581212310,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.92805297839469205558,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.013219730313627911708,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.91425135510452719134,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.014380617601299944236,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.89929778323005705484,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.015523385536933553840,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.88321110405945058162,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.016646594208217656045,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.86601158661378133402,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.017748828360324074556,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.84772090209820908720,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.018828699173755451395,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.82836209659045624485,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.019884846011274113244,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.80795956199923649182,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.020915938130576624232,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.78653900532828715748,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.021920676359989853596,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.76412741628420684197,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.022897794734781142327,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.74075303326860777358,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.023846062091859661264,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.71644530779725048566,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.024764283620768733025,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.69123486739088043802,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.025651302368961947885,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.66515347698445317222,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.026506000699434737721,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.63823399890332645028,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.027327301698855330836,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.61051035145681898624,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.028114170534408613492,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.58201746620128735758,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.028865615757635429246,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.55279124392655547280,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.029580690553619349113,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.52286850942114375373,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.030258493933943525335,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.49228696507328672289,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.030898171871912197634,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(-0.46108514336619651061,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.031498918378604892320,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(-0.42930235832742437021,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.032059976518406388069,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(-0.39697865599349105025,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.032580639362732108686,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(-0.36415476395219828782,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.033060250880746700145,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(-0.33087204002619627511,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.033498206765953092528,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(-0.29717242016246430559,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.033893955197610259240,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(-0.26309836559336260023,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.034246997536020078737,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(-0.22869280933583131390,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.034556888950807084135,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(-0.19399910209614678858,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.034823238981399354993,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(-0.15906095764839421594,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.035045712029004261397,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(-0.12392239775547906165,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.035224027779459108533,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(-0.088627696702076058805,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.035357961556423843794,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(-0.053221325509403576522,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.035447344604470769706,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(-0.017747895902112098289,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.035492064301714545296,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0.017747895902112098289,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.035492064301714545296,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.053221325509403576522,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.035447344604470769706,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.088627696702076058805,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.035357961556423843794,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.12392239775547906165,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.035224027779459108533,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.15906095764839421594,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.035045712029004261397,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.19399910209614678858,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.034823238981399354993,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.22869280933583131390,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.034556888950807084135,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.26309836559336260023,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.034246997536020078737,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.29717242016246430559,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.033893955197610259240,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.33087204002619627511,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.033498206765953092528,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.36415476395219828782,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.033060250880746700145,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.39697865599349105025,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.032580639362732108686,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.42930235832742437021,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.032059976518406388069,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.46108514336619651061,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.031498918378604892320,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.49228696507328672289,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.030898171871912197634,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.52286850942114375373,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.030258493933943525335,w_tolerance));
REQUIRE_THAT(pts[60], Catch::Matchers::WithinAbs(0.55279124392655547280,x_tolerance));
REQUIRE_THAT(wgt[60], Catch::Matchers::WithinAbs(0.029580690553619349113,w_tolerance));
REQUIRE_THAT(pts[61], Catch::Matchers::WithinAbs(0.58201746620128735758,x_tolerance));
REQUIRE_THAT(wgt[61], Catch::Matchers::WithinAbs(0.028865615757635429246,w_tolerance));
REQUIRE_THAT(pts[62], Catch::Matchers::WithinAbs(0.61051035145681898624,x_tolerance));
REQUIRE_THAT(wgt[62], Catch::Matchers::WithinAbs(0.028114170534408613492,w_tolerance));
REQUIRE_THAT(pts[63], Catch::Matchers::WithinAbs(0.63823399890332645028,x_tolerance));
REQUIRE_THAT(wgt[63], Catch::Matchers::WithinAbs(0.027327301698855330836,w_tolerance));
REQUIRE_THAT(pts[64], Catch::Matchers::WithinAbs(0.66515347698445317222,x_tolerance));
REQUIRE_THAT(wgt[64], Catch::Matchers::WithinAbs(0.026506000699434737721,w_tolerance));
REQUIRE_THAT(pts[65], Catch::Matchers::WithinAbs(0.69123486739088043802,x_tolerance));
REQUIRE_THAT(wgt[65], Catch::Matchers::WithinAbs(0.025651302368961947885,w_tolerance));
REQUIRE_THAT(pts[66], Catch::Matchers::WithinAbs(0.71644530779725048566,x_tolerance));
REQUIRE_THAT(wgt[66], Catch::Matchers::WithinAbs(0.024764283620768733025,w_tolerance));
REQUIRE_THAT(pts[67], Catch::Matchers::WithinAbs(0.74075303326860777358,x_tolerance));
REQUIRE_THAT(wgt[67], Catch::Matchers::WithinAbs(0.023846062091859661264,w_tolerance));
REQUIRE_THAT(pts[68], Catch::Matchers::WithinAbs(0.76412741628420684197,x_tolerance));
REQUIRE_THAT(wgt[68], Catch::Matchers::WithinAbs(0.022897794734781142327,w_tolerance));
REQUIRE_THAT(pts[69], Catch::Matchers::WithinAbs(0.78653900532828715748,x_tolerance));
REQUIRE_THAT(wgt[69], Catch::Matchers::WithinAbs(0.021920676359989853596,w_tolerance));
REQUIRE_THAT(pts[70], Catch::Matchers::WithinAbs(0.80795956199923649182,x_tolerance));
REQUIRE_THAT(wgt[70], Catch::Matchers::WithinAbs(0.020915938130576624232,w_tolerance));
REQUIRE_THAT(pts[71], Catch::Matchers::WithinAbs(0.82836209659045624485,x_tolerance));
REQUIRE_THAT(wgt[71], Catch::Matchers::WithinAbs(0.019884846011274113244,w_tolerance));
REQUIRE_THAT(pts[72], Catch::Matchers::WithinAbs(0.84772090209820908720,x_tolerance));
REQUIRE_THAT(wgt[72], Catch::Matchers::WithinAbs(0.018828699173755451395,w_tolerance));
REQUIRE_THAT(pts[73], Catch::Matchers::WithinAbs(0.86601158661378133402,x_tolerance));
REQUIRE_THAT(wgt[73], Catch::Matchers::WithinAbs(0.017748828360324074556,w_tolerance));
REQUIRE_THAT(pts[74], Catch::Matchers::WithinAbs(0.88321110405945058162,x_tolerance));
REQUIRE_THAT(wgt[74], Catch::Matchers::WithinAbs(0.016646594208217656045,w_tolerance));
REQUIRE_THAT(pts[75], Catch::Matchers::WithinAbs(0.89929778323005705484,x_tolerance));
REQUIRE_THAT(wgt[75], Catch::Matchers::WithinAbs(0.015523385536933553840,w_tolerance));
REQUIRE_THAT(pts[76], Catch::Matchers::WithinAbs(0.91425135510452719134,x_tolerance));
REQUIRE_THAT(wgt[76], Catch::Matchers::WithinAbs(0.014380617601299944236,w_tolerance));
REQUIRE_THAT(pts[77], Catch::Matchers::WithinAbs(0.92805297839469205558,x_tolerance));
REQUIRE_THAT(wgt[77], Catch::Matchers::WithinAbs(0.013219730313627911708,w_tolerance));
REQUIRE_THAT(pts[78], Catch::Matchers::WithinAbs(0.94068526330264354526,x_tolerance));
REQUIRE_THAT(wgt[78], Catch::Matchers::WithinAbs(0.012042186439581212310,w_tolerance));
REQUIRE_THAT(pts[79], Catch::Matchers::WithinAbs(0.95213229346380211252,x_tolerance));
REQUIRE_THAT(wgt[79], Catch::Matchers::WithinAbs(0.010849469775429271259,w_tolerance));
REQUIRE_THAT(pts[80], Catch::Matchers::WithinAbs(0.96237964606377068299,x_tolerance));
REQUIRE_THAT(wgt[80], Catch::Matchers::WithinAbs(0.0096430833220532044008,w_tolerance));
REQUIRE_THAT(pts[81], Catch::Matchers::WithinAbs(0.97141441014132227648,x_tolerance));
REQUIRE_THAT(wgt[81], Catch::Matchers::WithinAbs(0.0084245474927024730151,w_tolerance));
REQUIRE_THAT(pts[82], Catch::Matchers::WithinAbs(0.97922520315429670378,x_tolerance));
REQUIRE_THAT(wgt[82], Catch::Matchers::WithinAbs(0.0071953984597963720598,w_tolerance));
REQUIRE_THAT(pts[83], Catch::Matchers::WithinAbs(0.98580218608776355228,x_tolerance));
REQUIRE_THAT(wgt[83], Catch::Matchers::WithinAbs(0.0059571869961380465831,w_tolerance));
REQUIRE_THAT(pts[84], Catch::Matchers::WithinAbs(0.99113707815401555511,x_tolerance));
REQUIRE_THAT(wgt[84], Catch::Matchers::WithinAbs(0.0047114792795986617430,w_tolerance));
REQUIRE_THAT(pts[85], Catch::Matchers::WithinAbs(0.99522317588798887078,x_tolerance));
REQUIRE_THAT(wgt[85], Catch::Matchers::WithinAbs(0.0034598676678627964240,w_tolerance));
REQUIRE_THAT(pts[86], Catch::Matchers::WithinAbs(0.99805540805324967761,x_tolerance));
REQUIRE_THAT(wgt[86], Catch::Matchers::WithinAbs(0.0022040585631436966285,w_tolerance));
REQUIRE_THAT(pts[87], Catch::Matchers::WithinAbs(0.99963083605627065578,x_tolerance));
REQUIRE_THAT(wgt[87], Catch::Matchers::WithinAbs(0.00094733559816192726682,w_tolerance));
}

TEST_CASE("89 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(89);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99963903886453345958,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.00092628710519347281553,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99809860571027392948,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0021551125822191137646,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.99532924040674976033,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0033831047924074551326,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.99133373880866530067,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.0046070873434632414330,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.98611694786110367400,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.0058254257887701074596,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.97968527658387664113,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.0070365968709891141374,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.97204664274890935970,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.0082391025253890787306,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.96321045465653544185,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.0094314592607978905397,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.95318759729284094058,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.010612197289972188033,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.94199041817021491907,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.011779861580874892177,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.92963271182371860337,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.012933013392602677292,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.91612970268882343121,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.014070231948644482814,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.90149802628399775209,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.015190116144666123397,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.88575570868446994828,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.016291286254792384578,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.86892214429708371925,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.017372385621502401670,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.85101807195667744688,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.018432082321784115676,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.83206554937007912711,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.019469070805151873139,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.81208792593748603024,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.020482073500400270212,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.79110981398379337146,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.021469842388561140843,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.76915705843480110033,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.022431160539836367128,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.74625670497536000938,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.023364843612455445827,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.72243696672850824337,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.024269741311522339274,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.69772718949653990589,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.025144738806002568623,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.67215781560675955082,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.025988758102073836251,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.64576034640641984872,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.026800759371129177713,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.61856730345301912070,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.027579742230784582533,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.59061218844775239304,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.028324746977305207228,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.56192944196146430493,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.029034855767926811830,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.53255440100394395697,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.029709193751612459627,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.50252325548882955145,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.030346930146849129343,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(-0.47187300364775316379,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.030947279265154844789,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(-0.44064140644865181860,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.031509501479034283659,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(-0.40886694107439881870,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.032032904133189585507,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(-0.37658875351906760388,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.032516842397863206968,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(-0.34384661036022795248,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.032960720063261117074,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(-0.31068084976668979974,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.033363990274077320940,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(-0.27713233180205211795,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.033726156203214570706,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(-0.24324238808528204959,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.034046771663871087167,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(-0.20905277087034175587,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.034325441659239087818,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(-0.17460560160759627408,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.034561822869137808136,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(-0.13994331905037419667,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.034755624072981420921,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(-0.10510862697061341170,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.034906606508560709891,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(-0.070144441548005792133,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.035014584166196443369,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(-0.035093838497457001385,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.035079424017902025317,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.035101046181273077032,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.035093838497457001385,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.035079424017902025317,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.070144441548005792133,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.035014584166196443369,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.10510862697061341170,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.034906606508560709891,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.13994331905037419667,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.034755624072981420921,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.17460560160759627408,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.034561822869137808136,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.20905277087034175587,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.034325441659239087818,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.24324238808528204959,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.034046771663871087167,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.27713233180205211795,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.033726156203214570706,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.31068084976668979974,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.033363990274077320940,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.34384661036022795248,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.032960720063261117074,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.37658875351906760388,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.032516842397863206968,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.40886694107439881870,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.032032904133189585507,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.44064140644865181860,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.031509501479034283659,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.47187300364775316379,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.030947279265154844789,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.50252325548882955145,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.030346930146849129343,w_tolerance));
REQUIRE_THAT(pts[60], Catch::Matchers::WithinAbs(0.53255440100394395697,x_tolerance));
REQUIRE_THAT(wgt[60], Catch::Matchers::WithinAbs(0.029709193751612459627,w_tolerance));
REQUIRE_THAT(pts[61], Catch::Matchers::WithinAbs(0.56192944196146430493,x_tolerance));
REQUIRE_THAT(wgt[61], Catch::Matchers::WithinAbs(0.029034855767926811830,w_tolerance));
REQUIRE_THAT(pts[62], Catch::Matchers::WithinAbs(0.59061218844775239304,x_tolerance));
REQUIRE_THAT(wgt[62], Catch::Matchers::WithinAbs(0.028324746977305207228,w_tolerance));
REQUIRE_THAT(pts[63], Catch::Matchers::WithinAbs(0.61856730345301912070,x_tolerance));
REQUIRE_THAT(wgt[63], Catch::Matchers::WithinAbs(0.027579742230784582533,w_tolerance));
REQUIRE_THAT(pts[64], Catch::Matchers::WithinAbs(0.64576034640641984872,x_tolerance));
REQUIRE_THAT(wgt[64], Catch::Matchers::WithinAbs(0.026800759371129177713,w_tolerance));
REQUIRE_THAT(pts[65], Catch::Matchers::WithinAbs(0.67215781560675955082,x_tolerance));
REQUIRE_THAT(wgt[65], Catch::Matchers::WithinAbs(0.025988758102073836251,w_tolerance));
REQUIRE_THAT(pts[66], Catch::Matchers::WithinAbs(0.69772718949653990589,x_tolerance));
REQUIRE_THAT(wgt[66], Catch::Matchers::WithinAbs(0.025144738806002568623,w_tolerance));
REQUIRE_THAT(pts[67], Catch::Matchers::WithinAbs(0.72243696672850824337,x_tolerance));
REQUIRE_THAT(wgt[67], Catch::Matchers::WithinAbs(0.024269741311522339274,w_tolerance));
REQUIRE_THAT(pts[68], Catch::Matchers::WithinAbs(0.74625670497536000938,x_tolerance));
REQUIRE_THAT(wgt[68], Catch::Matchers::WithinAbs(0.023364843612455445827,w_tolerance));
REQUIRE_THAT(pts[69], Catch::Matchers::WithinAbs(0.76915705843480110033,x_tolerance));
REQUIRE_THAT(wgt[69], Catch::Matchers::WithinAbs(0.022431160539836367128,w_tolerance));
REQUIRE_THAT(pts[70], Catch::Matchers::WithinAbs(0.79110981398379337146,x_tolerance));
REQUIRE_THAT(wgt[70], Catch::Matchers::WithinAbs(0.021469842388561140843,w_tolerance));
REQUIRE_THAT(pts[71], Catch::Matchers::WithinAbs(0.81208792593748603024,x_tolerance));
REQUIRE_THAT(wgt[71], Catch::Matchers::WithinAbs(0.020482073500400270212,w_tolerance));
REQUIRE_THAT(pts[72], Catch::Matchers::WithinAbs(0.83206554937007912711,x_tolerance));
REQUIRE_THAT(wgt[72], Catch::Matchers::WithinAbs(0.019469070805151873139,w_tolerance));
REQUIRE_THAT(pts[73], Catch::Matchers::WithinAbs(0.85101807195667744688,x_tolerance));
REQUIRE_THAT(wgt[73], Catch::Matchers::WithinAbs(0.018432082321784115676,w_tolerance));
REQUIRE_THAT(pts[74], Catch::Matchers::WithinAbs(0.86892214429708371925,x_tolerance));
REQUIRE_THAT(wgt[74], Catch::Matchers::WithinAbs(0.017372385621502401670,w_tolerance));
REQUIRE_THAT(pts[75], Catch::Matchers::WithinAbs(0.88575570868446994828,x_tolerance));
REQUIRE_THAT(wgt[75], Catch::Matchers::WithinAbs(0.016291286254792384578,w_tolerance));
REQUIRE_THAT(pts[76], Catch::Matchers::WithinAbs(0.90149802628399775209,x_tolerance));
REQUIRE_THAT(wgt[76], Catch::Matchers::WithinAbs(0.015190116144666123397,w_tolerance));
REQUIRE_THAT(pts[77], Catch::Matchers::WithinAbs(0.91612970268882343121,x_tolerance));
REQUIRE_THAT(wgt[77], Catch::Matchers::WithinAbs(0.014070231948644482814,w_tolerance));
REQUIRE_THAT(pts[78], Catch::Matchers::WithinAbs(0.92963271182371860337,x_tolerance));
REQUIRE_THAT(wgt[78], Catch::Matchers::WithinAbs(0.012933013392602677292,w_tolerance));
REQUIRE_THAT(pts[79], Catch::Matchers::WithinAbs(0.94199041817021491907,x_tolerance));
REQUIRE_THAT(wgt[79], Catch::Matchers::WithinAbs(0.011779861580874892177,w_tolerance));
REQUIRE_THAT(pts[80], Catch::Matchers::WithinAbs(0.95318759729284094058,x_tolerance));
REQUIRE_THAT(wgt[80], Catch::Matchers::WithinAbs(0.010612197289972188033,w_tolerance));
REQUIRE_THAT(pts[81], Catch::Matchers::WithinAbs(0.96321045465653544185,x_tolerance));
REQUIRE_THAT(wgt[81], Catch::Matchers::WithinAbs(0.0094314592607978905397,w_tolerance));
REQUIRE_THAT(pts[82], Catch::Matchers::WithinAbs(0.97204664274890935970,x_tolerance));
REQUIRE_THAT(wgt[82], Catch::Matchers::WithinAbs(0.0082391025253890787306,w_tolerance));
REQUIRE_THAT(pts[83], Catch::Matchers::WithinAbs(0.97968527658387664113,x_tolerance));
REQUIRE_THAT(wgt[83], Catch::Matchers::WithinAbs(0.0070365968709891141374,w_tolerance));
REQUIRE_THAT(pts[84], Catch::Matchers::WithinAbs(0.98611694786110367400,x_tolerance));
REQUIRE_THAT(wgt[84], Catch::Matchers::WithinAbs(0.0058254257887701074596,w_tolerance));
REQUIRE_THAT(pts[85], Catch::Matchers::WithinAbs(0.99133373880866530067,x_tolerance));
REQUIRE_THAT(wgt[85], Catch::Matchers::WithinAbs(0.0046070873434632414330,w_tolerance));
REQUIRE_THAT(pts[86], Catch::Matchers::WithinAbs(0.99532924040674976033,x_tolerance));
REQUIRE_THAT(wgt[86], Catch::Matchers::WithinAbs(0.0033831047924074551326,w_tolerance));
REQUIRE_THAT(pts[87], Catch::Matchers::WithinAbs(0.99809860571027392948,x_tolerance));
REQUIRE_THAT(wgt[87], Catch::Matchers::WithinAbs(0.0021551125822191137646,w_tolerance));
REQUIRE_THAT(pts[88], Catch::Matchers::WithinAbs(0.99963903886453345958,x_tolerance));
REQUIRE_THAT(wgt[88], Catch::Matchers::WithinAbs(0.00092628710519347281553,w_tolerance));
}

TEST_CASE("90 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(90);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99964697128663843746,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.00090593237121483309376,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99814037993856815356,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0021077787745263298915,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.99543181205834466393,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0033088672433360181954,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.99152392881106278613,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.0045061236136749778641,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.98642136505783284873,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.0056979815607473526009,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.98013025134514838546,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.0068829832084632843147,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.97265816209019314000,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.0080596949446200156587,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.96401409817150548339,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.0092266969577419909403,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.95420847388150033616,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.010382582309893214614,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.94325310364535776815,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.011525957889148058851,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.93116118750043200701,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.012655445837168128869,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.91794729506658638337,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.013769685112337093431,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.90362734793130269387,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.014867333088043324050,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.88821860043474598130,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.015947067151006639013,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.87173961886290343447,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.017007586285222675709,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.85421025906707188229,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.018047612634460236164,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.83565164253337704556,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.019065893039137318425,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.81608613092948105644,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.020061200544639595965,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.79553729915824813486,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.021032335878722563117,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.77402990695033424681,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.021978128895934133839,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.75158986902963846818,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.022897439987163184635,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.72824422388739036363,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.023789161452528723210,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.70402110120239114356,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.024652218835904852936,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.67894968794659714618,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.025485572219443228484,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.65306019321684219196,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.026288217476514587362,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.62638381183504512676,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.027059187481547958522,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.59895268676074218589,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.027797553275302275158,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.57079987036122097871,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.028502425184161416319,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.54195928458591342619,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.029172953892100742487,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.51246568009302797099,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.029808331464031275487,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(-0.48235459437766569252,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.030407792319286952690,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(-0.45166230895186936758,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.030970614154080920946,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(-0.42042580562819775610,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.031496118811818636077,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(-0.38868272195949820678,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.031983673100218576039,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(-0.35647130588856784613,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.032432689554255616912,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(-0.32383036966234596651,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.032842627144007504579,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(-0.29079924306616665155,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.033212991926551316514,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(-0.25741772603442012992,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.033543337641124276683,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(-0.22372604069472285927,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.033833266246831687258,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(-0.18976478290337901902,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.034082428402253995464,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(-0.15557487333052911951,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.034290523886375041932,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(-0.12119750815392408297,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.034457301960324256175,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(-0.086674109420734770085,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.034582561669496891418,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(-0.052046275137206949059,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.034666152085688240188,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(-0.017355729146299652461,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.034707972488950057920,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0.017355729146299652461,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.034707972488950057920,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.052046275137206949059,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.034666152085688240188,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.086674109420734770085,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.034582561669496891418,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.12119750815392408297,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.034457301960324256175,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.15557487333052911951,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.034290523886375041932,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.18976478290337901902,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.034082428402253995464,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.22372604069472285927,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.033833266246831687258,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.25741772603442012992,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.033543337641124276683,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.29079924306616665155,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.033212991926551316514,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.32383036966234596651,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.032842627144007504579,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.35647130588856784613,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.032432689554255616912,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.38868272195949820678,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.031983673100218576039,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.42042580562819775610,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.031496118811818636077,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.45166230895186936758,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.030970614154080920946,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.48235459437766569252,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.030407792319286952690,w_tolerance));
REQUIRE_THAT(pts[60], Catch::Matchers::WithinAbs(0.51246568009302797099,x_tolerance));
REQUIRE_THAT(wgt[60], Catch::Matchers::WithinAbs(0.029808331464031275487,w_tolerance));
REQUIRE_THAT(pts[61], Catch::Matchers::WithinAbs(0.54195928458591342619,x_tolerance));
REQUIRE_THAT(wgt[61], Catch::Matchers::WithinAbs(0.029172953892100742487,w_tolerance));
REQUIRE_THAT(pts[62], Catch::Matchers::WithinAbs(0.57079987036122097871,x_tolerance));
REQUIRE_THAT(wgt[62], Catch::Matchers::WithinAbs(0.028502425184161416319,w_tolerance));
REQUIRE_THAT(pts[63], Catch::Matchers::WithinAbs(0.59895268676074218589,x_tolerance));
REQUIRE_THAT(wgt[63], Catch::Matchers::WithinAbs(0.027797553275302275158,w_tolerance));
REQUIRE_THAT(pts[64], Catch::Matchers::WithinAbs(0.62638381183504512676,x_tolerance));
REQUIRE_THAT(wgt[64], Catch::Matchers::WithinAbs(0.027059187481547958522,w_tolerance));
REQUIRE_THAT(pts[65], Catch::Matchers::WithinAbs(0.65306019321684219196,x_tolerance));
REQUIRE_THAT(wgt[65], Catch::Matchers::WithinAbs(0.026288217476514587362,w_tolerance));
REQUIRE_THAT(pts[66], Catch::Matchers::WithinAbs(0.67894968794659714618,x_tolerance));
REQUIRE_THAT(wgt[66], Catch::Matchers::WithinAbs(0.025485572219443228484,w_tolerance));
REQUIRE_THAT(pts[67], Catch::Matchers::WithinAbs(0.70402110120239114356,x_tolerance));
REQUIRE_THAT(wgt[67], Catch::Matchers::WithinAbs(0.024652218835904852936,w_tolerance));
REQUIRE_THAT(pts[68], Catch::Matchers::WithinAbs(0.72824422388739036363,x_tolerance));
REQUIRE_THAT(wgt[68], Catch::Matchers::WithinAbs(0.023789161452528723210,w_tolerance));
REQUIRE_THAT(pts[69], Catch::Matchers::WithinAbs(0.75158986902963846818,x_tolerance));
REQUIRE_THAT(wgt[69], Catch::Matchers::WithinAbs(0.022897439987163184635,w_tolerance));
REQUIRE_THAT(pts[70], Catch::Matchers::WithinAbs(0.77402990695033424681,x_tolerance));
REQUIRE_THAT(wgt[70], Catch::Matchers::WithinAbs(0.021978128895934133839,w_tolerance));
REQUIRE_THAT(pts[71], Catch::Matchers::WithinAbs(0.79553729915824813486,x_tolerance));
REQUIRE_THAT(wgt[71], Catch::Matchers::WithinAbs(0.021032335878722563117,w_tolerance));
REQUIRE_THAT(pts[72], Catch::Matchers::WithinAbs(0.81608613092948105644,x_tolerance));
REQUIRE_THAT(wgt[72], Catch::Matchers::WithinAbs(0.020061200544639595965,w_tolerance));
REQUIRE_THAT(pts[73], Catch::Matchers::WithinAbs(0.83565164253337704556,x_tolerance));
REQUIRE_THAT(wgt[73], Catch::Matchers::WithinAbs(0.019065893039137318425,w_tolerance));
REQUIRE_THAT(pts[74], Catch::Matchers::WithinAbs(0.85421025906707188229,x_tolerance));
REQUIRE_THAT(wgt[74], Catch::Matchers::WithinAbs(0.018047612634460236164,w_tolerance));
REQUIRE_THAT(pts[75], Catch::Matchers::WithinAbs(0.87173961886290343447,x_tolerance));
REQUIRE_THAT(wgt[75], Catch::Matchers::WithinAbs(0.017007586285222675709,w_tolerance));
REQUIRE_THAT(pts[76], Catch::Matchers::WithinAbs(0.88821860043474598130,x_tolerance));
REQUIRE_THAT(wgt[76], Catch::Matchers::WithinAbs(0.015947067151006639013,w_tolerance));
REQUIRE_THAT(pts[77], Catch::Matchers::WithinAbs(0.90362734793130269387,x_tolerance));
REQUIRE_THAT(wgt[77], Catch::Matchers::WithinAbs(0.014867333088043324050,w_tolerance));
REQUIRE_THAT(pts[78], Catch::Matchers::WithinAbs(0.91794729506658638337,x_tolerance));
REQUIRE_THAT(wgt[78], Catch::Matchers::WithinAbs(0.013769685112337093431,w_tolerance));
REQUIRE_THAT(pts[79], Catch::Matchers::WithinAbs(0.93116118750043200701,x_tolerance));
REQUIRE_THAT(wgt[79], Catch::Matchers::WithinAbs(0.012655445837168128869,w_tolerance));
REQUIRE_THAT(pts[80], Catch::Matchers::WithinAbs(0.94325310364535776815,x_tolerance));
REQUIRE_THAT(wgt[80], Catch::Matchers::WithinAbs(0.011525957889148058851,w_tolerance));
REQUIRE_THAT(pts[81], Catch::Matchers::WithinAbs(0.95420847388150033616,x_tolerance));
REQUIRE_THAT(wgt[81], Catch::Matchers::WithinAbs(0.010382582309893214614,w_tolerance));
REQUIRE_THAT(pts[82], Catch::Matchers::WithinAbs(0.96401409817150548339,x_tolerance));
REQUIRE_THAT(wgt[82], Catch::Matchers::WithinAbs(0.0092266969577419909403,w_tolerance));
REQUIRE_THAT(pts[83], Catch::Matchers::WithinAbs(0.97265816209019314000,x_tolerance));
REQUIRE_THAT(wgt[83], Catch::Matchers::WithinAbs(0.0080596949446200156587,w_tolerance));
REQUIRE_THAT(pts[84], Catch::Matchers::WithinAbs(0.98013025134514838546,x_tolerance));
REQUIRE_THAT(wgt[84], Catch::Matchers::WithinAbs(0.0068829832084632843147,w_tolerance));
REQUIRE_THAT(pts[85], Catch::Matchers::WithinAbs(0.98642136505783284873,x_tolerance));
REQUIRE_THAT(wgt[85], Catch::Matchers::WithinAbs(0.0056979815607473526009,w_tolerance));
REQUIRE_THAT(pts[86], Catch::Matchers::WithinAbs(0.99152392881106278613,x_tolerance));
REQUIRE_THAT(wgt[86], Catch::Matchers::WithinAbs(0.0045061236136749778641,w_tolerance));
REQUIRE_THAT(pts[87], Catch::Matchers::WithinAbs(0.99543181205834466393,x_tolerance));
REQUIRE_THAT(wgt[87], Catch::Matchers::WithinAbs(0.0033088672433360181954,w_tolerance));
REQUIRE_THAT(pts[88], Catch::Matchers::WithinAbs(0.99814037993856815356,x_tolerance));
REQUIRE_THAT(wgt[88], Catch::Matchers::WithinAbs(0.0021077787745263298915,w_tolerance));
REQUIRE_THAT(pts[89], Catch::Matchers::WithinAbs(0.99964697128663843746,x_tolerance));
REQUIRE_THAT(wgt[89], Catch::Matchers::WithinAbs(0.00090593237121483309376,w_tolerance));
}

TEST_CASE("91 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(91);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99965464507657613038,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.00088624124066941417661,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99818079259053475467,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0020619871220322296607,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.99553104250535245369,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0032370455079721049771,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.99170792881727710157,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.0044084397473026768191,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.98671588572346978691,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.0055746680474797889978,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.98056078024121343904,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.0067343344322688846653,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.97324986183069073432,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.0078860663146289015996,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.96479174574727607578,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.0090285041892344877489,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.95519640073227636387,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.010160300654415476729,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.94447513654571866806,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.011280121273769682983,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.93264059035626440661,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.012386645903556743055,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.91970671172345048814,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.013478570153830979194,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.90568874609657186500,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.014554606885208696085,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.89060321681439740379,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.015613487707050059751,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.87446790561223038589,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.016653964463061240172,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.85730183165264257908,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.017674810697521905060,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.83912522910138703180,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.018674823098168125422,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.81995952327328033398,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.019652822912969146605,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.79982730537529224065,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.020607657338598460740,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.77875230587612234469,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.021538200878685666296,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.75675936653336928859,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.022443356670097373373,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.73387441111109478225,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.023322057775598802836,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.71012441482219387174,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.024173268441322879422,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.68553737253152465515,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.024995985317534957433,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.66014226575723479019,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.025789238641236016189,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.63396902850915328150,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.026552093379198908103,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.60704851200449605278,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.027283650330082980279,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.57941244830246313233,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.027983047184323166381,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.55109341290058355984,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.028649459540541024396,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.52212478633689058847,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.029282101877277479718,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(-0.49254071484318341756,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.029880228478900374933,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(-0.46237607009575145164,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.030443134314594394903,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(-0.43166640811100180319,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.030970155869396544216,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(-0.40044792733443930503,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.031460671926297088545,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(-0.36875742597239956286,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.031914104298483697289,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(-0.33663225861682849101,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.032329918510865394484,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(-0.30411029221423531846,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.032707624430072782948,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(-0.27122986143071926939,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.033046776842191791200,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(-0.23802972346568211899,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.033346975977549838637,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(-0.20454901236748877366,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.033607867981935753110,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(-0.17082719290492516722,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.033829145333697935794,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(-0.13690401404882641602,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.034010547206229078665,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(-0.10281946211870772192,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.034151859775410126186,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(-0.068613713649625415750,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.034252916471651060067,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(-0.034327088034825330847,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.034313598176231398572,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.034333833361708963163,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.034327088034825330847,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.034313598176231398572,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.068613713649625415750,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.034252916471651060067,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.10281946211870772192,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.034151859775410126186,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.13690401404882641602,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.034010547206229078665,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.17082719290492516722,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.033829145333697935794,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.20454901236748877366,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.033607867981935753110,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.23802972346568211899,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.033346975977549838637,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.27122986143071926939,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.033046776842191791200,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.30411029221423531846,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.032707624430072782948,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.33663225861682849101,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.032329918510865394484,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.36875742597239956286,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.031914104298483697289,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.40044792733443930503,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.031460671926297088545,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.43166640811100180319,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.030970155869396544216,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.46237607009575145164,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.030443134314594394903,w_tolerance));
REQUIRE_THAT(pts[60], Catch::Matchers::WithinAbs(0.49254071484318341756,x_tolerance));
REQUIRE_THAT(wgt[60], Catch::Matchers::WithinAbs(0.029880228478900374933,w_tolerance));
REQUIRE_THAT(pts[61], Catch::Matchers::WithinAbs(0.52212478633689058847,x_tolerance));
REQUIRE_THAT(wgt[61], Catch::Matchers::WithinAbs(0.029282101877277479718,w_tolerance));
REQUIRE_THAT(pts[62], Catch::Matchers::WithinAbs(0.55109341290058355984,x_tolerance));
REQUIRE_THAT(wgt[62], Catch::Matchers::WithinAbs(0.028649459540541024396,w_tolerance));
REQUIRE_THAT(pts[63], Catch::Matchers::WithinAbs(0.57941244830246313233,x_tolerance));
REQUIRE_THAT(wgt[63], Catch::Matchers::WithinAbs(0.027983047184323166381,w_tolerance));
REQUIRE_THAT(pts[64], Catch::Matchers::WithinAbs(0.60704851200449605278,x_tolerance));
REQUIRE_THAT(wgt[64], Catch::Matchers::WithinAbs(0.027283650330082980279,w_tolerance));
REQUIRE_THAT(pts[65], Catch::Matchers::WithinAbs(0.63396902850915328150,x_tolerance));
REQUIRE_THAT(wgt[65], Catch::Matchers::WithinAbs(0.026552093379198908103,w_tolerance));
REQUIRE_THAT(pts[66], Catch::Matchers::WithinAbs(0.66014226575723479019,x_tolerance));
REQUIRE_THAT(wgt[66], Catch::Matchers::WithinAbs(0.025789238641236016189,w_tolerance));
REQUIRE_THAT(pts[67], Catch::Matchers::WithinAbs(0.68553737253152465515,x_tolerance));
REQUIRE_THAT(wgt[67], Catch::Matchers::WithinAbs(0.024995985317534957433,w_tolerance));
REQUIRE_THAT(pts[68], Catch::Matchers::WithinAbs(0.71012441482219387174,x_tolerance));
REQUIRE_THAT(wgt[68], Catch::Matchers::WithinAbs(0.024173268441322879422,w_tolerance));
REQUIRE_THAT(pts[69], Catch::Matchers::WithinAbs(0.73387441111109478225,x_tolerance));
REQUIRE_THAT(wgt[69], Catch::Matchers::WithinAbs(0.023322057775598802836,w_tolerance));
REQUIRE_THAT(pts[70], Catch::Matchers::WithinAbs(0.75675936653336928859,x_tolerance));
REQUIRE_THAT(wgt[70], Catch::Matchers::WithinAbs(0.022443356670097373373,w_tolerance));
REQUIRE_THAT(pts[71], Catch::Matchers::WithinAbs(0.77875230587612234469,x_tolerance));
REQUIRE_THAT(wgt[71], Catch::Matchers::WithinAbs(0.021538200878685666296,w_tolerance));
REQUIRE_THAT(pts[72], Catch::Matchers::WithinAbs(0.79982730537529224065,x_tolerance));
REQUIRE_THAT(wgt[72], Catch::Matchers::WithinAbs(0.020607657338598460740,w_tolerance));
REQUIRE_THAT(pts[73], Catch::Matchers::WithinAbs(0.81995952327328033398,x_tolerance));
REQUIRE_THAT(wgt[73], Catch::Matchers::WithinAbs(0.019652822912969146605,w_tolerance));
REQUIRE_THAT(pts[74], Catch::Matchers::WithinAbs(0.83912522910138703180,x_tolerance));
REQUIRE_THAT(wgt[74], Catch::Matchers::WithinAbs(0.018674823098168125422,w_tolerance));
REQUIRE_THAT(pts[75], Catch::Matchers::WithinAbs(0.85730183165264257908,x_tolerance));
REQUIRE_THAT(wgt[75], Catch::Matchers::WithinAbs(0.017674810697521905060,w_tolerance));
REQUIRE_THAT(pts[76], Catch::Matchers::WithinAbs(0.87446790561223038589,x_tolerance));
REQUIRE_THAT(wgt[76], Catch::Matchers::WithinAbs(0.016653964463061240172,w_tolerance));
REQUIRE_THAT(pts[77], Catch::Matchers::WithinAbs(0.89060321681439740379,x_tolerance));
REQUIRE_THAT(wgt[77], Catch::Matchers::WithinAbs(0.015613487707050059751,w_tolerance));
REQUIRE_THAT(pts[78], Catch::Matchers::WithinAbs(0.90568874609657186500,x_tolerance));
REQUIRE_THAT(wgt[78], Catch::Matchers::WithinAbs(0.014554606885208696085,w_tolerance));
REQUIRE_THAT(pts[79], Catch::Matchers::WithinAbs(0.91970671172345048814,x_tolerance));
REQUIRE_THAT(wgt[79], Catch::Matchers::WithinAbs(0.013478570153830979194,w_tolerance));
REQUIRE_THAT(pts[80], Catch::Matchers::WithinAbs(0.93264059035626440661,x_tolerance));
REQUIRE_THAT(wgt[80], Catch::Matchers::WithinAbs(0.012386645903556743055,w_tolerance));
REQUIRE_THAT(pts[81], Catch::Matchers::WithinAbs(0.94447513654571866806,x_tolerance));
REQUIRE_THAT(wgt[81], Catch::Matchers::WithinAbs(0.011280121273769682983,w_tolerance));
REQUIRE_THAT(pts[82], Catch::Matchers::WithinAbs(0.95519640073227636387,x_tolerance));
REQUIRE_THAT(wgt[82], Catch::Matchers::WithinAbs(0.010160300654415476729,w_tolerance));
REQUIRE_THAT(pts[83], Catch::Matchers::WithinAbs(0.96479174574727607578,x_tolerance));
REQUIRE_THAT(wgt[83], Catch::Matchers::WithinAbs(0.0090285041892344877489,w_tolerance));
REQUIRE_THAT(pts[84], Catch::Matchers::WithinAbs(0.97324986183069073432,x_tolerance));
REQUIRE_THAT(wgt[84], Catch::Matchers::WithinAbs(0.0078860663146289015996,w_tolerance));
REQUIRE_THAT(pts[85], Catch::Matchers::WithinAbs(0.98056078024121343904,x_tolerance));
REQUIRE_THAT(wgt[85], Catch::Matchers::WithinAbs(0.0067343344322688846653,w_tolerance));
REQUIRE_THAT(pts[86], Catch::Matchers::WithinAbs(0.98671588572346978691,x_tolerance));
REQUIRE_THAT(wgt[86], Catch::Matchers::WithinAbs(0.0055746680474797889978,w_tolerance));
REQUIRE_THAT(pts[87], Catch::Matchers::WithinAbs(0.99170792881727710157,x_tolerance));
REQUIRE_THAT(wgt[87], Catch::Matchers::WithinAbs(0.0044084397473026768191,w_tolerance));
REQUIRE_THAT(pts[88], Catch::Matchers::WithinAbs(0.99553104250535245369,x_tolerance));
REQUIRE_THAT(wgt[88], Catch::Matchers::WithinAbs(0.0032370455079721049771,w_tolerance));
REQUIRE_THAT(pts[89], Catch::Matchers::WithinAbs(0.99818079259053475467,x_tolerance));
REQUIRE_THAT(wgt[89], Catch::Matchers::WithinAbs(0.0020619871220322296607,w_tolerance));
REQUIRE_THAT(pts[90], Catch::Matchers::WithinAbs(0.99965464507657613038,x_tolerance));
REQUIRE_THAT(wgt[90], Catch::Matchers::WithinAbs(0.00088624124066941417661,w_tolerance));
}

TEST_CASE("92 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(92);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99966207135652455445,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.00086718517876714213536,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99821990219545015378,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0020176713662628385919,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.99562707526921516912,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0031675359433960978743,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.99188600443725347862,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.0043138953318617004723,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.98700093392401204090,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.0054553089080008709872,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.98097748121015402737,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.0065904393342148952232,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.97382258802694193473,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.0077179718373735685045,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.96554450442159590136,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.0088366040564678773746,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.95615277713400694660,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.0099450450197260820418,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.94565823788436295654,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.011042015922635394224,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.93407299060709549823,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.012126251362637710529,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.92141039737107605464,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.013196500705711138029,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.90768506291092504361,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.014251529488953925266,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.89291281775277620423,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.015290120825796501507,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.87711069993956966962,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.016311076800255958005,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.86029693537044688298,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.017313219843689776361,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.84249091677378094041,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.018295394090267557291,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.82371318133648876436,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.019256466708559474712,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.80398538701456643767,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.020195329207187483750,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.78333028755168997920,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.021110898712762461810,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.76177170623441627571,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.022002119218485857399,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.73933450841408803777,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.022867962801892542404,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.71604457282703320240,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.023707430810281912394,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.69192876174607303910,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.024519555012440974257,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.66701488999772407761,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.025303398715313225698,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.64133169288080149284,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.026058057844314179222,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.61490879302340772015,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.026782661986040323300,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.58777666621652037269,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.027476375392164173395,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.55996660626357776623,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.028138397943354404514,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.53151068888659787843,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.028767966072107175822,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(-0.50244173473045651389,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.029364353643422812613,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(-0.47279327150799183510,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.029926872792311073308,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(-0.44259949532959423168,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.030454874717158320981,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(-0.41189523126188170860,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.030947750428041031668,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(-0.38071589316095056990,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.031404931449122177916,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(-0.34909744282652818379,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.031825890474320085826,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(-0.31707634852413810715,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.032210141975493329536,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(-0.28468954292311694309,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.032557242762440045243,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(-0.25197438049899618044,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.032866792494065660326,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(-0.21896859444938015245,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.033138434140129381823,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(-0.18571025317301245070,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.033371854393036810308,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(-0.15223771636222699644,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.033566784029203676310,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(-0.11858959075942592947,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.033722998219573871694,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(-0.084804685628614012678,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.033840316788933601891,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(-0.050921967993347923430,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.033918604423722549495,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(-0.016980517692728234384,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.033957770828102347967,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0.016980517692728234384,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.033957770828102347967,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.050921967993347923430,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.033918604423722549495,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.084804685628614012678,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.033840316788933601891,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.11858959075942592947,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.033722998219573871694,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.15223771636222699644,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.033566784029203676310,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.18571025317301245070,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.033371854393036810308,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.21896859444938015245,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.033138434140129381823,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.25197438049899618044,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.032866792494065660326,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.28468954292311694309,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.032557242762440045243,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.31707634852413810715,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.032210141975493329536,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.34909744282652818379,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.031825890474320085826,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.38071589316095056990,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.031404931449122177916,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.41189523126188170860,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.030947750428041031668,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.44259949532959423168,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.030454874717158320981,w_tolerance));
REQUIRE_THAT(pts[60], Catch::Matchers::WithinAbs(0.47279327150799183510,x_tolerance));
REQUIRE_THAT(wgt[60], Catch::Matchers::WithinAbs(0.029926872792311073308,w_tolerance));
REQUIRE_THAT(pts[61], Catch::Matchers::WithinAbs(0.50244173473045651389,x_tolerance));
REQUIRE_THAT(wgt[61], Catch::Matchers::WithinAbs(0.029364353643422812613,w_tolerance));
REQUIRE_THAT(pts[62], Catch::Matchers::WithinAbs(0.53151068888659787843,x_tolerance));
REQUIRE_THAT(wgt[62], Catch::Matchers::WithinAbs(0.028767966072107175822,w_tolerance));
REQUIRE_THAT(pts[63], Catch::Matchers::WithinAbs(0.55996660626357776623,x_tolerance));
REQUIRE_THAT(wgt[63], Catch::Matchers::WithinAbs(0.028138397943354404514,w_tolerance));
REQUIRE_THAT(pts[64], Catch::Matchers::WithinAbs(0.58777666621652037269,x_tolerance));
REQUIRE_THAT(wgt[64], Catch::Matchers::WithinAbs(0.027476375392164173395,w_tolerance));
REQUIRE_THAT(pts[65], Catch::Matchers::WithinAbs(0.61490879302340772015,x_tolerance));
REQUIRE_THAT(wgt[65], Catch::Matchers::WithinAbs(0.026782661986040323300,w_tolerance));
REQUIRE_THAT(pts[66], Catch::Matchers::WithinAbs(0.64133169288080149284,x_tolerance));
REQUIRE_THAT(wgt[66], Catch::Matchers::WithinAbs(0.026058057844314179222,w_tolerance));
REQUIRE_THAT(pts[67], Catch::Matchers::WithinAbs(0.66701488999772407761,x_tolerance));
REQUIRE_THAT(wgt[67], Catch::Matchers::WithinAbs(0.025303398715313225698,w_tolerance));
REQUIRE_THAT(pts[68], Catch::Matchers::WithinAbs(0.69192876174607303910,x_tolerance));
REQUIRE_THAT(wgt[68], Catch::Matchers::WithinAbs(0.024519555012440974257,w_tolerance));
REQUIRE_THAT(pts[69], Catch::Matchers::WithinAbs(0.71604457282703320240,x_tolerance));
REQUIRE_THAT(wgt[69], Catch::Matchers::WithinAbs(0.023707430810281912394,w_tolerance));
REQUIRE_THAT(pts[70], Catch::Matchers::WithinAbs(0.73933450841408803777,x_tolerance));
REQUIRE_THAT(wgt[70], Catch::Matchers::WithinAbs(0.022867962801892542404,w_tolerance));
REQUIRE_THAT(pts[71], Catch::Matchers::WithinAbs(0.76177170623441627571,x_tolerance));
REQUIRE_THAT(wgt[71], Catch::Matchers::WithinAbs(0.022002119218485857399,w_tolerance));
REQUIRE_THAT(pts[72], Catch::Matchers::WithinAbs(0.78333028755168997920,x_tolerance));
REQUIRE_THAT(wgt[72], Catch::Matchers::WithinAbs(0.021110898712762461810,w_tolerance));
REQUIRE_THAT(pts[73], Catch::Matchers::WithinAbs(0.80398538701456643767,x_tolerance));
REQUIRE_THAT(wgt[73], Catch::Matchers::WithinAbs(0.020195329207187483750,w_tolerance));
REQUIRE_THAT(pts[74], Catch::Matchers::WithinAbs(0.82371318133648876436,x_tolerance));
REQUIRE_THAT(wgt[74], Catch::Matchers::WithinAbs(0.019256466708559474712,w_tolerance));
REQUIRE_THAT(pts[75], Catch::Matchers::WithinAbs(0.84249091677378094041,x_tolerance));
REQUIRE_THAT(wgt[75], Catch::Matchers::WithinAbs(0.018295394090267557291,w_tolerance));
REQUIRE_THAT(pts[76], Catch::Matchers::WithinAbs(0.86029693537044688298,x_tolerance));
REQUIRE_THAT(wgt[76], Catch::Matchers::WithinAbs(0.017313219843689776361,w_tolerance));
REQUIRE_THAT(pts[77], Catch::Matchers::WithinAbs(0.87711069993956966962,x_tolerance));
REQUIRE_THAT(wgt[77], Catch::Matchers::WithinAbs(0.016311076800255958005,w_tolerance));
REQUIRE_THAT(pts[78], Catch::Matchers::WithinAbs(0.89291281775277620423,x_tolerance));
REQUIRE_THAT(wgt[78], Catch::Matchers::WithinAbs(0.015290120825796501507,w_tolerance));
REQUIRE_THAT(pts[79], Catch::Matchers::WithinAbs(0.90768506291092504361,x_tolerance));
REQUIRE_THAT(wgt[79], Catch::Matchers::WithinAbs(0.014251529488953925266,w_tolerance));
REQUIRE_THAT(pts[80], Catch::Matchers::WithinAbs(0.92141039737107605464,x_tolerance));
REQUIRE_THAT(wgt[80], Catch::Matchers::WithinAbs(0.013196500705711138029,w_tolerance));
REQUIRE_THAT(pts[81], Catch::Matchers::WithinAbs(0.93407299060709549823,x_tolerance));
REQUIRE_THAT(wgt[81], Catch::Matchers::WithinAbs(0.012126251362637710529,w_tolerance));
REQUIRE_THAT(pts[82], Catch::Matchers::WithinAbs(0.94565823788436295654,x_tolerance));
REQUIRE_THAT(wgt[82], Catch::Matchers::WithinAbs(0.011042015922635394224,w_tolerance));
REQUIRE_THAT(pts[83], Catch::Matchers::WithinAbs(0.95615277713400694660,x_tolerance));
REQUIRE_THAT(wgt[83], Catch::Matchers::WithinAbs(0.0099450450197260820418,w_tolerance));
REQUIRE_THAT(pts[84], Catch::Matchers::WithinAbs(0.96554450442159590136,x_tolerance));
REQUIRE_THAT(wgt[84], Catch::Matchers::WithinAbs(0.0088366040564678773746,w_tolerance));
REQUIRE_THAT(pts[85], Catch::Matchers::WithinAbs(0.97382258802694193473,x_tolerance));
REQUIRE_THAT(wgt[85], Catch::Matchers::WithinAbs(0.0077179718373735685045,w_tolerance));
REQUIRE_THAT(pts[86], Catch::Matchers::WithinAbs(0.98097748121015402737,x_tolerance));
REQUIRE_THAT(wgt[86], Catch::Matchers::WithinAbs(0.0065904393342148952232,w_tolerance));
REQUIRE_THAT(pts[87], Catch::Matchers::WithinAbs(0.98700093392401204090,x_tolerance));
REQUIRE_THAT(wgt[87], Catch::Matchers::WithinAbs(0.0054553089080008709872,w_tolerance));
REQUIRE_THAT(pts[88], Catch::Matchers::WithinAbs(0.99188600443725347862,x_tolerance));
REQUIRE_THAT(wgt[88], Catch::Matchers::WithinAbs(0.0043138953318617004723,w_tolerance));
REQUIRE_THAT(pts[89], Catch::Matchers::WithinAbs(0.99562707526921516912,x_tolerance));
REQUIRE_THAT(wgt[89], Catch::Matchers::WithinAbs(0.0031675359433960978743,w_tolerance));
REQUIRE_THAT(pts[90], Catch::Matchers::WithinAbs(0.99821990219545015378,x_tolerance));
REQUIRE_THAT(wgt[90], Catch::Matchers::WithinAbs(0.0020176713662628385919,w_tolerance));
REQUIRE_THAT(pts[91], Catch::Matchers::WithinAbs(0.99966207135652455445,x_tolerance));
REQUIRE_THAT(wgt[91], Catch::Matchers::WithinAbs(0.00086718517876714213536,w_tolerance));
}

TEST_CASE("93 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(93);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99966926065716868833,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.00084873716806791100487,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99825776417141277575,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0019747687686868083889,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.99572004624895017938,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0031002404030993167755,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.99205840719206274116,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.0042223573824066079986,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.98727691126857226593,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.0053397370981692146138,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.98138093953350160677,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.0064510977943112758891,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.97437714213341045698,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.0075551795007698207516,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.96627342304005912562,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.0086507340354286483141,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.95707892906512335223,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.0097365239418876878269,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.94680403884847545445,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.010811323190542489382,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.93546035087518925137,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.011873918327447125099,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.92306067026585348439,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.012923109753185350456,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.90961899426567644570,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.013957713038007970724,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.89515049641499902749,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.014976560240671880954,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.87967150940500296214,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.015978501217782116788,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.86319950663160171512,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.016962404917329010901,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.84575308246526130295,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.017927160652813713179,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.82735193125745191635,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.018871679355508034614,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.80801682510658657865,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.019794894802927928668,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.78776959040807520120,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.020695764821868734489,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.76663308321469295940,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.021573272464499818015,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.74463116343491446018,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.022426427156109571889,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.72178866789823965091,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.023254265813157751690,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.69813138231785340915,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.024055853930344656153,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.67368601218222791557,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.024830286635452581892,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.64848015260849989338,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.025576689710757838922,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.62254225719163563272,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.026294220579853274752,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.59590160588453604434,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.026982069258762733049,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.56858827194533168333,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.027639459270270719713,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.54063308798917321727,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.028265648520433064357,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(-0.51206761118283542735,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.028859930136277706363,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(-0.48292408762142165745,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.029421633263748977486,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(-0.45323541592737974593,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.029950123824993924166,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(-0.42303511011291896021,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.030444805234135309496,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(-0.39235726174774938730,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.030905119070722935909,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(-0.36123650147484972774,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.031330545710102801926,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(-0.32970795991770564279,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.031720604909992308833,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(-0.29780722802314790902,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.032074856352599219582,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(-0.26557031688455688101,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.032392900141672292706,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(-0.23303361709078644364,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.032674377253922415755,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(-0.20023385764669609657,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.032918969944304591132,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(-0.16720806451166345667,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.033126402104703225973,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(-0.13399351880288074673,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.033296439575615789345,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(-0.10062771471061727803,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.033428890410482966294,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(-0.067148317172955104388,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.033523605092366899732,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(-0.033593119357776561271,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.033580476702732908204,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.033599441042144139694,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.033593119357776561271,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.033580476702732908204,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.067148317172955104388,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.033523605092366899732,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.10062771471061727803,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.033428890410482966294,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.13399351880288074673,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.033296439575615789345,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.16720806451166345667,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.033126402104703225973,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.20023385764669609657,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.032918969944304591132,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.23303361709078644364,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.032674377253922415755,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.26557031688455688101,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.032392900141672292706,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.29780722802314790902,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.032074856352599219582,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.32970795991770564279,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.031720604909992308833,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.36123650147484972774,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.031330545710102801926,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.39235726174774938730,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.030905119070722935909,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.42303511011291896021,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.030444805234135309496,w_tolerance));
REQUIRE_THAT(pts[60], Catch::Matchers::WithinAbs(0.45323541592737974593,x_tolerance));
REQUIRE_THAT(wgt[60], Catch::Matchers::WithinAbs(0.029950123824993924166,w_tolerance));
REQUIRE_THAT(pts[61], Catch::Matchers::WithinAbs(0.48292408762142165745,x_tolerance));
REQUIRE_THAT(wgt[61], Catch::Matchers::WithinAbs(0.029421633263748977486,w_tolerance));
REQUIRE_THAT(pts[62], Catch::Matchers::WithinAbs(0.51206761118283542735,x_tolerance));
REQUIRE_THAT(wgt[62], Catch::Matchers::WithinAbs(0.028859930136277706363,w_tolerance));
REQUIRE_THAT(pts[63], Catch::Matchers::WithinAbs(0.54063308798917321727,x_tolerance));
REQUIRE_THAT(wgt[63], Catch::Matchers::WithinAbs(0.028265648520433064357,w_tolerance));
REQUIRE_THAT(pts[64], Catch::Matchers::WithinAbs(0.56858827194533168333,x_tolerance));
REQUIRE_THAT(wgt[64], Catch::Matchers::WithinAbs(0.027639459270270719713,w_tolerance));
REQUIRE_THAT(pts[65], Catch::Matchers::WithinAbs(0.59590160588453604434,x_tolerance));
REQUIRE_THAT(wgt[65], Catch::Matchers::WithinAbs(0.026982069258762733049,w_tolerance));
REQUIRE_THAT(pts[66], Catch::Matchers::WithinAbs(0.62254225719163563272,x_tolerance));
REQUIRE_THAT(wgt[66], Catch::Matchers::WithinAbs(0.026294220579853274752,w_tolerance));
REQUIRE_THAT(pts[67], Catch::Matchers::WithinAbs(0.64848015260849989338,x_tolerance));
REQUIRE_THAT(wgt[67], Catch::Matchers::WithinAbs(0.025576689710757838922,w_tolerance));
REQUIRE_THAT(pts[68], Catch::Matchers::WithinAbs(0.67368601218222791557,x_tolerance));
REQUIRE_THAT(wgt[68], Catch::Matchers::WithinAbs(0.024830286635452581892,w_tolerance));
REQUIRE_THAT(pts[69], Catch::Matchers::WithinAbs(0.69813138231785340915,x_tolerance));
REQUIRE_THAT(wgt[69], Catch::Matchers::WithinAbs(0.024055853930344656153,w_tolerance));
REQUIRE_THAT(pts[70], Catch::Matchers::WithinAbs(0.72178866789823965091,x_tolerance));
REQUIRE_THAT(wgt[70], Catch::Matchers::WithinAbs(0.023254265813157751690,w_tolerance));
REQUIRE_THAT(pts[71], Catch::Matchers::WithinAbs(0.74463116343491446018,x_tolerance));
REQUIRE_THAT(wgt[71], Catch::Matchers::WithinAbs(0.022426427156109571889,w_tolerance));
REQUIRE_THAT(pts[72], Catch::Matchers::WithinAbs(0.76663308321469295940,x_tolerance));
REQUIRE_THAT(wgt[72], Catch::Matchers::WithinAbs(0.021573272464499818015,w_tolerance));
REQUIRE_THAT(pts[73], Catch::Matchers::WithinAbs(0.78776959040807520120,x_tolerance));
REQUIRE_THAT(wgt[73], Catch::Matchers::WithinAbs(0.020695764821868734489,w_tolerance));
REQUIRE_THAT(pts[74], Catch::Matchers::WithinAbs(0.80801682510658657865,x_tolerance));
REQUIRE_THAT(wgt[74], Catch::Matchers::WithinAbs(0.019794894802927928668,w_tolerance));
REQUIRE_THAT(pts[75], Catch::Matchers::WithinAbs(0.82735193125745191635,x_tolerance));
REQUIRE_THAT(wgt[75], Catch::Matchers::WithinAbs(0.018871679355508034614,w_tolerance));
REQUIRE_THAT(pts[76], Catch::Matchers::WithinAbs(0.84575308246526130295,x_tolerance));
REQUIRE_THAT(wgt[76], Catch::Matchers::WithinAbs(0.017927160652813713179,w_tolerance));
REQUIRE_THAT(pts[77], Catch::Matchers::WithinAbs(0.86319950663160171512,x_tolerance));
REQUIRE_THAT(wgt[77], Catch::Matchers::WithinAbs(0.016962404917329010901,w_tolerance));
REQUIRE_THAT(pts[78], Catch::Matchers::WithinAbs(0.87967150940500296214,x_tolerance));
REQUIRE_THAT(wgt[78], Catch::Matchers::WithinAbs(0.015978501217782116788,w_tolerance));
REQUIRE_THAT(pts[79], Catch::Matchers::WithinAbs(0.89515049641499902749,x_tolerance));
REQUIRE_THAT(wgt[79], Catch::Matchers::WithinAbs(0.014976560240671880954,w_tolerance));
REQUIRE_THAT(pts[80], Catch::Matchers::WithinAbs(0.90961899426567644570,x_tolerance));
REQUIRE_THAT(wgt[80], Catch::Matchers::WithinAbs(0.013957713038007970724,w_tolerance));
REQUIRE_THAT(pts[81], Catch::Matchers::WithinAbs(0.92306067026585348439,x_tolerance));
REQUIRE_THAT(wgt[81], Catch::Matchers::WithinAbs(0.012923109753185350456,w_tolerance));
REQUIRE_THAT(pts[82], Catch::Matchers::WithinAbs(0.93546035087518925137,x_tolerance));
REQUIRE_THAT(wgt[82], Catch::Matchers::WithinAbs(0.011873918327447125099,w_tolerance));
REQUIRE_THAT(pts[83], Catch::Matchers::WithinAbs(0.94680403884847545445,x_tolerance));
REQUIRE_THAT(wgt[83], Catch::Matchers::WithinAbs(0.010811323190542489382,w_tolerance));
REQUIRE_THAT(pts[84], Catch::Matchers::WithinAbs(0.95707892906512335223,x_tolerance));
REQUIRE_THAT(wgt[84], Catch::Matchers::WithinAbs(0.0097365239418876878269,w_tolerance));
REQUIRE_THAT(pts[85], Catch::Matchers::WithinAbs(0.96627342304005912562,x_tolerance));
REQUIRE_THAT(wgt[85], Catch::Matchers::WithinAbs(0.0086507340354286483141,w_tolerance));
REQUIRE_THAT(pts[86], Catch::Matchers::WithinAbs(0.97437714213341045698,x_tolerance));
REQUIRE_THAT(wgt[86], Catch::Matchers::WithinAbs(0.0075551795007698207516,w_tolerance));
REQUIRE_THAT(pts[87], Catch::Matchers::WithinAbs(0.98138093953350160677,x_tolerance));
REQUIRE_THAT(wgt[87], Catch::Matchers::WithinAbs(0.0064510977943112758891,w_tolerance));
REQUIRE_THAT(pts[88], Catch::Matchers::WithinAbs(0.98727691126857226593,x_tolerance));
REQUIRE_THAT(wgt[88], Catch::Matchers::WithinAbs(0.0053397370981692146138,w_tolerance));
REQUIRE_THAT(pts[89], Catch::Matchers::WithinAbs(0.99205840719206274116,x_tolerance));
REQUIRE_THAT(wgt[89], Catch::Matchers::WithinAbs(0.0042223573824066079986,w_tolerance));
REQUIRE_THAT(pts[90], Catch::Matchers::WithinAbs(0.99572004624895017938,x_tolerance));
REQUIRE_THAT(wgt[90], Catch::Matchers::WithinAbs(0.0031002404030993167755,w_tolerance));
REQUIRE_THAT(pts[91], Catch::Matchers::WithinAbs(0.99825776417141277575,x_tolerance));
REQUIRE_THAT(wgt[91], Catch::Matchers::WithinAbs(0.0019747687686868083889,w_tolerance));
REQUIRE_THAT(pts[92], Catch::Matchers::WithinAbs(0.99966926065716868833,x_tolerance));
REQUIRE_THAT(wgt[92], Catch::Matchers::WithinAbs(0.00084873716806791100487,w_tolerance));
}

TEST_CASE("94 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(94);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99967622295504979448,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.00083087161268216249463,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99829443102168760624,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0019332198887254189431,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.99581008420171887942,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0030350658910386280274,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.99222537540087665845,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.0041336998754077764833,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.98754419832047978868,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.0052277942895077675453,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.98177170988337822972,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.0063161200910364482231,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.97491428379046504260,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.0073974692881423562009,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.96697949588134338894,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.0084706450945346359999,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.95797611374295502399,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.0095344608328651582501,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.94791408634876172290,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.010587740564954122237,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.93680453280282537821,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.011629320161122414596,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.92465972993795147469,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.012658048497638994445,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.91149309869405748596,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.013672788690606878506,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.89731918925876799258,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.014672419334499464204,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.88215366497287226077,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.015655835732515557860,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.86601328501219867328,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.016621951112665496638,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.84891588586203340015,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.017569697826143251999,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.83088036160301737798,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.018498028525665910954,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.81192664302948288315,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.019405917321982004886,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.79207567562284516570,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.020292360917011132180,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.77134939640412369939,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.021156379712221389815,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.74977070969101351722,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.021997018890940077173,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.72736346178619905939,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.022813349473355236410,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.70415241462482024145,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.023604469343014382281,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.68016321841017262103,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.024369504243668988306,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.65542238326785525544,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.025107608745352405129,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.62995724994967319013,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.025817967178616728164,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.60379595961965722273,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.026499794535891699197,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.57696742275558162059,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.027152337338966564724,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.54950128720034039976,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.027774874471634220621,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(-0.52142790539848394098,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.028366717976576106813,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(-0.49277830085411935404,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.028927213815606255842,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(-0.46358413384723927899,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.029455742592433676397,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(-0.43387766644636389340,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.029951720237143869200,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(-0.40369172685615894505,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.030414598651642712203,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(-0.37305967313942783981,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.030843866315349187411,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(-0.34201535635356740583,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.031239048850467417882,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(-0.31059308314222418645,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.031599709546213200465,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(-0.27882757782349028604,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.031925449841415613926,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(-0.24675394401653425156,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.032215909764960307113,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(-0.21440762584907261054,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.032470768333587679484,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(-0.18182436878855094598,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.032689743906606307153,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(-0.14904018014031926153,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.032872594497129590726,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(-0.11609128925645442150,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.033019118039491655077,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(-0.083014107499202232825,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.033129152612546963216,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(-0.049845188003282920430,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.033202576618606863799,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(-0.016621185281526033776,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.033239308917815320801,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0.016621185281526033776,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.033239308917815320801,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.049845188003282920430,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.033202576618606863799,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.083014107499202232825,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.033129152612546963216,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.11609128925645442150,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.033019118039491655077,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.14904018014031926153,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.032872594497129590726,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.18182436878855094598,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.032689743906606307153,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.21440762584907261054,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.032470768333587679484,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.24675394401653425156,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.032215909764960307113,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.27882757782349028604,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.031925449841415613926,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.31059308314222418645,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.031599709546213200465,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.34201535635356740583,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.031239048850467417882,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.37305967313942783981,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.030843866315349187411,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.40369172685615894505,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.030414598651642712203,w_tolerance));
REQUIRE_THAT(pts[60], Catch::Matchers::WithinAbs(0.43387766644636389340,x_tolerance));
REQUIRE_THAT(wgt[60], Catch::Matchers::WithinAbs(0.029951720237143869200,w_tolerance));
REQUIRE_THAT(pts[61], Catch::Matchers::WithinAbs(0.46358413384723927899,x_tolerance));
REQUIRE_THAT(wgt[61], Catch::Matchers::WithinAbs(0.029455742592433676397,w_tolerance));
REQUIRE_THAT(pts[62], Catch::Matchers::WithinAbs(0.49277830085411935404,x_tolerance));
REQUIRE_THAT(wgt[62], Catch::Matchers::WithinAbs(0.028927213815606255842,w_tolerance));
REQUIRE_THAT(pts[63], Catch::Matchers::WithinAbs(0.52142790539848394098,x_tolerance));
REQUIRE_THAT(wgt[63], Catch::Matchers::WithinAbs(0.028366717976576106813,w_tolerance));
REQUIRE_THAT(pts[64], Catch::Matchers::WithinAbs(0.54950128720034039976,x_tolerance));
REQUIRE_THAT(wgt[64], Catch::Matchers::WithinAbs(0.027774874471634220621,w_tolerance));
REQUIRE_THAT(pts[65], Catch::Matchers::WithinAbs(0.57696742275558162059,x_tolerance));
REQUIRE_THAT(wgt[65], Catch::Matchers::WithinAbs(0.027152337338966564724,w_tolerance));
REQUIRE_THAT(pts[66], Catch::Matchers::WithinAbs(0.60379595961965722273,x_tolerance));
REQUIRE_THAT(wgt[66], Catch::Matchers::WithinAbs(0.026499794535891699197,w_tolerance));
REQUIRE_THAT(pts[67], Catch::Matchers::WithinAbs(0.62995724994967319013,x_tolerance));
REQUIRE_THAT(wgt[67], Catch::Matchers::WithinAbs(0.025817967178616728164,w_tolerance));
REQUIRE_THAT(pts[68], Catch::Matchers::WithinAbs(0.65542238326785525544,x_tolerance));
REQUIRE_THAT(wgt[68], Catch::Matchers::WithinAbs(0.025107608745352405129,w_tolerance));
REQUIRE_THAT(pts[69], Catch::Matchers::WithinAbs(0.68016321841017262103,x_tolerance));
REQUIRE_THAT(wgt[69], Catch::Matchers::WithinAbs(0.024369504243668988306,w_tolerance));
REQUIRE_THAT(pts[70], Catch::Matchers::WithinAbs(0.70415241462482024145,x_tolerance));
REQUIRE_THAT(wgt[70], Catch::Matchers::WithinAbs(0.023604469343014382281,w_tolerance));
REQUIRE_THAT(pts[71], Catch::Matchers::WithinAbs(0.72736346178619905939,x_tolerance));
REQUIRE_THAT(wgt[71], Catch::Matchers::WithinAbs(0.022813349473355236410,w_tolerance));
REQUIRE_THAT(pts[72], Catch::Matchers::WithinAbs(0.74977070969101351722,x_tolerance));
REQUIRE_THAT(wgt[72], Catch::Matchers::WithinAbs(0.021997018890940077173,w_tolerance));
REQUIRE_THAT(pts[73], Catch::Matchers::WithinAbs(0.77134939640412369939,x_tolerance));
REQUIRE_THAT(wgt[73], Catch::Matchers::WithinAbs(0.021156379712221389815,w_tolerance));
REQUIRE_THAT(pts[74], Catch::Matchers::WithinAbs(0.79207567562284516570,x_tolerance));
REQUIRE_THAT(wgt[74], Catch::Matchers::WithinAbs(0.020292360917011132180,w_tolerance));
REQUIRE_THAT(pts[75], Catch::Matchers::WithinAbs(0.81192664302948288315,x_tolerance));
REQUIRE_THAT(wgt[75], Catch::Matchers::WithinAbs(0.019405917321982004886,w_tolerance));
REQUIRE_THAT(pts[76], Catch::Matchers::WithinAbs(0.83088036160301737798,x_tolerance));
REQUIRE_THAT(wgt[76], Catch::Matchers::WithinAbs(0.018498028525665910954,w_tolerance));
REQUIRE_THAT(pts[77], Catch::Matchers::WithinAbs(0.84891588586203340015,x_tolerance));
REQUIRE_THAT(wgt[77], Catch::Matchers::WithinAbs(0.017569697826143251999,w_tolerance));
REQUIRE_THAT(pts[78], Catch::Matchers::WithinAbs(0.86601328501219867328,x_tolerance));
REQUIRE_THAT(wgt[78], Catch::Matchers::WithinAbs(0.016621951112665496638,w_tolerance));
REQUIRE_THAT(pts[79], Catch::Matchers::WithinAbs(0.88215366497287226077,x_tolerance));
REQUIRE_THAT(wgt[79], Catch::Matchers::WithinAbs(0.015655835732515557860,w_tolerance));
REQUIRE_THAT(pts[80], Catch::Matchers::WithinAbs(0.89731918925876799258,x_tolerance));
REQUIRE_THAT(wgt[80], Catch::Matchers::WithinAbs(0.014672419334499464204,w_tolerance));
REQUIRE_THAT(pts[81], Catch::Matchers::WithinAbs(0.91149309869405748596,x_tolerance));
REQUIRE_THAT(wgt[81], Catch::Matchers::WithinAbs(0.013672788690606878506,w_tolerance));
REQUIRE_THAT(pts[82], Catch::Matchers::WithinAbs(0.92465972993795147469,x_tolerance));
REQUIRE_THAT(wgt[82], Catch::Matchers::WithinAbs(0.012658048497638994445,w_tolerance));
REQUIRE_THAT(pts[83], Catch::Matchers::WithinAbs(0.93680453280282537821,x_tolerance));
REQUIRE_THAT(wgt[83], Catch::Matchers::WithinAbs(0.011629320161122414596,w_tolerance));
REQUIRE_THAT(pts[84], Catch::Matchers::WithinAbs(0.94791408634876172290,x_tolerance));
REQUIRE_THAT(wgt[84], Catch::Matchers::WithinAbs(0.010587740564954122237,w_tolerance));
REQUIRE_THAT(pts[85], Catch::Matchers::WithinAbs(0.95797611374295502399,x_tolerance));
REQUIRE_THAT(wgt[85], Catch::Matchers::WithinAbs(0.0095344608328651582501,w_tolerance));
REQUIRE_THAT(pts[86], Catch::Matchers::WithinAbs(0.96697949588134338894,x_tolerance));
REQUIRE_THAT(wgt[86], Catch::Matchers::WithinAbs(0.0084706450945346359999,w_tolerance));
REQUIRE_THAT(pts[87], Catch::Matchers::WithinAbs(0.97491428379046504260,x_tolerance));
REQUIRE_THAT(wgt[87], Catch::Matchers::WithinAbs(0.0073974692881423562009,w_tolerance));
REQUIRE_THAT(pts[88], Catch::Matchers::WithinAbs(0.98177170988337822972,x_tolerance));
REQUIRE_THAT(wgt[88], Catch::Matchers::WithinAbs(0.0063161200910364482231,w_tolerance));
REQUIRE_THAT(pts[89], Catch::Matchers::WithinAbs(0.98754419832047978868,x_tolerance));
REQUIRE_THAT(wgt[89], Catch::Matchers::WithinAbs(0.0052277942895077675453,w_tolerance));
REQUIRE_THAT(pts[90], Catch::Matchers::WithinAbs(0.99222537540087665845,x_tolerance));
REQUIRE_THAT(wgt[90], Catch::Matchers::WithinAbs(0.0041336998754077764833,w_tolerance));
REQUIRE_THAT(pts[91], Catch::Matchers::WithinAbs(0.99581008420171887942,x_tolerance));
REQUIRE_THAT(wgt[91], Catch::Matchers::WithinAbs(0.0030350658910386280274,w_tolerance));
REQUIRE_THAT(pts[92], Catch::Matchers::WithinAbs(0.99829443102168760624,x_tolerance));
REQUIRE_THAT(wgt[92], Catch::Matchers::WithinAbs(0.0019332198887254189431,w_tolerance));
REQUIRE_THAT(pts[93], Catch::Matchers::WithinAbs(0.99967622295504979448,x_tolerance));
REQUIRE_THAT(wgt[93], Catch::Matchers::WithinAbs(0.00083087161268216249463,w_tolerance));
}

TEST_CASE("95 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(95);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99968296770719201948,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.00081356424945411650101,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99832995251674633162,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0018929683779229357628,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.99589731118842340206,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0029719242408181907184,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.99238713500350140449,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.0040478033163717599069,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.98780315590608128777,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.0051193303299277182800,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.98215031822162564610,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.0061853262610333237693,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.97543473341144091169,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.0072446324439331996726,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.96766366602219652412,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.0082961008745309902381,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.95884552384790944943,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.0093385930838763970867,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.94898984817429548204,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.010370980703116096841,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.93810730319847803714,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.011392146459085844039,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.92620966437771977563,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.012400985296116061040,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.91330980563406734740,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.013396405534368285441,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.89942168539639320374,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.014377330033659082084,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.88456033148144055748,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.015342697350288356635,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.86874182482412990474,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.016291462880991043266,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.85198328207178428084,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.017222599990716984413,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.83430283705960132221,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.018135101122045144108,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.81571962118660965386,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.019027978884545706393,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.79625374271289318867,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.019900267122657211245,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.77592626500022395623,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.020751021960784901818,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.75475918371949239225,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.021579322824411401207,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.73277540304950211834,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.022384273436069391840,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.70999871089282310580,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.023165002785071391749,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.68645375313548220924,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.023920666069930610077,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.66216600697831802626,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.024650445612442619976,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.63716175336884002718,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.025353551742432012937,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.61146804856341069607,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.026029223652202271533,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.58511269485051408929,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.026676730219761354319,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.55812421046678440395,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.027295370799930222666,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(-0.53053179873834328926,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.027884475982476914243,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(-0.50236531648083404332,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.028443408316454862613,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(-0.47365524169234377757,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.028971562999961011535,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(-0.44443264057417034046,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.029468368534566882375,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(-0.41472913391511851597,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.029933287343714112252,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(-0.38457686287569901085,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.030365816354405066777,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(-0.35400845420925330582,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.030765487541558914753,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(-0.32305698495763688928,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.031131868434443998257,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(-0.29175594665966207348,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.031464562584638402013,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(-0.26013920911102890946,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.031763209995012280291,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(-0.22824098371495810364,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.032027487509267695293,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(-0.19609578646318277850,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.032257109161614414347,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(-0.16373840058735593495,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.032451826486203259267,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(-0.13120383892128713615,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.032611428785982154257,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(-0.098527306014734857520,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.032735743360683932269,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(-0.065744160039749798572,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.032824635693699186693,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(-0.032889874530788938677,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.032878009597631948236,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.032895807318380677932,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.032889874530788938677,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.032878009597631948236,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.065744160039749798572,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.032824635693699186693,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.098527306014734857520,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.032735743360683932269,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.13120383892128713615,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.032611428785982154257,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.16373840058735593495,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.032451826486203259267,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.19609578646318277850,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.032257109161614414347,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.22824098371495810364,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.032027487509267695293,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.26013920911102890946,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.031763209995012280291,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.29175594665966207348,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.031464562584638402013,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.32305698495763688928,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.031131868434443998257,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.35400845420925330582,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.030765487541558914753,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.38457686287569901085,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.030365816354405066777,w_tolerance));
REQUIRE_THAT(pts[60], Catch::Matchers::WithinAbs(0.41472913391511851597,x_tolerance));
REQUIRE_THAT(wgt[60], Catch::Matchers::WithinAbs(0.029933287343714112252,w_tolerance));
REQUIRE_THAT(pts[61], Catch::Matchers::WithinAbs(0.44443264057417034046,x_tolerance));
REQUIRE_THAT(wgt[61], Catch::Matchers::WithinAbs(0.029468368534566882375,w_tolerance));
REQUIRE_THAT(pts[62], Catch::Matchers::WithinAbs(0.47365524169234377757,x_tolerance));
REQUIRE_THAT(wgt[62], Catch::Matchers::WithinAbs(0.028971562999961011535,w_tolerance));
REQUIRE_THAT(pts[63], Catch::Matchers::WithinAbs(0.50236531648083404332,x_tolerance));
REQUIRE_THAT(wgt[63], Catch::Matchers::WithinAbs(0.028443408316454862613,w_tolerance));
REQUIRE_THAT(pts[64], Catch::Matchers::WithinAbs(0.53053179873834328926,x_tolerance));
REQUIRE_THAT(wgt[64], Catch::Matchers::WithinAbs(0.027884475982476914243,w_tolerance));
REQUIRE_THAT(pts[65], Catch::Matchers::WithinAbs(0.55812421046678440395,x_tolerance));
REQUIRE_THAT(wgt[65], Catch::Matchers::WithinAbs(0.027295370799930222666,w_tolerance));
REQUIRE_THAT(pts[66], Catch::Matchers::WithinAbs(0.58511269485051408929,x_tolerance));
REQUIRE_THAT(wgt[66], Catch::Matchers::WithinAbs(0.026676730219761354319,w_tolerance));
REQUIRE_THAT(pts[67], Catch::Matchers::WithinAbs(0.61146804856341069607,x_tolerance));
REQUIRE_THAT(wgt[67], Catch::Matchers::WithinAbs(0.026029223652202271533,w_tolerance));
REQUIRE_THAT(pts[68], Catch::Matchers::WithinAbs(0.63716175336884002718,x_tolerance));
REQUIRE_THAT(wgt[68], Catch::Matchers::WithinAbs(0.025353551742432012937,w_tolerance));
REQUIRE_THAT(pts[69], Catch::Matchers::WithinAbs(0.66216600697831802626,x_tolerance));
REQUIRE_THAT(wgt[69], Catch::Matchers::WithinAbs(0.024650445612442619976,w_tolerance));
REQUIRE_THAT(pts[70], Catch::Matchers::WithinAbs(0.68645375313548220924,x_tolerance));
REQUIRE_THAT(wgt[70], Catch::Matchers::WithinAbs(0.023920666069930610077,w_tolerance));
REQUIRE_THAT(pts[71], Catch::Matchers::WithinAbs(0.70999871089282310580,x_tolerance));
REQUIRE_THAT(wgt[71], Catch::Matchers::WithinAbs(0.023165002785071391749,w_tolerance));
REQUIRE_THAT(pts[72], Catch::Matchers::WithinAbs(0.73277540304950211834,x_tolerance));
REQUIRE_THAT(wgt[72], Catch::Matchers::WithinAbs(0.022384273436069391840,w_tolerance));
REQUIRE_THAT(pts[73], Catch::Matchers::WithinAbs(0.75475918371949239225,x_tolerance));
REQUIRE_THAT(wgt[73], Catch::Matchers::WithinAbs(0.021579322824411401207,w_tolerance));
REQUIRE_THAT(pts[74], Catch::Matchers::WithinAbs(0.77592626500022395623,x_tolerance));
REQUIRE_THAT(wgt[74], Catch::Matchers::WithinAbs(0.020751021960784901818,w_tolerance));
REQUIRE_THAT(pts[75], Catch::Matchers::WithinAbs(0.79625374271289318867,x_tolerance));
REQUIRE_THAT(wgt[75], Catch::Matchers::WithinAbs(0.019900267122657211245,w_tolerance));
REQUIRE_THAT(pts[76], Catch::Matchers::WithinAbs(0.81571962118660965386,x_tolerance));
REQUIRE_THAT(wgt[76], Catch::Matchers::WithinAbs(0.019027978884545706393,w_tolerance));
REQUIRE_THAT(pts[77], Catch::Matchers::WithinAbs(0.83430283705960132221,x_tolerance));
REQUIRE_THAT(wgt[77], Catch::Matchers::WithinAbs(0.018135101122045144108,w_tolerance));
REQUIRE_THAT(pts[78], Catch::Matchers::WithinAbs(0.85198328207178428084,x_tolerance));
REQUIRE_THAT(wgt[78], Catch::Matchers::WithinAbs(0.017222599990716984413,w_tolerance));
REQUIRE_THAT(pts[79], Catch::Matchers::WithinAbs(0.86874182482412990474,x_tolerance));
REQUIRE_THAT(wgt[79], Catch::Matchers::WithinAbs(0.016291462880991043266,w_tolerance));
REQUIRE_THAT(pts[80], Catch::Matchers::WithinAbs(0.88456033148144055748,x_tolerance));
REQUIRE_THAT(wgt[80], Catch::Matchers::WithinAbs(0.015342697350288356635,w_tolerance));
REQUIRE_THAT(pts[81], Catch::Matchers::WithinAbs(0.89942168539639320374,x_tolerance));
REQUIRE_THAT(wgt[81], Catch::Matchers::WithinAbs(0.014377330033659082084,w_tolerance));
REQUIRE_THAT(pts[82], Catch::Matchers::WithinAbs(0.91330980563406734740,x_tolerance));
REQUIRE_THAT(wgt[82], Catch::Matchers::WithinAbs(0.013396405534368285441,w_tolerance));
REQUIRE_THAT(pts[83], Catch::Matchers::WithinAbs(0.92620966437771977563,x_tolerance));
REQUIRE_THAT(wgt[83], Catch::Matchers::WithinAbs(0.012400985296116061040,w_tolerance));
REQUIRE_THAT(pts[84], Catch::Matchers::WithinAbs(0.93810730319847803714,x_tolerance));
REQUIRE_THAT(wgt[84], Catch::Matchers::WithinAbs(0.011392146459085844039,w_tolerance));
REQUIRE_THAT(pts[85], Catch::Matchers::WithinAbs(0.94898984817429548204,x_tolerance));
REQUIRE_THAT(wgt[85], Catch::Matchers::WithinAbs(0.010370980703116096841,w_tolerance));
REQUIRE_THAT(pts[86], Catch::Matchers::WithinAbs(0.95884552384790944943,x_tolerance));
REQUIRE_THAT(wgt[86], Catch::Matchers::WithinAbs(0.0093385930838763970867,w_tolerance));
REQUIRE_THAT(pts[87], Catch::Matchers::WithinAbs(0.96766366602219652412,x_tolerance));
REQUIRE_THAT(wgt[87], Catch::Matchers::WithinAbs(0.0082961008745309902381,w_tolerance));
REQUIRE_THAT(pts[88], Catch::Matchers::WithinAbs(0.97543473341144091169,x_tolerance));
REQUIRE_THAT(wgt[88], Catch::Matchers::WithinAbs(0.0072446324439331996726,w_tolerance));
REQUIRE_THAT(pts[89], Catch::Matchers::WithinAbs(0.98215031822162564610,x_tolerance));
REQUIRE_THAT(wgt[89], Catch::Matchers::WithinAbs(0.0061853262610333237693,w_tolerance));
REQUIRE_THAT(pts[90], Catch::Matchers::WithinAbs(0.98780315590608128777,x_tolerance));
REQUIRE_THAT(wgt[90], Catch::Matchers::WithinAbs(0.0051193303299277182800,w_tolerance));
REQUIRE_THAT(pts[91], Catch::Matchers::WithinAbs(0.99238713500350140449,x_tolerance));
REQUIRE_THAT(wgt[91], Catch::Matchers::WithinAbs(0.0040478033163717599069,w_tolerance));
REQUIRE_THAT(pts[92], Catch::Matchers::WithinAbs(0.99589731118842340206,x_tolerance));
REQUIRE_THAT(wgt[92], Catch::Matchers::WithinAbs(0.0029719242408181907184,w_tolerance));
REQUIRE_THAT(pts[93], Catch::Matchers::WithinAbs(0.99832995251674633162,x_tolerance));
REQUIRE_THAT(wgt[93], Catch::Matchers::WithinAbs(0.0018929683779229357628,w_tolerance));
REQUIRE_THAT(pts[94], Catch::Matchers::WithinAbs(0.99968296770719201948,x_tolerance));
REQUIRE_THAT(wgt[94], Catch::Matchers::WithinAbs(0.00081356424945411650101,w_tolerance));
}

TEST_CASE("96 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(96);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99968950388323076683,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.00079679206555201242945,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99836437586318167772,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0018539607889469217323,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.99598184298720929065,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0029107318179349464084,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.99254390032376262457,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.0039645543384446866737,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.98805412632962379948,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.0050142027429275176925,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.98251726356301467745,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.0060585455042359616833,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.97593917458513646645,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.0070964707911538652691,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.96832682846326421217,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.0081268769256987592174,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.95968829144874253930,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.0091486712307833866326,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.95003271778443763576,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.010160770535008415758,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.93937033975275521693,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.011162102099838498591,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.92771245672230869096,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.012151604671088319635,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.91507142312089807421,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.013128229566961572637,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.90146063531585234132,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.014090941772314860916,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.88689451740242041606,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.015038721026994938006,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.87138850590929650287,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.015970562902562291381,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.85495903343460145546,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.016885479864245172450,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.83762351122818712149,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.017782502316045260838,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.81940031073793167554,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.018660679627411467385,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.80030874413914081723,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.019519081140145022410,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.78036904386743321760,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.020356797154333324595,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.75960234117664749870,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.021172939892191298988,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.73803064374440013285,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.021966644438744349195,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.71567681234896762622,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.022737069658329374001,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.69256453664217156134,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.023483399085926219842,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.66871831004391615395,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.024204841792364691282,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.64416340378496710680,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.024900633222483610288,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.61892584012546857039,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.025570036005349361499,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.59303236477757208068,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.026212340735672413913,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.56651041856139716840,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.026826866725591762198,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(-0.53938810832435743623,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.027412962726029242823,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(-0.51169417715466767359,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.027970007616848334440,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(-0.48345797392059635977,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.028497411065085385646,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(-0.45470942216774300864,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.028994614150555236543,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(-0.42547898840730054536,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.029461089958167905970,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(-0.39579764982890860328,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.029896344136328385984,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(-0.36569686147231363503,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.030299915420827593794,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(-0.33520852289262542262,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.030671376123669149014,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(-0.30436494435449635302,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.031010332586313837423,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(-0.27319881259104914149,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.031316425596861355813,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(-0.24174315616384001233,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.031589330770727168558,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(-0.21003131046056720360,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.031828758894411006535,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(-0.17809688236761860276,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.032034456231992663218,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(-0.14597371465489694199,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.032206204794030250669,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(-0.11369585011066592091,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.032343822568575928429,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(-0.081297495464425558994,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.032447163714064269364,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(-0.048812985136049731112,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.032516118713868835987,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(-0.016276744849602969579,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.032550614492363166242,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0.016276744849602969579,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.032550614492363166242,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.048812985136049731112,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.032516118713868835987,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.081297495464425558994,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.032447163714064269364,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.11369585011066592091,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.032343822568575928429,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.14597371465489694199,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.032206204794030250669,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.17809688236761860276,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.032034456231992663218,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.21003131046056720360,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.031828758894411006535,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.24174315616384001233,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.031589330770727168558,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.27319881259104914149,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.031316425596861355813,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.30436494435449635302,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.031010332586313837423,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.33520852289262542262,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.030671376123669149014,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.36569686147231363503,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.030299915420827593794,w_tolerance));
REQUIRE_THAT(pts[60], Catch::Matchers::WithinAbs(0.39579764982890860328,x_tolerance));
REQUIRE_THAT(wgt[60], Catch::Matchers::WithinAbs(0.029896344136328385984,w_tolerance));
REQUIRE_THAT(pts[61], Catch::Matchers::WithinAbs(0.42547898840730054536,x_tolerance));
REQUIRE_THAT(wgt[61], Catch::Matchers::WithinAbs(0.029461089958167905970,w_tolerance));
REQUIRE_THAT(pts[62], Catch::Matchers::WithinAbs(0.45470942216774300864,x_tolerance));
REQUIRE_THAT(wgt[62], Catch::Matchers::WithinAbs(0.028994614150555236543,w_tolerance));
REQUIRE_THAT(pts[63], Catch::Matchers::WithinAbs(0.48345797392059635977,x_tolerance));
REQUIRE_THAT(wgt[63], Catch::Matchers::WithinAbs(0.028497411065085385646,w_tolerance));
REQUIRE_THAT(pts[64], Catch::Matchers::WithinAbs(0.51169417715466767359,x_tolerance));
REQUIRE_THAT(wgt[64], Catch::Matchers::WithinAbs(0.027970007616848334440,w_tolerance));
REQUIRE_THAT(pts[65], Catch::Matchers::WithinAbs(0.53938810832435743623,x_tolerance));
REQUIRE_THAT(wgt[65], Catch::Matchers::WithinAbs(0.027412962726029242823,w_tolerance));
REQUIRE_THAT(pts[66], Catch::Matchers::WithinAbs(0.56651041856139716840,x_tolerance));
REQUIRE_THAT(wgt[66], Catch::Matchers::WithinAbs(0.026826866725591762198,w_tolerance));
REQUIRE_THAT(pts[67], Catch::Matchers::WithinAbs(0.59303236477757208068,x_tolerance));
REQUIRE_THAT(wgt[67], Catch::Matchers::WithinAbs(0.026212340735672413913,w_tolerance));
REQUIRE_THAT(pts[68], Catch::Matchers::WithinAbs(0.61892584012546857039,x_tolerance));
REQUIRE_THAT(wgt[68], Catch::Matchers::WithinAbs(0.025570036005349361499,w_tolerance));
REQUIRE_THAT(pts[69], Catch::Matchers::WithinAbs(0.64416340378496710680,x_tolerance));
REQUIRE_THAT(wgt[69], Catch::Matchers::WithinAbs(0.024900633222483610288,w_tolerance));
REQUIRE_THAT(pts[70], Catch::Matchers::WithinAbs(0.66871831004391615395,x_tolerance));
REQUIRE_THAT(wgt[70], Catch::Matchers::WithinAbs(0.024204841792364691282,w_tolerance));
REQUIRE_THAT(pts[71], Catch::Matchers::WithinAbs(0.69256453664217156134,x_tolerance));
REQUIRE_THAT(wgt[71], Catch::Matchers::WithinAbs(0.023483399085926219842,w_tolerance));
REQUIRE_THAT(pts[72], Catch::Matchers::WithinAbs(0.71567681234896762622,x_tolerance));
REQUIRE_THAT(wgt[72], Catch::Matchers::WithinAbs(0.022737069658329374001,w_tolerance));
REQUIRE_THAT(pts[73], Catch::Matchers::WithinAbs(0.73803064374440013285,x_tolerance));
REQUIRE_THAT(wgt[73], Catch::Matchers::WithinAbs(0.021966644438744349195,w_tolerance));
REQUIRE_THAT(pts[74], Catch::Matchers::WithinAbs(0.75960234117664749870,x_tolerance));
REQUIRE_THAT(wgt[74], Catch::Matchers::WithinAbs(0.021172939892191298988,w_tolerance));
REQUIRE_THAT(pts[75], Catch::Matchers::WithinAbs(0.78036904386743321760,x_tolerance));
REQUIRE_THAT(wgt[75], Catch::Matchers::WithinAbs(0.020356797154333324595,w_tolerance));
REQUIRE_THAT(pts[76], Catch::Matchers::WithinAbs(0.80030874413914081723,x_tolerance));
REQUIRE_THAT(wgt[76], Catch::Matchers::WithinAbs(0.019519081140145022410,w_tolerance));
REQUIRE_THAT(pts[77], Catch::Matchers::WithinAbs(0.81940031073793167554,x_tolerance));
REQUIRE_THAT(wgt[77], Catch::Matchers::WithinAbs(0.018660679627411467385,w_tolerance));
REQUIRE_THAT(pts[78], Catch::Matchers::WithinAbs(0.83762351122818712149,x_tolerance));
REQUIRE_THAT(wgt[78], Catch::Matchers::WithinAbs(0.017782502316045260838,w_tolerance));
REQUIRE_THAT(pts[79], Catch::Matchers::WithinAbs(0.85495903343460145546,x_tolerance));
REQUIRE_THAT(wgt[79], Catch::Matchers::WithinAbs(0.016885479864245172450,w_tolerance));
REQUIRE_THAT(pts[80], Catch::Matchers::WithinAbs(0.87138850590929650287,x_tolerance));
REQUIRE_THAT(wgt[80], Catch::Matchers::WithinAbs(0.015970562902562291381,w_tolerance));
REQUIRE_THAT(pts[81], Catch::Matchers::WithinAbs(0.88689451740242041606,x_tolerance));
REQUIRE_THAT(wgt[81], Catch::Matchers::WithinAbs(0.015038721026994938006,w_tolerance));
REQUIRE_THAT(pts[82], Catch::Matchers::WithinAbs(0.90146063531585234132,x_tolerance));
REQUIRE_THAT(wgt[82], Catch::Matchers::WithinAbs(0.014090941772314860916,w_tolerance));
REQUIRE_THAT(pts[83], Catch::Matchers::WithinAbs(0.91507142312089807421,x_tolerance));
REQUIRE_THAT(wgt[83], Catch::Matchers::WithinAbs(0.013128229566961572637,w_tolerance));
REQUIRE_THAT(pts[84], Catch::Matchers::WithinAbs(0.92771245672230869096,x_tolerance));
REQUIRE_THAT(wgt[84], Catch::Matchers::WithinAbs(0.012151604671088319635,w_tolerance));
REQUIRE_THAT(pts[85], Catch::Matchers::WithinAbs(0.93937033975275521693,x_tolerance));
REQUIRE_THAT(wgt[85], Catch::Matchers::WithinAbs(0.011162102099838498591,w_tolerance));
REQUIRE_THAT(pts[86], Catch::Matchers::WithinAbs(0.95003271778443763576,x_tolerance));
REQUIRE_THAT(wgt[86], Catch::Matchers::WithinAbs(0.010160770535008415758,w_tolerance));
REQUIRE_THAT(pts[87], Catch::Matchers::WithinAbs(0.95968829144874253930,x_tolerance));
REQUIRE_THAT(wgt[87], Catch::Matchers::WithinAbs(0.0091486712307833866326,w_tolerance));
REQUIRE_THAT(pts[88], Catch::Matchers::WithinAbs(0.96832682846326421217,x_tolerance));
REQUIRE_THAT(wgt[88], Catch::Matchers::WithinAbs(0.0081268769256987592174,w_tolerance));
REQUIRE_THAT(pts[89], Catch::Matchers::WithinAbs(0.97593917458513646645,x_tolerance));
REQUIRE_THAT(wgt[89], Catch::Matchers::WithinAbs(0.0070964707911538652691,w_tolerance));
REQUIRE_THAT(pts[90], Catch::Matchers::WithinAbs(0.98251726356301467745,x_tolerance));
REQUIRE_THAT(wgt[90], Catch::Matchers::WithinAbs(0.0060585455042359616833,w_tolerance));
REQUIRE_THAT(pts[91], Catch::Matchers::WithinAbs(0.98805412632962379948,x_tolerance));
REQUIRE_THAT(wgt[91], Catch::Matchers::WithinAbs(0.0050142027429275176925,w_tolerance));
REQUIRE_THAT(pts[92], Catch::Matchers::WithinAbs(0.99254390032376262457,x_tolerance));
REQUIRE_THAT(wgt[92], Catch::Matchers::WithinAbs(0.0039645543384446866737,w_tolerance));
REQUIRE_THAT(pts[93], Catch::Matchers::WithinAbs(0.99598184298720929065,x_tolerance));
REQUIRE_THAT(wgt[93], Catch::Matchers::WithinAbs(0.0029107318179349464084,w_tolerance));
REQUIRE_THAT(pts[94], Catch::Matchers::WithinAbs(0.99836437586318167772,x_tolerance));
REQUIRE_THAT(wgt[94], Catch::Matchers::WithinAbs(0.0018539607889469217323,w_tolerance));
REQUIRE_THAT(pts[95], Catch::Matchers::WithinAbs(0.99968950388323076683,x_tolerance));
REQUIRE_THAT(wgt[95], Catch::Matchers::WithinAbs(0.00079679206555201242945,w_tolerance));
}

TEST_CASE("97 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(97);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99969583999524672491,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.00078053322194256124567,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99839774586056643673,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0018161463982100396095,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.99606378947748841302,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0028514092432130557714,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.99269587477855160926,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.0038838453294892944217,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.98829743450183878732,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.0049122762621660281308,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.98287301961352835104,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.0059356156307882229542,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.97642825630861976492,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.0069527960964694055265,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.96896983303495092210,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.0079627599978654955956,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.96050549165278724616,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.0089644581766979994326,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.95104401876663919521,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.0099568504270840449482,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.94059523635802798437,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.010938906359195948954,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.92916999148161914082,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.011909606385330756833,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.91678014495318888805,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.012867942742493386676,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.90343855901012161641,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.013812920521853043271,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.88915908394430036204,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.014743558693236950176,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.87395654371541421536,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.015658891119156920520,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.85784672055679030126,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.016557967555342456629,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.84084633858828676746,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.017439854635807804639,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.82297304645248444175,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.018303636840964140822,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.80424539899177056548,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.019148417447528129335,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.78468283798508572883,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.019973319459108046888,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.76430567196418205690,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.020777486516426568498,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.74313505513025393804,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.021560083786191718278,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.72119296539277052495,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.022320298827667132379,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.69850218155327111664,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.023057342436025995796,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.67508625965778496582,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.023770449461603068821,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.65096950854240825511,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.024458879604187847291,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.62617696459741385451,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.025121918181530046736,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.60073436577608420838,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.025758876871256784895,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.57466812487524410433,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.026369094425429349757,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(-0.54800530211522773466,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.026951937356996440674,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(-0.52077357704774283655,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.027506800597430342560,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(-0.49300121982079319725,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.028033108124862677527,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(-0.46471706183048881341,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.028530313562067187518,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(-0.43595046579020987644,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.028997900743668431872,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(-0.40673129524819590288,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.029435384251987320864,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(-0.37708988358520414430,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.029842309920967029035,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(-0.34705700252442132148,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.030218255307656014535,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(-0.31666383018631918806,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.030562830130758583861,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(-0.28594191872161692317,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.030875676675797653824,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(-0.25492316155595139902,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.031156470166469041458,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(-0.22363976028025951756,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.031404919101801723625,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(-0.19212419122124464624,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.031620765558774016043,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(-0.16040917172663132738,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.031803785460071490445,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(-0.12852762620020854547,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.031953788806708641945,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(-0.096512651921921606902,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.032070619875272799349,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(-0.064397484688495848022,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.032154157379585501536,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(-0.032215464310261708911,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.032204314596613505335,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.032221039456498706326,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.032215464310261708911,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.032204314596613505335,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.064397484688495848022,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.032154157379585501536,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.096512651921921606902,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.032070619875272799349,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.12852762620020854547,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.031953788806708641945,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.16040917172663132738,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.031803785460071490445,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.19212419122124464624,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.031620765558774016043,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.22363976028025951756,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.031404919101801723625,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.25492316155595139902,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.031156470166469041458,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.28594191872161692317,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.030875676675797653824,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.31666383018631918806,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.030562830130758583861,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.34705700252442132148,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.030218255307656014535,w_tolerance));
REQUIRE_THAT(pts[60], Catch::Matchers::WithinAbs(0.37708988358520414430,x_tolerance));
REQUIRE_THAT(wgt[60], Catch::Matchers::WithinAbs(0.029842309920967029035,w_tolerance));
REQUIRE_THAT(pts[61], Catch::Matchers::WithinAbs(0.40673129524819590288,x_tolerance));
REQUIRE_THAT(wgt[61], Catch::Matchers::WithinAbs(0.029435384251987320864,w_tolerance));
REQUIRE_THAT(pts[62], Catch::Matchers::WithinAbs(0.43595046579020987644,x_tolerance));
REQUIRE_THAT(wgt[62], Catch::Matchers::WithinAbs(0.028997900743668431872,w_tolerance));
REQUIRE_THAT(pts[63], Catch::Matchers::WithinAbs(0.46471706183048881341,x_tolerance));
REQUIRE_THAT(wgt[63], Catch::Matchers::WithinAbs(0.028530313562067187518,w_tolerance));
REQUIRE_THAT(pts[64], Catch::Matchers::WithinAbs(0.49300121982079319725,x_tolerance));
REQUIRE_THAT(wgt[64], Catch::Matchers::WithinAbs(0.028033108124862677527,w_tolerance));
REQUIRE_THAT(pts[65], Catch::Matchers::WithinAbs(0.52077357704774283655,x_tolerance));
REQUIRE_THAT(wgt[65], Catch::Matchers::WithinAbs(0.027506800597430342560,w_tolerance));
REQUIRE_THAT(pts[66], Catch::Matchers::WithinAbs(0.54800530211522773466,x_tolerance));
REQUIRE_THAT(wgt[66], Catch::Matchers::WithinAbs(0.026951937356996440674,w_tolerance));
REQUIRE_THAT(pts[67], Catch::Matchers::WithinAbs(0.57466812487524410433,x_tolerance));
REQUIRE_THAT(wgt[67], Catch::Matchers::WithinAbs(0.026369094425429349757,w_tolerance));
REQUIRE_THAT(pts[68], Catch::Matchers::WithinAbs(0.60073436577608420838,x_tolerance));
REQUIRE_THAT(wgt[68], Catch::Matchers::WithinAbs(0.025758876871256784895,w_tolerance));
REQUIRE_THAT(pts[69], Catch::Matchers::WithinAbs(0.62617696459741385451,x_tolerance));
REQUIRE_THAT(wgt[69], Catch::Matchers::WithinAbs(0.025121918181530046736,w_tolerance));
REQUIRE_THAT(pts[70], Catch::Matchers::WithinAbs(0.65096950854240825511,x_tolerance));
REQUIRE_THAT(wgt[70], Catch::Matchers::WithinAbs(0.024458879604187847291,w_tolerance));
REQUIRE_THAT(pts[71], Catch::Matchers::WithinAbs(0.67508625965778496582,x_tolerance));
REQUIRE_THAT(wgt[71], Catch::Matchers::WithinAbs(0.023770449461603068821,w_tolerance));
REQUIRE_THAT(pts[72], Catch::Matchers::WithinAbs(0.69850218155327111664,x_tolerance));
REQUIRE_THAT(wgt[72], Catch::Matchers::WithinAbs(0.023057342436025995796,w_tolerance));
REQUIRE_THAT(pts[73], Catch::Matchers::WithinAbs(0.72119296539277052495,x_tolerance));
REQUIRE_THAT(wgt[73], Catch::Matchers::WithinAbs(0.022320298827667132379,w_tolerance));
REQUIRE_THAT(pts[74], Catch::Matchers::WithinAbs(0.74313505513025393804,x_tolerance));
REQUIRE_THAT(wgt[74], Catch::Matchers::WithinAbs(0.021560083786191718278,w_tolerance));
REQUIRE_THAT(pts[75], Catch::Matchers::WithinAbs(0.76430567196418205690,x_tolerance));
REQUIRE_THAT(wgt[75], Catch::Matchers::WithinAbs(0.020777486516426568498,w_tolerance));
REQUIRE_THAT(pts[76], Catch::Matchers::WithinAbs(0.78468283798508572883,x_tolerance));
REQUIRE_THAT(wgt[76], Catch::Matchers::WithinAbs(0.019973319459108046888,w_tolerance));
REQUIRE_THAT(pts[77], Catch::Matchers::WithinAbs(0.80424539899177056548,x_tolerance));
REQUIRE_THAT(wgt[77], Catch::Matchers::WithinAbs(0.019148417447528129335,w_tolerance));
REQUIRE_THAT(pts[78], Catch::Matchers::WithinAbs(0.82297304645248444175,x_tolerance));
REQUIRE_THAT(wgt[78], Catch::Matchers::WithinAbs(0.018303636840964140822,w_tolerance));
REQUIRE_THAT(pts[79], Catch::Matchers::WithinAbs(0.84084633858828676746,x_tolerance));
REQUIRE_THAT(wgt[79], Catch::Matchers::WithinAbs(0.017439854635807804639,w_tolerance));
REQUIRE_THAT(pts[80], Catch::Matchers::WithinAbs(0.85784672055679030126,x_tolerance));
REQUIRE_THAT(wgt[80], Catch::Matchers::WithinAbs(0.016557967555342456629,w_tolerance));
REQUIRE_THAT(pts[81], Catch::Matchers::WithinAbs(0.87395654371541421536,x_tolerance));
REQUIRE_THAT(wgt[81], Catch::Matchers::WithinAbs(0.015658891119156920520,w_tolerance));
REQUIRE_THAT(pts[82], Catch::Matchers::WithinAbs(0.88915908394430036204,x_tolerance));
REQUIRE_THAT(wgt[82], Catch::Matchers::WithinAbs(0.014743558693236950176,w_tolerance));
REQUIRE_THAT(pts[83], Catch::Matchers::WithinAbs(0.90343855901012161641,x_tolerance));
REQUIRE_THAT(wgt[83], Catch::Matchers::WithinAbs(0.013812920521853043271,w_tolerance));
REQUIRE_THAT(pts[84], Catch::Matchers::WithinAbs(0.91678014495318888805,x_tolerance));
REQUIRE_THAT(wgt[84], Catch::Matchers::WithinAbs(0.012867942742493386676,w_tolerance));
REQUIRE_THAT(pts[85], Catch::Matchers::WithinAbs(0.92916999148161914082,x_tolerance));
REQUIRE_THAT(wgt[85], Catch::Matchers::WithinAbs(0.011909606385330756833,w_tolerance));
REQUIRE_THAT(pts[86], Catch::Matchers::WithinAbs(0.94059523635802798437,x_tolerance));
REQUIRE_THAT(wgt[86], Catch::Matchers::WithinAbs(0.010938906359195948954,w_tolerance));
REQUIRE_THAT(pts[87], Catch::Matchers::WithinAbs(0.95104401876663919521,x_tolerance));
REQUIRE_THAT(wgt[87], Catch::Matchers::WithinAbs(0.0099568504270840449482,w_tolerance));
REQUIRE_THAT(pts[88], Catch::Matchers::WithinAbs(0.96050549165278724616,x_tolerance));
REQUIRE_THAT(wgt[88], Catch::Matchers::WithinAbs(0.0089644581766979994326,w_tolerance));
REQUIRE_THAT(pts[89], Catch::Matchers::WithinAbs(0.96896983303495092210,x_tolerance));
REQUIRE_THAT(wgt[89], Catch::Matchers::WithinAbs(0.0079627599978654955956,w_tolerance));
REQUIRE_THAT(pts[90], Catch::Matchers::WithinAbs(0.97642825630861976492,x_tolerance));
REQUIRE_THAT(wgt[90], Catch::Matchers::WithinAbs(0.0069527960964694055265,w_tolerance));
REQUIRE_THAT(pts[91], Catch::Matchers::WithinAbs(0.98287301961352835104,x_tolerance));
REQUIRE_THAT(wgt[91], Catch::Matchers::WithinAbs(0.0059356156307882229542,w_tolerance));
REQUIRE_THAT(pts[92], Catch::Matchers::WithinAbs(0.98829743450183878732,x_tolerance));
REQUIRE_THAT(wgt[92], Catch::Matchers::WithinAbs(0.0049122762621660281308,w_tolerance));
REQUIRE_THAT(pts[93], Catch::Matchers::WithinAbs(0.99269587477855160926,x_tolerance));
REQUIRE_THAT(wgt[93], Catch::Matchers::WithinAbs(0.0038838453294892944217,w_tolerance));
REQUIRE_THAT(pts[94], Catch::Matchers::WithinAbs(0.99606378947748841302,x_tolerance));
REQUIRE_THAT(wgt[94], Catch::Matchers::WithinAbs(0.0028514092432130557714,w_tolerance));
REQUIRE_THAT(pts[95], Catch::Matchers::WithinAbs(0.99839774586056643673,x_tolerance));
REQUIRE_THAT(wgt[95], Catch::Matchers::WithinAbs(0.0018161463982100396095,w_tolerance));
REQUIRE_THAT(pts[96], Catch::Matchers::WithinAbs(0.99969583999524672491,x_tolerance));
REQUIRE_THAT(wgt[96], Catch::Matchers::WithinAbs(0.00078053322194256124567,w_tolerance));
}

TEST_CASE("98 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(98);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99970198412549090364,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.00076476698227431345804,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99843010504723045378,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0017794770410145287417,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.99614325499685929606,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0027938811357221308706,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.99284325153690673013,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.0038055740853523595655,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.98853338898915816837,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.0048134223985867709185,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.98321803629372299129,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.0058163825464396391128,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.97690259506388608250,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.0068134294791652159988,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.96959348710079447232,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.0078035473791007548910,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.96129814600289105771,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.0087857284673922632027,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.95202500898640150131,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.0097589734021740968354,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.94178350806271182110,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.010722292083224317120,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.93058406033930704212,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.011674704577138124287,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.91843805737356811720,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.012615242078921952858,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.90535785355983913595,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.013542947881029465144,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.89135675354889106643,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.014456878338304401978,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.87644899870684410511,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.015356103823497755768,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.86064975262455175316,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.016239709670453695653,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.84397508569077046729,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.017106797103089900262,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.82644195874404785511,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.017956484148770628122,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.80806820581953435129,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.018787906534904686561,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.78887251600802226670,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.019600218567726330773,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.76887441444551779712,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.020392593992291914579,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.74809424245259245064,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.021164226832774856911,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.72655313684365848091,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.021914332212178650419,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.70427300842717742366,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.022642147150618433111,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.68127651971864632080,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.023346931341349274713,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.65758706188901490516,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.024027967903745498803,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.63322873097196986188,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.024684564112460996182,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.60822630335427953351,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.025316052102026097343,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.58260521057412395965,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.025921789546162448918,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(-0.55639151345304058646,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.026501160311123639352,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(-0.52961187558779487625,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.027053575082396128278,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(-0.50229353622913685982,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.027578471964122393900,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(-0.47446428257502884413,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.028075317050636138753,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(-0.44615242150652544860,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.028543604969527885703,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(-0.41738675079505433418,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.028982859395688342047,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(-0.38819652981038386372,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.029392633535806492168,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(-0.35861144975907196525,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.029772510582829476266,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(-0.32866160348366815882,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.030122104139921898849,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(-0.29837745485338757716,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.030441058613493258395,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(-0.26778980777739141373,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.030729049574893669920,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(-0.23692977487219215099,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.030985784090409934631,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(-0.20582874581505377031,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.031211001019226264417,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(-0.17451835541557656788,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.031404471279046561517,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(-0.14303045143794287517,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.031565998079108052901,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(-0.11139706220655361800,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.031695417120349251609,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(-0.079650364028005988213,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.031792596762528630198,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(-0.047822648462549322963,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.031857438158124010713,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(-0.015946289478309399288,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.031889875352876467278,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0.015946289478309399288,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.031889875352876467278,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.047822648462549322963,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.031857438158124010713,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.079650364028005988213,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.031792596762528630198,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.11139706220655361800,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.031695417120349251609,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.14303045143794287517,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.031565998079108052901,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.17451835541557656788,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.031404471279046561517,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.20582874581505377031,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.031211001019226264417,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.23692977487219215099,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.030985784090409934631,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.26778980777739141373,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.030729049574893669920,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.29837745485338757716,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.030441058613493258395,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.32866160348366815882,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.030122104139921898849,w_tolerance));
REQUIRE_THAT(pts[60], Catch::Matchers::WithinAbs(0.35861144975907196525,x_tolerance));
REQUIRE_THAT(wgt[60], Catch::Matchers::WithinAbs(0.029772510582829476266,w_tolerance));
REQUIRE_THAT(pts[61], Catch::Matchers::WithinAbs(0.38819652981038386372,x_tolerance));
REQUIRE_THAT(wgt[61], Catch::Matchers::WithinAbs(0.029392633535806492168,w_tolerance));
REQUIRE_THAT(pts[62], Catch::Matchers::WithinAbs(0.41738675079505433418,x_tolerance));
REQUIRE_THAT(wgt[62], Catch::Matchers::WithinAbs(0.028982859395688342047,w_tolerance));
REQUIRE_THAT(pts[63], Catch::Matchers::WithinAbs(0.44615242150652544860,x_tolerance));
REQUIRE_THAT(wgt[63], Catch::Matchers::WithinAbs(0.028543604969527885703,w_tolerance));
REQUIRE_THAT(pts[64], Catch::Matchers::WithinAbs(0.47446428257502884413,x_tolerance));
REQUIRE_THAT(wgt[64], Catch::Matchers::WithinAbs(0.028075317050636138753,w_tolerance));
REQUIRE_THAT(pts[65], Catch::Matchers::WithinAbs(0.50229353622913685982,x_tolerance));
REQUIRE_THAT(wgt[65], Catch::Matchers::WithinAbs(0.027578471964122393900,w_tolerance));
REQUIRE_THAT(pts[66], Catch::Matchers::WithinAbs(0.52961187558779487625,x_tolerance));
REQUIRE_THAT(wgt[66], Catch::Matchers::WithinAbs(0.027053575082396128278,w_tolerance));
REQUIRE_THAT(pts[67], Catch::Matchers::WithinAbs(0.55639151345304058646,x_tolerance));
REQUIRE_THAT(wgt[67], Catch::Matchers::WithinAbs(0.026501160311123639352,w_tolerance));
REQUIRE_THAT(pts[68], Catch::Matchers::WithinAbs(0.58260521057412395965,x_tolerance));
REQUIRE_THAT(wgt[68], Catch::Matchers::WithinAbs(0.025921789546162448918,w_tolerance));
REQUIRE_THAT(pts[69], Catch::Matchers::WithinAbs(0.60822630335427953351,x_tolerance));
REQUIRE_THAT(wgt[69], Catch::Matchers::WithinAbs(0.025316052102026097343,w_tolerance));
REQUIRE_THAT(pts[70], Catch::Matchers::WithinAbs(0.63322873097196986188,x_tolerance));
REQUIRE_THAT(wgt[70], Catch::Matchers::WithinAbs(0.024684564112460996182,w_tolerance));
REQUIRE_THAT(pts[71], Catch::Matchers::WithinAbs(0.65758706188901490516,x_tolerance));
REQUIRE_THAT(wgt[71], Catch::Matchers::WithinAbs(0.024027967903745498803,w_tolerance));
REQUIRE_THAT(pts[72], Catch::Matchers::WithinAbs(0.68127651971864632080,x_tolerance));
REQUIRE_THAT(wgt[72], Catch::Matchers::WithinAbs(0.023346931341349274713,w_tolerance));
REQUIRE_THAT(pts[73], Catch::Matchers::WithinAbs(0.70427300842717742366,x_tolerance));
REQUIRE_THAT(wgt[73], Catch::Matchers::WithinAbs(0.022642147150618433111,w_tolerance));
REQUIRE_THAT(pts[74], Catch::Matchers::WithinAbs(0.72655313684365848091,x_tolerance));
REQUIRE_THAT(wgt[74], Catch::Matchers::WithinAbs(0.021914332212178650419,w_tolerance));
REQUIRE_THAT(pts[75], Catch::Matchers::WithinAbs(0.74809424245259245064,x_tolerance));
REQUIRE_THAT(wgt[75], Catch::Matchers::WithinAbs(0.021164226832774856911,w_tolerance));
REQUIRE_THAT(pts[76], Catch::Matchers::WithinAbs(0.76887441444551779712,x_tolerance));
REQUIRE_THAT(wgt[76], Catch::Matchers::WithinAbs(0.020392593992291914579,w_tolerance));
REQUIRE_THAT(pts[77], Catch::Matchers::WithinAbs(0.78887251600802226670,x_tolerance));
REQUIRE_THAT(wgt[77], Catch::Matchers::WithinAbs(0.019600218567726330773,w_tolerance));
REQUIRE_THAT(pts[78], Catch::Matchers::WithinAbs(0.80806820581953435129,x_tolerance));
REQUIRE_THAT(wgt[78], Catch::Matchers::WithinAbs(0.018787906534904686561,w_tolerance));
REQUIRE_THAT(pts[79], Catch::Matchers::WithinAbs(0.82644195874404785511,x_tolerance));
REQUIRE_THAT(wgt[79], Catch::Matchers::WithinAbs(0.017956484148770628122,w_tolerance));
REQUIRE_THAT(pts[80], Catch::Matchers::WithinAbs(0.84397508569077046729,x_tolerance));
REQUIRE_THAT(wgt[80], Catch::Matchers::WithinAbs(0.017106797103089900262,w_tolerance));
REQUIRE_THAT(pts[81], Catch::Matchers::WithinAbs(0.86064975262455175316,x_tolerance));
REQUIRE_THAT(wgt[81], Catch::Matchers::WithinAbs(0.016239709670453695653,w_tolerance));
REQUIRE_THAT(pts[82], Catch::Matchers::WithinAbs(0.87644899870684410511,x_tolerance));
REQUIRE_THAT(wgt[82], Catch::Matchers::WithinAbs(0.015356103823497755768,w_tolerance));
REQUIRE_THAT(pts[83], Catch::Matchers::WithinAbs(0.89135675354889106643,x_tolerance));
REQUIRE_THAT(wgt[83], Catch::Matchers::WithinAbs(0.014456878338304401978,w_tolerance));
REQUIRE_THAT(pts[84], Catch::Matchers::WithinAbs(0.90535785355983913595,x_tolerance));
REQUIRE_THAT(wgt[84], Catch::Matchers::WithinAbs(0.013542947881029465144,w_tolerance));
REQUIRE_THAT(pts[85], Catch::Matchers::WithinAbs(0.91843805737356811720,x_tolerance));
REQUIRE_THAT(wgt[85], Catch::Matchers::WithinAbs(0.012615242078921952858,w_tolerance));
REQUIRE_THAT(pts[86], Catch::Matchers::WithinAbs(0.93058406033930704212,x_tolerance));
REQUIRE_THAT(wgt[86], Catch::Matchers::WithinAbs(0.011674704577138124287,w_tolerance));
REQUIRE_THAT(pts[87], Catch::Matchers::WithinAbs(0.94178350806271182110,x_tolerance));
REQUIRE_THAT(wgt[87], Catch::Matchers::WithinAbs(0.010722292083224317120,w_tolerance));
REQUIRE_THAT(pts[88], Catch::Matchers::WithinAbs(0.95202500898640150131,x_tolerance));
REQUIRE_THAT(wgt[88], Catch::Matchers::WithinAbs(0.0097589734021740968354,w_tolerance));
REQUIRE_THAT(pts[89], Catch::Matchers::WithinAbs(0.96129814600289105771,x_tolerance));
REQUIRE_THAT(wgt[89], Catch::Matchers::WithinAbs(0.0087857284673922632027,w_tolerance));
REQUIRE_THAT(pts[90], Catch::Matchers::WithinAbs(0.96959348710079447232,x_tolerance));
REQUIRE_THAT(wgt[90], Catch::Matchers::WithinAbs(0.0078035473791007548910,w_tolerance));
REQUIRE_THAT(pts[91], Catch::Matchers::WithinAbs(0.97690259506388608250,x_tolerance));
REQUIRE_THAT(wgt[91], Catch::Matchers::WithinAbs(0.0068134294791652159988,w_tolerance));
REQUIRE_THAT(pts[92], Catch::Matchers::WithinAbs(0.98321803629372299129,x_tolerance));
REQUIRE_THAT(wgt[92], Catch::Matchers::WithinAbs(0.0058163825464396391128,w_tolerance));
REQUIRE_THAT(pts[93], Catch::Matchers::WithinAbs(0.98853338898915816837,x_tolerance));
REQUIRE_THAT(wgt[93], Catch::Matchers::WithinAbs(0.0048134223985867709185,w_tolerance));
REQUIRE_THAT(pts[94], Catch::Matchers::WithinAbs(0.99284325153690673013,x_tolerance));
REQUIRE_THAT(wgt[94], Catch::Matchers::WithinAbs(0.0038055740853523595655,w_tolerance));
REQUIRE_THAT(pts[95], Catch::Matchers::WithinAbs(0.99614325499685929606,x_tolerance));
REQUIRE_THAT(wgt[95], Catch::Matchers::WithinAbs(0.0027938811357221308706,w_tolerance));
REQUIRE_THAT(pts[96], Catch::Matchers::WithinAbs(0.99843010504723045378,x_tolerance));
REQUIRE_THAT(wgt[96], Catch::Matchers::WithinAbs(0.0017794770410145287417,w_tolerance));
REQUIRE_THAT(pts[97], Catch::Matchers::WithinAbs(0.99970198412549090364,x_tolerance));
REQUIRE_THAT(wgt[97], Catch::Matchers::WithinAbs(0.00076476698227431345804,w_tolerance));
}

TEST_CASE("99 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(99);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99970794395216935586,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.00074947364673740536340,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99846149383584133897,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0017439069582192449386,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.99622033867308860856,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0027380758736268780913,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.99298621413311227733,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.0037296434872430347492,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.98876228298987361251,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.0047175190375208300797,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.98355274115628001297,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.0057006997733959268752,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.97736277675070594457,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.0066782008605750981652,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.97019855807429021548,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.0076490462793352579354,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.96206722564090194274,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.0086122676154788889917,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.95297688445337350258,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.0095669044113261363569,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.94293659568847941029,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.010512004915524745406,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.93195636756149696436,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.011446626951498253761,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.92004714530050021872,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.012369838822175162103,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.90722080021057356824,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.013280720222657283480,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.89349011782641421500,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.014178363149579446066,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.87886878515951385027,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.015061872801990233313,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.86337137704991704443,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.015930368470960849711,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.84701334163477414730,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.016782984416138707090,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.82981098494743056503,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.017618870727924380507,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.81178145466198913468,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.018437194174178499271,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.79294272299930889391,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.019237139030487184799,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.77331356881133614520,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.020017907893086566208,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.75291355886153811825,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.020778722473594211207,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.73176302832004352218,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.021518824374730223818,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.70988306049289685821,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.022237475846239371584,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.68729546580560909750,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.022933960520251055284,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.66402276006193845756,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.023607584125337894047,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.64008814199956252510,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.024257675178557078232,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.61551547016500717705,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.024883585654781946446,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.59032923913087856422,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.025484691632654754651,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(-0.56455455507910155074,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.026060393916515482541,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(-0.53821711077450103255,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.026610118633685851302,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(-0.51134315995367101422,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.027133317806512550926,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(-0.48395949115465970018,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.027629469898599012322,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(-0.45609340101355663729,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.028098080334680911266,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(-0.42777266705459962176,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.028538681993626949727,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(-0.39902552000092415238,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.028950835674073310404,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(-0.36988061563355619373,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.029334130532227503476,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(-0.34036700622669944304,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.029688184491405098448,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(-0.31051411158779073632,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.030012644622891034472,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(-0.28035168973119126718,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.030307187497745803980,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(-0.24990980721474653936,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.030571519509205779992,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(-0.21921880916878407039,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.030805377165356279499,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(-0.18830928904742447642,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.031008527351785595358,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(-0.15721205813235839438,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.031180767563958158370,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(-0.12595811481948846172,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.031321926109075180128,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(-0.094578613719052031876,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.031431862277221546162,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(-0.063104834600026240206,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.031510466481628347713,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(-0.031568151209772265203,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.031557660367911228858,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(0,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.031573396892175653051,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.031568151209772265203,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.031557660367911228858,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.063104834600026240206,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.031510466481628347713,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.094578613719052031876,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.031431862277221546162,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.12595811481948846172,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.031321926109075180128,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.15721205813235839438,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.031180767563958158370,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.18830928904742447642,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.031008527351785595358,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.21921880916878407039,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.030805377165356279499,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.24990980721474653936,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.030571519509205779992,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.28035168973119126718,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.030307187497745803980,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.31051411158779073632,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.030012644622891034472,w_tolerance));
REQUIRE_THAT(pts[60], Catch::Matchers::WithinAbs(0.34036700622669944304,x_tolerance));
REQUIRE_THAT(wgt[60], Catch::Matchers::WithinAbs(0.029688184491405098448,w_tolerance));
REQUIRE_THAT(pts[61], Catch::Matchers::WithinAbs(0.36988061563355619373,x_tolerance));
REQUIRE_THAT(wgt[61], Catch::Matchers::WithinAbs(0.029334130532227503476,w_tolerance));
REQUIRE_THAT(pts[62], Catch::Matchers::WithinAbs(0.39902552000092415238,x_tolerance));
REQUIRE_THAT(wgt[62], Catch::Matchers::WithinAbs(0.028950835674073310404,w_tolerance));
REQUIRE_THAT(pts[63], Catch::Matchers::WithinAbs(0.42777266705459962176,x_tolerance));
REQUIRE_THAT(wgt[63], Catch::Matchers::WithinAbs(0.028538681993626949727,w_tolerance));
REQUIRE_THAT(pts[64], Catch::Matchers::WithinAbs(0.45609340101355663729,x_tolerance));
REQUIRE_THAT(wgt[64], Catch::Matchers::WithinAbs(0.028098080334680911266,w_tolerance));
REQUIRE_THAT(pts[65], Catch::Matchers::WithinAbs(0.48395949115465970018,x_tolerance));
REQUIRE_THAT(wgt[65], Catch::Matchers::WithinAbs(0.027629469898599012322,w_tolerance));
REQUIRE_THAT(pts[66], Catch::Matchers::WithinAbs(0.51134315995367101422,x_tolerance));
REQUIRE_THAT(wgt[66], Catch::Matchers::WithinAbs(0.027133317806512550926,w_tolerance));
REQUIRE_THAT(pts[67], Catch::Matchers::WithinAbs(0.53821711077450103255,x_tolerance));
REQUIRE_THAT(wgt[67], Catch::Matchers::WithinAbs(0.026610118633685851302,w_tolerance));
REQUIRE_THAT(pts[68], Catch::Matchers::WithinAbs(0.56455455507910155074,x_tolerance));
REQUIRE_THAT(wgt[68], Catch::Matchers::WithinAbs(0.026060393916515482541,w_tolerance));
REQUIRE_THAT(pts[69], Catch::Matchers::WithinAbs(0.59032923913087856422,x_tolerance));
REQUIRE_THAT(wgt[69], Catch::Matchers::WithinAbs(0.025484691632654754651,w_tolerance));
REQUIRE_THAT(pts[70], Catch::Matchers::WithinAbs(0.61551547016500717705,x_tolerance));
REQUIRE_THAT(wgt[70], Catch::Matchers::WithinAbs(0.024883585654781946446,w_tolerance));
REQUIRE_THAT(pts[71], Catch::Matchers::WithinAbs(0.64008814199956252510,x_tolerance));
REQUIRE_THAT(wgt[71], Catch::Matchers::WithinAbs(0.024257675178557078232,w_tolerance));
REQUIRE_THAT(pts[72], Catch::Matchers::WithinAbs(0.66402276006193845756,x_tolerance));
REQUIRE_THAT(wgt[72], Catch::Matchers::WithinAbs(0.023607584125337894047,w_tolerance));
REQUIRE_THAT(pts[73], Catch::Matchers::WithinAbs(0.68729546580560909750,x_tolerance));
REQUIRE_THAT(wgt[73], Catch::Matchers::WithinAbs(0.022933960520251055284,w_tolerance));
REQUIRE_THAT(pts[74], Catch::Matchers::WithinAbs(0.70988306049289685821,x_tolerance));
REQUIRE_THAT(wgt[74], Catch::Matchers::WithinAbs(0.022237475846239371584,w_tolerance));
REQUIRE_THAT(pts[75], Catch::Matchers::WithinAbs(0.73176302832004352218,x_tolerance));
REQUIRE_THAT(wgt[75], Catch::Matchers::WithinAbs(0.021518824374730223818,w_tolerance));
REQUIRE_THAT(pts[76], Catch::Matchers::WithinAbs(0.75291355886153811825,x_tolerance));
REQUIRE_THAT(wgt[76], Catch::Matchers::WithinAbs(0.020778722473594211207,w_tolerance));
REQUIRE_THAT(pts[77], Catch::Matchers::WithinAbs(0.77331356881133614520,x_tolerance));
REQUIRE_THAT(wgt[77], Catch::Matchers::WithinAbs(0.020017907893086566208,w_tolerance));
REQUIRE_THAT(pts[78], Catch::Matchers::WithinAbs(0.79294272299930889391,x_tolerance));
REQUIRE_THAT(wgt[78], Catch::Matchers::WithinAbs(0.019237139030487184799,w_tolerance));
REQUIRE_THAT(pts[79], Catch::Matchers::WithinAbs(0.81178145466198913468,x_tolerance));
REQUIRE_THAT(wgt[79], Catch::Matchers::WithinAbs(0.018437194174178499271,w_tolerance));
REQUIRE_THAT(pts[80], Catch::Matchers::WithinAbs(0.82981098494743056503,x_tolerance));
REQUIRE_THAT(wgt[80], Catch::Matchers::WithinAbs(0.017618870727924380507,w_tolerance));
REQUIRE_THAT(pts[81], Catch::Matchers::WithinAbs(0.84701334163477414730,x_tolerance));
REQUIRE_THAT(wgt[81], Catch::Matchers::WithinAbs(0.016782984416138707090,w_tolerance));
REQUIRE_THAT(pts[82], Catch::Matchers::WithinAbs(0.86337137704991704443,x_tolerance));
REQUIRE_THAT(wgt[82], Catch::Matchers::WithinAbs(0.015930368470960849711,w_tolerance));
REQUIRE_THAT(pts[83], Catch::Matchers::WithinAbs(0.87886878515951385027,x_tolerance));
REQUIRE_THAT(wgt[83], Catch::Matchers::WithinAbs(0.015061872801990233313,w_tolerance));
REQUIRE_THAT(pts[84], Catch::Matchers::WithinAbs(0.89349011782641421500,x_tolerance));
REQUIRE_THAT(wgt[84], Catch::Matchers::WithinAbs(0.014178363149579446066,w_tolerance));
REQUIRE_THAT(pts[85], Catch::Matchers::WithinAbs(0.90722080021057356824,x_tolerance));
REQUIRE_THAT(wgt[85], Catch::Matchers::WithinAbs(0.013280720222657283480,w_tolerance));
REQUIRE_THAT(pts[86], Catch::Matchers::WithinAbs(0.92004714530050021872,x_tolerance));
REQUIRE_THAT(wgt[86], Catch::Matchers::WithinAbs(0.012369838822175162103,w_tolerance));
REQUIRE_THAT(pts[87], Catch::Matchers::WithinAbs(0.93195636756149696436,x_tolerance));
REQUIRE_THAT(wgt[87], Catch::Matchers::WithinAbs(0.011446626951498253761,w_tolerance));
REQUIRE_THAT(pts[88], Catch::Matchers::WithinAbs(0.94293659568847941029,x_tolerance));
REQUIRE_THAT(wgt[88], Catch::Matchers::WithinAbs(0.010512004915524745406,w_tolerance));
REQUIRE_THAT(pts[89], Catch::Matchers::WithinAbs(0.95297688445337350258,x_tolerance));
REQUIRE_THAT(wgt[89], Catch::Matchers::WithinAbs(0.0095669044113261363569,w_tolerance));
REQUIRE_THAT(pts[90], Catch::Matchers::WithinAbs(0.96206722564090194274,x_tolerance));
REQUIRE_THAT(wgt[90], Catch::Matchers::WithinAbs(0.0086122676154788889917,w_tolerance));
REQUIRE_THAT(pts[91], Catch::Matchers::WithinAbs(0.97019855807429021548,x_tolerance));
REQUIRE_THAT(wgt[91], Catch::Matchers::WithinAbs(0.0076490462793352579354,w_tolerance));
REQUIRE_THAT(pts[92], Catch::Matchers::WithinAbs(0.97736277675070594457,x_tolerance));
REQUIRE_THAT(wgt[92], Catch::Matchers::WithinAbs(0.0066782008605750981652,w_tolerance));
REQUIRE_THAT(pts[93], Catch::Matchers::WithinAbs(0.98355274115628001297,x_tolerance));
REQUIRE_THAT(wgt[93], Catch::Matchers::WithinAbs(0.0057006997733959268752,w_tolerance));
REQUIRE_THAT(pts[94], Catch::Matchers::WithinAbs(0.98876228298987361251,x_tolerance));
REQUIRE_THAT(wgt[94], Catch::Matchers::WithinAbs(0.0047175190375208300797,w_tolerance));
REQUIRE_THAT(pts[95], Catch::Matchers::WithinAbs(0.99298621413311227733,x_tolerance));
REQUIRE_THAT(wgt[95], Catch::Matchers::WithinAbs(0.0037296434872430347492,w_tolerance));
REQUIRE_THAT(pts[96], Catch::Matchers::WithinAbs(0.99622033867308860856,x_tolerance));
REQUIRE_THAT(wgt[96], Catch::Matchers::WithinAbs(0.0027380758736268780913,w_tolerance));
REQUIRE_THAT(pts[97], Catch::Matchers::WithinAbs(0.99846149383584133897,x_tolerance));
REQUIRE_THAT(wgt[97], Catch::Matchers::WithinAbs(0.0017439069582192449386,w_tolerance));
REQUIRE_THAT(pts[98], Catch::Matchers::WithinAbs(0.99970794395216935586,x_tolerance));
REQUIRE_THAT(wgt[98], Catch::Matchers::WithinAbs(0.00074947364673740536340,w_tolerance));
}

TEST_CASE("100 point GaussLegendre", "[1d-quad]") {
IntegratorXX::GaussLegendre<double,double> quad(100);
const auto & pts = quad.points();
const auto & wgt = quad.weights();
REQUIRE_THAT(pts[0], Catch::Matchers::WithinAbs(-0.99971372677344123368,x_tolerance));
REQUIRE_THAT(wgt[0], Catch::Matchers::WithinAbs(0.00073463449050567173032,w_tolerance));
REQUIRE_THAT(pts[1], Catch::Matchers::WithinAbs(-0.99849195063959581840,x_tolerance));
REQUIRE_THAT(wgt[1], Catch::Matchers::WithinAbs(0.0017093926535181052395,w_tolerance));
REQUIRE_THAT(pts[2], Catch::Matchers::WithinAbs(-0.99629513473312514919,x_tolerance));
REQUIRE_THAT(wgt[2], Catch::Matchers::WithinAbs(0.0026839253715534824194,w_tolerance));
REQUIRE_THAT(pts[3], Catch::Matchers::WithinAbs(-0.99312493703744345965,x_tolerance));
REQUIRE_THAT(wgt[3], Catch::Matchers::WithinAbs(0.0036559612013263751823,w_tolerance));
REQUIRE_THAT(pts[4], Catch::Matchers::WithinAbs(-0.98898439524299174800,x_tolerance));
REQUIRE_THAT(wgt[4], Catch::Matchers::WithinAbs(0.0046244500634221193511,w_tolerance));
REQUIRE_THAT(pts[5], Catch::Matchers::WithinAbs(-0.98387754070605701550,x_tolerance));
REQUIRE_THAT(wgt[5], Catch::Matchers::WithinAbs(0.0055884280038655151572,w_tolerance));
REQUIRE_THAT(pts[6], Catch::Matchers::WithinAbs(-0.97780935848691828855,x_tolerance));
REQUIRE_THAT(wgt[6], Catch::Matchers::WithinAbs(0.0065469484508453227642,w_tolerance));
REQUIRE_THAT(pts[7], Catch::Matchers::WithinAbs(-0.97078577576370633193,x_tolerance));
REQUIRE_THAT(wgt[7], Catch::Matchers::WithinAbs(0.0074990732554647115788,w_tolerance));
REQUIRE_THAT(pts[8], Catch::Matchers::WithinAbs(-0.96281365425581552729,x_tolerance));
REQUIRE_THAT(wgt[8], Catch::Matchers::WithinAbs(0.0084438714696689714026,w_tolerance));
REQUIRE_THAT(pts[9], Catch::Matchers::WithinAbs(-0.95390078292549174285,x_tolerance));
REQUIRE_THAT(wgt[9], Catch::Matchers::WithinAbs(0.0093804196536944579514,w_tolerance));
REQUIRE_THAT(pts[10], Catch::Matchers::WithinAbs(-0.94405587013625597796,x_tolerance));
REQUIRE_THAT(wgt[10], Catch::Matchers::WithinAbs(0.010307802574868969586,w_tolerance));
REQUIRE_THAT(pts[11], Catch::Matchers::WithinAbs(-0.93328853504307954592,x_tolerance));
REQUIRE_THAT(wgt[11], Catch::Matchers::WithinAbs(0.011225114023185977117,w_tolerance));
REQUIRE_THAT(pts[12], Catch::Matchers::WithinAbs(-0.92160929814533395267,x_tolerance));
REQUIRE_THAT(wgt[12], Catch::Matchers::WithinAbs(0.012131457662979497408,w_tolerance));
REQUIRE_THAT(pts[13], Catch::Matchers::WithinAbs(-0.90902957098252969047,x_tolerance));
REQUIRE_THAT(wgt[13], Catch::Matchers::WithinAbs(0.013025947892971542286,w_tolerance));
REQUIRE_THAT(pts[14], Catch::Matchers::WithinAbs(-0.89556164497072698670,x_tolerance));
REQUIRE_THAT(wgt[14], Catch::Matchers::WithinAbs(0.013907710703718772688,w_tolerance));
REQUIRE_THAT(pts[15], Catch::Matchers::WithinAbs(-0.88121867938501841557,x_tolerance));
REQUIRE_THAT(wgt[15], Catch::Matchers::WithinAbs(0.014775884527441301769,w_tolerance));
REQUIRE_THAT(pts[16], Catch::Matchers::WithinAbs(-0.86601468849716462341,x_tolerance));
REQUIRE_THAT(wgt[16], Catch::Matchers::WithinAbs(0.015629621077546002724,w_tolerance));
REQUIRE_THAT(pts[17], Catch::Matchers::WithinAbs(-0.84996452787959128429,x_tolerance));
REQUIRE_THAT(wgt[17], Catch::Matchers::WithinAbs(0.016468086176145212643,w_tolerance));
REQUIRE_THAT(pts[18], Catch::Matchers::WithinAbs(-0.83308387988840082354,x_tolerance));
REQUIRE_THAT(wgt[18], Catch::Matchers::WithinAbs(0.017290460568323582439,w_tolerance));
REQUIRE_THAT(pts[19], Catch::Matchers::WithinAbs(-0.81538923833917625439,x_tolerance));
REQUIRE_THAT(wgt[19], Catch::Matchers::WithinAbs(0.018095940722128116664,w_tolerance));
REQUIRE_THAT(pts[20], Catch::Matchers::WithinAbs(-0.79689789239031447639,x_tolerance));
REQUIRE_THAT(wgt[20], Catch::Matchers::WithinAbs(0.018883739613374904553,w_tolerance));
REQUIRE_THAT(pts[21], Catch::Matchers::WithinAbs(-0.77762790964949547563,x_tolerance));
REQUIRE_THAT(wgt[21], Catch::Matchers::WithinAbs(0.019653087494435305865,w_tolerance));
REQUIRE_THAT(pts[22], Catch::Matchers::WithinAbs(-0.75759811851970717604,x_tolerance));
REQUIRE_THAT(wgt[22], Catch::Matchers::WithinAbs(0.020403232646209432767,w_tolerance));
REQUIRE_THAT(pts[23], Catch::Matchers::WithinAbs(-0.73682808980202070551,x_tolerance));
REQUIRE_THAT(wgt[23], Catch::Matchers::WithinAbs(0.021133442112527641543,w_tolerance));
REQUIRE_THAT(pts[24], Catch::Matchers::WithinAbs(-0.71533811757305644646,x_tolerance));
REQUIRE_THAT(wgt[24], Catch::Matchers::WithinAbs(0.021843002416247386314,w_tolerance));
REQUIRE_THAT(pts[25], Catch::Matchers::WithinAbs(-0.69314919935580196595,x_tolerance));
REQUIRE_THAT(wgt[25], Catch::Matchers::WithinAbs(0.022531220256336272702,w_tolerance));
REQUIRE_THAT(pts[26], Catch::Matchers::WithinAbs(-0.67028301560314101580,x_tolerance));
REQUIRE_THAT(wgt[26], Catch::Matchers::WithinAbs(0.023197423185254121622,w_tolerance));
REQUIRE_THAT(pts[27], Catch::Matchers::WithinAbs(-0.64676190851412927983,x_tolerance));
REQUIRE_THAT(wgt[27], Catch::Matchers::WithinAbs(0.023840960265968205963,w_tolerance));
REQUIRE_THAT(pts[28], Catch::Matchers::WithinAbs(-0.62260886020370777160,x_tolerance));
REQUIRE_THAT(wgt[28], Catch::Matchers::WithinAbs(0.024461202707957052720,w_tolerance));
REQUIRE_THAT(pts[29], Catch::Matchers::WithinAbs(-0.59784747024717872126,x_tolerance));
REQUIRE_THAT(wgt[29], Catch::Matchers::WithinAbs(0.025057544481579589704,w_tolerance));
REQUIRE_THAT(pts[30], Catch::Matchers::WithinAbs(-0.57250193262138119132,x_tolerance));
REQUIRE_THAT(wgt[30], Catch::Matchers::WithinAbs(0.025629402910208116076,w_tolerance));
REQUIRE_THAT(pts[31], Catch::Matchers::WithinAbs(-0.54659701206509416747,x_tolerance));
REQUIRE_THAT(wgt[31], Catch::Matchers::WithinAbs(0.026176219239545676342,w_tolerance));
REQUIRE_THAT(pts[32], Catch::Matchers::WithinAbs(-0.52015801988176305665,x_tolerance));
REQUIRE_THAT(wgt[32], Catch::Matchers::WithinAbs(0.026697459183570962660,w_tolerance));
REQUIRE_THAT(pts[33], Catch::Matchers::WithinAbs(-0.49321078920819093357,x_tolerance));
REQUIRE_THAT(wgt[33], Catch::Matchers::WithinAbs(0.027192613446576880136,w_tolerance));
REQUIRE_THAT(pts[34], Catch::Matchers::WithinAbs(-0.46578164977335804225,x_tolerance));
REQUIRE_THAT(wgt[34], Catch::Matchers::WithinAbs(0.027661198220792388294,w_tolerance));
REQUIRE_THAT(pts[35], Catch::Matchers::WithinAbs(-0.43789740217203151311,x_tolerance));
REQUIRE_THAT(wgt[35], Catch::Matchers::WithinAbs(0.028102755659101173318,w_tolerance));
REQUIRE_THAT(pts[36], Catch::Matchers::WithinAbs(-0.40958529167830154253,x_tolerance));
REQUIRE_THAT(wgt[36], Catch::Matchers::WithinAbs(0.028516854322395097991,w_tolerance));
REQUIRE_THAT(pts[37], Catch::Matchers::WithinAbs(-0.38087298162462995676,x_tolerance));
REQUIRE_THAT(wgt[37], Catch::Matchers::WithinAbs(0.028903089601125203135,w_tolerance));
REQUIRE_THAT(pts[38], Catch::Matchers::WithinAbs(-0.35178852637242172097,x_tolerance));
REQUIRE_THAT(wgt[38], Catch::Matchers::WithinAbs(0.029261084110638276620,w_tolerance));
REQUIRE_THAT(pts[39], Catch::Matchers::WithinAbs(-0.32236034390052915172,x_tolerance));
REQUIRE_THAT(wgt[39], Catch::Matchers::WithinAbs(0.029590488059912642512,w_tolerance));
REQUIRE_THAT(pts[40], Catch::Matchers::WithinAbs(-0.29261718803847196474,x_tolerance));
REQUIRE_THAT(wgt[40], Catch::Matchers::WithinAbs(0.029890979593332830917,w_tolerance));
REQUIRE_THAT(pts[41], Catch::Matchers::WithinAbs(-0.26258812037150347917,x_tolerance));
REQUIRE_THAT(wgt[41], Catch::Matchers::WithinAbs(0.030162265105169144919,w_tolerance));
REQUIRE_THAT(pts[42], Catch::Matchers::WithinAbs(-0.23230248184497396965,x_tolerance));
REQUIRE_THAT(wgt[42], Catch::Matchers::WithinAbs(0.030404079526454820016,w_tolerance));
REQUIRE_THAT(pts[43], Catch::Matchers::WithinAbs(-0.20178986409573599724,x_tolerance));
REQUIRE_THAT(wgt[43], Catch::Matchers::WithinAbs(0.030616186583980448496,w_tolerance));
REQUIRE_THAT(pts[44], Catch::Matchers::WithinAbs(-0.17108008053860327489,x_tolerance));
REQUIRE_THAT(wgt[44], Catch::Matchers::WithinAbs(0.030798379031152590428,w_tolerance));
REQUIRE_THAT(pts[45], Catch::Matchers::WithinAbs(-0.14020313723611397321,x_tolerance));
REQUIRE_THAT(wgt[45], Catch::Matchers::WithinAbs(0.030950478850490988234,w_tolerance));
REQUIRE_THAT(pts[46], Catch::Matchers::WithinAbs(-0.10918920358006111500,x_tolerance));
REQUIRE_THAT(wgt[46], Catch::Matchers::WithinAbs(0.031072337427566516588,w_tolerance));
REQUIRE_THAT(pts[47], Catch::Matchers::WithinAbs(-0.078068582813436636695,x_tolerance));
REQUIRE_THAT(wgt[47], Catch::Matchers::WithinAbs(0.031163835696209906784,w_tolerance));
REQUIRE_THAT(pts[48], Catch::Matchers::WithinAbs(-0.046871682421591631615,x_tolerance));
REQUIRE_THAT(wgt[48], Catch::Matchers::WithinAbs(0.031224884254849357732,w_tolerance));
REQUIRE_THAT(pts[49], Catch::Matchers::WithinAbs(-0.015628984421543082872,x_tolerance));
REQUIRE_THAT(wgt[49], Catch::Matchers::WithinAbs(0.031255423453863356948,w_tolerance));
REQUIRE_THAT(pts[50], Catch::Matchers::WithinAbs(0.015628984421543082872,x_tolerance));
REQUIRE_THAT(wgt[50], Catch::Matchers::WithinAbs(0.031255423453863356948,w_tolerance));
REQUIRE_THAT(pts[51], Catch::Matchers::WithinAbs(0.046871682421591631615,x_tolerance));
REQUIRE_THAT(wgt[51], Catch::Matchers::WithinAbs(0.031224884254849357732,w_tolerance));
REQUIRE_THAT(pts[52], Catch::Matchers::WithinAbs(0.078068582813436636695,x_tolerance));
REQUIRE_THAT(wgt[52], Catch::Matchers::WithinAbs(0.031163835696209906784,w_tolerance));
REQUIRE_THAT(pts[53], Catch::Matchers::WithinAbs(0.10918920358006111500,x_tolerance));
REQUIRE_THAT(wgt[53], Catch::Matchers::WithinAbs(0.031072337427566516588,w_tolerance));
REQUIRE_THAT(pts[54], Catch::Matchers::WithinAbs(0.14020313723611397321,x_tolerance));
REQUIRE_THAT(wgt[54], Catch::Matchers::WithinAbs(0.030950478850490988234,w_tolerance));
REQUIRE_THAT(pts[55], Catch::Matchers::WithinAbs(0.17108008053860327489,x_tolerance));
REQUIRE_THAT(wgt[55], Catch::Matchers::WithinAbs(0.030798379031152590428,w_tolerance));
REQUIRE_THAT(pts[56], Catch::Matchers::WithinAbs(0.20178986409573599724,x_tolerance));
REQUIRE_THAT(wgt[56], Catch::Matchers::WithinAbs(0.030616186583980448496,w_tolerance));
REQUIRE_THAT(pts[57], Catch::Matchers::WithinAbs(0.23230248184497396965,x_tolerance));
REQUIRE_THAT(wgt[57], Catch::Matchers::WithinAbs(0.030404079526454820016,w_tolerance));
REQUIRE_THAT(pts[58], Catch::Matchers::WithinAbs(0.26258812037150347917,x_tolerance));
REQUIRE_THAT(wgt[58], Catch::Matchers::WithinAbs(0.030162265105169144919,w_tolerance));
REQUIRE_THAT(pts[59], Catch::Matchers::WithinAbs(0.29261718803847196474,x_tolerance));
REQUIRE_THAT(wgt[59], Catch::Matchers::WithinAbs(0.029890979593332830917,w_tolerance));
REQUIRE_THAT(pts[60], Catch::Matchers::WithinAbs(0.32236034390052915172,x_tolerance));
REQUIRE_THAT(wgt[60], Catch::Matchers::WithinAbs(0.029590488059912642512,w_tolerance));
REQUIRE_THAT(pts[61], Catch::Matchers::WithinAbs(0.35178852637242172097,x_tolerance));
REQUIRE_THAT(wgt[61], Catch::Matchers::WithinAbs(0.029261084110638276620,w_tolerance));
REQUIRE_THAT(pts[62], Catch::Matchers::WithinAbs(0.38087298162462995676,x_tolerance));
REQUIRE_THAT(wgt[62], Catch::Matchers::WithinAbs(0.028903089601125203135,w_tolerance));
REQUIRE_THAT(pts[63], Catch::Matchers::WithinAbs(0.40958529167830154253,x_tolerance));
REQUIRE_THAT(wgt[63], Catch::Matchers::WithinAbs(0.028516854322395097991,w_tolerance));
REQUIRE_THAT(pts[64], Catch::Matchers::WithinAbs(0.43789740217203151311,x_tolerance));
REQUIRE_THAT(wgt[64], Catch::Matchers::WithinAbs(0.028102755659101173318,w_tolerance));
REQUIRE_THAT(pts[65], Catch::Matchers::WithinAbs(0.46578164977335804225,x_tolerance));
REQUIRE_THAT(wgt[65], Catch::Matchers::WithinAbs(0.027661198220792388294,w_tolerance));
REQUIRE_THAT(pts[66], Catch::Matchers::WithinAbs(0.49321078920819093357,x_tolerance));
REQUIRE_THAT(wgt[66], Catch::Matchers::WithinAbs(0.027192613446576880136,w_tolerance));
REQUIRE_THAT(pts[67], Catch::Matchers::WithinAbs(0.52015801988176305665,x_tolerance));
REQUIRE_THAT(wgt[67], Catch::Matchers::WithinAbs(0.026697459183570962660,w_tolerance));
REQUIRE_THAT(pts[68], Catch::Matchers::WithinAbs(0.54659701206509416747,x_tolerance));
REQUIRE_THAT(wgt[68], Catch::Matchers::WithinAbs(0.026176219239545676342,w_tolerance));
REQUIRE_THAT(pts[69], Catch::Matchers::WithinAbs(0.57250193262138119132,x_tolerance));
REQUIRE_THAT(wgt[69], Catch::Matchers::WithinAbs(0.025629402910208116076,w_tolerance));
REQUIRE_THAT(pts[70], Catch::Matchers::WithinAbs(0.59784747024717872126,x_tolerance));
REQUIRE_THAT(wgt[70], Catch::Matchers::WithinAbs(0.025057544481579589704,w_tolerance));
REQUIRE_THAT(pts[71], Catch::Matchers::WithinAbs(0.62260886020370777160,x_tolerance));
REQUIRE_THAT(wgt[71], Catch::Matchers::WithinAbs(0.024461202707957052720,w_tolerance));
REQUIRE_THAT(pts[72], Catch::Matchers::WithinAbs(0.64676190851412927983,x_tolerance));
REQUIRE_THAT(wgt[72], Catch::Matchers::WithinAbs(0.023840960265968205963,w_tolerance));
REQUIRE_THAT(pts[73], Catch::Matchers::WithinAbs(0.67028301560314101580,x_tolerance));
REQUIRE_THAT(wgt[73], Catch::Matchers::WithinAbs(0.023197423185254121622,w_tolerance));
REQUIRE_THAT(pts[74], Catch::Matchers::WithinAbs(0.69314919935580196595,x_tolerance));
REQUIRE_THAT(wgt[74], Catch::Matchers::WithinAbs(0.022531220256336272702,w_tolerance));
REQUIRE_THAT(pts[75], Catch::Matchers::WithinAbs(0.71533811757305644646,x_tolerance));
REQUIRE_THAT(wgt[75], Catch::Matchers::WithinAbs(0.021843002416247386314,w_tolerance));
REQUIRE_THAT(pts[76], Catch::Matchers::WithinAbs(0.73682808980202070551,x_tolerance));
REQUIRE_THAT(wgt[76], Catch::Matchers::WithinAbs(0.021133442112527641543,w_tolerance));
REQUIRE_THAT(pts[77], Catch::Matchers::WithinAbs(0.75759811851970717604,x_tolerance));
REQUIRE_THAT(wgt[77], Catch::Matchers::WithinAbs(0.020403232646209432767,w_tolerance));
REQUIRE_THAT(pts[78], Catch::Matchers::WithinAbs(0.77762790964949547563,x_tolerance));
REQUIRE_THAT(wgt[78], Catch::Matchers::WithinAbs(0.019653087494435305865,w_tolerance));
REQUIRE_THAT(pts[79], Catch::Matchers::WithinAbs(0.79689789239031447639,x_tolerance));
REQUIRE_THAT(wgt[79], Catch::Matchers::WithinAbs(0.018883739613374904553,w_tolerance));
REQUIRE_THAT(pts[80], Catch::Matchers::WithinAbs(0.81538923833917625439,x_tolerance));
REQUIRE_THAT(wgt[80], Catch::Matchers::WithinAbs(0.018095940722128116664,w_tolerance));
REQUIRE_THAT(pts[81], Catch::Matchers::WithinAbs(0.83308387988840082354,x_tolerance));
REQUIRE_THAT(wgt[81], Catch::Matchers::WithinAbs(0.017290460568323582439,w_tolerance));
REQUIRE_THAT(pts[82], Catch::Matchers::WithinAbs(0.84996452787959128429,x_tolerance));
REQUIRE_THAT(wgt[82], Catch::Matchers::WithinAbs(0.016468086176145212643,w_tolerance));
REQUIRE_THAT(pts[83], Catch::Matchers::WithinAbs(0.86601468849716462341,x_tolerance));
REQUIRE_THAT(wgt[83], Catch::Matchers::WithinAbs(0.015629621077546002724,w_tolerance));
REQUIRE_THAT(pts[84], Catch::Matchers::WithinAbs(0.88121867938501841557,x_tolerance));
REQUIRE_THAT(wgt[84], Catch::Matchers::WithinAbs(0.014775884527441301769,w_tolerance));
REQUIRE_THAT(pts[85], Catch::Matchers::WithinAbs(0.89556164497072698670,x_tolerance));
REQUIRE_THAT(wgt[85], Catch::Matchers::WithinAbs(0.013907710703718772688,w_tolerance));
REQUIRE_THAT(pts[86], Catch::Matchers::WithinAbs(0.90902957098252969047,x_tolerance));
REQUIRE_THAT(wgt[86], Catch::Matchers::WithinAbs(0.013025947892971542286,w_tolerance));
REQUIRE_THAT(pts[87], Catch::Matchers::WithinAbs(0.92160929814533395267,x_tolerance));
REQUIRE_THAT(wgt[87], Catch::Matchers::WithinAbs(0.012131457662979497408,w_tolerance));
REQUIRE_THAT(pts[88], Catch::Matchers::WithinAbs(0.93328853504307954592,x_tolerance));
REQUIRE_THAT(wgt[88], Catch::Matchers::WithinAbs(0.011225114023185977117,w_tolerance));
REQUIRE_THAT(pts[89], Catch::Matchers::WithinAbs(0.94405587013625597796,x_tolerance));
REQUIRE_THAT(wgt[89], Catch::Matchers::WithinAbs(0.010307802574868969586,w_tolerance));
REQUIRE_THAT(pts[90], Catch::Matchers::WithinAbs(0.95390078292549174285,x_tolerance));
REQUIRE_THAT(wgt[90], Catch::Matchers::WithinAbs(0.0093804196536944579514,w_tolerance));
REQUIRE_THAT(pts[91], Catch::Matchers::WithinAbs(0.96281365425581552729,x_tolerance));
REQUIRE_THAT(wgt[91], Catch::Matchers::WithinAbs(0.0084438714696689714026,w_tolerance));
REQUIRE_THAT(pts[92], Catch::Matchers::WithinAbs(0.97078577576370633193,x_tolerance));
REQUIRE_THAT(wgt[92], Catch::Matchers::WithinAbs(0.0074990732554647115788,w_tolerance));
REQUIRE_THAT(pts[93], Catch::Matchers::WithinAbs(0.97780935848691828855,x_tolerance));
REQUIRE_THAT(wgt[93], Catch::Matchers::WithinAbs(0.0065469484508453227642,w_tolerance));
REQUIRE_THAT(pts[94], Catch::Matchers::WithinAbs(0.98387754070605701550,x_tolerance));
REQUIRE_THAT(wgt[94], Catch::Matchers::WithinAbs(0.0055884280038655151572,w_tolerance));
REQUIRE_THAT(pts[95], Catch::Matchers::WithinAbs(0.98898439524299174800,x_tolerance));
REQUIRE_THAT(wgt[95], Catch::Matchers::WithinAbs(0.0046244500634221193511,w_tolerance));
REQUIRE_THAT(pts[96], Catch::Matchers::WithinAbs(0.99312493703744345965,x_tolerance));
REQUIRE_THAT(wgt[96], Catch::Matchers::WithinAbs(0.0036559612013263751823,w_tolerance));
REQUIRE_THAT(pts[97], Catch::Matchers::WithinAbs(0.99629513473312514919,x_tolerance));
REQUIRE_THAT(wgt[97], Catch::Matchers::WithinAbs(0.0026839253715534824194,w_tolerance));
REQUIRE_THAT(pts[98], Catch::Matchers::WithinAbs(0.99849195063959581840,x_tolerance));
REQUIRE_THAT(wgt[98], Catch::Matchers::WithinAbs(0.0017093926535181052395,w_tolerance));
REQUIRE_THAT(pts[99], Catch::Matchers::WithinAbs(0.99971372677344123368,x_tolerance));
REQUIRE_THAT(wgt[99], Catch::Matchers::WithinAbs(0.00073463449050567173032,w_tolerance));
}

