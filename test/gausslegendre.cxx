
/* THIS FILE IS AUTOGENERATED BY generate_quadrature_tests.py.
   DO NOT EDIT THIS FILE, EDIT THE AUTOGENERATOR INSTEAD.
*/

// clang-format off
#include "catch2/catch_all.hpp"
#include <integratorxx/quadratures/gausslegendre.hpp>
#include <numeric>
#include <vector>
// clang-format on

const double x_tolerance = 10 * std::numeric_limits<double>::epsilon();
const double w_tolerance = 10 * std::numeric_limits<double>::epsilon();

TEST_CASE("2 point GaussLegendre", "[1d-quad]") {
  std::array<double, 2> ref_pts = {-0.57735026918962576451,
                                   0.57735026918962576451};
  std::array<double, 2> ref_wgt = {1.0000000000000000000,
                                   1.0000000000000000000};
  IntegratorXX::GaussLegendre<double, double> quad(2);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 2; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("3 point GaussLegendre", "[1d-quad]") {
  std::array<double, 3> ref_pts = {-0.77459666924148337704, 0,
                                   0.77459666924148337704};
  std::array<double, 3> ref_wgt = {
      0.55555555555555555556, 0.88888888888888888889, 0.55555555555555555556};
  IntegratorXX::GaussLegendre<double, double> quad(3);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 3; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("4 point GaussLegendre", "[1d-quad]") {
  std::array<double, 4> ref_pts = {
      -0.86113631159405257522, -0.33998104358485626480, 0.33998104358485626480,
      0.86113631159405257522};
  std::array<double, 4> ref_wgt = {
      0.34785484513745385737, 0.65214515486254614263, 0.65214515486254614263,
      0.34785484513745385737};
  IntegratorXX::GaussLegendre<double, double> quad(4);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 4; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("5 point GaussLegendre", "[1d-quad]") {
  std::array<double, 5> ref_pts = {
      -0.90617984593866399280, -0.53846931010568309104, 0,
      0.53846931010568309104, 0.90617984593866399280};
  std::array<double, 5> ref_wgt = {
      0.23692688505618908751, 0.47862867049936646804, 0.56888888888888888889,
      0.47862867049936646804, 0.23692688505618908751};
  IntegratorXX::GaussLegendre<double, double> quad(5);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 5; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("6 point GaussLegendre", "[1d-quad]") {
  std::array<double, 6> ref_pts = {
      -0.93246951420315202781, -0.66120938646626451366, -0.23861918608319690863,
      0.23861918608319690863,  0.66120938646626451366,  0.93246951420315202781};
  std::array<double, 6> ref_wgt = {
      0.17132449237917034504, 0.36076157304813860757, 0.46791393457269104739,
      0.46791393457269104739, 0.36076157304813860757, 0.17132449237917034504};
  IntegratorXX::GaussLegendre<double, double> quad(6);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 6; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("7 point GaussLegendre", "[1d-quad]") {
  std::array<double, 7> ref_pts = {
      -0.94910791234275852453, -0.74153118559939443986,
      -0.40584515137739716691, 0,
      0.40584515137739716691,  0.74153118559939443986,
      0.94910791234275852453};
  std::array<double, 7> ref_wgt = {
      0.12948496616886969327, 0.27970539148927666790, 0.38183005050511894495,
      0.41795918367346938776, 0.38183005050511894495, 0.27970539148927666790,
      0.12948496616886969327};
  IntegratorXX::GaussLegendre<double, double> quad(7);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 7; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("8 point GaussLegendre", "[1d-quad]") {
  std::array<double, 8> ref_pts = {
      -0.96028985649753623168, -0.79666647741362673959, -0.52553240991632898582,
      -0.18343464249564980494, 0.18343464249564980494,  0.52553240991632898582,
      0.79666647741362673959,  0.96028985649753623168};
  std::array<double, 8> ref_wgt = {
      0.10122853629037625915, 0.22238103445337447054, 0.31370664587788728734,
      0.36268378337836198297, 0.36268378337836198297, 0.31370664587788728734,
      0.22238103445337447054, 0.10122853629037625915};
  IntegratorXX::GaussLegendre<double, double> quad(8);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 8; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("9 point GaussLegendre", "[1d-quad]") {
  std::array<double, 9> ref_pts = {-0.96816023950762608984,
                                   -0.83603110732663579430,
                                   -0.61337143270059039731,
                                   -0.32425342340380892904,
                                   0,
                                   0.32425342340380892904,
                                   0.61337143270059039731,
                                   0.83603110732663579430,
                                   0.96816023950762608984};
  std::array<double, 9> ref_wgt = {
      0.081274388361574411972, 0.18064816069485740406, 0.26061069640293546232,
      0.31234707704000284007,  0.33023935500125976316, 0.31234707704000284007,
      0.26061069640293546232,  0.18064816069485740406, 0.081274388361574411972};
  IntegratorXX::GaussLegendre<double, double> quad(9);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 9; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("10 point GaussLegendre", "[1d-quad]") {
  std::array<double, 10> ref_pts = {
      -0.97390652851717172008, -0.86506336668898451073, -0.67940956829902440623,
      -0.43339539412924719080, -0.14887433898163121088, 0.14887433898163121088,
      0.43339539412924719080,  0.67940956829902440623,  0.86506336668898451073,
      0.97390652851717172008};
  std::array<double, 10> ref_wgt = {
      0.066671344308688137594, 0.14945134915058059315, 0.21908636251598204400,
      0.26926671930999635509,  0.29552422471475287017, 0.29552422471475287017,
      0.26926671930999635509,  0.21908636251598204400, 0.14945134915058059315,
      0.066671344308688137594};
  IntegratorXX::GaussLegendre<double, double> quad(10);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 10; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("11 point GaussLegendre", "[1d-quad]") {
  std::array<double, 11> ref_pts = {
      -0.97822865814605699280, -0.88706259976809529908, -0.73015200557404932409,
      -0.51909612920681181593, -0.26954315595234497233, 0,
      0.26954315595234497233,  0.51909612920681181593,  0.73015200557404932409,
      0.88706259976809529908,  0.97822865814605699280};
  std::array<double, 11> ref_wgt = {
      0.055668567116173666483, 0.12558036946490462463, 0.18629021092773425143,
      0.23319376459199047992,  0.26280454451024666218, 0.27292508677790063071,
      0.26280454451024666218,  0.23319376459199047992, 0.18629021092773425143,
      0.12558036946490462463,  0.055668567116173666483};
  IntegratorXX::GaussLegendre<double, double> quad(11);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 11; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("12 point GaussLegendre", "[1d-quad]") {
  std::array<double, 12> ref_pts = {
      -0.98156063424671925069, -0.90411725637047485668, -0.76990267419430468704,
      -0.58731795428661744730, -0.36783149899818019375, -0.12523340851146891547,
      0.12523340851146891547,  0.36783149899818019375,  0.58731795428661744730,
      0.76990267419430468704,  0.90411725637047485668,  0.98156063424671925069};
  std::array<double, 12> ref_wgt = {
      0.047175336386511827195, 0.10693932599531843096, 0.16007832854334622633,
      0.20316742672306592175,  0.23349253653835480876, 0.24914704581340278500,
      0.24914704581340278500,  0.23349253653835480876, 0.20316742672306592175,
      0.16007832854334622633,  0.10693932599531843096, 0.047175336386511827195};
  IntegratorXX::GaussLegendre<double, double> quad(12);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 12; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("13 point GaussLegendre", "[1d-quad]") {
  std::array<double, 13> ref_pts = {-0.98418305471858814947,
                                    -0.91759839922297796521,
                                    -0.80157809073330991279,
                                    -0.64234933944034022064,
                                    -0.44849275103644685288,
                                    -0.23045831595513479407,
                                    0,
                                    0.23045831595513479407,
                                    0.44849275103644685288,
                                    0.64234933944034022064,
                                    0.80157809073330991279,
                                    0.91759839922297796521,
                                    0.98418305471858814947};
  std::array<double, 13> ref_wgt = {
      0.040484004765315879520, 0.092121499837728447914, 0.13887351021978723846,
      0.17814598076194573828,  0.20781604753688850231,  0.22628318026289723841,
      0.23255155323087391019,  0.22628318026289723841,  0.20781604753688850231,
      0.17814598076194573828,  0.13887351021978723846,  0.092121499837728447914,
      0.040484004765315879520};
  IntegratorXX::GaussLegendre<double, double> quad(13);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 13; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("14 point GaussLegendre", "[1d-quad]") {
  std::array<double, 14> ref_pts = {
      -0.98628380869681233884, -0.92843488366357351734, -0.82720131506976499319,
      -0.68729290481168547015, -0.51524863635815409197, -0.31911236892788976044,
      -0.10805494870734366207, 0.10805494870734366207,  0.31911236892788976044,
      0.51524863635815409197,  0.68729290481168547015,  0.82720131506976499319,
      0.92843488366357351734,  0.98628380869681233884};
  std::array<double, 14> ref_wgt = {
      0.035119460331751863032, 0.080158087159760209806, 0.12151857068790318469,
      0.15720316715819353457,  0.18553839747793781374,  0.20519846372129560397,
      0.21526385346315779020,  0.21526385346315779020,  0.20519846372129560397,
      0.18553839747793781374,  0.15720316715819353457,  0.12151857068790318469,
      0.080158087159760209806, 0.035119460331751863032};
  IntegratorXX::GaussLegendre<double, double> quad(14);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 14; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("15 point GaussLegendre", "[1d-quad]") {
  std::array<double, 15> ref_pts = {
      -0.98799251802048542849, -0.93727339240070590431,
      -0.84820658341042721620, -0.72441773136017004742,
      -0.57097217260853884754, -0.39415134707756336990,
      -0.20119409399743452230, 0,
      0.20119409399743452230,  0.39415134707756336990,
      0.57097217260853884754,  0.72441773136017004742,
      0.84820658341042721620,  0.93727339240070590431,
      0.98799251802048542849};
  std::array<double, 15> ref_wgt = {
      0.030753241996117268355, 0.070366047488108124709,
      0.10715922046717193501,  0.13957067792615431445,
      0.16626920581699393355,  0.18616100001556221103,
      0.19843148532711157646,  0.20257824192556127288,
      0.19843148532711157646,  0.18616100001556221103,
      0.16626920581699393355,  0.13957067792615431445,
      0.10715922046717193501,  0.070366047488108124709,
      0.030753241996117268355};
  IntegratorXX::GaussLegendre<double, double> quad(15);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 15; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("16 point GaussLegendre", "[1d-quad]") {
  std::array<double, 16> ref_pts = {
      -0.98940093499164993260, -0.94457502307323257608,
      -0.86563120238783174388, -0.75540440835500303389,
      -0.61787624440264374845, -0.45801677765722738634,
      -0.28160355077925891323, -0.095012509837637440185,
      0.095012509837637440185, 0.28160355077925891323,
      0.45801677765722738634,  0.61787624440264374845,
      0.75540440835500303389,  0.86563120238783174388,
      0.94457502307323257608,  0.98940093499164993260};
  std::array<double, 16> ref_wgt = {
      0.027152459411754094852, 0.062253523938647892863, 0.095158511682492784810,
      0.12462897125553387205,  0.14959598881657673208,  0.16915651939500253819,
      0.18260341504492358887,  0.18945061045506849629,  0.18945061045506849629,
      0.18260341504492358887,  0.16915651939500253819,  0.14959598881657673208,
      0.12462897125553387205,  0.095158511682492784810, 0.062253523938647892863,
      0.027152459411754094852};
  IntegratorXX::GaussLegendre<double, double> quad(16);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 16; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("17 point GaussLegendre", "[1d-quad]") {
  std::array<double, 17> ref_pts = {
      -0.99057547531441733568, -0.95067552176876776122, -0.88023915372698590212,
      -0.78151400389680140693, -0.65767115921669076585, -0.51269053708647696789,
      -0.35123176345387631530, -0.17848418149584785585, 0,
      0.17848418149584785585,  0.35123176345387631530,  0.51269053708647696789,
      0.65767115921669076585,  0.78151400389680140693,  0.88023915372698590212,
      0.95067552176876776122,  0.99057547531441733568};
  std::array<double, 17> ref_wgt = {
      0.024148302868547931960, 0.055459529373987201129, 0.085036148317179180883,
      0.11188384719340397109,  0.13513636846852547329,  0.15404576107681028808,
      0.16800410215645004451,  0.17656270536699264633,  0.17944647035620652546,
      0.17656270536699264633,  0.16800410215645004451,  0.15404576107681028808,
      0.13513636846852547329,  0.11188384719340397109,  0.085036148317179180883,
      0.055459529373987201129, 0.024148302868547931960};
  IntegratorXX::GaussLegendre<double, double> quad(17);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 17; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("18 point GaussLegendre", "[1d-quad]") {
  std::array<double, 18> ref_pts = {
      -0.99156516842093094673,  -0.95582394957139775518,
      -0.89260246649755573921,  -0.80370495897252311568,
      -0.69168704306035320788,  -0.55977083107394753461,
      -0.41175116146284264604,  -0.25188622569150550959,
      -0.084775013041735301242, 0.084775013041735301242,
      0.25188622569150550959,   0.41175116146284264604,
      0.55977083107394753461,   0.69168704306035320788,
      0.80370495897252311568,   0.89260246649755573921,
      0.95582394957139775518,   0.99156516842093094673};
  std::array<double, 18> ref_wgt = {
      0.021616013526483310313, 0.049714548894969796453,
      0.076425730254889056529, 0.10094204410628716556,
      0.12255520671147846018,  0.14064291467065065120,
      0.15468467512626524493,  0.16427648374583272299,
      0.16914238296314359184,  0.16914238296314359184,
      0.16427648374583272299,  0.15468467512626524493,
      0.14064291467065065120,  0.12255520671147846018,
      0.10094204410628716556,  0.076425730254889056529,
      0.049714548894969796453, 0.021616013526483310313};
  IntegratorXX::GaussLegendre<double, double> quad(18);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 18; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("19 point GaussLegendre", "[1d-quad]") {
  std::array<double, 19> ref_pts = {
      -0.99240684384358440319, -0.96020815213483003085,
      -0.90315590361481790164, -0.82271465653714282498,
      -0.72096617733522937862, -0.60054530466168102347,
      -0.46457074137596094572, -0.31656409996362983199,
      -0.16035864564022537587, 0,
      0.16035864564022537587,  0.31656409996362983199,
      0.46457074137596094572,  0.60054530466168102347,
      0.72096617733522937862,  0.82271465653714282498,
      0.90315590361481790164,  0.96020815213483003085,
      0.99240684384358440319};
  std::array<double, 19> ref_wgt = {
      0.019461788229726477036, 0.044814226765699600333, 0.069044542737641226581,
      0.091490021622449999465, 0.11156664554733399472,  0.12875396253933622768,
      0.14260670217360661178,  0.15276604206585966678,  0.15896884339395434765,
      0.16105444984878369598,  0.15896884339395434765,  0.15276604206585966678,
      0.14260670217360661178,  0.12875396253933622768,  0.11156664554733399472,
      0.091490021622449999465, 0.069044542737641226581, 0.044814226765699600333,
      0.019461788229726477036};
  IntegratorXX::GaussLegendre<double, double> quad(19);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 19; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("20 point GaussLegendre", "[1d-quad]") {
  std::array<double, 20> ref_pts = {
      -0.99312859918509492479, -0.96397192727791379127,
      -0.91223442825132590587, -0.83911697182221882339,
      -0.74633190646015079261, -0.63605368072651502545,
      -0.51086700195082709800, -0.37370608871541956067,
      -0.22778585114164507808, -0.076526521133497333755,
      0.076526521133497333755, 0.22778585114164507808,
      0.37370608871541956067,  0.51086700195082709800,
      0.63605368072651502545,  0.74633190646015079261,
      0.83911697182221882339,  0.91223442825132590587,
      0.96397192727791379127,  0.99312859918509492479};
  std::array<double, 20> ref_wgt = {
      0.017614007139152118312, 0.040601429800386941331, 0.062672048334109063570,
      0.083276741576704748725, 0.10193011981724043504,  0.11819453196151841731,
      0.13168863844917662690,  0.14209610931838205133,  0.14917298647260374679,
      0.15275338713072585070,  0.15275338713072585070,  0.14917298647260374679,
      0.14209610931838205133,  0.13168863844917662690,  0.11819453196151841731,
      0.10193011981724043504,  0.083276741576704748725, 0.062672048334109063570,
      0.040601429800386941331, 0.017614007139152118312};
  IntegratorXX::GaussLegendre<double, double> quad(20);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 20; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("21 point GaussLegendre", "[1d-quad]") {
  std::array<double, 21> ref_pts = {-0.99375217062038950026,
                                    -0.96722683856630629432,
                                    -0.92009933415040082879,
                                    -0.85336336458331728365,
                                    -0.76843996347567790862,
                                    -0.66713880419741231931,
                                    -0.55161883588721980706,
                                    -0.42434212020743878357,
                                    -0.28802131680240109660,
                                    -0.14556185416089509094,
                                    0,
                                    0.14556185416089509094,
                                    0.28802131680240109660,
                                    0.42434212020743878357,
                                    0.55161883588721980706,
                                    0.66713880419741231931,
                                    0.76843996347567790862,
                                    0.85336336458331728365,
                                    0.92009933415040082879,
                                    0.96722683856630629432,
                                    0.99375217062038950026};
  std::array<double, 21> ref_wgt = {
      0.016017228257774333324, 0.036953789770852493800,
      0.057134425426857208284, 0.076100113628379302017,
      0.093444423456033861553, 0.10879729916714837766,
      0.12183141605372853420,  0.13226893863333746178,
      0.13988739479107315472,  0.14452440398997005906,
      0.14608113364969042719,  0.14452440398997005906,
      0.13988739479107315472,  0.13226893863333746178,
      0.12183141605372853420,  0.10879729916714837766,
      0.093444423456033861553, 0.076100113628379302017,
      0.057134425426857208284, 0.036953789770852493800,
      0.016017228257774333324};
  IntegratorXX::GaussLegendre<double, double> quad(21);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 21; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("22 point GaussLegendre", "[1d-quad]") {
  std::array<double, 22> ref_pts = {
      -0.99429458548239929207,  -0.97006049783542872712,
      -0.92695677218717400052,  -0.86581257772030013654,
      -0.78781680597920816200,  -0.69448726318668278005,
      -0.58764040350691159296,  -0.46935583798675702641,
      -0.34193582089208422516,  -0.20786042668822128548,
      -0.069739273319722221214, 0.069739273319722221214,
      0.20786042668822128548,   0.34193582089208422516,
      0.46935583798675702641,   0.58764040350691159296,
      0.69448726318668278005,   0.78781680597920816200,
      0.86581257772030013654,   0.92695677218717400052,
      0.97006049783542872712,   0.99429458548239929207};
  std::array<double, 22> ref_wgt = {
      0.014627995298272200685, 0.033774901584814154793, 0.052293335152683285940,
      0.069796468424520488095, 0.085941606217067727414, 0.10041414444288096493,
      0.11293229608053921839,  0.12325237681051242429,  0.13117350478706237073,
      0.13654149834601517135,  0.13925187285563199338,  0.13925187285563199338,
      0.13654149834601517135,  0.13117350478706237073,  0.12325237681051242429,
      0.11293229608053921839,  0.10041414444288096493,  0.085941606217067727414,
      0.069796468424520488095, 0.052293335152683285940, 0.033774901584814154793,
      0.014627995298272200685};
  IntegratorXX::GaussLegendre<double, double> quad(22);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 22; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("23 point GaussLegendre", "[1d-quad]") {
  std::array<double, 23> ref_pts = {
      -0.99476933499755212352, -0.97254247121811523196, -0.93297108682601610235,
      -0.87675235827044166738, -0.80488840161883989215, -0.71866136313195019446,
      -0.61960987576364615638, -0.50950147784600754969, -0.39030103803029083142,
      -0.26413568097034493053, -0.13325682429846611093, 0,
      0.13325682429846611093,  0.26413568097034493053,  0.39030103803029083142,
      0.50950147784600754969,  0.61960987576364615638,  0.71866136313195019446,
      0.80488840161883989215,  0.87675235827044166738,  0.93297108682601610235,
      0.97254247121811523196,  0.99476933499755212352};
  std::array<double, 23> ref_wgt = {
      0.013411859487141772081, 0.030988005856979444311, 0.048037671731084668572,
      0.064232421408525852127, 0.079281411776718954923, 0.092915766060035147477,
      0.10489209146454141007,  0.11499664022241136494,  0.12304908430672953047,
      0.12890572218808214998,  0.13246203940469661737,  0.13365457218610617535,
      0.13246203940469661737,  0.12890572218808214998,  0.12304908430672953047,
      0.11499664022241136494,  0.10489209146454141007,  0.092915766060035147477,
      0.079281411776718954923, 0.064232421408525852127, 0.048037671731084668572,
      0.030988005856979444311, 0.013411859487141772081};
  IntegratorXX::GaussLegendre<double, double> quad(23);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 23; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("24 point GaussLegendre", "[1d-quad]") {
  std::array<double, 24> ref_pts = {
      -0.99518721999702136018, -0.97472855597130949820,
      -0.93827455200273275852, -0.88641552700440103421,
      -0.82000198597390292195, -0.74012419157855436424,
      -0.64809365193697556925, -0.54542147138883953566,
      -0.43379350762604513849, -0.31504267969616337439,
      -0.19111886747361630916, -0.064056892862605626085,
      0.064056892862605626085, 0.19111886747361630916,
      0.31504267969616337439,  0.43379350762604513849,
      0.54542147138883953566,  0.64809365193697556925,
      0.74012419157855436424,  0.82000198597390292195,
      0.88641552700440103421,  0.93827455200273275852,
      0.97472855597130949820,  0.99518721999702136018};
  std::array<double, 24> ref_wgt = {
      0.012341229799987199547, 0.028531388628933663181,
      0.044277438817419806169, 0.059298584915436780746,
      0.073346481411080305734, 0.086190161531953275917,
      0.097618652104113888270, 0.10744427011596563478,
      0.11550566805372560135,  0.12167047292780339120,
      0.12583745634682829612,  0.12793819534675215697,
      0.12793819534675215697,  0.12583745634682829612,
      0.12167047292780339120,  0.11550566805372560135,
      0.10744427011596563478,  0.097618652104113888270,
      0.086190161531953275917, 0.073346481411080305734,
      0.059298584915436780746, 0.044277438817419806169,
      0.028531388628933663181, 0.012341229799987199547};
  IntegratorXX::GaussLegendre<double, double> quad(24);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 24; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("25 point GaussLegendre", "[1d-quad]") {
  std::array<double, 25> ref_pts = {-0.99555696979049809791,
                                    -0.97666392145951751150,
                                    -0.94297457122897433941,
                                    -0.89499199787827536885,
                                    -0.83344262876083400142,
                                    -0.75925926303735763058,
                                    -0.67356636847346836448,
                                    -0.57766293024122296772,
                                    -0.47300273144571496052,
                                    -0.36117230580938783774,
                                    -0.24386688372098843205,
                                    -0.12286469261071039639,
                                    0,
                                    0.12286469261071039639,
                                    0.24386688372098843205,
                                    0.36117230580938783774,
                                    0.47300273144571496052,
                                    0.57766293024122296772,
                                    0.67356636847346836448,
                                    0.75925926303735763058,
                                    0.83344262876083400142,
                                    0.89499199787827536885,
                                    0.94297457122897433941,
                                    0.97666392145951751150,
                                    0.99555696979049809791};
  std::array<double, 25> ref_wgt = {
      0.011393798501026287948, 0.026354986615032137262, 0.040939156701306312656,
      0.054904695975835191926, 0.068038333812356917207, 0.080140700335001018013,
      0.091028261982963649812, 0.10053594906705064420,  0.10851962447426365312,
      0.11485825914571164834,  0.11945576353578477223,  0.12224244299031004169,
      0.12317605372671545120,  0.12224244299031004169,  0.11945576353578477223,
      0.11485825914571164834,  0.10851962447426365312,  0.10053594906705064420,
      0.091028261982963649812, 0.080140700335001018013, 0.068038333812356917207,
      0.054904695975835191926, 0.040939156701306312656, 0.026354986615032137262,
      0.011393798501026287948};
  IntegratorXX::GaussLegendre<double, double> quad(25);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 25; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("26 point GaussLegendre", "[1d-quad]") {
  std::array<double, 26> ref_pts = {
      -0.99588570114561692900,  -0.97838544595647099110,
      -0.94715906666171425014,  -0.90263786198430707422,
      -0.84544594278849801880,  -0.77638594882067885619,
      -0.69642726041995726486,  -0.60669229301761806323,
      -0.50844071482450571770,  -0.40305175512348630648,
      -0.29200483948595689514,  -0.17685882035689018397,
      -0.059230093429313207094, 0.059230093429313207094,
      0.17685882035689018397,   0.29200483948595689514,
      0.40305175512348630648,   0.50844071482450571770,
      0.60669229301761806323,   0.69642726041995726486,
      0.77638594882067885619,   0.84544594278849801880,
      0.90263786198430707422,   0.94715906666171425014,
      0.97838544595647099110,   0.99588570114561692900};
  std::array<double, 26> ref_wgt = {
      0.010551372617343007156, 0.024417851092631908790, 0.037962383294362763950,
      0.050975825297147811998, 0.063274046329574835539, 0.074684149765659745887,
      0.085045894313485239210, 0.094213800355914148464, 0.10205916109442542324,
      0.10847184052857659066,  0.11336181654631966655,  0.11666044348529658204,
      0.11832141527926227652,  0.11832141527926227652,  0.11666044348529658204,
      0.11336181654631966655,  0.10847184052857659066,  0.10205916109442542324,
      0.094213800355914148464, 0.085045894313485239210, 0.074684149765659745887,
      0.063274046329574835539, 0.050975825297147811998, 0.037962383294362763950,
      0.024417851092631908790, 0.010551372617343007156};
  IntegratorXX::GaussLegendre<double, double> quad(26);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 26; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("27 point GaussLegendre", "[1d-quad]") {
  std::array<double, 27> ref_pts = {
      -0.99617926288898856694, -0.97992347596150122286,
      -0.95090055781470500685, -0.90948232067749110430,
      -0.85620790801829449030, -0.79177163907050822714,
      -0.71701347373942369929, -0.63290797194649514093,
      -0.54055156457945689490, -0.44114825175002688059,
      -0.33599390363850889973, -0.22645936543953685886,
      -0.11397258560952996693, 0,
      0.11397258560952996693,  0.22645936543953685886,
      0.33599390363850889973,  0.44114825175002688059,
      0.54055156457945689490,  0.63290797194649514093,
      0.71701347373942369929,  0.79177163907050822714,
      0.85620790801829449030,  0.90948232067749110430,
      0.95090055781470500685,  0.97992347596150122286,
      0.99617926288898856694};
  std::array<double, 27> ref_wgt = {
      0.0097989960512943602611, 0.022686231596180623196,
      0.035297053757419711023,  0.047449412520615062704,
      0.058983536859833599110,  0.069748823766245592984,
      0.079604867773057771263,  0.088423158543756950194,
      0.096088727370028507566,  0.10250163781774579867,
      0.10757828578853318721,   0.11125248835684519267,
      0.11347634610896514862,   0.11422086737895698904,
      0.11347634610896514862,   0.11125248835684519267,
      0.10757828578853318721,   0.10250163781774579867,
      0.096088727370028507566,  0.088423158543756950194,
      0.079604867773057771263,  0.069748823766245592984,
      0.058983536859833599110,  0.047449412520615062704,
      0.035297053757419711023,  0.022686231596180623196,
      0.0097989960512943602611};
  IntegratorXX::GaussLegendre<double, double> quad(27);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 27; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("28 point GaussLegendre", "[1d-quad]") {
  std::array<double, 28> ref_pts = {
      -0.99644249757395444995, -0.98130316537087275369,
      -0.95425928062893819725, -0.91563302639213207387,
      -0.86589252257439504894, -0.80564137091717917145,
      -0.73561087801363177203, -0.65665109403886496122,
      -0.56972047181140171931, -0.47587422495511826103,
      -0.37625151608907871022, -0.27206162763517807768,
      -0.16456928213338077128, -0.055079289884034270427,
      0.055079289884034270427, 0.16456928213338077128,
      0.27206162763517807768,  0.37625151608907871022,
      0.47587422495511826103,  0.56972047181140171931,
      0.65665109403886496122,  0.73561087801363177203,
      0.80564137091717917145,  0.86589252257439504894,
      0.91563302639213207387,  0.95425928062893819725,
      0.98130316537087275369,  0.99644249757395444995};
  std::array<double, 28> ref_wgt = {
      0.0091242825930945177388, 0.021132112592771259752,
      0.032901427782304379978,  0.044272934759004227840,
      0.055107345675716745432,  0.065272923966999595793,
      0.074646214234568779024,  0.083113417228901218390,
      0.090571744393032840942,  0.096930657997929915850,
      0.10211296757806076981,   0.10605576592284641791,
      0.10871119225829413525,   0.11004701301647519628,
      0.11004701301647519628,   0.10871119225829413525,
      0.10605576592284641791,   0.10211296757806076981,
      0.096930657997929915850,  0.090571744393032840942,
      0.083113417228901218390,  0.074646214234568779024,
      0.065272923966999595793,  0.055107345675716745432,
      0.044272934759004227840,  0.032901427782304379978,
      0.021132112592771259752,  0.0091242825930945177388};
  IntegratorXX::GaussLegendre<double, double> quad(28);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 28; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("29 point GaussLegendre", "[1d-quad]") {
  std::array<double, 29> ref_pts = {
      -0.99667944226059658616, -0.98254550526141317487, -0.95728559577808772580,
      -0.92118023295305878509, -0.87463780492010279042, -0.81818548761525244499,
      -0.75246285173447713391, -0.67821453760268651516, -0.59628179713822782038,
      -0.50759295512422764210, -0.41315288817400866389, -0.31403163786763993495,
      -0.21135228616600107451, -0.10627823013267923017, 0,
      0.10627823013267923017,  0.21135228616600107451,  0.31403163786763993495,
      0.41315288817400866389,  0.50759295512422764210,  0.59628179713822782038,
      0.67821453760268651516,  0.75246285173447713391,  0.81818548761525244499,
      0.87463780492010279042,  0.92118023295305878509,  0.95728559577808772580,
      0.98254550526141317487,  0.99667944226059658616};
  std::array<double, 29> ref_wgt = {
      0.0085169038787464096543, 0.019732085056122705984,
      0.030740492202093622644,  0.041402062518682836105,
      0.051594826902497923913,  0.061203090657079138542,
      0.070117933255051278570,  0.078238327135763783828,
      0.085472257366172527545,  0.091737757139258763348,
      0.096963834094408606302,  0.10109127375991496612,
      0.10407331007772937391,   0.10587615509732094141,
      0.10647938171831424425,   0.10587615509732094141,
      0.10407331007772937391,   0.10109127375991496612,
      0.096963834094408606302,  0.091737757139258763348,
      0.085472257366172527545,  0.078238327135763783828,
      0.070117933255051278570,  0.061203090657079138542,
      0.051594826902497923913,  0.041402062518682836105,
      0.030740492202093622644,  0.019732085056122705984,
      0.0085169038787464096543};
  IntegratorXX::GaussLegendre<double, double> quad(29);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 29; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("30 point GaussLegendre", "[1d-quad]") {
  std::array<double, 30> ref_pts = {
      -0.99689348407464954027,  -0.98366812327974720997,
      -0.96002186496830751222,  -0.92620004742927432588,
      -0.88256053579205268154,  -0.82956576238276839744,
      -0.76777743210482619492,  -0.69785049479331579693,
      -0.62052618298924286114,  -0.53662414814201989926,
      -0.44703376953808917678,  -0.35270472553087811347,
      -0.25463692616788984644,  -0.15386991360858354696,
      -0.051471842555317695833, 0.051471842555317695833,
      0.15386991360858354696,   0.25463692616788984644,
      0.35270472553087811347,   0.44703376953808917678,
      0.53662414814201989926,   0.62052618298924286114,
      0.69785049479331579693,   0.76777743210482619492,
      0.82956576238276839744,   0.88256053579205268154,
      0.92620004742927432588,   0.96002186496830751222,
      0.98366812327974720997,   0.99689348407464954027};
  std::array<double, 30> ref_wgt = {
      0.0079681924961666056155, 0.018466468311090959142,
      0.028784707883323369350,  0.038799192569627049597,
      0.048402672830594052903,  0.057493156217619066482,
      0.065974229882180495128,  0.073755974737705206268,
      0.080755895229420215355,  0.086899787201082979802,
      0.092122522237786128718,  0.096368737174644259639,
      0.099593420586795267063,  0.10176238974840550460,
      0.10285265289355884034,   0.10285265289355884034,
      0.10176238974840550460,   0.099593420586795267063,
      0.096368737174644259639,  0.092122522237786128718,
      0.086899787201082979802,  0.080755895229420215355,
      0.073755974737705206268,  0.065974229882180495128,
      0.057493156217619066482,  0.048402672830594052903,
      0.038799192569627049597,  0.028784707883323369350,
      0.018466468311090959142,  0.0079681924961666056155};
  IntegratorXX::GaussLegendre<double, double> quad(30);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 30; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("31 point GaussLegendre", "[1d-quad]") {
  std::array<double, 31> ref_pts = {
      -0.99708748181947707406,  -0.98468590966515248400,
      -0.96250392509294966179,  -0.93075699789664816496,
      -0.88976002994827104337,  -0.83992032014626734009,
      -0.78173314841662494041,  -0.71577678458685328391,
      -0.64270672292426034618,  -0.56324916140714926272,
      -0.47819378204490248044,  -0.38838590160823294306,
      -0.29471806998170161662,  -0.19812119933557062877,
      -0.099555312152341520325, 0,
      0.099555312152341520325,  0.19812119933557062877,
      0.29471806998170161662,   0.38838590160823294306,
      0.47819378204490248044,   0.56324916140714926272,
      0.64270672292426034618,   0.71577678458685328391,
      0.78173314841662494041,   0.83992032014626734009,
      0.88976002994827104337,   0.93075699789664816496,
      0.96250392509294966179,   0.98468590966515248400,
      0.99708748181947707406};
  std::array<double, 31> ref_wgt = {
      0.0074708315792487758587, 0.017318620790310582463,
      0.027009019184979421801,  0.036432273912385464024,
      0.045493707527201102902,  0.054103082424916853712,
      0.062174786561028426910,  0.069628583235410366168,
      0.076390386598776616426,  0.082392991761589263904,
      0.087576740608477876126,  0.091890113893641478215,
      0.095290242912319512807,  0.097743335386328725093,
      0.099225011226672307875,  0.099720544793426451428,
      0.099225011226672307875,  0.097743335386328725093,
      0.095290242912319512807,  0.091890113893641478215,
      0.087576740608477876126,  0.082392991761589263904,
      0.076390386598776616426,  0.069628583235410366168,
      0.062174786561028426910,  0.054103082424916853712,
      0.045493707527201102902,  0.036432273912385464024,
      0.027009019184979421801,  0.017318620790310582463,
      0.0074708315792487758587};
  IntegratorXX::GaussLegendre<double, double> quad(31);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 31; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("32 point GaussLegendre", "[1d-quad]") {
  std::array<double, 32> ref_pts = {
      -0.99726386184948156355, -0.98561151154526833540,
      -0.96476225558750643077, -0.93490607593773968917,
      -0.89632115576605212397, -0.84936761373256997013,
      -0.79448379596794240696, -0.73218211874028968039,
      -0.66304426693021520098, -0.58771575724076232904,
      -0.50689990893222939002, -0.42135127613063534536,
      -0.33186860228212764978, -0.23928736225213707454,
      -0.14447196158279649349, -0.048307665687738316235,
      0.048307665687738316235, 0.14447196158279649349,
      0.23928736225213707454,  0.33186860228212764978,
      0.42135127613063534536,  0.50689990893222939002,
      0.58771575724076232904,  0.66304426693021520098,
      0.73218211874028968039,  0.79448379596794240696,
      0.84936761373256997013,  0.89632115576605212397,
      0.93490607593773968917,  0.96476225558750643077,
      0.98561151154526833540,  0.99726386184948156355};
  std::array<double, 32> ref_wgt = {
      0.0070186100094700966004, 0.016274394730905670605,
      0.025392065309262059456,  0.034273862913021433103,
      0.042835898022226680657,  0.050998059262376176196,
      0.058684093478535547145,  0.065822222776361846838,
      0.072345794108848506225,  0.078193895787070306472,
      0.083311924226946755222,  0.087652093004403811143,
      0.091173878695763884713,  0.093844399080804565639,
      0.095638720079274859419,  0.096540088514727800567,
      0.096540088514727800567,  0.095638720079274859419,
      0.093844399080804565639,  0.091173878695763884713,
      0.087652093004403811143,  0.083311924226946755222,
      0.078193895787070306472,  0.072345794108848506225,
      0.065822222776361846838,  0.058684093478535547145,
      0.050998059262376176196,  0.042835898022226680657,
      0.034273862913021433103,  0.025392065309262059456,
      0.016274394730905670605,  0.0070186100094700966004};
  IntegratorXX::GaussLegendre<double, double> quad(32);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 32; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("33 point GaussLegendre", "[1d-quad]") {
  std::array<double, 33> ref_pts = {-0.99742469424645521727,
                                    -0.98645572623064248811,
                                    -0.96682290968999276893,
                                    -0.93869437261116835036,
                                    -0.90231676774343358304,
                                    -0.85800965267650406464,
                                    -0.80616235627416658980,
                                    -0.74723049644956215786,
                                    -0.68173195996974278627,
                                    -0.61024234583637902731,
                                    -0.53338990478634764355,
                                    -0.45185001727245069573,
                                    -0.36633925774807334107,
                                    -0.27760909715249702940,
                                    -0.18643929882799157234,
                                    -0.093631065854733385671,
                                    0,
                                    0.093631065854733385671,
                                    0.18643929882799157234,
                                    0.27760909715249702940,
                                    0.36633925774807334107,
                                    0.45185001727245069573,
                                    0.53338990478634764355,
                                    0.61024234583637902731,
                                    0.68173195996974278627,
                                    0.74723049644956215786,
                                    0.80616235627416658980,
                                    0.85800965267650406464,
                                    0.90231676774343358304,
                                    0.93869437261116835036,
                                    0.96682290968999276893,
                                    0.98645572623064248811,
                                    0.99742469424645521727};
  std::array<double, 33> ref_wgt = {
      0.0066062278475873780586, 0.015321701512934676128,
      0.023915548101749480351,  0.032300358632328953282,
      0.040401541331669591563,  0.048147742818711695670,
      0.055470846631663561285,  0.062306482530317480032,
      0.068594572818656712806,  0.074279854843954149343,
      0.079312364794886738364,  0.083647876067038707614,
      0.087248287618844337607,  0.090081958660638577240,
      0.092123986643316846213,  0.093356426065596116161,
      0.093768446160209996567,  0.093356426065596116161,
      0.092123986643316846213,  0.090081958660638577240,
      0.087248287618844337607,  0.083647876067038707614,
      0.079312364794886738364,  0.074279854843954149343,
      0.068594572818656712806,  0.062306482530317480032,
      0.055470846631663561285,  0.048147742818711695670,
      0.040401541331669591563,  0.032300358632328953282,
      0.023915548101749480351,  0.015321701512934676128,
      0.0066062278475873780586};
  IntegratorXX::GaussLegendre<double, double> quad(33);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 33; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("34 point GaussLegendre", "[1d-quad]") {
  std::array<double, 34> ref_pts = {
      -0.99757175379084191924,  -0.98722781640630948505,
      -0.96870826253334428176,  -0.94216239740510709163,
      -0.90780967771832446880,  -0.86593463833456446926,
      -0.81688422790093366459,  -0.76106487662987301419,
      -0.69893911321626290793,  -0.63102172708052854532,
      -0.55787550066974664274,  -0.48010654519032703419,
      -0.39835927775864594063,  -0.31331108133946324746,
      -0.22566669161644948387,  -0.13615235725918297589,
      -0.045509821953102542749, 0.045509821953102542749,
      0.13615235725918297589,   0.22566669161644948387,
      0.31331108133946324746,   0.39835927775864594063,
      0.48010654519032703419,   0.55787550066974664274,
      0.63102172708052854532,   0.69893911321626290793,
      0.76106487662987301419,   0.81688422790093366459,
      0.86593463833456446926,   0.90780967771832446880,
      0.94216239740510709163,   0.96870826253334428176,
      0.98722781640630948505,   0.99757175379084191924};
  std::array<double, 34> ref_wgt = {
      0.0062291405559086847186, 0.014450162748595035415,
      0.022563721985494970084,  0.030491380638446131809,
      0.038166593796387516322,  0.045525611523353272454,
      0.052507414572678106168,  0.059054135827524493194,
      0.065111521554076411379,  0.070629375814255724999,
      0.075561974660031931271,  0.079868444339771844739,
      0.083513099699845655187,  0.086465739747035749784,
      0.088701897835693869287,  0.090203044370640729574,
      0.090956740330259873615,  0.090956740330259873615,
      0.090203044370640729574,  0.088701897835693869287,
      0.086465739747035749784,  0.083513099699845655187,
      0.079868444339771844739,  0.075561974660031931271,
      0.070629375814255724999,  0.065111521554076411379,
      0.059054135827524493194,  0.052507414572678106168,
      0.045525611523353272454,  0.038166593796387516322,
      0.030491380638446131809,  0.022563721985494970084,
      0.014450162748595035415,  0.0062291405559086847186};
  IntegratorXX::GaussLegendre<double, double> quad(34);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 34; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("35 point GaussLegendre", "[1d-quad]") {
  std::array<double, 35> ref_pts = {
      -0.99770656909960029726,  -0.98793576444385149804,
      -0.97043761603922983321,  -0.94534514820782732954,
      -0.91285426135931761447,  -0.87321912502522233152,
      -0.82674989909222540683,  -0.77381025228691255527,
      -0.71481450155662878326,  -0.65022436466589038868,
      -0.58054534474976450993,  -0.50632277324148861502,
      -0.42813754151781425419,  -0.34660155443081394588,
      -0.26235294120929605797,  -0.17605106116598956997,
      -0.088371343275659263601, 0,
      0.088371343275659263601,  0.17605106116598956997,
      0.26235294120929605797,   0.34660155443081394588,
      0.42813754151781425419,   0.50632277324148861502,
      0.58054534474976450993,   0.65022436466589038868,
      0.71481450155662878326,   0.77381025228691255527,
      0.82674989909222540683,   0.87321912502522233152,
      0.91285426135931761447,   0.94534514820782732954,
      0.97043761603922983321,   0.98793576444385149804,
      0.99770656909960029726};
  std::array<double, 35> ref_wgt = {
      0.0058834334204430849758, 0.013650828348361492266,
      0.021322979911483580883,  0.028829260108894254049,
      0.036110115863463380533,  0.043108422326170218782,
      0.049769370401353529805,  0.056040816212370128578,
      0.061873671966080188887,  0.067222285269086903964,
      0.072044794772560064665,  0.076303457155442053539,
      0.079964942242324262933,  0.083000593728856588380,
      0.085386653392099125226,  0.087104446997183534243,
      0.088140530430275462971,  0.088486794907104290638,
      0.088140530430275462971,  0.087104446997183534243,
      0.085386653392099125226,  0.083000593728856588380,
      0.079964942242324262933,  0.076303457155442053539,
      0.072044794772560064665,  0.067222285269086903964,
      0.061873671966080188887,  0.056040816212370128578,
      0.049769370401353529805,  0.043108422326170218782,
      0.036110115863463380533,  0.028829260108894254049,
      0.021322979911483580883,  0.013650828348361492266,
      0.0058834334204430849758};
  IntegratorXX::GaussLegendre<double, double> quad(35);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 35; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("36 point GaussLegendre", "[1d-quad]") {
  std::array<double, 36> ref_pts = {
      -0.99783046248408583620, -0.98858647890221223807,
      -0.97202769104969794934, -0.94827298439950754520,
      -0.91749777451565906608, -0.87992980089039713198,
      -0.83584716699247530642, -0.78557623013220651283,
      -0.72948917159355658209, -0.66800123658552106210,
      -0.60156765813598053508, -0.53068028592624516164,
      -0.45586394443342026721, -0.37767254711968921632,
      -0.29668499534402827050, -0.21350089231686557894,
      -0.12873610380938478865, -0.043018198473708607227,
      0.043018198473708607227, 0.12873610380938478865,
      0.21350089231686557894,  0.29668499534402827050,
      0.37767254711968921632,  0.45586394443342026721,
      0.53068028592624516164,  0.60156765813598053508,
      0.66800123658552106210,  0.72948917159355658209,
      0.78557623013220651283,  0.83584716699247530642,
      0.87992980089039713198,  0.91749777451565906608,
      0.94827298439950754520,  0.97202769104969794934,
      0.98858647890221223807,  0.99783046248408583620};
  std::array<double, 36> ref_wgt = {
      0.0055657196642450453612, 0.012915947284065574404,
      0.020181515297735471532,  0.027298621498568779094,
      0.034213810770307229921,  0.040875750923644895474,
      0.047235083490265978417,  0.053244713977759919092,
      0.058860144245324817310,  0.064039797355015489556,
      0.068745323835736442614,  0.072941885005653061354,
      0.076598410645870674529,  0.079687828912071601909,
      0.082187266704339709517,  0.084078218979661934934,
      0.085346685739338627492,  0.085983275670394747490,
      0.085983275670394747490,  0.085346685739338627492,
      0.084078218979661934934,  0.082187266704339709517,
      0.079687828912071601909,  0.076598410645870674529,
      0.072941885005653061354,  0.068745323835736442614,
      0.064039797355015489556,  0.058860144245324817310,
      0.053244713977759919092,  0.047235083490265978417,
      0.040875750923644895474,  0.034213810770307229921,
      0.027298621498568779094,  0.020181515297735471532,
      0.012915947284065574404,  0.0055657196642450453612};
  IntegratorXX::GaussLegendre<double, double> quad(36);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 36; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("37 point GaussLegendre", "[1d-quad]") {
  std::array<double, 37> ref_pts = {-0.99794458247791364894,
                                    -0.98918596321431918668,
                                    -0.97349303005648574433,
                                    -0.95097234326209482133,
                                    -0.92178143741246374267,
                                    -0.88612496215548607895,
                                    -0.84425298734055596799,
                                    -0.79645920050990229339,
                                    -0.74307883398196526255,
                                    -0.68448630913095935745,
                                    -0.62109260840892448315,
                                    -0.55334239186158178124,
                                    -0.48171087780320555415,
                                    -0.40670050931832611010,
                                    -0.32883742988370699950,
                                    -0.24866779279136575881,
                                    -0.16675393023985197697,
                                    -0.083670408954769901943,
                                    0,
                                    0.083670408954769901943,
                                    0.16675393023985197697,
                                    0.24866779279136575881,
                                    0.32883742988370699950,
                                    0.40670050931832611010,
                                    0.48171087780320555415,
                                    0.55334239186158178124,
                                    0.62109260840892448315,
                                    0.68448630913095935745,
                                    0.74307883398196526255,
                                    0.79645920050990229339,
                                    0.84425298734055596799,
                                    0.88612496215548607895,
                                    0.92178143741246374267,
                                    0.95097234326209482133,
                                    0.97349303005648574433,
                                    0.98918596321431918668,
                                    0.99794458247791364894};
  std::array<double, 37> ref_wgt = {
      0.0052730572794979393518, 0.012238780100307556526,
      0.019129044489083966044,  0.025886036990558933523,
      0.032461639847521481067,  0.038809602501934544489,
      0.044885364662437166657,  0.050646297654824601604,
      0.056051987998274917809,  0.061064516523225986131,
      0.065648722872751249484,  0.069772451555700344885,
      0.073406777248488172725,  0.076526207570529237886,
      0.079108861837529380767,  0.081136624508465030510,
      0.082595272236437250891,  0.083474573625862787252,
      0.083768360993138904797,  0.083474573625862787252,
      0.082595272236437250891,  0.081136624508465030510,
      0.079108861837529380767,  0.076526207570529237886,
      0.073406777248488172725,  0.069772451555700344885,
      0.065648722872751249484,  0.061064516523225986131,
      0.056051987998274917809,  0.050646297654824601604,
      0.044885364662437166657,  0.038809602501934544489,
      0.032461639847521481067,  0.025886036990558933523,
      0.019129044489083966044,  0.012238780100307556526,
      0.0052730572794979393518};
  IntegratorXX::GaussLegendre<double, double> quad(37);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 37; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("38 point GaussLegendre", "[1d-quad]") {
  std::array<double, 38> ref_pts = {
      -0.99804993053568761981,  -0.98973945426638557194,
      -0.97484632859015350764,  -0.95346633093352959567,
      -0.92574133204858439683,  -0.89185573900463221680,
      -0.85203502193236218886,  -0.80654416760531681555,
      -0.75568590375397068074,  -0.69979868037918435591,
      -0.63925441582968170718,  -0.57445602104780708113,
      -0.50583471792793110324,  -0.43384716943237648437,
      -0.35897244047943501326,  -0.28170880979016526136,
      -0.20257045389211670320,  -0.12208402533786741987,
      -0.040785147904578239913, 0.040785147904578239913,
      0.12208402533786741987,   0.20257045389211670320,
      0.28170880979016526136,   0.35897244047943501326,
      0.43384716943237648437,   0.50583471792793110324,
      0.57445602104780708113,   0.63925441582968170718,
      0.69979868037918435591,   0.75568590375397068074,
      0.80654416760531681555,   0.85203502193236218886,
      0.89185573900463221680,   0.92574133204858439683,
      0.95346633093352959567,   0.97484632859015350764,
      0.98973945426638557194,   0.99804993053568761981};
  std::array<double, 38> ref_wgt = {
      0.0050028807496393456759, 0.011613444716468674178,
      0.018156577709613236899,  0.024579739738232375895,
      0.030839500545175054659,  0.036894081594024738165,
      0.042703158504674434236,  0.048228061860758683374,
      0.053432019910332319974,  0.058280399146997206022,
      0.062740933392133054053,  0.066783937979140411935,
      0.070382507066898954739,  0.073512692584743457145,
      0.076153663548446396066,  0.078287844658210948075,
      0.079901033243527821586,  0.080982493770597100623,
      0.081525029280385786699,  0.081525029280385786699,
      0.080982493770597100623,  0.079901033243527821586,
      0.078287844658210948075,  0.076153663548446396066,
      0.073512692584743457145,  0.070382507066898954739,
      0.066783937979140411935,  0.062740933392133054053,
      0.058280399146997206022,  0.053432019910332319974,
      0.048228061860758683374,  0.042703158504674434236,
      0.036894081594024738165,  0.030839500545175054659,
      0.024579739738232375895,  0.018156577709613236899,
      0.011613444716468674178,  0.0050028807496393456759};
  IntegratorXX::GaussLegendre<double, double> quad(38);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 38; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("39 point GaussLegendre", "[1d-quad]") {
  std::array<double, 39> ref_pts = {
      -0.99814738306643290601,  -0.99025153685468598364,
      -0.97609870933347105384,  -0.95577521232465227711,
      -0.92940914848673822970,  -0.89716711929299288785,
      -0.85925293799990615391,  -0.81590629743014310435,
      -0.76740124293106349983,  -0.71404443589453467913,
      -0.65617321343201091073,  -0.59415345495727798869,
      -0.52837726866043747390,  -0.45926051230913604866,
      -0.38724016397156145585,  -0.31277155924818592254,
      -0.23632551246183576734,  -0.15838533999783779992,
      -0.079443804608755477582, 0,
      0.079443804608755477582,  0.15838533999783779992,
      0.23632551246183576734,   0.31277155924818592254,
      0.38724016397156145585,   0.45926051230913604866,
      0.52837726866043747390,   0.59415345495727798869,
      0.65617321343201091073,   0.71404443589453467913,
      0.76740124293106349983,   0.81590629743014310435,
      0.85925293799990615391,   0.89716711929299288785,
      0.92940914848673822970,   0.95577521232465227711,
      0.97609870933347105384,   0.99025153685468598364,
      0.99814738306643290601};
  std::array<double, 39> ref_wgt = {
      0.0047529446916351013707, 0.011034788939164594243,
      0.017256229093724919041,  0.023369384832178164595,
      0.029334955983903378592,  0.035115111498131330761,
      0.040673276847933843939,  0.045974301108916631884,
      0.050984665292129405214,  0.055672690340916299907,
      0.060008736088596149575,  0.063965388138682388987,
      0.067517630966231265363,  0.070643005970608760770,
      0.073321753414268617381,  0.075536937322836057705,
      0.077274552544682016729,  0.078523613287371176725,
      0.079276222568368471010,  0.079527622139442852417,
      0.079276222568368471010,  0.078523613287371176725,
      0.077274552544682016729,  0.075536937322836057705,
      0.073321753414268617381,  0.070643005970608760770,
      0.067517630966231265363,  0.063965388138682388987,
      0.060008736088596149575,  0.055672690340916299907,
      0.050984665292129405214,  0.045974301108916631884,
      0.040673276847933843939,  0.035115111498131330761,
      0.029334955983903378592,  0.023369384832178164595,
      0.017256229093724919041,  0.011034788939164594243,
      0.0047529446916351013707};
  IntegratorXX::GaussLegendre<double, double> quad(39);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 39; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("40 point GaussLegendre", "[1d-quad]") {
  std::array<double, 40> ref_pts = {
      -0.99823770971055920035, -0.99072623869945700645,
      -0.97725994998377426266, -0.95791681921379165580,
      -0.93281280827867653336, -0.90209880696887429673,
      -0.86595950321225950382, -0.82461223083331166320,
      -0.77830565142651938769, -0.72731825518992710328,
      -0.67195668461417954838, -0.61255388966798023795,
      -0.54946712509512820208, -0.48307580168617871291,
      -0.41377920437160500153, -0.34199409082575847301,
      -0.26815218500725368114, -0.19269758070137109972,
      -0.11608407067525520848, -0.038772417506050821933,
      0.038772417506050821933, 0.11608407067525520848,
      0.19269758070137109972,  0.26815218500725368114,
      0.34199409082575847301,  0.41377920437160500153,
      0.48307580168617871291,  0.54946712509512820208,
      0.61255388966798023795,  0.67195668461417954838,
      0.72731825518992710328,  0.77830565142651938769,
      0.82461223083331166320,  0.86595950321225950382,
      0.90209880696887429673,  0.93281280827867653336,
      0.95791681921379165580,  0.97725994998377426266,
      0.99072623869945700645,  0.99823770971055920035};
  std::array<double, 40> ref_wgt = {
      0.0045212770985331912584, 0.010498284531152813615,
      0.016421058381907888713,  0.022245849194166957262,
      0.027937006980023401098,  0.033460195282547847393,
      0.038782167974472017640,  0.043870908185673271992,
      0.048695807635072232061,  0.053227846983936824355,
      0.057439769099391551367,  0.061306242492928939167,
      0.064804013456601038075,  0.067912045815233903826,
      0.070611647391286779695,  0.072886582395804059060,
      0.074723169057968264200,  0.076110361900626242372,
      0.077039818164247965588,  0.077505947978424811264,
      0.077505947978424811264,  0.077039818164247965588,
      0.076110361900626242372,  0.074723169057968264200,
      0.072886582395804059060,  0.070611647391286779695,
      0.067912045815233903826,  0.064804013456601038075,
      0.061306242492928939167,  0.057439769099391551367,
      0.053227846983936824355,  0.048695807635072232061,
      0.043870908185673271992,  0.038782167974472017640,
      0.033460195282547847393,  0.027937006980023401098,
      0.022245849194166957262,  0.016421058381907888713,
      0.010498284531152813615,  0.0045212770985331912584};
  IntegratorXX::GaussLegendre<double, double> quad(40);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 40; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("41 point GaussLegendre", "[1d-quad]") {
  std::array<double, 41> ref_pts = {-0.99832158857477144152,
                                    -0.99116710969901630825,
                                    -0.97833867356108338447,
                                    -0.95990689173034622610,
                                    -0.93597698749785382568,
                                    -0.90668594475810117296,
                                    -0.87220151169244140883,
                                    -0.83272120040136133124,
                                    -0.78847114504740937274,
                                    -0.73970480306992618106,
                                    -0.68670150203495128958,
                                    -0.62976483907219632049,
                                    -0.56922094161021586965,
                                    -0.50541659919940603271,
                                    -0.43871727705140708852,
                                    -0.36950502264048144143,
                                    -0.29817627734182486592,
                                    -0.22513960563342277561,
                                    -0.15081335486399216357,
                                    -0.075623258989162996924,
                                    0,
                                    0.075623258989162996924,
                                    0.15081335486399216357,
                                    0.22513960563342277561,
                                    0.29817627734182486592,
                                    0.36950502264048144143,
                                    0.43871727705140708852,
                                    0.50541659919940603271,
                                    0.56922094161021586965,
                                    0.62976483907219632049,
                                    0.68670150203495128958,
                                    0.73970480306992618106,
                                    0.78847114504740937274,
                                    0.83272120040136133124,
                                    0.87220151169244140883,
                                    0.90668594475810117296,
                                    0.93597698749785382568,
                                    0.95990689173034622610,
                                    0.97833867356108338447,
                                    0.99116710969901630825,
                                    0.99832158857477144152};
  std::array<double, 41> ref_wgt = {
      0.0043061403581648876839, 0.0099999387739059453385,
      0.015644938407818588531,  0.021201063368779553076,
      0.026635899207110445468,  0.031918211731699281787,
      0.037017716703507988435,  0.041905195195909689429,
      0.046552648369014342061,  0.050933454294617494781,
      0.055022519242578741880,  0.058796420949871944991,
      0.062233542580966316472,  0.065314196453527410436,
      0.068020736760876766736,  0.070337660620817497482,
      0.072251696861023073396,  0.073751882027223469939,
      0.074829623176221551891,  0.075478747092715824027,
      0.075695535647298372319,  0.075478747092715824027,
      0.074829623176221551891,  0.073751882027223469939,
      0.072251696861023073396,  0.070337660620817497482,
      0.068020736760876766736,  0.065314196453527410436,
      0.062233542580966316472,  0.058796420949871944991,
      0.055022519242578741880,  0.050933454294617494781,
      0.046552648369014342061,  0.041905195195909689429,
      0.037017716703507988435,  0.031918211731699281787,
      0.026635899207110445468,  0.021201063368779553076,
      0.015644938407818588531,  0.0099999387739059453385,
      0.0043061403581648876839};
  IntegratorXX::GaussLegendre<double, double> quad(41);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 41; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("42 point GaussLegendre", "[1d-quad]") {
  std::array<double, 42> ref_pts = {
      -0.99839961899006241502,  -0.99157728834086091979,
      -0.97934250806374819371,  -0.96175936533820448875,
      -0.93892355735498817853,  -0.91095972490412745258,
      -0.87802056981217274271,  -0.84028598326181690093,
      -0.79796205325548741323,  -0.75127993568948048957,
      -0.70049459055617121374,  -0.64588338886924783396,
      -0.58774459748510932284,  -0.52639574993119228759,
      -0.46217191207042192976,  -0.39542385204297505768,
      -0.32651612446541151220,  -0.25582507934287908397,
      -0.18373680656485455085,  -0.11064502720851986835,
      -0.036948943165351775813, 0.036948943165351775813,
      0.11064502720851986835,   0.18373680656485455085,
      0.25582507934287908397,   0.32651612446541151220,
      0.39542385204297505768,   0.46217191207042192976,
      0.52639574993119228759,   0.58774459748510932284,
      0.64588338886924783396,   0.70049459055617121374,
      0.75127993568948048957,   0.79796205325548741323,
      0.84028598326181690093,   0.87802056981217274271,
      0.91095972490412745258,   0.93892355735498817853,
      0.96175936533820448875,   0.97934250806374819371,
      0.99157728834086091979,   0.99839961899006241502};
  std::array<double, 42> ref_wgt = {
      0.0041059986046490846106, 0.0095362203017485024118,
      0.014922443697357494145,  0.020227869569052644757,
      0.025422959526113047887,  0.030479240699603468363,
      0.035369071097592110833,  0.040065735180692261761,
      0.044543577771965877874,  0.048778140792803245027,
      0.052746295699174070344,  0.056426369358018381646,
      0.059798262227586654313,  0.062843558045002576409,
      0.065545624364908978927,  0.067889703376521944855,
      0.069862992492594159766,  0.071454714265170982922,
      0.072656175243804104888,  0.073460813453467528264,
      0.073864234232172879996,  0.073864234232172879996,
      0.073460813453467528264,  0.072656175243804104888,
      0.071454714265170982922,  0.069862992492594159766,
      0.067889703376521944855,  0.065545624364908978927,
      0.062843558045002576409,  0.059798262227586654313,
      0.056426369358018381646,  0.052746295699174070344,
      0.048778140792803245027,  0.044543577771965877874,
      0.040065735180692261761,  0.035369071097592110833,
      0.030479240699603468363,  0.025422959526113047887,
      0.020227869569052644757,  0.014922443697357494145,
      0.0095362203017485024118, 0.0041059986046490846106};
  IntegratorXX::GaussLegendre<double, double> quad(42);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 42; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("43 point GaussLegendre", "[1d-quad]") {
  std::array<double, 43> ref_pts = {
      -0.99847233224250771352,  -0.99195955759324414642,
      -0.98027822098025533151,  -0.96348661301407999341,
      -0.94167195684763786182,  -0.91494790720613872946,
      -0.88345376521861686334,  -0.84735371620931504900,
      -0.80683596413693863528,  -0.76211174719495512146,
      -0.71341423526895705485,  -0.66099731375149813317,
      -0.60513425963960093573,  -0.54611631666008471914,
      -0.48425117678573472407,  -0.41986137602926925249,
      -0.35328261286430380665,  -0.28486199803291362711,
      -0.21495624486051820901,  -0.14392980951071331077,
      -0.072152990874586235422, 0,
      0.072152990874586235422,  0.14392980951071331077,
      0.21495624486051820901,   0.28486199803291362711,
      0.35328261286430380665,   0.41986137602926925249,
      0.48425117678573472407,   0.54611631666008471914,
      0.60513425963960093573,   0.66099731375149813317,
      0.71341423526895705485,   0.76211174719495512146,
      0.80683596413693863528,   0.84735371620931504900,
      0.88345376521861686334,   0.91494790720613872946,
      0.94167195684763786182,   0.96348661301407999341,
      0.98027822098025533151,   0.99195955759324414642,
      0.99847233224250771352};
  std::array<double, 43> ref_wgt = {
      0.0039194902538441272829, 0.0091039966374014033189,
      0.014248756431576486109,  0.019319901423683900396,
      0.024290456613838815902,  0.029134413261498494916,
      0.033826492086860292345,  0.038342222194132657572,
      0.042658057197982083764,  0.046751494754346580011,
      0.050601192784390156524,  0.054187080318881786863,
      0.057490461956910519428,  0.060494115249991294520,
      0.063182380449396112326,  0.065541242126322797491,
      0.067558402229365169192,  0.069223344193656684282,
      0.070527387765085028126,  0.071463734252514141298,
      0.072027501971421974345,  0.072215751693798987977,
      0.072027501971421974345,  0.071463734252514141298,
      0.070527387765085028126,  0.069223344193656684282,
      0.067558402229365169192,  0.065541242126322797491,
      0.063182380449396112326,  0.060494115249991294520,
      0.057490461956910519428,  0.054187080318881786863,
      0.050601192784390156524,  0.046751494754346580011,
      0.042658057197982083764,  0.038342222194132657572,
      0.033826492086860292345,  0.029134413261498494916,
      0.024290456613838815902,  0.019319901423683900396,
      0.014248756431576486109,  0.0091039966374014033189,
      0.0039194902538441272829};
  IntegratorXX::GaussLegendre<double, double> quad(43);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 43; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("44 point GaussLegendre", "[1d-quad]") {
  std::array<double, 44> ref_pts = {
      -0.99854020063677422494, -0.99231639213851580848,
      -0.98115183307791396666, -0.96509965042249313939,
      -0.94423950911819409920, -0.91867525998417577432,
      -0.88853423828604320234, -0.85396659500471037873,
      -0.81514453964513501049, -0.77226147924875589902,
      -0.72553105366071700261, -0.67518607066612236533,
      -0.62147734590357584780, -0.56467245318547076842,
      -0.50505439138820231798, -0.44292017452541148383,
      -0.37857935201470713251, -0.31235246650278581224,
      -0.24456945692820125151, -0.17556801477551678575,
      -0.10569190170865324712, -0.035289236964135359058,
      0.035289236964135359058, 0.10569190170865324712,
      0.17556801477551678575,  0.24456945692820125151,
      0.31235246650278581224,  0.37857935201470713251,
      0.44292017452541148383,  0.50505439138820231798,
      0.56467245318547076842,  0.62147734590357584780,
      0.67518607066612236533,  0.72553105366071700261,
      0.77226147924875589902,  0.81514453964513501049,
      0.85396659500471037873,  0.88853423828604320234,
      0.91867525998417577432,  0.94423950911819409920,
      0.96509965042249313939,  0.98115183307791396666,
      0.99231639213851580848,  0.99854020063677422494};
  std::array<double, 44> ref_wgt = {
      0.0037454048031127775152, 0.0087004813675248441225,
      0.013619586755579985520,  0.018471481736814749172,
      0.023231481902019210629,  0.027875782821281010081,
      0.032381222812069820881,  0.036725347813808873643,
      0.040886512310346218908,  0.044843984081970031446,
      0.048578046448352037528,  0.052070096091704461881,
      0.055302735563728052549,  0.058259859877595495334,
      0.060926736701561968039,  0.063290079733203854950,
      0.065338114879181434984,  0.067060638906293652396,
      0.068449070269366660985,  0.069496491861572578037,
      0.070197685473558212587,  0.070549157789354068811,
      0.070549157789354068811,  0.070197685473558212587,
      0.069496491861572578037,  0.068449070269366660985,
      0.067060638906293652396,  0.065338114879181434984,
      0.063290079733203854950,  0.060926736701561968039,
      0.058259859877595495334,  0.055302735563728052549,
      0.052070096091704461881,  0.048578046448352037528,
      0.044843984081970031446,  0.040886512310346218908,
      0.036725347813808873643,  0.032381222812069820881,
      0.027875782821281010081,  0.023231481902019210629,
      0.018471481736814749172,  0.013619586755579985520,
      0.0087004813675248441225, 0.0037454048031127775152};
  IntegratorXX::GaussLegendre<double, double> quad(44);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 44; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("45 point GaussLegendre", "[1d-quad]") {
  std::array<double, 45> ref_pts = {-0.99860364518193663816,
                                    -0.99264999844720374175,
                                    -0.98196871503454056824,
                                    -0.96660831039689460474,
                                    -0.94664169099562906178,
                                    -0.92216393671900038810,
                                    -0.89329167175324173846,
                                    -0.86016247596066422534,
                                    -0.82293422050208633704,
                                    -0.78178431259390629131,
                                    -0.73690884894549035262,
                                    -0.68852168077120052523,
                                    -0.63685339445322335927,
                                    -0.58215021256935318668,
                                    -0.52467282046291606709,
                                    -0.46469512391963509858,
                                    -0.40250294385854191408,
                                    -0.33839265425060216164,
                                    -0.27266976975237756061,
                                    -0.20564748978326374572,
                                    -0.13764520598325302876,
                                    -0.068986980163144172490,
                                    0,
                                    0.068986980163144172490,
                                    0.13764520598325302876,
                                    0.20564748978326374572,
                                    0.27266976975237756061,
                                    0.33839265425060216164,
                                    0.40250294385854191408,
                                    0.46469512391963509858,
                                    0.52467282046291606709,
                                    0.58215021256935318668,
                                    0.63685339445322335927,
                                    0.68852168077120052523,
                                    0.73690884894549035262,
                                    0.78178431259390629131,
                                    0.82293422050208633704,
                                    0.86016247596066422534,
                                    0.89329167175324173846,
                                    0.92216393671900038810,
                                    0.94664169099562906178,
                                    0.96660831039689460474,
                                    0.98196871503454056824,
                                    0.99264999844720374175,
                                    0.99860364518193663816};
  std::array<double, 45> ref_wgt = {
      0.0035826631552835589312, 0.0083231892962182416457,
      0.013031104991582784321,  0.017677535257937590617,
      0.022239847550578732394,  0.026696213967577664806,
      0.031025374934515467163,  0.035206692201609016248,
      0.039220236729302447564,  0.043046880709164971152,
      0.046668387718373365268,  0.050067499237952029799,
      0.053228016731268951946,  0.056134878759786476644,
      0.058774232718841738574,  0.061133500831066522502,
      0.063201440073819937750,  0.064968195750723430854,
      0.066425348449842528083,  0.067565954163607536271,
      0.068384577378669674532,  0.068877316977661322882,
      0.069041824829232020111,  0.068877316977661322882,
      0.068384577378669674532,  0.067565954163607536271,
      0.066425348449842528083,  0.064968195750723430854,
      0.063201440073819937750,  0.061133500831066522502,
      0.058774232718841738574,  0.056134878759786476644,
      0.053228016731268951946,  0.050067499237952029799,
      0.046668387718373365268,  0.043046880709164971152,
      0.039220236729302447564,  0.035206692201609016248,
      0.031025374934515467163,  0.026696213967577664806,
      0.022239847550578732394,  0.017677535257937590617,
      0.013031104991582784321,  0.0083231892962182416457,
      0.0035826631552835589312};
  IntegratorXX::GaussLegendre<double, double> quad(45);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 45; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("46 point GaussLegendre", "[1d-quad]") {
  std::array<double, 46> ref_pts = {
      -0.99866304213381798113,  -0.99296234890617436407,
      -0.98273366980416686348,  -0.96802139185399194274,
      -0.94889236344608979562,  -0.92543379880675395098,
      -0.89775271153394196570,  -0.86597539486685806292,
      -0.83024683706606605303,  -0.79073005707527425519,
      -0.74760535961566605400,  -0.70106951202040569751,
      -0.65133484620199771511,  -0.59862828971271515318,
      -0.54319033026180263527,  -0.48527391838816466277,
      -0.42514331328282839732,  -0.36307287702099571012,
      -0.29934582270187001548,  -0.23425292220626976863,
      -0.16809117946710352861,  -0.10116247530558423952,
      -0.033772190016052041520, 0.033772190016052041520,
      0.10116247530558423952,   0.16809117946710352861,
      0.23425292220626976863,   0.29934582270187001548,
      0.36307287702099571012,   0.42514331328282839732,
      0.48527391838816466277,   0.54319033026180263527,
      0.59862828971271515318,   0.65133484620199771511,
      0.70106951202040569751,   0.74760535961566605400,
      0.79073005707527425519,   0.83024683706606605303,
      0.86597539486685806292,   0.89775271153394196570,
      0.92543379880675395098,   0.94889236344608979562,
      0.96802139185399194274,   0.98273366980416686348,
      0.99296234890617436407,   0.99866304213381798113};
  std::array<double, 46> ref_wgt = {
      0.0034303008681070482860, 0.0079698982297246224516,
      0.012479883770988684207,  0.016933514007836238046,
      0.021309998754136501054,  0.025589286397130010635,
      0.029751829552202755799,  0.033778627999106896521,
      0.037651305357386071328,  0.041352190109678729704,
      0.044864395277318126767,  0.048171895101712200530,
      0.051259598007143021335,  0.054113415385856754492,
      0.056720325843991235817,  0.059068434595546314808,
      0.061147027724650481015,  0.062946621064394508179,
      0.064459003467139069588,  0.065677274267781207379,
      0.066595874768454887376,  0.067210613600678175862,
      0.067518685849036458820,  0.067518685849036458820,
      0.067210613600678175862,  0.066595874768454887376,
      0.065677274267781207379,  0.064459003467139069588,
      0.062946621064394508179,  0.061147027724650481015,
      0.059068434595546314808,  0.056720325843991235817,
      0.054113415385856754492,  0.051259598007143021335,
      0.048171895101712200530,  0.044864395277318126767,
      0.041352190109678729704,  0.037651305357386071328,
      0.033778627999106896521,  0.029751829552202755799,
      0.025589286397130010635,  0.021309998754136501054,
      0.016933514007836238046,  0.012479883770988684207,
      0.0079698982297246224516, 0.0034303008681070482860};
  IntegratorXX::GaussLegendre<double, double> quad(46);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 46; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("47 point GaussLegendre", "[1d-quad]") {
  std::array<double, 47> ref_pts = {
      -0.99871872858421210918,  -0.99325521098776863469,
      -0.98345100307162370876,  -0.96934678732656449715,
      -0.95100396925770844259,  -0.92850269301236064820,
      -0.90194132943852535687,  -0.87143601579689631694,
      -0.83712013989990212128,  -0.79914375416774194292,
      -0.75767291844543863357,  -0.71288897340906430166,
      -0.66498774739033272914,  -0.61417869995637360860,
      -0.56068400593466419448,  -0.50473758386357791977,
      -0.44658407310485570273,  -0.38647776408466713958,
      -0.32468148633773590221,  -0.26146545921497457031,
      -0.19710611027911180796,  -0.13188486655451489705,
      -0.066086923916355675160, 0,
      0.066086923916355675160,  0.13188486655451489705,
      0.19710611027911180796,   0.26146545921497457031,
      0.32468148633773590221,   0.38647776408466713958,
      0.44658407310485570273,   0.50473758386357791977,
      0.56068400593466419448,   0.61417869995637360860,
      0.66498774739033272914,   0.71288897340906430166,
      0.75767291844543863357,   0.79914375416774194292,
      0.83712013989990212128,   0.87143601579689631694,
      0.90194132943852535687,   0.92850269301236064820,
      0.95100396925770844259,   0.96934678732656449715,
      0.98345100307162370876,   0.99325521098776863469,
      0.99871872858421210918};
  std::array<double, 47> ref_wgt = {
      0.0032874538425280148832, 0.0076386162958488336141,
      0.011962848464312320964,  0.016235333146433059671,
      0.020436938147668427642,  0.024549211659658818538,
      0.028554150700643386505,  0.032434235515184756768,
      0.036172496584174951613,  0.039752586122531003781,
      0.043158848648479538268,  0.046376389086505911204,
      0.049391137747361169605,  0.052189911780057144872,
      0.054760472781530225957,  0.057091580293231540222,
      0.059173040942338875976,  0.060995753008739645331,
      0.062551746220921662641,  0.063834216605717030631,
      0.064837556238945726703,  0.065557377766549740251,
      0.065990533588810474534,  0.066135129623655479653,
      0.065990533588810474534,  0.065557377766549740251,
      0.064837556238945726703,  0.063834216605717030631,
      0.062551746220921662641,  0.060995753008739645331,
      0.059173040942338875976,  0.057091580293231540222,
      0.054760472781530225957,  0.052189911780057144872,
      0.049391137747361169605,  0.046376389086505911204,
      0.043158848648479538268,  0.039752586122531003781,
      0.036172496584174951613,  0.032434235515184756768,
      0.028554150700643386505,  0.024549211659658818538,
      0.020436938147668427642,  0.016235333146433059671,
      0.011962848464312320964,  0.0076386162958488336141,
      0.0032874538425280148832};
  IntegratorXX::GaussLegendre<double, double> quad(47);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 47; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("48 point GaussLegendre", "[1d-quad]") {
  std::array<double, 48> ref_pts = {
      -0.99877100725242611860,  -0.99353017226635075755,
      -0.98412458372282685774,  -0.97059159254624725046,
      -0.95298770316043086072,  -0.93138669070655433311,
      -0.90587913671556967282,  -0.87657202027424788591,
      -0.84358826162439353071,  -0.80706620402944262708,
      -0.76715903251574033925,  -0.72403413092381465467,
      -0.67787237963266390521,  -0.62886739677651362400,
      -0.57722472608397270382,  -0.52316097472223303368,
      -0.46690290475095840454,  -0.40868648199071672992,
      -0.34875588629216073816,  -0.28736248735545557674,
      -0.22476379039468906122,  -0.16122235606889171806,
      -0.097004699209462698930, -0.032380170962869362033,
      0.032380170962869362033,  0.097004699209462698930,
      0.16122235606889171806,   0.22476379039468906122,
      0.28736248735545557674,   0.34875588629216073816,
      0.40868648199071672992,   0.46690290475095840454,
      0.52316097472223303368,   0.57722472608397270382,
      0.62886739677651362400,   0.67787237963266390521,
      0.72403413092381465467,   0.76715903251574033925,
      0.80706620402944262708,   0.84358826162439353071,
      0.87657202027424788591,   0.90587913671556967282,
      0.93138669070655433311,   0.95298770316043086072,
      0.97059159254624725046,   0.98412458372282685774,
      0.99353017226635075755,   0.99877100725242611860};
  std::array<double, 48> ref_wgt = {
      0.0031533460523058386327, 0.0073275539012762621024,
      0.011477234579234539490,  0.015579315722943848728,
      0.019616160457355527814,  0.023570760839324379141,
      0.027426509708356948200,  0.031167227832798088902,
      0.034777222564770438893,  0.038241351065830706317,
      0.041545082943464749214,  0.044674560856694280419,
      0.047616658492490474826,  0.050359035553854474958,
      0.052890189485193667096,  0.055199503699984162868,
      0.057277292100403215705,  0.059114839698395635746,
      0.060704439165893880053,  0.062039423159892663904,
      0.063114192286254025657,  0.063924238584648186624,
      0.064466164435950082206,  0.064737696812683922503,
      0.064737696812683922503,  0.064466164435950082206,
      0.063924238584648186624,  0.063114192286254025657,
      0.062039423159892663904,  0.060704439165893880053,
      0.059114839698395635746,  0.057277292100403215705,
      0.055199503699984162868,  0.052890189485193667096,
      0.050359035553854474958,  0.047616658492490474826,
      0.044674560856694280419,  0.041545082943464749214,
      0.038241351065830706317,  0.034777222564770438893,
      0.031167227832798088902,  0.027426509708356948200,
      0.023570760839324379141,  0.019616160457355527814,
      0.015579315722943848728,  0.011477234579234539490,
      0.0073275539012762621024, 0.0031533460523058386327};
  IntegratorXX::GaussLegendre<double, double> quad(48);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 48; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("49 point GaussLegendre", "[1d-quad]") {
  std::array<double, 49> ref_pts = {-0.99882015060663537936,
                                    -0.99378866194416779076,
                                    -0.98475789591421300436,
                                    -0.97176220090155538014,
                                    -0.95485365867413723356,
                                    -0.93410029475581014906,
                                    -0.90958565582807328521,
                                    -0.88140844557300891004,
                                    -0.84968211984416570104,
                                    -0.81453442735985543154,
                                    -0.77610689434544663502,
                                    -0.73455425423740269621,
                                    -0.69004382442513211350,
                                    -0.64275483241923766406,
                                    -0.59287769410890071246,
                                    -0.54061324699172606656,
                                    -0.48617194145249204218,
                                    -0.42977299334157652466,
                                    -0.37164350126228488886,
                                    -0.31201753211974876221,
                                    -0.25113517861257727351,
                                    -0.18924159246181358649,
                                    -0.12658599726967205107,
                                    -0.063420684982686786029,
                                    0,
                                    0.063420684982686786029,
                                    0.12658599726967205107,
                                    0.18924159246181358649,
                                    0.25113517861257727351,
                                    0.31201753211974876221,
                                    0.37164350126228488886,
                                    0.42977299334157652466,
                                    0.48617194145249204218,
                                    0.54061324699172606656,
                                    0.59287769410890071246,
                                    0.64275483241923766406,
                                    0.69004382442513211350,
                                    0.73455425423740269621,
                                    0.77610689434544663502,
                                    0.81453442735985543154,
                                    0.84968211984416570104,
                                    0.88140844557300891004,
                                    0.90958565582807328521,
                                    0.93410029475581014906,
                                    0.95485365867413723356,
                                    0.97176220090155538014,
                                    0.98475789591421300436,
                                    0.99378866194416779076,
                                    0.99882015060663537936};
  std::array<double, 49> ref_wgt = {
      0.0030272789889229050775, 0.0070350995900864514735,
      0.011020551031593580498,  0.014962144935624651030,
      0.018843595853089458444,  0.022649201587446676499,
      0.026363618927066016961,  0.029971884620583825351,
      0.033459466791622174342,  0.036812320963000689819,
      0.040016945766373021369,  0.043060436981259597988,
      0.045930539355595853542,  0.048615695887828240278,
      0.051105094330144590675,  0.053388710708258968528,
      0.055457349674803588690,  0.057302681530187475485,
      0.058917275760027266025,  0.060294630953152017303,
      0.061429200979192936297,  0.062316417320057267401,
      0.062952707465195699474,  0.063335509296491748591,
      0.063463281404790597718,  0.063335509296491748591,
      0.062952707465195699474,  0.062316417320057267401,
      0.061429200979192936297,  0.060294630953152017303,
      0.058917275760027266025,  0.057302681530187475485,
      0.055457349674803588690,  0.053388710708258968528,
      0.051105094330144590675,  0.048615695887828240278,
      0.045930539355595853542,  0.043060436981259597988,
      0.040016945766373021369,  0.036812320963000689819,
      0.033459466791622174342,  0.029971884620583825351,
      0.026363618927066016961,  0.022649201587446676499,
      0.018843595853089458444,  0.014962144935624651030,
      0.011020551031593580498,  0.0070350995900864514735,
      0.0030272789889229050775};
  IntegratorXX::GaussLegendre<double, double> quad(49);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 49; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("50 point GaussLegendre", "[1d-quad]") {
  std::array<double, 50> ref_pts = {
      -0.99886640442007105019,  -0.99403196943209071258,
      -0.98535408404800588231,  -0.97286438510669207371,
      -0.95661095524280794300,  -0.93665661894487793378,
      -0.91307855665579189309,  -0.88596797952361304864,
      -0.85542976942994608461,  -0.82158207085933594836,
      -0.78455583290039926391,  -0.74449430222606853826,
      -0.70155246870682225109,  -0.65589646568543936078,
      -0.60770292718495023918,  -0.55715830451465005432,
      -0.50445814490746420165,  -0.44980633497403878915,
      -0.39341431189756512739,  -0.33550024541943735684,
      -0.27628819377953199033,  -0.21600723687604175685,
      -0.15489058999814590207,  -0.093174701560086140854,
      -0.031098338327188876112, 0.031098338327188876112,
      0.093174701560086140854,  0.15489058999814590207,
      0.21600723687604175685,   0.27628819377953199033,
      0.33550024541943735684,   0.39341431189756512739,
      0.44980633497403878915,   0.50445814490746420165,
      0.55715830451465005432,   0.60770292718495023918,
      0.65589646568543936078,   0.70155246870682225109,
      0.74449430222606853826,   0.78455583290039926391,
      0.82158207085933594836,   0.85542976942994608461,
      0.88596797952361304864,   0.91307855665579189309,
      0.93665661894487793378,   0.95661095524280794300,
      0.97286438510669207371,   0.98535408404800588231,
      0.99403196943209071258,   0.99886640442007105019};
  std::array<double, 50> ref_wgt = {
      0.0029086225531551409584, 0.0067597991957454015028,
      0.010590548383650969264,  0.014380822761485574419,
      0.018115560713489390351,  0.021780243170124792982,
      0.025360673570012390440,  0.028842993580535198030,
      0.032213728223578016648,  0.035459835615146154161,
      0.038568756612587675245,  0.041528463090147697422,
      0.044327504338803275492,  0.046955051303948432966,
      0.049400938449466314921,  0.051655703069581138490,
      0.053710621888996246523,  0.055557744806212517624,
      0.057189925647728383723,  0.058600849813222445835,
      0.059785058704265457510,  0.060737970841770216032,
      0.061455899590316663756,  0.061936067420683243384,
      0.062176616655347262321,  0.062176616655347262321,
      0.061936067420683243384,  0.061455899590316663756,
      0.060737970841770216032,  0.059785058704265457510,
      0.058600849813222445835,  0.057189925647728383723,
      0.055557744806212517624,  0.053710621888996246523,
      0.051655703069581138490,  0.049400938449466314921,
      0.046955051303948432966,  0.044327504338803275492,
      0.041528463090147697422,  0.038568756612587675245,
      0.035459835615146154161,  0.032213728223578016648,
      0.028842993580535198030,  0.025360673570012390440,
      0.021780243170124792982,  0.018115560713489390351,
      0.014380822761485574419,  0.010590548383650969264,
      0.0067597991957454015028, 0.0029086225531551409584};
  IntegratorXX::GaussLegendre<double, double> quad(50);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 50; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("55 point GaussLegendre", "[1d-quad]") {
  std::array<double, 55> ref_pts = {
      -0.99906141956481854148,  -0.99505797784741187504,
      -0.98786894119888919852,  -0.97751573550398920886,
      -0.96403132859313519878,  -0.94745886804121074186,
      -0.92785142472079169682,  -0.90527180074400002578,
      -0.87979232241989550607,  -0.85149460661715447146,
      -0.82046929855932091245,  -0.78681578112762236590,
      -0.75064185634802190867,  -0.71206339998663783891,
      -0.67120399031982639580,  -0.62819451224992814009,
      -0.58317273802603210297,  -0.53628288590834329672,
      -0.48767515818747409721,  -0.43750526003717459181,
      -0.38593390074097942976,  -0.33312627889002388519,
      -0.27925155320080653855,  -0.22448230064784548340,
      -0.16899396364687320828,  -0.11296428805932926659,
      -0.056572753818336776327, 0,
      0.056572753818336776327,  0.11296428805932926659,
      0.16899396364687320828,   0.22448230064784548340,
      0.27925155320080653855,   0.33312627889002388519,
      0.38593390074097942976,   0.43750526003717459181,
      0.48767515818747409721,   0.53628288590834329672,
      0.58317273802603210297,   0.62819451224992814009,
      0.67120399031982639580,   0.71206339998663783891,
      0.75064185634802190867,   0.78681578112762236590,
      0.82046929855932091245,   0.85149460661715447146,
      0.87979232241989550607,   0.90527180074400002578,
      0.92785142472079169682,   0.94745886804121074186,
      0.96403132859313519878,   0.97751573550398920886,
      0.98786894119888919852,   0.99505797784741187504,
      0.99906141956481854148};
  std::array<double, 55> ref_wgt = {
      0.0024083236199797888192, 0.0055986322665607673541,
      0.0087757461070585281774, 0.011925160719848612171,
      0.015036458333511788213,  0.018099614520729062408,
      0.021104801668016454120,  0.024042388009725622008,
      0.026902961456396270667,  0.029677357765161041221,
      0.032356689226185831685,  0.034932372873589887407,
      0.037396157867965545283,  0.039740151874337179609,
      0.041956846317718762395,  0.044039140421606589895,
      0.045980363946283838104,  0.047774298551200695550,
      0.049415197711551739481,  0.050897805124493979225,
      0.052217371545632084564,  0.053369670001605472724,
      0.054351009329911102070,  0.055158246002508687597,
      0.055788794195284087103,  0.056240634071084368028,
      0.056512318249772001401,  0.056602976444560425440,
      0.056512318249772001401,  0.056240634071084368028,
      0.055788794195284087103,  0.055158246002508687597,
      0.054351009329911102070,  0.053369670001605472724,
      0.052217371545632084564,  0.050897805124493979225,
      0.049415197711551739481,  0.047774298551200695550,
      0.045980363946283838104,  0.044039140421606589895,
      0.041956846317718762395,  0.039740151874337179609,
      0.037396157867965545283,  0.034932372873589887407,
      0.032356689226185831685,  0.029677357765161041221,
      0.026902961456396270667,  0.024042388009725622008,
      0.021104801668016454120,  0.018099614520729062408,
      0.015036458333511788213,  0.011925160719848612171,
      0.0087757461070585281774, 0.0055986322665607673541,
      0.0024083236199797888192};
  IntegratorXX::GaussLegendre<double, double> quad(55);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 55; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("60 point GaussLegendre", "[1d-quad]") {
  std::array<double, 60> ref_pts = {
      -0.99921012322743602203,  -0.99584052511883817388,
      -0.98978789522222171737,  -0.98106720175259818562,
      -0.96970178876505273372,  -0.95572225583999610740,
      -0.93916627611642324950,  -0.92007847617762755286,
      -0.89851031081004594194,  -0.87451992264689831513,
      -0.84817198478592963249,  -0.81953752616214575937,
      -0.78869373993226405457,  -0.75572377530658568687,
      -0.72071651335573039944,  -0.68376632738135543722,
      -0.64497282848947706781,  -0.60444059704851036344,
      -0.56227890075394453918,  -0.51860140005856974742,
      -0.47352584176170711111,  -0.42717374158307838931,
      -0.37967005657679797716,  -0.33114284826844819425,
      -0.28172293742326169169,  -0.23154355137602933801,
      -0.18073996487342541724,  -0.12944913539694500315,
      -0.077809333949536569419, -0.025959772301247798589,
      0.025959772301247798589,  0.077809333949536569419,
      0.12944913539694500315,   0.18073996487342541724,
      0.23154355137602933801,   0.28172293742326169169,
      0.33114284826844819425,   0.37967005657679797716,
      0.42717374158307838931,   0.47352584176170711111,
      0.51860140005856974742,   0.56227890075394453918,
      0.60444059704851036344,   0.64497282848947706781,
      0.68376632738135543722,   0.72071651335573039944,
      0.75572377530658568687,   0.78869373993226405457,
      0.81953752616214575937,   0.84817198478592963249,
      0.87451992264689831513,   0.89851031081004594194,
      0.92007847617762755286,   0.93916627611642324950,
      0.95572225583999610740,   0.96970178876505273372,
      0.98106720175259818562,   0.98978789522222171737,
      0.99584052511883817388,   0.99921012322743602203};
  std::array<double, 60> ref_wgt = {
      0.0020268119688737584964, 0.0047127299269535686408,
      0.0073899311633454555315, 0.010047557182287984358,
      0.012678166476815960131,  0.015274618596784799307,
      0.017829901014207720260,  0.020337120729457286775,
      0.022789516943997819864,  0.025180477621521248380,
      0.027503556749924791635,  0.029752491500788945241,
      0.031921219019296328949,  0.034003892724946422835,
      0.035994898051084503067,  0.037888867569243444031,
      0.039680695452380799470,  0.041365551235584755613,
      0.042938892835935641954,  0.044396478795787113328,
      0.045734379716114486647,  0.046948988848912204847,
      0.048037031819971180964,  0.048995575455756835389,
      0.049822035690550181011,  0.050514184532509374598,
      0.051070156069855627405,  0.051488451500980933995,
      0.051767943174910187544,  0.051907877631220639733,
      0.051907877631220639733,  0.051767943174910187544,
      0.051488451500980933995,  0.051070156069855627405,
      0.050514184532509374598,  0.049822035690550181011,
      0.048995575455756835389,  0.048037031819971180964,
      0.046948988848912204847,  0.045734379716114486647,
      0.044396478795787113328,  0.042938892835935641954,
      0.041365551235584755613,  0.039680695452380799470,
      0.037888867569243444031,  0.035994898051084503067,
      0.034003892724946422835,  0.031921219019296328949,
      0.029752491500788945241,  0.027503556749924791635,
      0.025180477621521248380,  0.022789516943997819864,
      0.020337120729457286775,  0.017829901014207720260,
      0.015274618596784799307,  0.012678166476815960131,
      0.010047557182287984358,  0.0073899311633454555315,
      0.0047127299269535686408, 0.0020268119688737584964};
  IntegratorXX::GaussLegendre<double, double> quad(60);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 60; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("65 point GaussLegendre", "[1d-quad]") {
  std::array<double, 65> ref_pts = {-0.99932609707541287727,
                                    -0.99645094806184916306,
                                    -0.99128527617680166872,
                                    -0.98383981218703494138,
                                    -0.97413153983355116908,
                                    -0.96218275471805523771,
                                    -0.94802092816840750637,
                                    -0.93167862822874933797,
                                    -0.91319344054284626174,
                                    -0.89260788050473893142,
                                    -0.86996929492640703619,
                                    -0.84532975289993028394,
                                    -0.81874592592265145343,
                                    -0.79027895749212184305,
                                    -0.75999432244199978687,
                                    -0.72796167632942467901,
                                    -0.69425469521399163355,
                                    -0.65895090619362513304,
                                    -0.62213150908540024158,
                                    -0.58388118966048731333,
                                    -0.54428792486222713855,
                                    -0.50344278045500688234,
                                    -0.46143970156914505770,
                                    -0.41837529662340900926,
                                    -0.37434861512206601201,
                                    -0.32946091983748640765,
                                    -0.28381545390224873062,
                                    -0.23751720334641680657,
                                    -0.19067265562614276977,
                                    -0.14338955469897517113,
                                    -0.095776653209197505652,
                                    -0.047943462353171857523,
                                    0,
                                    0.047943462353171857523,
                                    0.095776653209197505652,
                                    0.14338955469897517113,
                                    0.19067265562614276977,
                                    0.23751720334641680657,
                                    0.28381545390224873062,
                                    0.32946091983748640765,
                                    0.37434861512206601201,
                                    0.41837529662340900926,
                                    0.46143970156914505770,
                                    0.50344278045500688234,
                                    0.54428792486222713855,
                                    0.58388118966048731333,
                                    0.62213150908540024158,
                                    0.65895090619362513304,
                                    0.69425469521399163355,
                                    0.72796167632942467901,
                                    0.75999432244199978687,
                                    0.79027895749212184305,
                                    0.81874592592265145343,
                                    0.84532975289993028394,
                                    0.86996929492640703619,
                                    0.89260788050473893142,
                                    0.91319344054284626174,
                                    0.93167862822874933797,
                                    0.94802092816840750637,
                                    0.96218275471805523771,
                                    0.97413153983355116908,
                                    0.98383981218703494138,
                                    0.99128527617680166872,
                                    0.99645094806184916306,
                                    0.99932609707541287727};
  std::array<double, 65> ref_wgt = {
      0.0017292582513002508983, 0.0040215241720037363471,
      0.0063079425789717545502, 0.0085801482668814598936,
      0.010832678789597968622,  0.013060311639994846336,
      0.015257912146448310349,  0.017420421997670248495,
      0.019542865836750062827,  0.021620361284934062842,
      0.023648129691287236699,  0.025621506938037758214,
      0.027535954088450343942,  0.029387067789310668063,
      0.031170590380189142464,  0.032882419676368574984,
      0.034518618398549058625,  0.036075423225565273932,
      0.037549253448257709810,  0.038936719204051197617,
      0.040234629273005533815,  0.041439998417240293023,
      0.042550054246755802719,  0.043562243595800486532,
      0.044474238395082974427,  0.045283941026300230657,
      0.045989489146651696964,  0.046589259972233498302,
      0.047081874010454522246,  0.047466198232885503153,
      0.047741348681240621559,  0.047906692500495862031,
      0.047961849394466618121,  0.047906692500495862031,
      0.047741348681240621559,  0.047466198232885503153,
      0.047081874010454522246,  0.046589259972233498302,
      0.045989489146651696964,  0.045283941026300230657,
      0.044474238395082974427,  0.043562243595800486532,
      0.042550054246755802719,  0.041439998417240293023,
      0.040234629273005533815,  0.038936719204051197617,
      0.037549253448257709810,  0.036075423225565273932,
      0.034518618398549058625,  0.032882419676368574984,
      0.031170590380189142464,  0.029387067789310668063,
      0.027535954088450343942,  0.025621506938037758214,
      0.023648129691287236699,  0.021620361284934062842,
      0.019542865836750062827,  0.017420421997670248495,
      0.015257912146448310349,  0.013060311639994846336,
      0.010832678789597968622,  0.0085801482668814598936,
      0.0063079425789717545502, 0.0040215241720037363471,
      0.0017292582513002508983};
  IntegratorXX::GaussLegendre<double, double> quad(65);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 65; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("70 point GaussLegendre", "[1d-quad]") {
  std::array<double, 70> ref_pts = {
      -0.99941828597357584206,  -0.99693625196168015661,
      -0.99247605521168998110,  -0.98604555807039865993,
      -0.97765740595759240039,  -0.96732822366498643839,
      -0.95507850911429284264,  -0.94093257900381535552,
      -0.92491851689793444027,  -0.90706811626092284944,
      -0.88741681686334817112,  -0.86600363421385862938,
      -0.84287108199898024232,  -0.81806508762544118903,
      -0.79163490100789275811,  -0.76363299677189956892,
      -0.73411497006094264131,  -0.70313942615152859706,
      -0.67076786409407740565,  -0.63706455460977809628,
      -0.60209641248535548734,  -0.56593286371880828637,
      -0.52864570767971112727,  -0.49030897455763658927,
      -0.45099877838164786573,  -0.41079316590263058937,
      -0.36977196163846189584,  -0.32801660938964325785,
      -0.28561001054003786169,  -0.24263635946374064578,
      -0.19918097636485766415,  -0.15533013788207024731,
      -0.11117090579429869374,  -0.066790954167551324004,
      -0.022278395286140309694, 0.022278395286140309694,
      0.066790954167551324004,  0.11117090579429869374,
      0.15533013788207024731,   0.19918097636485766415,
      0.24263635946374064578,   0.28561001054003786169,
      0.32801660938964325785,   0.36977196163846189584,
      0.41079316590263058937,   0.45099877838164786573,
      0.49030897455763658927,   0.52864570767971112727,
      0.56593286371880828637,   0.60209641248535548734,
      0.63706455460977809628,   0.67076786409407740565,
      0.70313942615152859706,   0.73411497006094264131,
      0.76363299677189956892,   0.79163490100789275811,
      0.81806508762544118903,   0.84287108199898024232,
      0.86600363421385862938,   0.88741681686334817112,
      0.90706811626092284944,   0.92491851689793444027,
      0.94093257900381535552,   0.95507850911429284264,
      0.96732822366498643839,   0.97765740595759240039,
      0.98604555807039865993,   0.99247605521168998110,
      0.99693625196168015661,   0.99941828597357584206};
  std::array<double, 70> ref_wgt = {
      0.0014927212888445157310, 0.0034718948930781432550,
      0.0054471118742172183128, 0.0074117693631902103621,
      0.0093617627696990268115, 0.011293184649931537650,
      0.013202190814676747625,  0.015084987865443127682,
      0.016937836376302932532,  0.018757057093133423415,
      0.020539037824326453385,  0.022280240452256595834,
      0.023977207889100292279,  0.025626570908468482799,
      0.027225054818664417159,  0.028769485955808280661,
      0.030256797980154237817,  0.031684037961308481735,
      0.033048372239372420471,  0.034347092049906537569,
      0.035577618901292380533,  0.036737509693672695348,
      0.037824461569222817197,  0.038836316484073403979,
      0.039771065492776567478,  0.040626852736789616351,
      0.041401979129045208638,  0.042094905727284406021,
      0.042704256789449777770,  0.043228822505068699789,
      0.043667561397201440253,  0.044019602390183458757,
      0.044284246539055406776,  0.044460968417246370824,
      0.044549417159754667202,  0.044549417159754667202,
      0.044460968417246370824,  0.044284246539055406776,
      0.044019602390183458757,  0.043667561397201440253,
      0.043228822505068699789,  0.042704256789449777770,
      0.042094905727284406021,  0.041401979129045208638,
      0.040626852736789616351,  0.039771065492776567478,
      0.038836316484073403979,  0.037824461569222817197,
      0.036737509693672695348,  0.035577618901292380533,
      0.034347092049906537569,  0.033048372239372420471,
      0.031684037961308481735,  0.030256797980154237817,
      0.028769485955808280661,  0.027225054818664417159,
      0.025626570908468482799,  0.023977207889100292279,
      0.022280240452256595834,  0.020539037824326453385,
      0.018757057093133423415,  0.016937836376302932532,
      0.015084987865443127682,  0.013202190814676747625,
      0.011293184649931537650,  0.0093617627696990268115,
      0.0074117693631902103621, 0.0054471118742172183128,
      0.0034718948930781432550, 0.0014927212888445157310};
  IntegratorXX::GaussLegendre<double, double> quad(70);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 70; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("75 point GaussLegendre", "[1d-quad]") {
  std::array<double, 75> ref_pts = {
      -0.99949277553603545648,  -0.99732842896223180331,
      -0.99343853657889270438,  -0.98782896676752452014,
      -0.98050932459741660577,  -0.97149225634306382336,
      -0.96079336374189231416,  -0.94843116507928737792,
      -0.93442705996410715684,  -0.91880529122839399127,
      -0.90159290254844633409,  -0.88281969144789554216,
      -0.86251815762688342546,  -0.84072344665495805010,
      -0.81747328910354131484,  -0.79280793521356351036,
      -0.76677008520664192552,  -0.73940481535803252650,
      -0.71075949995804112677,  -0.68088372929626959804,
      -0.64982922381026223259,  -0.61764974454692596445,
      -0.58440100009157788032,  -0.55014055012564555150,
      -0.51492770577991664053,  -0.47882342695580315702,
      -0.44189021679234826654,  -0.40419201346165361319,
      -0.36579407948003592533,  -0.32676288872652630236,
      -0.28716601136429724694,  -0.24707199686423475690,
      -0.20655025533315960711,  -0.16567093735213781839,
      -0.12450481253290026163,  -0.083123147002610991697,
      -0.041597580029079455975, 0,
      0.041597580029079455975,  0.083123147002610991697,
      0.12450481253290026163,   0.16567093735213781839,
      0.20655025533315960711,   0.24707199686423475690,
      0.28716601136429724694,   0.32676288872652630236,
      0.36579407948003592533,   0.40419201346165361319,
      0.44189021679234826654,   0.47882342695580315702,
      0.51492770577991664053,   0.55014055012564555150,
      0.58440100009157788032,   0.61764974454692596445,
      0.64982922381026223259,   0.68088372929626959804,
      0.71075949995804112677,   0.73940481535803252650,
      0.76677008520664192552,   0.79280793521356351036,
      0.81747328910354131484,   0.84072344665495805010,
      0.86251815762688342546,   0.88281969144789554216,
      0.90159290254844633409,   0.91880529122839399127,
      0.93442705996410715684,   0.94843116507928737792,
      0.96079336374189231416,   0.97149225634306382336,
      0.98050932459741660577,   0.98782896676752452014,
      0.99343853657889270438,   0.99732842896223180331,
      0.99949277553603545648};
  std::array<double, 75> ref_wgt = {
      0.0013015917173758559938, 0.0030276710146060412912,
      0.0047510691850152739659, 0.0064664649070375384020,
      0.0081707107073278264037, 0.0098608249161140183921,
      0.011533873328304495967,  0.013186956762824802120,
      0.014817212289814468520,  0.016421817119024640044,
      0.017997993125645050638,  0.019543011520127889380,
      0.021054197512282842236,  0.022528934913865776451,
      0.023964670653716959175,  0.025358919190216379094,
      0.026709266810120851772,  0.028013375804780540825,
      0.029268988515725986805,  0.030473931242214539203,
      0.031626118003749648056,  0.032723554150934220521,
      0.033764339818334092647,  0.034746673213330406535,
      0.035668853735240453089,  0.036529284919290339007,
      0.037326477200332090167,  0.038059050491513603136,
      0.038725736573432575841,  0.039325381289635162521,
      0.039856946544656352576,  0.040319512101141577558,
      0.040712277172937330299,  0.041034561811392106676,
      0.041285808082467189083,  0.041465581032619092135,
      0.041573569441781278783,  0.041609586362141409380,
      0.041573569441781278783,  0.041465581032619092135,
      0.041285808082467189083,  0.041034561811392106676,
      0.040712277172937330299,  0.040319512101141577558,
      0.039856946544656352576,  0.039325381289635162521,
      0.038725736573432575841,  0.038059050491513603136,
      0.037326477200332090167,  0.036529284919290339007,
      0.035668853735240453089,  0.034746673213330406535,
      0.033764339818334092647,  0.032723554150934220521,
      0.031626118003749648056,  0.030473931242214539203,
      0.029268988515725986805,  0.028013375804780540825,
      0.026709266810120851772,  0.025358919190216379094,
      0.023964670653716959175,  0.022528934913865776451,
      0.021054197512282842236,  0.019543011520127889380,
      0.017997993125645050638,  0.016421817119024640044,
      0.014817212289814468520,  0.013186956762824802120,
      0.011533873328304495967,  0.0098608249161140183921,
      0.0081707107073278264037, 0.0064664649070375384020,
      0.0047510691850152739659, 0.0030276710146060412912,
      0.0013015917173758559938};
  IntegratorXX::GaussLegendre<double, double> quad(75);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 75; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("80 point GaussLegendre", "[1d-quad]") {
  std::array<double, 80> ref_pts = {
      -0.99955382265163062988,  -0.99764986439823768890,
      -0.99422754096568827789,  -0.98929130249975553103,
      -0.98284857273862907042,  -0.97490914058572779339,
      -0.96548508904379925145,  -0.95459076634363490549,
      -0.94224276130987267475,  -0.92845987717244579595,
      -0.91326310257175765416,  -0.89667557943877068319,
      -0.87872256767821382870,  -0.85943140666311109698,
      -0.83883147358025527562,  -0.81695413868146347037,
      -0.79383271750460544995,  -0.76950242013504137387,
      -0.74400029758359727232,  -0.71736518536209988025,
      -0.68963764434202760077,  -0.66085989898611980174,
      -0.63107577304687196625,  -0.60033062282975174315,
      -0.56867126812270978473,  -0.53614592089713193202,
      -0.50280411188878498759,  -0.46869661517054447704,
      -0.43387537083175609306,  -0.39839340588196922702,
      -0.36230475349948731562,  -0.32566437074770191462,
      -0.28852805488451185311,  -0.25095235839227212049,
      -0.21299450285766613257,  -0.17471229183264681256,
      -0.13616402280914388656,  -0.097408398441584599063,
      -0.058504437152420668629, -0.019511383256793997654,
      0.019511383256793997654,  0.058504437152420668629,
      0.097408398441584599063,  0.13616402280914388656,
      0.17471229183264681256,   0.21299450285766613257,
      0.25095235839227212049,   0.28852805488451185311,
      0.32566437074770191462,   0.36230475349948731562,
      0.39839340588196922702,   0.43387537083175609306,
      0.46869661517054447704,   0.50280411188878498759,
      0.53614592089713193202,   0.56867126812270978473,
      0.60033062282975174315,   0.63107577304687196625,
      0.66085989898611980174,   0.68963764434202760077,
      0.71736518536209988025,   0.74400029758359727232,
      0.76950242013504137387,   0.79383271750460544995,
      0.81695413868146347037,   0.83883147358025527562,
      0.85943140666311109698,   0.87872256767821382870,
      0.89667557943877068319,   0.91326310257175765416,
      0.92845987717244579595,   0.94224276130987267475,
      0.95459076634363490549,   0.96548508904379925145,
      0.97490914058572779339,   0.98284857273862907042,
      0.98929130249975553103,   0.99422754096568827789,
      0.99764986439823768890,   0.99955382265163062988};
  std::array<double, 80> ref_wgt = {
      0.0011449500031869415346, 0.0026635335895126816693,
      0.0041803131246948952367, 0.0056909224514031986493,
      0.0071929047681173127527, 0.0086839452692608584264,
      0.010161766041103064521,  0.011624114120797826916,
      0.013068761592401339294,  0.014493508040509076117,
      0.015896183583725688045,  0.017274652056269306359,
      0.018626814208299031429,  0.019950610878141998929,
      0.021244026115782006389,  0.022505090246332461926,
      0.023731882865930101293,  0.024922535764115491105,
      0.026075235767565117903,  0.027188227500486380674,
      0.028259816057276862397,  0.029288369583267847693,
      0.030272321759557980661,  0.031210174188114701642,
      0.032100498673487773148,  0.032941939397645401383,
      0.033733214984611522817,  0.034473120451753928794,
      0.035160529044747593496,  0.035794393953416054603,
      0.036373749905835978044,  0.036897714638276008839,
      0.037365490238730490027,  0.037776364362001397490,
      0.038129711314477638344,  0.038424993006959423185,
      0.038661759774076463327,  0.038839651059051968932,
      0.038958395962769531199,  0.039017813656306654811,
      0.039017813656306654811,  0.038958395962769531199,
      0.038839651059051968932,  0.038661759774076463327,
      0.038424993006959423185,  0.038129711314477638344,
      0.037776364362001397490,  0.037365490238730490027,
      0.036897714638276008839,  0.036373749905835978044,
      0.035794393953416054603,  0.035160529044747593496,
      0.034473120451753928794,  0.033733214984611522817,
      0.032941939397645401383,  0.032100498673487773148,
      0.031210174188114701642,  0.030272321759557980661,
      0.029288369583267847693,  0.028259816057276862397,
      0.027188227500486380674,  0.026075235767565117903,
      0.024922535764115491105,  0.023731882865930101293,
      0.022505090246332461926,  0.021244026115782006389,
      0.019950610878141998929,  0.018626814208299031429,
      0.017274652056269306359,  0.015896183583725688045,
      0.014493508040509076117,  0.013068761592401339294,
      0.011624114120797826916,  0.010161766041103064521,
      0.0086839452692608584264, 0.0071929047681173127527,
      0.0056909224514031986493, 0.0041803131246948952367,
      0.0026635335895126816693, 0.0011449500031869415346};
  IntegratorXX::GaussLegendre<double, double> quad(80);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 80; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("85 point GaussLegendre", "[1d-quad]") {
  std::array<double, 85> ref_pts = {-0.99960447735747845433,
                                    -0.99791660119811693315,
                                    -0.99488237429561627845,
                                    -0.99050521771641596379,
                                    -0.98479095768558049733,
                                    -0.97774728841224339193,
                                    -0.96938371192367832801,
                                    -0.95971151595718836240,
                                    -0.94874375625457895340,
                                    -0.93649523811643069969,
                                    -0.92298249609609004559,
                                    -0.90822377153909188490,
                                    -0.89223898789135590158,
                                    -0.87504972376909708764,
                                    -0.85667918380995618910,
                                    -0.83715216733708265020,
                                    -0.81649503487479161472,
                                    -0.79473567255911650545,
                                    -0.77190345449029307866,
                                    -0.74802920307743407396,
                                    -0.72314514742860102138,
                                    -0.69728487984224954765,
                                    -0.67048331045866266070,
                                    -0.64277662013251471484,
                                    -0.61420221159013699307,
                                    -0.58479865893738808571,
                                    -0.55460565558626943316,
                                    -0.52366396067056787479,
                                    -0.49201534402285131048,
                                    -0.45970252978708872076,
                                    -0.42676913874300970172,
                                    -0.39325962942005919065,
                                    -0.35921923808043804876,
                                    -0.32469391765224755745,
                                    -0.28973027569517370354,
                                    -0.25437551148245352250,
                                    -0.21867735228405901571,
                                    -0.18268398893711267388,
                                    -0.14644401079051098921,
                                    -0.11000634011157723735,
                                    -0.073420166043291125620,
                                    -0.036734878201249663520,
                                    0,
                                    0.036734878201249663520,
                                    0.073420166043291125620,
                                    0.11000634011157723735,
                                    0.14644401079051098921,
                                    0.18268398893711267388,
                                    0.21867735228405901571,
                                    0.25437551148245352250,
                                    0.28973027569517370354,
                                    0.32469391765224755745,
                                    0.35921923808043804876,
                                    0.39325962942005919065,
                                    0.42676913874300970172,
                                    0.45970252978708872076,
                                    0.49201534402285131048,
                                    0.52366396067056787479,
                                    0.55460565558626943316,
                                    0.58479865893738808571,
                                    0.61420221159013699307,
                                    0.64277662013251471484,
                                    0.67048331045866266070,
                                    0.69728487984224954765,
                                    0.72314514742860102138,
                                    0.74802920307743407396,
                                    0.77190345449029307866,
                                    0.79473567255911650545,
                                    0.81649503487479161472,
                                    0.83715216733708265020,
                                    0.85667918380995618910,
                                    0.87504972376909708764,
                                    0.89223898789135590158,
                                    0.90822377153909188490,
                                    0.92298249609609004559,
                                    0.93649523811643069969,
                                    0.94874375625457895340,
                                    0.95971151595718836240,
                                    0.96938371192367832801,
                                    0.97774728841224339193,
                                    0.98479095768558049733,
                                    0.99050521771641596379,
                                    0.99488237429561627845,
                                    0.99791660119811693315,
                                    0.99960447735747845433};
  std::array<double, 85> ref_wgt = {
      0.0010149719089677436954, 0.0023613317042850208968,
      0.0037065001257593167069, 0.0050468384269244427255,
      0.0063803985878975150987, 0.0077053559603827570799,
      0.0090199154399936312790, 0.010322300230524245894,
      0.011610751286703898010,  0.012883528856498084291,
      0.014138914548400832931,  0.015375213542389626874,
      0.016590756831154670075,  0.017783903451398170908,
      0.018953042688182840447,  0.020096596243575421742,
      0.021213020364089379672,  0.022300807922839374189,
      0.023358490452989891898,  0.024384640129435683142,
      0.025377871695866088477,  0.026336844334514359822,
      0.027260263476011164786,  0.028146882546865075846,
      0.028995504652190152090,  0.029804984191395887376,
      0.030574228404649995724,  0.031302198848020870448,
      0.031987912795304674460,  0.032630444564642178189,
      0.033228926768132769763,  0.033782551482757530331,
      0.034290571341029846708,  0.034752300539900637529,
      0.035167115766555788250,  0.035534457039855699082,
      0.035853828466280812557,  0.036124798909362460375,
      0.036347002571695203767,  0.036520139488744884857,
      0.036643975933785702486,  0.036718344733419616222,
      0.036743145493252106600,  0.036718344733419616222,
      0.036643975933785702486,  0.036520139488744884857,
      0.036347002571695203767,  0.036124798909362460375,
      0.035853828466280812557,  0.035534457039855699082,
      0.035167115766555788250,  0.034752300539900637529,
      0.034290571341029846708,  0.033782551482757530331,
      0.033228926768132769763,  0.032630444564642178189,
      0.031987912795304674460,  0.031302198848020870448,
      0.030574228404649995724,  0.029804984191395887376,
      0.028995504652190152090,  0.028146882546865075846,
      0.027260263476011164786,  0.026336844334514359822,
      0.025377871695866088477,  0.024384640129435683142,
      0.023358490452989891898,  0.022300807922839374189,
      0.021213020364089379672,  0.020096596243575421742,
      0.018953042688182840447,  0.017783903451398170908,
      0.016590756831154670075,  0.015375213542389626874,
      0.014138914548400832931,  0.012883528856498084291,
      0.011610751286703898010,  0.010322300230524245894,
      0.0090199154399936312790, 0.0077053559603827570799,
      0.0063803985878975150987, 0.0050468384269244427255,
      0.0037065001257593167069, 0.0023613317042850208968,
      0.0010149719089677436954};
  IntegratorXX::GaussLegendre<double, double> quad(85);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 85; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("90 point GaussLegendre", "[1d-quad]") {
  std::array<double, 90> ref_pts = {
      -0.99964697128663843746,  -0.99814037993856815356,
      -0.99543181205834466393,  -0.99152392881106278613,
      -0.98642136505783284873,  -0.98013025134514838546,
      -0.97265816209019314000,  -0.96401409817150548339,
      -0.95420847388150033616,  -0.94325310364535776815,
      -0.93116118750043200701,  -0.91794729506658638337,
      -0.90362734793130269387,  -0.88821860043474598130,
      -0.87173961886290343447,  -0.85421025906707188229,
      -0.83565164253337704556,  -0.81608613092948105644,
      -0.79553729915824813486,  -0.77402990695033424681,
      -0.75158986902963846818,  -0.72824422388739036363,
      -0.70402110120239114356,  -0.67894968794659714618,
      -0.65306019321684219196,  -0.62638381183504512676,
      -0.59895268676074218589,  -0.57079987036122097871,
      -0.54195928458591342619,  -0.51246568009302797099,
      -0.48235459437766569252,  -0.45166230895186936758,
      -0.42042580562819775610,  -0.38868272195949820678,
      -0.35647130588856784613,  -0.32383036966234596651,
      -0.29079924306616665155,  -0.25741772603442012992,
      -0.22372604069472285927,  -0.18976478290337901902,
      -0.15557487333052911951,  -0.12119750815392408297,
      -0.086674109420734770085, -0.052046275137206949059,
      -0.017355729146299652461, 0.017355729146299652461,
      0.052046275137206949059,  0.086674109420734770085,
      0.12119750815392408297,   0.15557487333052911951,
      0.18976478290337901902,   0.22372604069472285927,
      0.25741772603442012992,   0.29079924306616665155,
      0.32383036966234596651,   0.35647130588856784613,
      0.38868272195949820678,   0.42042580562819775610,
      0.45166230895186936758,   0.48235459437766569252,
      0.51246568009302797099,   0.54195928458591342619,
      0.57079987036122097871,   0.59895268676074218589,
      0.62638381183504512676,   0.65306019321684219196,
      0.67894968794659714618,   0.70402110120239114356,
      0.72824422388739036363,   0.75158986902963846818,
      0.77402990695033424681,   0.79553729915824813486,
      0.81608613092948105644,   0.83565164253337704556,
      0.85421025906707188229,   0.87173961886290343447,
      0.88821860043474598130,   0.90362734793130269387,
      0.91794729506658638337,   0.93116118750043200701,
      0.94325310364535776815,   0.95420847388150033616,
      0.96401409817150548339,   0.97265816209019314000,
      0.98013025134514838546,   0.98642136505783284873,
      0.99152392881106278613,   0.99543181205834466393,
      0.99814037993856815356,   0.99964697128663843746};
  std::array<double, 90> ref_wgt = {
      0.00090593237121483309376, 0.0021077787745263298915,
      0.0033088672433360181954,  0.0045061236136749778641,
      0.0056979815607473526009,  0.0068829832084632843147,
      0.0080596949446200156587,  0.0092266969577419909403,
      0.010382582309893214614,   0.011525957889148058851,
      0.012655445837168128869,   0.013769685112337093431,
      0.014867333088043324050,   0.015947067151006639013,
      0.017007586285222675709,   0.018047612634460236164,
      0.019065893039137318425,   0.020061200544639595965,
      0.021032335878722563117,   0.021978128895934133839,
      0.022897439987163184635,   0.023789161452528723210,
      0.024652218835904852936,   0.025485572219443228484,
      0.026288217476514587362,   0.027059187481547958522,
      0.027797553275302275158,   0.028502425184161416319,
      0.029172953892100742487,   0.029808331464031275487,
      0.030407792319286952690,   0.030970614154080920946,
      0.031496118811818636077,   0.031983673100218576039,
      0.032432689554255616912,   0.032842627144007504579,
      0.033212991926551316514,   0.033543337641124276683,
      0.033833266246831687258,   0.034082428402253995464,
      0.034290523886375041932,   0.034457301960324256175,
      0.034582561669496891418,   0.034666152085688240188,
      0.034707972488950057920,   0.034707972488950057920,
      0.034666152085688240188,   0.034582561669496891418,
      0.034457301960324256175,   0.034290523886375041932,
      0.034082428402253995464,   0.033833266246831687258,
      0.033543337641124276683,   0.033212991926551316514,
      0.032842627144007504579,   0.032432689554255616912,
      0.031983673100218576039,   0.031496118811818636077,
      0.030970614154080920946,   0.030407792319286952690,
      0.029808331464031275487,   0.029172953892100742487,
      0.028502425184161416319,   0.027797553275302275158,
      0.027059187481547958522,   0.026288217476514587362,
      0.025485572219443228484,   0.024652218835904852936,
      0.023789161452528723210,   0.022897439987163184635,
      0.021978128895934133839,   0.021032335878722563117,
      0.020061200544639595965,   0.019065893039137318425,
      0.018047612634460236164,   0.017007586285222675709,
      0.015947067151006639013,   0.014867333088043324050,
      0.013769685112337093431,   0.012655445837168128869,
      0.011525957889148058851,   0.010382582309893214614,
      0.0092266969577419909403,  0.0080596949446200156587,
      0.0068829832084632843147,  0.0056979815607473526009,
      0.0045061236136749778641,  0.0033088672433360181954,
      0.0021077787745263298915,  0.00090593237121483309376};
  IntegratorXX::GaussLegendre<double, double> quad(90);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 90; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("95 point GaussLegendre", "[1d-quad]") {
  std::array<double, 95> ref_pts = {
      -0.99968296770719201948,  -0.99832995251674633162,
      -0.99589731118842340206,  -0.99238713500350140449,
      -0.98780315590608128777,  -0.98215031822162564610,
      -0.97543473341144091169,  -0.96766366602219652412,
      -0.95884552384790944943,  -0.94898984817429548204,
      -0.93810730319847803714,  -0.92620966437771977563,
      -0.91330980563406734740,  -0.89942168539639320374,
      -0.88456033148144055748,  -0.86874182482412990474,
      -0.85198328207178428084,  -0.83430283705960132221,
      -0.81571962118660965386,  -0.79625374271289318867,
      -0.77592626500022395623,  -0.75475918371949239225,
      -0.73277540304950211834,  -0.70999871089282310580,
      -0.68645375313548220924,  -0.66216600697831802626,
      -0.63716175336884002718,  -0.61146804856341069607,
      -0.58511269485051408929,  -0.55812421046678440395,
      -0.53053179873834328926,  -0.50236531648083404332,
      -0.47365524169234377757,  -0.44443264057417034046,
      -0.41472913391511851597,  -0.38457686287569901085,
      -0.35400845420925330582,  -0.32305698495763688928,
      -0.29175594665966207348,  -0.26013920911102890946,
      -0.22824098371495810364,  -0.19609578646318277850,
      -0.16373840058735593495,  -0.13120383892128713615,
      -0.098527306014734857520, -0.065744160039749798572,
      -0.032889874530788938677, 0,
      0.032889874530788938677,  0.065744160039749798572,
      0.098527306014734857520,  0.13120383892128713615,
      0.16373840058735593495,   0.19609578646318277850,
      0.22824098371495810364,   0.26013920911102890946,
      0.29175594665966207348,   0.32305698495763688928,
      0.35400845420925330582,   0.38457686287569901085,
      0.41472913391511851597,   0.44443264057417034046,
      0.47365524169234377757,   0.50236531648083404332,
      0.53053179873834328926,   0.55812421046678440395,
      0.58511269485051408929,   0.61146804856341069607,
      0.63716175336884002718,   0.66216600697831802626,
      0.68645375313548220924,   0.70999871089282310580,
      0.73277540304950211834,   0.75475918371949239225,
      0.77592626500022395623,   0.79625374271289318867,
      0.81571962118660965386,   0.83430283705960132221,
      0.85198328207178428084,   0.86874182482412990474,
      0.88456033148144055748,   0.89942168539639320374,
      0.91330980563406734740,   0.92620966437771977563,
      0.93810730319847803714,   0.94898984817429548204,
      0.95884552384790944943,   0.96766366602219652412,
      0.97543473341144091169,   0.98215031822162564610,
      0.98780315590608128777,   0.99238713500350140449,
      0.99589731118842340206,   0.99832995251674633162,
      0.99968296770719201948};
  std::array<double, 95> ref_wgt = {
      0.00081356424945411650101, 0.0018929683779229357628,
      0.0029719242408181907184,  0.0040478033163717599069,
      0.0051193303299277182800,  0.0061853262610333237693,
      0.0072446324439331996726,  0.0082961008745309902381,
      0.0093385930838763970867,  0.010370980703116096841,
      0.011392146459085844039,   0.012400985296116061040,
      0.013396405534368285441,   0.014377330033659082084,
      0.015342697350288356635,   0.016291462880991043266,
      0.017222599990716984413,   0.018135101122045144108,
      0.019027978884545706393,   0.019900267122657211245,
      0.020751021960784901818,   0.021579322824411401207,
      0.022384273436069391840,   0.023165002785071391749,
      0.023920666069930610077,   0.024650445612442619976,
      0.025353551742432012937,   0.026029223652202271533,
      0.026676730219761354319,   0.027295370799930222666,
      0.027884475982476914243,   0.028443408316454862613,
      0.028971562999961011535,   0.029468368534566882375,
      0.029933287343714112252,   0.030365816354405066777,
      0.030765487541558914753,   0.031131868434443998257,
      0.031464562584638402013,   0.031763209995012280291,
      0.032027487509267695293,   0.032257109161614414347,
      0.032451826486203259267,   0.032611428785982154257,
      0.032735743360683932269,   0.032824635693699186693,
      0.032878009597631948236,   0.032895807318380677932,
      0.032878009597631948236,   0.032824635693699186693,
      0.032735743360683932269,   0.032611428785982154257,
      0.032451826486203259267,   0.032257109161614414347,
      0.032027487509267695293,   0.031763209995012280291,
      0.031464562584638402013,   0.031131868434443998257,
      0.030765487541558914753,   0.030365816354405066777,
      0.029933287343714112252,   0.029468368534566882375,
      0.028971562999961011535,   0.028443408316454862613,
      0.027884475982476914243,   0.027295370799930222666,
      0.026676730219761354319,   0.026029223652202271533,
      0.025353551742432012937,   0.024650445612442619976,
      0.023920666069930610077,   0.023165002785071391749,
      0.022384273436069391840,   0.021579322824411401207,
      0.020751021960784901818,   0.019900267122657211245,
      0.019027978884545706393,   0.018135101122045144108,
      0.017222599990716984413,   0.016291462880991043266,
      0.015342697350288356635,   0.014377330033659082084,
      0.013396405534368285441,   0.012400985296116061040,
      0.011392146459085844039,   0.010370980703116096841,
      0.0093385930838763970867,  0.0082961008745309902381,
      0.0072446324439331996726,  0.0061853262610333237693,
      0.0051193303299277182800,  0.0040478033163717599069,
      0.0029719242408181907184,  0.0018929683779229357628,
      0.00081356424945411650101};
  IntegratorXX::GaussLegendre<double, double> quad(95);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 95; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("100 point GaussLegendre", "[1d-quad]") {
  std::array<double, 100> ref_pts = {
      -0.99971372677344123368,  -0.99849195063959581840,
      -0.99629513473312514919,  -0.99312493703744345965,
      -0.98898439524299174800,  -0.98387754070605701550,
      -0.97780935848691828855,  -0.97078577576370633193,
      -0.96281365425581552729,  -0.95390078292549174285,
      -0.94405587013625597796,  -0.93328853504307954592,
      -0.92160929814533395267,  -0.90902957098252969047,
      -0.89556164497072698670,  -0.88121867938501841557,
      -0.86601468849716462341,  -0.84996452787959128429,
      -0.83308387988840082354,  -0.81538923833917625439,
      -0.79689789239031447639,  -0.77762790964949547563,
      -0.75759811851970717604,  -0.73682808980202070551,
      -0.71533811757305644646,  -0.69314919935580196595,
      -0.67028301560314101580,  -0.64676190851412927983,
      -0.62260886020370777160,  -0.59784747024717872126,
      -0.57250193262138119132,  -0.54659701206509416747,
      -0.52015801988176305665,  -0.49321078920819093357,
      -0.46578164977335804225,  -0.43789740217203151311,
      -0.40958529167830154253,  -0.38087298162462995676,
      -0.35178852637242172097,  -0.32236034390052915172,
      -0.29261718803847196474,  -0.26258812037150347917,
      -0.23230248184497396965,  -0.20178986409573599724,
      -0.17108008053860327489,  -0.14020313723611397321,
      -0.10918920358006111500,  -0.078068582813436636695,
      -0.046871682421591631615, -0.015628984421543082872,
      0.015628984421543082872,  0.046871682421591631615,
      0.078068582813436636695,  0.10918920358006111500,
      0.14020313723611397321,   0.17108008053860327489,
      0.20178986409573599724,   0.23230248184497396965,
      0.26258812037150347917,   0.29261718803847196474,
      0.32236034390052915172,   0.35178852637242172097,
      0.38087298162462995676,   0.40958529167830154253,
      0.43789740217203151311,   0.46578164977335804225,
      0.49321078920819093357,   0.52015801988176305665,
      0.54659701206509416747,   0.57250193262138119132,
      0.59784747024717872126,   0.62260886020370777160,
      0.64676190851412927983,   0.67028301560314101580,
      0.69314919935580196595,   0.71533811757305644646,
      0.73682808980202070551,   0.75759811851970717604,
      0.77762790964949547563,   0.79689789239031447639,
      0.81538923833917625439,   0.83308387988840082354,
      0.84996452787959128429,   0.86601468849716462341,
      0.88121867938501841557,   0.89556164497072698670,
      0.90902957098252969047,   0.92160929814533395267,
      0.93328853504307954592,   0.94405587013625597796,
      0.95390078292549174285,   0.96281365425581552729,
      0.97078577576370633193,   0.97780935848691828855,
      0.98387754070605701550,   0.98898439524299174800,
      0.99312493703744345965,   0.99629513473312514919,
      0.99849195063959581840,   0.99971372677344123368};
  std::array<double, 100> ref_wgt = {
      0.00073463449050567173032, 0.0017093926535181052395,
      0.0026839253715534824194,  0.0036559612013263751823,
      0.0046244500634221193511,  0.0055884280038655151572,
      0.0065469484508453227642,  0.0074990732554647115788,
      0.0084438714696689714026,  0.0093804196536944579514,
      0.010307802574868969586,   0.011225114023185977117,
      0.012131457662979497408,   0.013025947892971542286,
      0.013907710703718772688,   0.014775884527441301769,
      0.015629621077546002724,   0.016468086176145212643,
      0.017290460568323582439,   0.018095940722128116664,
      0.018883739613374904553,   0.019653087494435305865,
      0.020403232646209432767,   0.021133442112527641543,
      0.021843002416247386314,   0.022531220256336272702,
      0.023197423185254121622,   0.023840960265968205963,
      0.024461202707957052720,   0.025057544481579589704,
      0.025629402910208116076,   0.026176219239545676342,
      0.026697459183570962660,   0.027192613446576880136,
      0.027661198220792388294,   0.028102755659101173318,
      0.028516854322395097991,   0.028903089601125203135,
      0.029261084110638276620,   0.029590488059912642512,
      0.029890979593332830917,   0.030162265105169144919,
      0.030404079526454820016,   0.030616186583980448496,
      0.030798379031152590428,   0.030950478850490988234,
      0.031072337427566516588,   0.031163835696209906784,
      0.031224884254849357732,   0.031255423453863356948,
      0.031255423453863356948,   0.031224884254849357732,
      0.031163835696209906784,   0.031072337427566516588,
      0.030950478850490988234,   0.030798379031152590428,
      0.030616186583980448496,   0.030404079526454820016,
      0.030162265105169144919,   0.029890979593332830917,
      0.029590488059912642512,   0.029261084110638276620,
      0.028903089601125203135,   0.028516854322395097991,
      0.028102755659101173318,   0.027661198220792388294,
      0.027192613446576880136,   0.026697459183570962660,
      0.026176219239545676342,   0.025629402910208116076,
      0.025057544481579589704,   0.024461202707957052720,
      0.023840960265968205963,   0.023197423185254121622,
      0.022531220256336272702,   0.021843002416247386314,
      0.021133442112527641543,   0.020403232646209432767,
      0.019653087494435305865,   0.018883739613374904553,
      0.018095940722128116664,   0.017290460568323582439,
      0.016468086176145212643,   0.015629621077546002724,
      0.014775884527441301769,   0.013907710703718772688,
      0.013025947892971542286,   0.012131457662979497408,
      0.011225114023185977117,   0.010307802574868969586,
      0.0093804196536944579514,  0.0084438714696689714026,
      0.0074990732554647115788,  0.0065469484508453227642,
      0.0055884280038655151572,  0.0046244500634221193511,
      0.0036559612013263751823,  0.0026839253715534824194,
      0.0017093926535181052395,  0.00073463449050567173032};
  IntegratorXX::GaussLegendre<double, double> quad(100);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 100; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("105 point GaussLegendre", "[1d-quad]") {
  std::array<double, 105> ref_pts = {-0.99974021732382051994,
                                     -0.99863147354533303904,
                                     -0.99663779035718219411,
                                     -0.99376049222575694401,
                                     -0.99000207605090279687,
                                     -0.98536586133415612697,
                                     -0.97985595454739460890,
                                     -0.97347723939828017206,
                                     -0.96623537088015359824,
                                     -0.95813676971902225826,
                                     -0.94918861647081154004,
                                     -0.93939884506292572695,
                                     -0.92877613571562563255,
                                     -0.91732990722299079676,
                                     -0.90507030858925508243,
                                     -0.89200821002293445486,
                                     -0.87815519329431819299,
                                     -0.86352354146363995782,
                                     -0.84812622798837549972,
                                     -0.83197690521895608303,
                                     -0.81508989229288436971,
                                     -0.79748016243785890021,
                                     -0.77916332969508653148,
                                     -0.76015563507450531576,
                                     -0.74047393215416159759,
                                     -0.72013567213648887575,
                                     -0.69915888837472445508,
                                     -0.67756218038317421352,
                                     -0.65536469734549642567,
                                     -0.63258612113562266113,
                                     -0.60924664886636725892,
                                     -0.58536697498119659860,
                                     -0.56096827290503511074,
                                     -0.53607217627037642273,
                                     -0.51070075973534493389,
                                     -0.48487651941071516113,
                                     -0.45862235291324309931,
                                     -0.43196153906299530962,
                                     -0.40491771724267720393,
                                     -0.37751486643726176224,
                                     -0.34977728397250344430,
                                     -0.32172956397118908898,
                                     -0.29339657554622790219,
                                     -0.26480344074991599651,
                                     -0.23597551229892715870,
                                     -0.20693835109478039333,
                                     -0.17771770355971614811,
                                     -0.14833947880807680753,
                                     -0.11882972567343290246,
                                     -0.089214609611824395658,
                                     -0.059520389501596252439,
                                     -0.029773394360399196419,
                                     0,
                                     0.029773394360399196419,
                                     0.059520389501596252439,
                                     0.089214609611824395658,
                                     0.11882972567343290246,
                                     0.14833947880807680753,
                                     0.17771770355971614811,
                                     0.20693835109478039333,
                                     0.23597551229892715870,
                                     0.26480344074991599651,
                                     0.29339657554622790219,
                                     0.32172956397118908898,
                                     0.34977728397250344430,
                                     0.37751486643726176224,
                                     0.40491771724267720393,
                                     0.43196153906299530962,
                                     0.45862235291324309931,
                                     0.48487651941071516113,
                                     0.51070075973534493389,
                                     0.53607217627037642273,
                                     0.56096827290503511074,
                                     0.58536697498119659860,
                                     0.60924664886636725892,
                                     0.63258612113562266113,
                                     0.65536469734549642567,
                                     0.67756218038317421352,
                                     0.69915888837472445508,
                                     0.72013567213648887575,
                                     0.74047393215416159759,
                                     0.76015563507450531576,
                                     0.77916332969508653148,
                                     0.79748016243785890021,
                                     0.81508989229288436971,
                                     0.83197690521895608303,
                                     0.84812622798837549972,
                                     0.86352354146363995782,
                                     0.87815519329431819299,
                                     0.89200821002293445486,
                                     0.90507030858925508243,
                                     0.91732990722299079676,
                                     0.92877613571562563255,
                                     0.93939884506292572695,
                                     0.94918861647081154004,
                                     0.95813676971902225826,
                                     0.96623537088015359824,
                                     0.97347723939828017206,
                                     0.97985595454739460890,
                                     0.98536586133415612697,
                                     0.99000207605090279687,
                                     0.99376049222575694401,
                                     0.99663779035718219411,
                                     0.99863147354533303904,
                                     0.99974021732382051994};
  std::array<double, 105> ref_wgt = {
      0.00066665737132967914670, 0.0015512778120287095335,
      0.0024358338345316740287,  0.0033183439844329371411,
      0.0041979347340464447748,  0.0050738101523605397762,
      0.0059451893759213917432,  0.0068112983321641933131,
      0.0076713684850931502392,  0.0085246369703332916750,
      0.0093703470869164893322,  0.010207748896834689231,
      0.011036099859350911883,   0.011854665475101496517,
      0.012662719930224488686,   0.013459546736151190028,
      0.014244439362808515915,   0.015016701863873412941,
      0.015775649493126953937,   0.016520609311153548175,
      0.017250920781734076623,   0.017965936357340275527,
      0.018665022053174047548,   0.019347558009220454240,
      0.020012939039802360787,   0.020660575170140865840,
      0.021289892159440249383,   0.021900332010030027250,
      0.022491353462110269636,   0.023062432473659882882,
      0.023613062685081218405,   0.024142755868168245358,
      0.024651042358999652362,   0.025137471474372653773,
      0.025601611911407978688,   0.026043052129971518851,
      0.026461400717573401842,   0.026856286736420831546,
      0.027227360052316889835,   0.027574291645113610658,
      0.027896773900444008251,   0.028194520882474351899,
      0.028467268587434816978,   0.028714775177703691711,
      0.028936821196237566535,   0.029133209761157363440,
      0.029303766740317660761,   0.029448340905704519456,
      0.029566804067524904162,   0.029659051187868800668,
      0.029725000473843244880,   0.029764593450095681011,
      0.029777795010662342402,   0.029764593450095681011,
      0.029725000473843244880,   0.029659051187868800668,
      0.029566804067524904162,   0.029448340905704519456,
      0.029303766740317660761,   0.029133209761157363440,
      0.028936821196237566535,   0.028714775177703691711,
      0.028467268587434816978,   0.028194520882474351899,
      0.027896773900444008251,   0.027574291645113610658,
      0.027227360052316889835,   0.026856286736420831546,
      0.026461400717573401842,   0.026043052129971518851,
      0.025601611911407978688,   0.025137471474372653773,
      0.024651042358999652362,   0.024142755868168245358,
      0.023613062685081218405,   0.023062432473659882882,
      0.022491353462110269636,   0.021900332010030027250,
      0.021289892159440249383,   0.020660575170140865840,
      0.020012939039802360787,   0.019347558009220454240,
      0.018665022053174047548,   0.017965936357340275527,
      0.017250920781734076623,   0.016520609311153548175,
      0.015775649493126953937,   0.015016701863873412941,
      0.014244439362808515915,   0.013459546736151190028,
      0.012662719930224488686,   0.011854665475101496517,
      0.011036099859350911883,   0.010207748896834689231,
      0.0093703470869164893322,  0.0085246369703332916750,
      0.0076713684850931502392,  0.0068112983321641933131,
      0.0059451893759213917432,  0.0050738101523605397762,
      0.0041979347340464447748,  0.0033183439844329371411,
      0.0024358338345316740287,  0.0015512778120287095335,
      0.00066665737132967914670};
  IntegratorXX::GaussLegendre<double, double> quad(105);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 105; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("110 point GaussLegendre", "[1d-quad]") {
  std::array<double, 110> ref_pts = {
      -0.99976319410985328632,  -0.99875249408940159737,
      -0.99693502469019116209,  -0.99431185082360012107,
      -0.99088504315999525023,  -0.98665735958847874666,
      -0.98163221319204052612,  -0.97581366393475891955,
      -0.96920641390387935584,  -0.96181580301818510605,
      -0.95364780452090875214,  -0.94470902006833434669,
      -0.93500667435405832823,  -0.92454860924909341885,
      -0.91334327745247584611,  -0.90139973565295362724,
      -0.88872763720508300910,  -0.87533722432452868940,
      -0.86123931980827366371,  -0.84644531828609444426,
      -0.83096717701017785545,  -0.81481740619020725508,
      -0.79800905888165824218,  -0.78055572043543147471,
      -0.76247149751732079178,  -0.74377100670617246216,
      -0.72446936267993821620,  -0.70458216599916189071,
      -0.68412549049776758602,  -0.66311587029133644134,
      -0.64157028641336953102,  -0.61950615309033591589,
      -0.59694130366659743196,  -0.57389397619058520883,
      -0.55038279867387700662,  -0.52642677403508905844,
      -0.50204526474075101510,  -0.47725797715557762122,
      -0.45208494561478572153,  -0.42654651623132991922,
      -0.40066333045114451172,  -0.37445630836968304148,
      -0.34794663182323976083,  -0.32115572726871936532,
      -0.29410524846569235498,  -0.26681705897473319943,
      -0.23931321448618698369,  -0.21161594499364727603,
      -0.18374763682655347888,  -0.15573081455642979575,
      -0.12758812279139008058,  -0.099342307873623148949,
      -0.071016199494651549000, -0.042632692243223251846,
      -0.014214727100750172361, 0.014214727100750172361,
      0.042632692243223251846,  0.071016199494651549000,
      0.099342307873623148949,  0.12758812279139008058,
      0.15573081455642979575,   0.18374763682655347888,
      0.21161594499364727603,   0.23931321448618698369,
      0.26681705897473319943,   0.29410524846569235498,
      0.32115572726871936532,   0.34794663182323976083,
      0.37445630836968304148,   0.40066333045114451172,
      0.42654651623132991922,   0.45208494561478572153,
      0.47725797715557762122,   0.50204526474075101510,
      0.52642677403508905844,   0.55038279867387700662,
      0.57389397619058520883,   0.59694130366659743196,
      0.61950615309033591589,   0.64157028641336953102,
      0.66311587029133644134,   0.68412549049776758602,
      0.70458216599916189071,   0.72446936267993821620,
      0.74377100670617246216,   0.76247149751732079178,
      0.78055572043543147471,   0.79800905888165824218,
      0.81481740619020725508,   0.83096717701017785545,
      0.84644531828609444426,   0.86123931980827366371,
      0.87533722432452868940,   0.88872763720508300910,
      0.90139973565295362724,   0.91334327745247584611,
      0.92454860924909341885,   0.93500667435405832823,
      0.94470902006833434669,   0.95364780452090875214,
      0.96181580301818510605,   0.96920641390387935584,
      0.97581366393475891955,   0.98163221319204052612,
      0.98665735958847874666,   0.99088504315999525023,
      0.99431185082360012107,   0.99693502469019116209,
      0.99875249408940159737,   0.99976319410985328632};
  std::array<double, 110> ref_wgt = {
      0.00060769639918581115767, 0.0014141248760001809432,
      0.0022206054619168459191,  0.0030253950743341867458,
      0.0038277602649988264037,  0.0046270379170598805641,
      0.0054225781405841413780,  0.0062137366224290008797,
      0.0069998733781013075812,  0.0077803527710089874309,
      0.0085545438579399403883,  0.0093218208339544703936,
      0.010081563510269796136,   0.010833157802507093921,
      0.011575996220526708449,   0.012309478355999680134,
      0.013033011365785757625,   0.013746010450000572261,
      0.014447899324022878377,   0.015138110683870755447,
      0.015816086664467433012,   0.016481279290368142707,
      0.017133150918549819301,   0.017771174672885481709,
      0.018394834869939672413,   0.019003627435732977355,
      0.019597060313133752546,   0.020174653859544497063,
      0.020735941234559255167,   0.021280468777277243839,
      0.021807796372966726137,   0.022317497808782067069,
      0.022809161118245965030,   0.023282388914218075151,
      0.023736798710080645914,   0.024172023228881383459,
      0.024587710700183540994,   0.024983525144383201730,
      0.025359146644263879075,   0.025714271603568892017,
      0.026048612992382480335,   0.026361900579121296442,
      0.026653881148948740519,   0.026924318708435585192,
      0.027172994676301456879,   0.027399708060082994499,
      0.027604275618585883621,   0.027786532009989456378,
      0.027946329925484145384,   0.028083540208333774239,
      0.028198051958266448591,   0.028289772621109670722,
      0.028358628063597227616,   0.028404562633287387962,
      0.028427539203543977795,   0.028427539203543977795,
      0.028404562633287387962,   0.028358628063597227616,
      0.028289772621109670722,   0.028198051958266448591,
      0.028083540208333774239,   0.027946329925484145384,
      0.027786532009989456378,   0.027604275618585883621,
      0.027399708060082994499,   0.027172994676301456879,
      0.026924318708435585192,   0.026653881148948740519,
      0.026361900579121296442,   0.026048612992382480335,
      0.025714271603568892017,   0.025359146644263879075,
      0.024983525144383201730,   0.024587710700183540994,
      0.024172023228881383459,   0.023736798710080645914,
      0.023282388914218075151,   0.022809161118245965030,
      0.022317497808782067069,   0.021807796372966726137,
      0.021280468777277243839,   0.020735941234559255167,
      0.020174653859544497063,   0.019597060313133752546,
      0.019003627435732977355,   0.018394834869939672413,
      0.017771174672885481709,   0.017133150918549819301,
      0.016481279290368142707,   0.015816086664467433012,
      0.015138110683870755447,   0.014447899324022878377,
      0.013746010450000572261,   0.013033011365785757625,
      0.012309478355999680134,   0.011575996220526708449,
      0.010833157802507093921,   0.010081563510269796136,
      0.0093218208339544703936,  0.0085545438579399403883,
      0.0077803527710089874309,  0.0069998733781013075812,
      0.0062137366224290008797,  0.0054225781405841413780,
      0.0046270379170598805641,  0.0038277602649988264037,
      0.0030253950743341867458,  0.0022206054619168459191,
      0.0014141248760001809432,  0.00060769639918581115767};
  IntegratorXX::GaussLegendre<double, double> quad(110);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 110; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("115 point GaussLegendre", "[1d-quad]") {
  std::array<double, 115> ref_pts = {
      -0.99978325215353621250,  -0.99885814462313119142,
      -0.99719452358131896871,  -0.99479324993407145031,
      -0.99165605480700822536,  -0.98778524824205894376,
      -0.98318369021740943744,  -0.97785478344827272307,
      -0.97180246951830618550,  -0.96503122551415159782,
      -0.95754606053844217559,  -0.94935251192768112749,
      -0.94045664111921480107,  -0.93086502914824639617,
      -0.92058477176900039220,  -0.90962347419947932098,
      -0.89798924549168744880,  -0.88569069253045774711,
      -0.87273691366477062618,  -0.85913749197596811675,
      -0.84490248818766538236,  -0.83004243322249820417,
      -0.81456832041114737382,  -0.79849159735936236727,
      -0.78182415747897434095,  -0.76457833118914616861,
      -0.74676687679435696819,  -0.72840297104586145572,
      -0.70950019939360109169,  -0.69007254593577463989,
      -0.67013438307350055424,  -0.64970046087822255806,
      -0.62878589617972283515,  -0.60740616138281433094,
      -0.58557707302098465980,  -0.56331478005545891651,
      -0.54063575192833717393,  -0.51755676637864449137,
      -0.49409489703030673411,  -0.47026750076123429343,
      -0.44609220486285777686,  -0.42158689399961479562,
      -0.39676969697803499791,  -0.37165897333521137531,
      -0.34627329975657950221,  -0.32063145633305265771,
      -0.29475241266767963272,  -0.26865531384210335446,
      -0.24235946625320218542,  -0.21588432333039179635,
      -0.18924947114415380334,  -0.16247461391643783165,
      -0.13557955944365626487,  -0.10858420444305560306,
      -0.081508519833305040638, -0.054372535960191541566,
      -0.027196327778351300089, 0,
      0.027196327778351300089,  0.054372535960191541566,
      0.081508519833305040638,  0.10858420444305560306,
      0.13557955944365626487,   0.16247461391643783165,
      0.18924947114415380334,   0.21588432333039179635,
      0.24235946625320218542,   0.26865531384210335446,
      0.29475241266767963272,   0.32063145633305265771,
      0.34627329975657950221,   0.37165897333521137531,
      0.39676969697803499791,   0.42158689399961479562,
      0.44609220486285777686,   0.47026750076123429343,
      0.49409489703030673411,   0.51755676637864449137,
      0.54063575192833717393,   0.56331478005545891651,
      0.58557707302098465980,   0.60740616138281433094,
      0.62878589617972283515,   0.64970046087822255806,
      0.67013438307350055424,   0.69007254593577463989,
      0.70950019939360109169,   0.72840297104586145572,
      0.74676687679435696819,   0.76457833118914616861,
      0.78182415747897434095,   0.79849159735936236727,
      0.81456832041114737382,   0.83004243322249820417,
      0.84490248818766538236,   0.85913749197596811675,
      0.87273691366477062618,   0.88569069253045774711,
      0.89798924549168744880,   0.90962347419947932098,
      0.92058477176900039220,   0.93086502914824639617,
      0.94045664111921480107,   0.94935251192768112749,
      0.95754606053844217559,   0.96503122551415159782,
      0.97180246951830618550,   0.97785478344827272307,
      0.98318369021740943744,   0.98778524824205894376,
      0.99165605480700822536,   0.99479324993407145031,
      0.99719452358131896871,   0.99885814462313119142,
      0.99978325215353621250};
  std::array<double, 115> ref_wgt = {
      0.00055622487319956027258, 0.0012943862887496521674,
      0.0020326839620277426996,  0.0027695729071988248386,
      0.0035044320345559271214,  0.0042367043349675394829,
      0.0049658445349982372167,  0.0056913120176604908786,
      0.0064125696033741241606,  0.0071290834915700642015,
      0.0078403235015858729744,  0.0085457634053402137514,
      0.0092448812910783378872,  0.0099371599375621388989,
      0.010622087190758861910,   0.011299156339587009470,
      0.011967866489036024515,   0.012627722929718757902,
      0.013278237503251423028,   0.013918928963017230867,
      0.014549323329952384329,   0.015168954243037968818,
      0.015777363304207450553,   0.016374100417396064287,
      0.016958724121469867286,   0.017530801916780999455,
      0.018089910585102971174,   0.018635636502706287786,
      0.019167575946340799551,   0.019685335391897060878,
      0.020188531805524822781,   0.020676792926992645086,
      0.021149757545078545552,   0.021607075764787629105,
      0.022048409266198777290,   0.022473431554748734396,
      0.022881828202768306373,   0.023273297082091892668,
      0.023647548587568198385,   0.024004305851306722602,
      0.024343304947501484855,   0.024664295087680432129,
      0.024967038806236058708,   0.025251312136099966461,
      0.025516904774431388589,   0.025763620238197090579,
      0.025991276009527542722,   0.026199703670741823895,
      0.026388749028941360684,   0.026558272230080323980,
      0.026708147862428291148,   0.026838265049348630108,
      0.026948527531323966355,   0.027038853737168049363,
      0.027109176844371334965,   0.027159444828535639454,
      0.027189620501861293168,   0.027199681540658320476,
      0.027189620501861293168,   0.027159444828535639454,
      0.027109176844371334965,   0.027038853737168049363,
      0.026948527531323966355,   0.026838265049348630108,
      0.026708147862428291148,   0.026558272230080323980,
      0.026388749028941360684,   0.026199703670741823895,
      0.025991276009527542722,   0.025763620238197090579,
      0.025516904774431388589,   0.025251312136099966461,
      0.024967038806236058708,   0.024664295087680432129,
      0.024343304947501484855,   0.024004305851306722602,
      0.023647548587568198385,   0.023273297082091892668,
      0.022881828202768306373,   0.022473431554748734396,
      0.022048409266198777290,   0.021607075764787629105,
      0.021149757545078545552,   0.020676792926992645086,
      0.020188531805524822781,   0.019685335391897060878,
      0.019167575946340799551,   0.018635636502706287786,
      0.018089910585102971174,   0.017530801916780999455,
      0.016958724121469867286,   0.016374100417396064287,
      0.015777363304207450553,   0.015168954243037968818,
      0.014549323329952384329,   0.013918928963017230867,
      0.013278237503251423028,   0.012627722929718757902,
      0.011967866489036024515,   0.011299156339587009470,
      0.010622087190758861910,   0.0099371599375621388989,
      0.0092448812910783378872,  0.0085457634053402137514,
      0.0078403235015858729744,  0.0071290834915700642015,
      0.0064125696033741241606,  0.0056913120176604908786,
      0.0049658445349982372167,  0.0042367043349675394829,
      0.0035044320345559271214,  0.0027695729071988248386,
      0.0020326839620277426996,  0.0012943862887496521674,
      0.00055622487319956027258};
  IntegratorXX::GaussLegendre<double, double> quad(115);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 115; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("120 point GaussLegendre", "[1d-quad]") {
  std::array<double, 120> ref_pts = {
      -0.99980086565895892057,  -0.99895092167403470674,
      -0.99742241361329052588,  -0.99521604059890816642,
      -0.99233326061616648526,  -0.98877602307152612460,
      -0.98454674241341055233,  -0.97964829182104224488,
      -0.97408400001022800995,  -0.96785764855797226867,
      -0.96097346917158263879,  -0.95343614074227577316,
      -0.94525078613147563282,  -0.93642296867167584144,
      -0.92695868837577369051,  -0.91686437785362379175,
      -0.90614689793673750678,  -0.89481353301315723197,
      -0.88287198607517007604,  -0.87033037348294415720,
      -0.85719721944748284638,  -0.84348145023654890301,
      -0.82919238810743642197,  -0.81433974497067638656,
      -0.79893361578895796329,  -0.78298447171573599852,
      -0.76650315297817740880,  -0.74950086150927635720,
      -0.73198915333414085539,  -0.71397993071562203346,
      -0.69548543406462192260,  -0.67651823362057625237,
      -0.65709122090776547137,  -0.63721759997325991863,
      -0.61691087841245374549,  -0.59618485818828674282,
      -0.57505362625039358875,  -0.55353154496055611631,
      -0.53163324233096592576,  -0.50937360208193195079,
      -0.48676775352579034877,  -0.46383106128389224385,
      -0.44057911484365832924,  -0.41702771796279805705,
      -0.39319287792789503751,  -0.36909079467465926469,
      -0.34473784977724081695,  -0.32015059531408868317,
      -0.29534574261792228088,  -0.27034015091746200296,
      -0.24515081587863870169,  -0.21979485805307034402,
      -0.19428951124165710205,  -0.16865211078120383710,
      -0.14290008176203125318,  -0.11705092718458390264,
      -0.091122216063084689774, -0.065131571484321510537,
      -0.039096658629682162286, -0.013035172768578637618,
      0.013035172768578637618,  0.039096658629682162286,
      0.065131571484321510537,  0.091122216063084689774,
      0.11705092718458390264,   0.14290008176203125318,
      0.16865211078120383710,   0.19428951124165710205,
      0.21979485805307034402,   0.24515081587863870169,
      0.27034015091746200296,   0.29534574261792228088,
      0.32015059531408868317,   0.34473784977724081695,
      0.36909079467465926469,   0.39319287792789503751,
      0.41702771796279805705,   0.44057911484365832924,
      0.46383106128389224385,   0.48676775352579034877,
      0.50937360208193195079,   0.53163324233096592576,
      0.55353154496055611631,   0.57505362625039358875,
      0.59618485818828674282,   0.61691087841245374549,
      0.63721759997325991863,   0.65709122090776547137,
      0.67651823362057625237,   0.69548543406462192260,
      0.71397993071562203346,   0.73198915333414085539,
      0.74950086150927635720,   0.76650315297817740880,
      0.78298447171573599852,   0.79893361578895796329,
      0.81433974497067638656,   0.82919238810743642197,
      0.84348145023654890301,   0.85719721944748284638,
      0.87033037348294415720,   0.88287198607517007604,
      0.89481353301315723197,   0.90614689793673750678,
      0.91686437785362379175,   0.92695868837577369051,
      0.93642296867167584144,   0.94525078613147563282,
      0.95343614074227577316,   0.96097346917158263879,
      0.96785764855797226867,   0.97408400001022800995,
      0.97964829182104224488,   0.98454674241341055233,
      0.98877602307152612460,   0.99233326061616648526,
      0.99521604059890816642,   0.99742241361329052588,
      0.99895092167403470674,   0.99980086565895892057};
  std::array<double, 120> ref_wgt = {
      0.00051102606369461211806, 0.0011892343277931651479,
      0.0018676392307719650544,  0.0025448620540103064362,
      0.0032203727339262675315,  0.0038936998629014653083,
      0.0045643825408821160356,  0.0052319638142955942465,
      0.0058959894992837342112,  0.0065560080716716139904,
      0.0072115708323796387389,  0.0078622321576899802382,
      0.0085075497786523522796,  0.0091470850707376679923,
      0.0097804033464975271759,  0.010407074148125193314,
      0.011026671538428158911,   0.011638774389403706421,
      0.012242966667916449982,   0.012838837718124321546,
      0.013425982540374306852,   0.014004002066329457983,
      0.014572503430111715481,   0.015131100235259206067,
      0.015679412817306104420,   0.016217068501800012626,
      0.016743701857577268945,   0.017258954945121280846,
      0.017762477559833242327,   0.018253927470048648017,
      0.018732970649636977223,   0.019199281505025862082,
      0.019652543096495018644,   0.020092447353589234371,
      0.020518695284503785831,   0.020930997179299815562,
      0.021329072806811432127,   0.021712651605110614675,
      0.022081472865400403481,   0.022435285909211340243,
      0.022773850258780685207,   0.023096935800498580265,
      0.023404322941310045868,   0.023695802757966492266,
      0.023971177139025289244,   0.024230258919500870385,
      0.024472872008075844620,   0.024698851506785646314,
      0.024908043823095372002,   0.025100306774292623778,
      0.025275509684125402784,   0.025433533471619367712,
      0.025574270732014089304,   0.025697625809763288695,
      0.025803514863549441776,   0.025891865923268559605,
      0.025962618938946412824,   0.026015725821552952213,
      0.026051150475687184285,   0.026068868824110286371,
      0.026068868824110286371,   0.026051150475687184285,
      0.026015725821552952213,   0.025962618938946412824,
      0.025891865923268559605,   0.025803514863549441776,
      0.025697625809763288695,   0.025574270732014089304,
      0.025433533471619367712,   0.025275509684125402784,
      0.025100306774292623778,   0.024908043823095372002,
      0.024698851506785646314,   0.024472872008075844620,
      0.024230258919500870385,   0.023971177139025289244,
      0.023695802757966492266,   0.023404322941310045868,
      0.023096935800498580265,   0.022773850258780685207,
      0.022435285909211340243,   0.022081472865400403481,
      0.021712651605110614675,   0.021329072806811432127,
      0.020930997179299815562,   0.020518695284503785831,
      0.020092447353589234371,   0.019652543096495018644,
      0.019199281505025862082,   0.018732970649636977223,
      0.018253927470048648017,   0.017762477559833242327,
      0.017258954945121280846,   0.016743701857577268945,
      0.016217068501800012626,   0.015679412817306104420,
      0.015131100235259206067,   0.014572503430111715481,
      0.014004002066329457983,   0.013425982540374306852,
      0.012838837718124321546,   0.012242966667916449982,
      0.011638774389403706421,   0.011026671538428158911,
      0.010407074148125193314,   0.0097804033464975271759,
      0.0091470850707376679923,  0.0085075497786523522796,
      0.0078622321576899802382,  0.0072115708323796387389,
      0.0065560080716716139904,  0.0058959894992837342112,
      0.0052319638142955942465,  0.0045643825408821160356,
      0.0038936998629014653083,  0.0032203727339262675315,
      0.0025448620540103064362,  0.0018676392307719650544,
      0.0011892343277931651479,  0.00051102606369461211806};
  IntegratorXX::GaussLegendre<double, double> quad(120);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 120; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("140 point GaussLegendre", "[1d-quad]") {
  std::array<double, 140> ref_pts = {
      -0.99985352210932558024,  -0.99922829715213839835,
      -0.99810379758693937621,  -0.99648033570266106662,
      -0.99435869253571460813,  -0.99173992149344043875,
      -0.98862532939981121966,  -0.98501647240735662209,
      -0.98091515430622309559,  -0.97632342531870318237,
      -0.97124358095609508100,  -0.96567816081943600846,
      -0.95962994730513737933,  -0.95310196420123218643,
      -0.94609747516870795188,  -0.93861998210586971375,
      -0.93067322339519123905,  -0.92226117203283649199,
      -0.91338803364141440831,  -0.90405824436675271648,
      -0.89427646865962202035,  -0.88404759694344727605,
      -0.87337674316912849102,  -0.86226924225816524314,
      -0.85073064743534535378,  -0.83876672745231940148,
      -0.82638346370344121070,  -0.81358704723531083471,
      -0.80038387565151135794,  -0.78678054991408435703,
      -0.77278387104334124456,  -0.75840083671765907210,
      -0.74363863777495973926,  -0.72850465461762096977,
      -0.71300645352261588214,  -0.69715178285872549881,
      -0.68094856921271509629,  -0.66440491342641088588,
      -0.64752908654665811476,  -0.63032952569018527367,
      -0.61281482982544167156,  -0.59499375547351717081,
      -0.57687521233029334998,  -0.55846825881201475594,
      -0.53978209752650720470,  -0.52082607067230727159,
      -0.50160965536800315990,  -0.48214245891412203285,
      -0.46243421398993262221,  -0.44249477378756446949,
      -0.42233410708587649695,  -0.40196229326653773084,
      -0.38138951727481189195,  -0.36062606452756521565,
      -0.33968231577104325078,  -0.31856874189098750085,
      -0.29729589867768659960,  -0.27587442154857924435,
      -0.25431502023104733335,  -0.23262847340805765654,
      -0.21082562332932906381,  -0.18891737039071927070,
      -0.16691466768454135031,  -0.14482851552353449447,
      -0.12266995594122679865,  -0.10045006717143962872,
      -0.078179958109693555217, -0.055870762759284890044,
      -0.033533634664809524063, -0.011179741335917040051,
      0.011179741335917040051,  0.033533634664809524063,
      0.055870762759284890044,  0.078179958109693555217,
      0.10045006717143962872,   0.12266995594122679865,
      0.14482851552353449447,   0.16691466768454135031,
      0.18891737039071927070,   0.21082562332932906381,
      0.23262847340805765654,   0.25431502023104733335,
      0.27587442154857924435,   0.29729589867768659960,
      0.31856874189098750085,   0.33968231577104325078,
      0.36062606452756521565,   0.38138951727481189195,
      0.40196229326653773084,   0.42233410708587649695,
      0.44249477378756446949,   0.46243421398993262221,
      0.48214245891412203285,   0.50160965536800315990,
      0.52082607067230727159,   0.53978209752650720470,
      0.55846825881201475594,   0.57687521233029334998,
      0.59499375547351717081,   0.61281482982544167156,
      0.63032952569018527367,   0.64752908654665811476,
      0.66440491342641088588,   0.68094856921271509629,
      0.69715178285872549881,   0.71300645352261588214,
      0.72850465461762096977,   0.74363863777495973926,
      0.75840083671765907210,   0.77278387104334124456,
      0.78678054991408435703,   0.80038387565151135794,
      0.81358704723531083471,   0.82638346370344121070,
      0.83876672745231940148,   0.85073064743534535378,
      0.86226924225816524314,   0.87337674316912849102,
      0.88404759694344727605,   0.89427646865962202035,
      0.90405824436675271648,   0.91338803364141440831,
      0.92226117203283649199,   0.93067322339519123905,
      0.93861998210586971375,   0.94609747516870795188,
      0.95310196420123218643,   0.95962994730513737933,
      0.96567816081943600846,   0.97124358095609508100,
      0.97632342531870318237,   0.98091515430622309559,
      0.98501647240735662209,   0.98862532939981121966,
      0.99173992149344043875,   0.99435869253571460813,
      0.99648033570266106662,   0.99810379758693937621,
      0.99922829715213839835,   0.99985352210932558024};
  std::array<double, 140> ref_wgt = {
      0.00037590039214354586153, 0.00087484217742029831593,
      0.0013740857528258267368,  0.0018727065641160001860,
      0.0023704040060146090155,  0.0028669202217072471890,
      0.0033620045815524731039,  0.0038554087523106756292,
      0.0043468857274110001399,  0.0048361896425015503565,
      0.0053230757943314649971,  0.0058073007228670121049,
      0.0062886223157512016217,  0.0067667999213016653992,
      0.0072415944648095972274,  0.0077127685659452119267,
      0.0081800866562617576203,  0.0086433150962902459277,
      0.0091022222919422241910,  0.0095565788100452413068,
      0.010006157492889489665,   0.010450733571692403887,
      0.010890084778903566425,   0.011323991459281247511,
      0.011752236679677355362,   0.012174606337471076930,
      0.012590889267593897155,   0.013000877348090461788,
      0.013404365604161159131,   0.013801152310633491826,
      0.014191039092810381532,   0.014573831025644551181,
      0.014949336731189095054,   0.015317368474275296790,
      0.015677742256369702814,   0.016030277907563411834,
      0.016374799176647505254,   0.016711133819229522027,
      0.017039113683846876641,   0.017358574796034131911,
      0.017669357440302069757,   0.017971306239987553458,
      0.018264270234934244145,   0.018548102956965322330,
      0.018822662503110471894,   0.019087811606550508808,
      0.019343417705244179521,   0.019589353008202814022,
      0.019825494559379695498,   0.020051724299142201809,
      0.020267929123295983094,   0.020474000939631664174,
      0.020669836721965799410,   0.020855338561649060723,
      0.021030413716515906020,   0.021194974657251254566,
      0.021348939111150987412,   0.021492230103254394058,
      0.021624775994828000551,   0.021746510519181538488,
      0.021857372814798148273,   0.021957307455762252776,
      0.022046264479469888660,   0.022124199411607641289,
      0.022191073288387694777,   0.022246852676027880534,
      0.022291509687466985106,   0.022325021996306960335,
      0.022347372847975065327,   0.022358551068100359611,
      0.022358551068100359611,   0.022347372847975065327,
      0.022325021996306960335,   0.022291509687466985106,
      0.022246852676027880534,   0.022191073288387694777,
      0.022124199411607641289,   0.022046264479469888660,
      0.021957307455762252776,   0.021857372814798148273,
      0.021746510519181538488,   0.021624775994828000551,
      0.021492230103254394058,   0.021348939111150987412,
      0.021194974657251254566,   0.021030413716515906020,
      0.020855338561649060723,   0.020669836721965799410,
      0.020474000939631664174,   0.020267929123295983094,
      0.020051724299142201809,   0.019825494559379695498,
      0.019589353008202814022,   0.019343417705244179521,
      0.019087811606550508808,   0.018822662503110471894,
      0.018548102956965322330,   0.018264270234934244145,
      0.017971306239987553458,   0.017669357440302069757,
      0.017358574796034131911,   0.017039113683846876641,
      0.016711133819229522027,   0.016374799176647505254,
      0.016030277907563411834,   0.015677742256369702814,
      0.015317368474275296790,   0.014949336731189095054,
      0.014573831025644551181,   0.014191039092810381532,
      0.013801152310633491826,   0.013404365604161159131,
      0.013000877348090461788,   0.012590889267593897155,
      0.012174606337471076930,   0.011752236679677355362,
      0.011323991459281247511,   0.010890084778903566425,
      0.010450733571692403887,   0.010006157492889489665,
      0.0095565788100452413068,  0.0091022222919422241910,
      0.0086433150962902459277,  0.0081800866562617576203,
      0.0077127685659452119267,  0.0072415944648095972274,
      0.0067667999213016653992,  0.0062886223157512016217,
      0.0058073007228670121049,  0.0053230757943314649971,
      0.0048361896425015503565,  0.0043468857274110001399,
      0.0038554087523106756292,  0.0033620045815524731039,
      0.0028669202217072471890,  0.0023704040060146090155,
      0.0018727065641160001860,  0.0013740857528258267368,
      0.00087484217742029831593, 0.00037590039214354586153};
  IntegratorXX::GaussLegendre<double, double> quad(140);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 140; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("160 point GaussLegendre", "[1d-quad]") {
  std::array<double, 160> ref_pts = {
      -0.99988775227216323886,  -0.99940862064130580189,
      -0.99854681875151670416,  -0.99730248527727952458,
      -0.99567607348802513257,  -0.99366820089209682863,
      -0.99127963487964647739,  -0.98851128979680720330,
      -0.98536422589589034402,  -0.98183964869652625337,
      -0.97793890843330590867,  -0.97366349949893397553,
      -0.96901505985278747145,  -0.96399537038366275906,
      -0.95860635422218327343,  -0.95285007600097504502,
      -0.94672874106185198583,  -0.94024469460978272543,
      -0.93340042081367811826,  -0.92619854185418478447,
      -0.91864181691875736327,  -0.91073314114433942686,
      -0.90247554450802428559,  -0.89387219066609935152,
      -0.88492637574190507867,  -0.87564152706296380995,
      -0.86602120184785628018,  -0.85606908584334470792,
      -0.84578899191226174390,  -0.83518485857270425998,
      -0.82426074848909020025,  -0.81302084691565555961,
      -0.80146946009298705781,  -0.78961101359820426898,
      -0.77745005064942286786,  -0.76499123036514827311,
      -0.75223932597926631119,  -0.73919922301231459214,
      -0.72587591739973508019,  -0.71227451357782485490,
      -0.69840022252811828927,  -0.68425835978094981512,
      -0.66985434337896209898,  -0.65519369180133980823,
      -0.64028202184956420254,  -0.62512504649549853469,
      -0.60972857269262868160,  -0.59409849915129754677,
      -0.57824081407878557356,  -0.56216159288510317902,
      -0.54586699585537405731,  -0.52936326578970110260,
      -0.51265672561141916130,  -0.49575377594465093594,
      -0.47866089266209412478,  -0.46138462440397928694,
      -0.44393159006914896869,  -0.42630847627921930771,
      -0.40852203481679564572,  -0.39057908003872362012,
      -0.37248648626536677057,  -0.35425118514691088100,
      -0.33588016300770407954,  -0.31738045816965013400,
      -0.29875915825568040568,  -0.28002339747433755684,
      -0.26118035388651134376,  -0.24223724665537366526,
      -0.22320133328056647332,  -0.20407990681770218569,
      -0.18488029308424186740,  -0.16560984785282166720,
      -0.14627595403310280366,  -0.12688601884322479285,
      -0.10744747097194559250,  -0.087967757732555905665,
      -0.068454342209658038609, -0.048914700399902441112,
      -0.029356318347777372547, -0.0097866892775490322748,
      0.0097866892775490322748, 0.029356318347777372547,
      0.048914700399902441112,  0.068454342209658038609,
      0.087967757732555905665,  0.10744747097194559250,
      0.12688601884322479285,   0.14627595403310280366,
      0.16560984785282166720,   0.18488029308424186740,
      0.20407990681770218569,   0.22320133328056647332,
      0.24223724665537366526,   0.26118035388651134376,
      0.28002339747433755684,   0.29875915825568040568,
      0.31738045816965013400,   0.33588016300770407954,
      0.35425118514691088100,   0.37248648626536677057,
      0.39057908003872362012,   0.40852203481679564572,
      0.42630847627921930771,   0.44393159006914896869,
      0.46138462440397928694,   0.47866089266209412478,
      0.49575377594465093594,   0.51265672561141916130,
      0.52936326578970110260,   0.54586699585537405731,
      0.56216159288510317902,   0.57824081407878557356,
      0.59409849915129754677,   0.60972857269262868160,
      0.62512504649549853469,   0.64028202184956420254,
      0.65519369180133980823,   0.66985434337896209898,
      0.68425835978094981512,   0.69840022252811828927,
      0.71227451357782485490,   0.72587591739973508019,
      0.73919922301231459214,   0.75223932597926631119,
      0.76499123036514827311,   0.77745005064942286786,
      0.78961101359820426898,   0.80146946009298705781,
      0.81302084691565555961,   0.82426074848909020025,
      0.83518485857270425998,   0.84578899191226174390,
      0.85606908584334470792,   0.86602120184785628018,
      0.87564152706296380995,   0.88492637574190507867,
      0.89387219066609935152,   0.90247554450802428559,
      0.91073314114433942686,   0.91864181691875736327,
      0.92619854185418478447,   0.93340042081367811826,
      0.94024469460978272543,   0.94672874106185198583,
      0.95285007600097504502,   0.95860635422218327343,
      0.96399537038366275906,   0.96901505985278747145,
      0.97366349949893397553,   0.97793890843330590867,
      0.98183964869652625337,   0.98536422589589034402,
      0.98851128979680720330,   0.99127963487964647739,
      0.99366820089209682863,   0.99567607348802513257,
      0.99730248527727952458,   0.99854681875151670416,
      0.99940862064130580189,   0.99988775227216323886};
  std::array<double, 160> ref_wgt = {
      0.00028805852852108304459, 0.00067043832015230328148,
      0.0010531276722137354882,  0.0014354627534831928630,
      0.0018172577596651840091,  0.0021983594967964887448,
      0.0025786201218375319227,  0.0029578933250394165749,
      0.0033360335478208662140,  0.0037128958025875157048,
      0.0040883356485679726778,  0.0044622092163349739527,
      0.0048343732497027738172,  0.0052046851544472673303,
      0.0055730030498609048935,  0.0059391858214858775431,
      0.0063030931742781317250,  0.0066645856858378121375,
      0.0070235248595140449191,  0.0073797731772739775199,
      0.0077331941522669865754,  0.0080836523810363798642,
      0.0084310135953425648378,  0.0087751447135682370996,
      0.0091159138916800049040,  0.0094531905737232250061,
      0.0097868455418283304357,  0.010116750965707939529,
      0.010442780451624749961,   0.010764809090810758700,
      0.011082713507318778061,   0.011396371905287581344,
      0.011705664115602334662,   0.012010471641932270628,
      0.012310677706127844949,   0.012606167292959895140,
      0.012896827194183595962,   0.013182546051910281559,
      0.013463214401270481526,   0.013738724712351798516,
      0.014008971431395539351,   0.014273851021236300424,
      0.014533262000969001824,   0.014787104984828163389,
      0.015035282720264519721,   0.015277700125204380351,
      0.015514264324477455561,   0.015744884685399187892,
      0.015969472852493954059,   0.016187942781345831688,
      0.016400210771563960053,   0.016606195498849863498,
      0.016805818046154450648,   0.016999001933912751459,
      0.017185673149344807696,   0.017365760174811490356,
      0.017539194015214379760,   0.017705908224429210342,
      0.017865838930762752555,   0.018018924861423378479,
      0.018165107365995935672,   0.018304330438911935312,
      0.018436540740906445628,   0.018561687619453469881,
      0.018679723128171979514,   0.018790602045195167518,
      0.018894281890495884233,   0.018990722942161617801,
      0.019079888251612783875,   0.019161743657758494099,
      0.019236257800084379925,   0.019303402130667457503,
      0.019363150925113430465,   0.019415481292412240244,
      0.019460373183708088060,   0.019497809399980568539,
      0.019527775598633972166,   0.019550260298992232050,
      0.019565254886697409755,   0.019572753617010035031,
      0.019572753617010035031,   0.019565254886697409755,
      0.019550260298992232050,   0.019527775598633972166,
      0.019497809399980568539,   0.019460373183708088060,
      0.019415481292412240244,   0.019363150925113430465,
      0.019303402130667457503,   0.019236257800084379925,
      0.019161743657758494099,   0.019079888251612783875,
      0.018990722942161617801,   0.018894281890495884233,
      0.018790602045195167518,   0.018679723128171979514,
      0.018561687619453469881,   0.018436540740906445628,
      0.018304330438911935312,   0.018165107365995935672,
      0.018018924861423378479,   0.017865838930762752555,
      0.017705908224429210342,   0.017539194015214379760,
      0.017365760174811490356,   0.017185673149344807696,
      0.016999001933912751459,   0.016805818046154450648,
      0.016606195498849863498,   0.016400210771563960053,
      0.016187942781345831688,   0.015969472852493954059,
      0.015744884685399187892,   0.015514264324477455561,
      0.015277700125204380351,   0.015035282720264519721,
      0.014787104984828163389,   0.014533262000969001824,
      0.014273851021236300424,   0.014008971431395539351,
      0.013738724712351798516,   0.013463214401270481526,
      0.013182546051910281559,   0.012896827194183595962,
      0.012606167292959895140,   0.012310677706127844949,
      0.012010471641932270628,   0.011705664115602334662,
      0.011396371905287581344,   0.011082713507318778061,
      0.010764809090810758700,   0.010442780451624749961,
      0.010116750965707939529,   0.0097868455418283304357,
      0.0094531905737232250061,  0.0091159138916800049040,
      0.0087751447135682370996,  0.0084310135953425648378,
      0.0080836523810363798642,  0.0077331941522669865754,
      0.0073797731772739775199,  0.0070235248595140449191,
      0.0066645856858378121375,  0.0063030931742781317250,
      0.0059391858214858775431,  0.0055730030498609048935,
      0.0052046851544472673303,  0.0048343732497027738172,
      0.0044622092163349739527,  0.0040883356485679726778,
      0.0037128958025875157048,  0.0033360335478208662140,
      0.0029578933250394165749,  0.0025786201218375319227,
      0.0021983594967964887448,  0.0018172577596651840091,
      0.0014354627534831928630,  0.0010531276722137354882,
      0.00067043832015230328148, 0.00028805852852108304459};
  IntegratorXX::GaussLegendre<double, double> quad(160);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 160; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("180 point GaussLegendre", "[1d-quad]") {
  std::array<double, 180> ref_pts = {
      -0.99991124859959846622,  -0.99953240368648144300,
      -0.99885095307496932896,  -0.99786695178319605919,
      -0.99658067934065245339,  -0.99499252096035108618,
      -0.99310295625783182891,  -0.99091255702509217008,
      -0.98842198650435480102,  -0.98563199900322552415,
      -0.98254343959465237166,  -0.97915724382967283332,
      -0.97547443743906628355,  -0.97149613601495488295,
      -0.96722354466867715623,  -0.96265795766333324780,
      -0.95780075802028989695,  -0.95265341709934384476,
      -0.94721749415244557305,  -0.94149463585099277754,
      -0.93548657578676395431,  -0.92919513394659976410,
      -0.92262221616096455552,  -0.91576981352653822529,
      -0.90864000180300244712,  -0.90123494078419683413,
      -0.89355687364383072078,  -0.88560812625594548405,
      -0.87739110649033097810,  -0.86890830348310791860,
      -0.86016228688269603436,  -0.85115570607139557833,
      -0.84189128936281739869,  -0.83237184317540424492,
      -0.82260025118229333880,  -0.81257947343777748898,
      -0.80231254548062917699,  -0.79180257741455909484,
      -0.78105275296608757482,  -0.77006632852011421843,
      -0.75884663213347780637,  -0.74739706252680525314,
      -0.73572108805495495748,  -0.72382224565636639292,
      -0.71170413978163417919,  -0.69937044130163117372,
      -0.68682488639551132203,  -0.67407127541892910357,
      -0.66111347175281840553,  -0.64795540063307954784,
      -0.63460104796152896799,  -0.62105445909847175145,
      -0.60731973763726276153,  -0.59340104416122757964,
      -0.57930259498331981102,  -0.56502866086889654158,
      -0.55058356574199884553,  -0.53597168537552924087,
      -0.52119744606572286816,  -0.50626532329131392594,
      -0.49117984035780353272,  -0.47594556702723969883,
      -0.46056711813392448020,  -0.44504915218646764937,
      -0.42939636995661035521,  -0.41361351305524625038,
      -0.39770536249607144416,  -0.38167673724729838562,
      -0.36553249277187239808,  -0.34927751955663306860,
      -0.33291674163086604510,  -0.31645511507469400793,
      -0.29989762651775866027,  -0.28324929162864852338,
      -0.26651515359553012545,  -0.24970028159844283830,
      -0.23280976927372014065,  -0.21584873317100247246,
      -0.19882231120330908874,  -0.18173566109063842381,
      -0.16459395879756843754,  -0.14740239696533023256,
      -0.13016618333882990560,  -0.11289053918909512648,
      -0.095580697731624324298, -0.078241902541117601355,
      -0.060879405963069591728, -0.043498467522705431707,
      -0.026104352331741814362, -0.0087023294934557592258,
      0.0087023294934557592258, 0.026104352331741814362,
      0.043498467522705431707,  0.060879405963069591728,
      0.078241902541117601355,  0.095580697731624324298,
      0.11289053918909512648,   0.13016618333882990560,
      0.14740239696533023256,   0.16459395879756843754,
      0.18173566109063842381,   0.19882231120330908874,
      0.21584873317100247246,   0.23280976927372014065,
      0.24970028159844283830,   0.26651515359553012545,
      0.28324929162864852338,   0.29989762651775866027,
      0.31645511507469400793,   0.33291674163086604510,
      0.34927751955663306860,   0.36553249277187239808,
      0.38167673724729838562,   0.39770536249607144416,
      0.41361351305524625038,   0.42939636995661035521,
      0.44504915218646764937,   0.46056711813392448020,
      0.47594556702723969883,   0.49117984035780353272,
      0.50626532329131392594,   0.52119744606572286816,
      0.53597168537552924087,   0.55058356574199884553,
      0.56502866086889654158,   0.57930259498331981102,
      0.59340104416122757964,   0.60731973763726276153,
      0.62105445909847175145,   0.63460104796152896799,
      0.64795540063307954784,   0.66111347175281840553,
      0.67407127541892910357,   0.68682488639551132203,
      0.69937044130163117372,   0.71170413978163417919,
      0.72382224565636639292,   0.73572108805495495748,
      0.74739706252680525314,   0.75884663213347780637,
      0.77006632852011421843,   0.78105275296608757482,
      0.79180257741455909484,   0.80231254548062917699,
      0.81257947343777748898,   0.82260025118229333880,
      0.83237184317540424492,   0.84189128936281739869,
      0.85115570607139557833,   0.86016228688269603436,
      0.86890830348310791860,   0.87739110649033097810,
      0.88560812625594548405,   0.89355687364383072078,
      0.90123494078419683413,   0.90864000180300244712,
      0.91576981352653822529,   0.92262221616096455552,
      0.92919513394659976410,   0.93548657578676395431,
      0.94149463585099277754,   0.94721749415244557305,
      0.95265341709934384476,   0.95780075802028989695,
      0.96265795766333324780,   0.96722354466867715623,
      0.97149613601495488295,   0.97547443743906628355,
      0.97915724382967283332,   0.98254343959465237166,
      0.98563199900322552415,   0.98842198650435480102,
      0.99091255702509217008,   0.99310295625783182891,
      0.99499252096035108618,   0.99658067934065245339,
      0.99786695178319605919,   0.99885095307496932896,
      0.99953240368648144300,   0.99991124859959846622};
  std::array<double, 180> ref_wgt = {
      0.00022776138474418752807, 0.00053011819219599372300,
      0.00083276225884244954484, 0.0011351929641841981514,
      0.0014372876034449997849,  0.0017389491934059356143,
      0.0020400849026433471701,  0.0023406030164980544216,
      0.0026404123021770190275,  0.0029394218498498665360,
      0.0032375410371694042311,  0.0035346795323608386320,
      0.0038307473111332084576,  0.0041256546790771235791,
      0.0044193122964040332686,  0.0047116312037255832783,
      0.0050025228482903513640,  0.0052918991103980543693,
      0.0055796723298475052297,  0.0058657553323393747585,
      0.0061500614557871612553,  0.0064325045765066339806,
      0.0067129991352631523201,  0.0069914601631613894444,
      0.0072678033073649634277,  0.0075419448566352606450,
      0.0078138017666798393191,  0.0080832916853015080731,
      0.0083503329773396451153,  0.0086148447493956508810,
      0.0088767468743346654475,  0.0091359600155558650091,
      0.0093924056510237996018,  0.0096460060970533599129,
      0.0098966845318410725754,  0.010144365018735526103,
      0.010388972529239827037,   0.010630432965739080226,
      0.010868673183945980018,   0.011103621015057691499,
      0.011335205287617293519,   0.011563355849073148567,
      0.011788003587029658936,   0.012009080450182964239,
      0.012226519468935232464,   0.012440254775681295342,
      0.012650221624761479028,   0.012856356412074582997,
      0.013058596694345063547,   0.013256881208038583536,
      0.013451149887920196865,   0.013641343885249544732,
      0.013827405585607550908,   0.014009278626349215052,
      0.014186907913677216526,   0.014360239639331156152,
      0.014529221296887379850,   0.014693801697664446181,
      0.014853930986229419316,   0.015009560655500289927,
      0.015160643561439948888,   0.015307133937337262435,
      0.015448987407670922541,   0.015586161001551872666,
      0.015718613165740236741,   0.015846303777232808133,
      0.015969194155417285455,   0.016087247073789573337,
      0.016200426771230598632,   0.016308698962839225998,
      0.016412030850317991237,   0.016510391131908506276,
      0.016603750011873526071,   0.016692079209522805054,
      0.016775351967780008960,   0.016853543061288086857,
      0.016926628804050648080,   0.016994587056607029262,
      0.017057397232738877962,   0.017115040305706221287,
      0.017167498814011130432,   0.017214756866687235184,
      0.017256800148113486050,   0.017293615922350705806,
      0.017325193036999616796,   0.017351521926579175309,
      0.017372594615424189627,   0.017388404720101343997,
      0.017398947451342896640,   0.017404219615497466045,
      0.017404219615497466045,   0.017398947451342896640,
      0.017388404720101343997,   0.017372594615424189627,
      0.017351521926579175309,   0.017325193036999616796,
      0.017293615922350705806,   0.017256800148113486050,
      0.017214756866687235184,   0.017167498814011130432,
      0.017115040305706221287,   0.017057397232738877962,
      0.016994587056607029262,   0.016926628804050648080,
      0.016853543061288086857,   0.016775351967780008960,
      0.016692079209522805054,   0.016603750011873526071,
      0.016510391131908506276,   0.016412030850317991237,
      0.016308698962839225998,   0.016200426771230598632,
      0.016087247073789573337,   0.015969194155417285455,
      0.015846303777232808133,   0.015718613165740236741,
      0.015586161001551872666,   0.015448987407670922541,
      0.015307133937337262435,   0.015160643561439948888,
      0.015009560655500289927,   0.014853930986229419316,
      0.014693801697664446181,   0.014529221296887379850,
      0.014360239639331156152,   0.014186907913677216526,
      0.014009278626349215052,   0.013827405585607550908,
      0.013641343885249544732,   0.013451149887920196865,
      0.013256881208038583536,   0.013058596694345063547,
      0.012856356412074582997,   0.012650221624761479028,
      0.012440254775681295342,   0.012226519468935232464,
      0.012009080450182964239,   0.011788003587029658936,
      0.011563355849073148567,   0.011335205287617293519,
      0.011103621015057691499,   0.010868673183945980018,
      0.010630432965739080226,   0.010388972529239827037,
      0.010144365018735526103,   0.0098966845318410725754,
      0.0096460060970533599129,  0.0093924056510237996018,
      0.0091359600155558650091,  0.0088767468743346654475,
      0.0086148447493956508810,  0.0083503329773396451153,
      0.0080832916853015080731,  0.0078138017666798393191,
      0.0075419448566352606450,  0.0072678033073649634277,
      0.0069914601631613894444,  0.0067129991352631523201,
      0.0064325045765066339806,  0.0061500614557871612553,
      0.0058657553323393747585,  0.0055796723298475052297,
      0.0052918991103980543693,  0.0050025228482903513640,
      0.0047116312037255832783,  0.0044193122964040332686,
      0.0041256546790771235791,  0.0038307473111332084576,
      0.0035346795323608386320,  0.0032375410371694042311,
      0.0029394218498498665360,  0.0026404123021770190275,
      0.0023406030164980544216,  0.0020400849026433471701,
      0.0017389491934059356143,  0.0014372876034449997849,
      0.0011351929641841981514,  0.00083276225884244954484,
      0.00053011819219599372300, 0.00022776138474418752807};
  IntegratorXX::GaussLegendre<double, double> quad(180);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 180; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("200 point GaussLegendre", "[1d-quad]") {
  std::array<double, 200> ref_pts = {
      -0.99992807128506997705,  -0.99962103128093639633,
      -0.99906872187315218082,  -0.99827115594891070943,
      -0.99722851428337977582,  -0.99594104926101120190,
      -0.99440907576570145179,  -0.99263296941718975970,
      -0.99061316603067361374,  -0.98835016136076129959,
      -0.98584451092178647743,  -0.98309682982609575204,
      -0.98010779262092403188,  -0.97687813311656622201,
      -0.97340864420283058500,  -0.96970017765243750713,
      -0.96575364391074483267,  -0.96157001187151067329,
      -0.95715030863856620927,  -0.95249561927335507682,
      -0.94760708652834232610,  -0.94248591056632314497,
      -0.93713334866567858756,  -0.93155071491163700560,
      -0.92573937987360816651,  -0.91970077026866347198,
      -0.91343636861124100163,  -0.90694771284915872423,
      -0.90023639598602339574,  -0.89330406569012654917,
      -0.88615242388992267127,  -0.87878322635618821203,
      -0.87119828227096352277,  -0.86339945378338319129,
      -0.85538865555250355248,  -0.84716785427723941194,
      -0.83873906821352523290,  -0.83010436667881920944,
      -0.82126586954407178299,  -0.81222574671328325682,
      -0.80298621759077822542,  -0.79354955053632756289,
      -0.78391806230825170698,  -0.77409411749464193296,
      -0.76408012793283923413,  -0.75387855211731331260,
      -0.74349189459608703555,  -0.73292270535585452656,
      -0.72217357919594383984,  -0.71124715509127790545,
      -0.70014611554449013595,  -0.68887318592735374871,
      -0.67743113381168648239,  -0.66582276828989497096,
      -0.65405093928532558248,  -0.64211853685259103299,
      -0.63002849046804454753,  -0.61778376831057575905,
      -0.60538737653290491272,  -0.59284235852355427583,
      -0.58015179415967794269,  -0.56731879905093346816,
      -0.55434652377458096323,  -0.54123815310199743947,
      -0.52799690521679629722,  -0.51462603092474391331,
      -0.50112881285566729803,  -0.48750856465754875747,
      -0.47376863018300541533,  -0.45991238266835331824,
      -0.44594322390545766883,  -0.43186458340657250216,
      -0.41767991756237484210,  -0.40339270879340004519,
      -0.38900646469508665953,  -0.37452471717664069510,
      -0.35995102159393071948,  -0.34528895587662665824,
      -0.33054211964979659258,  -0.31571413335017720732,
      -0.30080863733733485027,  -0.28582929099993541790,
      -0.27077977185734248363,  -0.25566377465676423155,
      -0.24048501046617085140,  -0.22524720576320508911,
      -0.20995410152030963052,  -0.19460945228629592529,
      -0.17921702526457993098,  -0.16378059938831107622,
      -0.14830396439262150415,  -0.13279091988422336452,
      -0.11724527440858257391,  -0.10167084451489805844,
      -0.086071453819116032148, -0.070450932065209346665,
      -0.054813114184952373730, -0.039161839356422251354,
      -0.023500950061457637290, -0.0078342911423063692774,
      0.0078342911423063692774, 0.023500950061457637290,
      0.039161839356422251354,  0.054813114184952373730,
      0.070450932065209346665,  0.086071453819116032148,
      0.10167084451489805844,   0.11724527440858257391,
      0.13279091988422336452,   0.14830396439262150415,
      0.16378059938831107622,   0.17921702526457993098,
      0.19460945228629592529,   0.20995410152030963052,
      0.22524720576320508911,   0.24048501046617085140,
      0.25566377465676423155,   0.27077977185734248363,
      0.28582929099993541790,   0.30080863733733485027,
      0.31571413335017720732,   0.33054211964979659258,
      0.34528895587662665824,   0.35995102159393071948,
      0.37452471717664069510,   0.38900646469508665953,
      0.40339270879340004519,   0.41767991756237484210,
      0.43186458340657250216,   0.44594322390545766883,
      0.45991238266835331824,   0.47376863018300541533,
      0.48750856465754875747,   0.50112881285566729803,
      0.51462603092474391331,   0.52799690521679629722,
      0.54123815310199743947,   0.55434652377458096323,
      0.56731879905093346816,   0.58015179415967794269,
      0.59284235852355427583,   0.60538737653290491272,
      0.61778376831057575905,   0.63002849046804454753,
      0.64211853685259103299,   0.65405093928532558248,
      0.66582276828989497096,   0.67743113381168648239,
      0.68887318592735374871,   0.70014611554449013595,
      0.71124715509127790545,   0.72217357919594383984,
      0.73292270535585452656,   0.74349189459608703555,
      0.75387855211731331260,   0.76408012793283923413,
      0.77409411749464193296,   0.78391806230825170698,
      0.79354955053632756289,   0.80298621759077822542,
      0.81222574671328325682,   0.82126586954407178299,
      0.83010436667881920944,   0.83873906821352523290,
      0.84716785427723941194,   0.85538865555250355248,
      0.86339945378338319129,   0.87119828227096352277,
      0.87878322635618821203,   0.88615242388992267127,
      0.89330406569012654917,   0.90023639598602339574,
      0.90694771284915872423,   0.91343636861124100163,
      0.91970077026866347198,   0.92573937987360816651,
      0.93155071491163700560,   0.93713334866567858756,
      0.94248591056632314497,   0.94760708652834232610,
      0.95249561927335507682,   0.95715030863856620927,
      0.96157001187151067329,   0.96575364391074483267,
      0.96970017765243750713,   0.97340864420283058500,
      0.97687813311656622201,   0.98010779262092403188,
      0.98309682982609575204,   0.98584451092178647743,
      0.98835016136076129959,   0.99061316603067361374,
      0.99263296941718975970,   0.99440907576570145179,
      0.99594104926101120190,   0.99722851428337977582,
      0.99827115594891070943,   0.99906872187315218082,
      0.99962103128093639633,   0.99992807128506997705};
  std::array<double, 200> ref_wgt = {
      0.00018459009747129744397, 0.00042964663045105707281,
      0.00067496063447937275032, 0.00092014045934177191468,
      0.0011651007147558685369,  0.0014097768274535600222,
      0.0016541075523130241774,  0.0018980325049386285961,
      0.0021414916394405884462,  0.0023844251120048925878,
      0.0026267732445165148272,  0.0028684765194683156686,
      0.0031094755861030561600,  0.0033497112710358394001,
      0.0035891245908114218158,  0.0038276567653447492520,
      0.0040652492317755508067,  0.0043018436585132135914,
      0.0045373819593585154044,  0.0047718063076412719905,
      0.0050050591503391526735,  0.0052370832221565642333,
      0.0054678215595498853751,  0.0056972175146894665837,
      0.0059252147693511967739,  0.0061517573487318573708,
      0.0063767896351833524713,  0.0066002563818614496974,
      0.0068221027262850198147,  0.0070422742038019992433,
      0.0072607167609584627173,  0.0074773767687673104506,
      0.0076922010358731618314,  0.0079051368216101162900,
      0.0081161318489490982031,  0.0083251343173315507882,
      0.0085320929153862867441,  0.0087369568335263427483,
      0.0089396757764227221211,  0.0091401999753519458351,
      0.0093384802004143671985,  0.0095344677726202403664,
      0.0097281145758405676176,  0.0099193730686197852875,
      0.010108196295847383497,   0.010294537900285590466,
      0.010478352133950288329,   0.010659593869342363999,
      0.010838218610526735830,   0.011014182504056334598,
      0.011187442349738355656,   0.011357955611240138111,
      0.011525680426532066379,   0.011690575618164929697,
      0.011852600703379215857,   0.012011715904043856850,
      0.012167882156421986013,   0.012321061120761308825,
      0.012471215190706732602,   0.012618307502532944013,
      0.012762301944194667597,   0.012903163164192383222,
      0.013040856580251325784,   0.013175348387811636286,
      0.013306605568327579824,   0.013434595897373792888,
      0.013559287952556569797,   0.013680651121228245916,
      0.013798655608002783709,   0.013913272442070716437,
      0.014024473484311653627,   0.014132231434202602093,
      0.014236519836520406478,   0.014337313087836663773,
      0.014434586442803517275,   0.014528316020228786758,
      0.014618478808938943362,   0.014705052673428489783,
      0.014788016359294358819,   0.014867349498453996051,
      0.014943032614145845608,   0.015015047125711011347,
      0.015083375353154919512,   0.015148000521487862953,
      0.015208906764843361281,   0.015266079130373325848,
      0.015319503581919073285,   0.015369167003457286327,
      0.015415057202320075922,   0.015457162912188354066,
      0.015495473795857782493,   0.015529980447776618134,
      0.015560674396354832305,   0.015587548106043936717,
      0.015610594979187005692,   0.015629809357638440390,
      0.015645186524153077396,   0.015656722703544300620,
      0.015664415063610872193,   0.015668261715832254808,
      0.015668261715832254808,   0.015664415063610872193,
      0.015656722703544300620,   0.015645186524153077396,
      0.015629809357638440390,   0.015610594979187005692,
      0.015587548106043936717,   0.015560674396354832305,
      0.015529980447776618134,   0.015495473795857782493,
      0.015457162912188354066,   0.015415057202320075922,
      0.015369167003457286327,   0.015319503581919073285,
      0.015266079130373325848,   0.015208906764843361281,
      0.015148000521487862953,   0.015083375353154919512,
      0.015015047125711011347,   0.014943032614145845608,
      0.014867349498453996051,   0.014788016359294358819,
      0.014705052673428489783,   0.014618478808938943362,
      0.014528316020228786758,   0.014434586442803517275,
      0.014337313087836663773,   0.014236519836520406478,
      0.014132231434202602093,   0.014024473484311653627,
      0.013913272442070716437,   0.013798655608002783709,
      0.013680651121228245916,   0.013559287952556569797,
      0.013434595897373792888,   0.013306605568327579824,
      0.013175348387811636286,   0.013040856580251325784,
      0.012903163164192383222,   0.012762301944194667597,
      0.012618307502532944013,   0.012471215190706732602,
      0.012321061120761308825,   0.012167882156421986013,
      0.012011715904043856850,   0.011852600703379215857,
      0.011690575618164929697,   0.011525680426532066379,
      0.011357955611240138111,   0.011187442349738355656,
      0.011014182504056334598,   0.010838218610526735830,
      0.010659593869342363999,   0.010478352133950288329,
      0.010294537900285590466,   0.010108196295847383497,
      0.0099193730686197852875,  0.0097281145758405676176,
      0.0095344677726202403664,  0.0093384802004143671985,
      0.0091401999753519458351,  0.0089396757764227221211,
      0.0087369568335263427483,  0.0085320929153862867441,
      0.0083251343173315507882,  0.0081161318489490982031,
      0.0079051368216101162900,  0.0076922010358731618314,
      0.0074773767687673104506,  0.0072607167609584627173,
      0.0070422742038019992433,  0.0068221027262850198147,
      0.0066002563818614496974,  0.0063767896351833524713,
      0.0061517573487318573708,  0.0059252147693511967739,
      0.0056972175146894665837,  0.0054678215595498853751,
      0.0052370832221565642333,  0.0050050591503391526735,
      0.0047718063076412719905,  0.0045373819593585154044,
      0.0043018436585132135914,  0.0040652492317755508067,
      0.0038276567653447492520,  0.0035891245908114218158,
      0.0033497112710358394001,  0.0031094755861030561600,
      0.0028684765194683156686,  0.0026267732445165148272,
      0.0023844251120048925878,  0.0021414916394405884462,
      0.0018980325049386285961,  0.0016541075523130241774,
      0.0014097768274535600222,  0.0011651007147558685369,
      0.00092014045934177191468, 0.00067496063447937275032,
      0.00042964663045105707281, 0.00018459009747129744397};
  IntegratorXX::GaussLegendre<double, double> quad(200);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 200; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("225 point GaussLegendre", "[1d-quad]") {
  std::array<double, 225> ref_pts = {-0.99994313575964914679,
                                     -0.99970039782675820794,
                                     -0.99926374310797902461,
                                     -0.99863315934603043801,
                                     -0.99780875704660776978,
                                     -0.99679069337847344647,
                                     -0.99557916499020510137,
                                     -0.99417440663895857314,
                                     -0.99257669079062071131,
                                     -0.99078632744910151175,
                                     -0.98880366405033831766,
                                     -0.98662908537484009837,
                                     -0.98426301346343325612,
                                     -0.98170590753042981287,
                                     -0.97895826387181845905,
                                     -0.97602061576740440150,
                                     -0.97289353337638969702,
                                     -0.96957762362614502860,
                                     -0.96607353009405023661,
                                     -0.96238193288234598584,
                                     -0.95850354848597423078,
                                     -0.95443912965340526664,
                                     -0.95018946524046125077,
                                     -0.94575538005715376734,
                                     -0.94113773470755819818,
                                     -0.93633742542275139255,
                                     -0.93135538388684198491,
                                     -0.92619257705612502649,
                                     -0.92085000697139457565,
                                     -0.91532871056344965112,
                                     -0.90962975945183056762,
                                     -0.90375425973682419036,
                                     -0.89770335178477809320,
                                     -0.89147821000676500505,
                                     -0.88508004263064029170,
                                     -0.87851009146653655512,
                                     -0.87176963166584074419,
                                     -0.86485997147370046445,
                                     -0.85778245197510745109,
                                     -0.85053844683460743228,
                                     -0.84312936202968685877,
                                     -0.83555663557788821214,
                                     -0.82782173725770682867,
                                     -0.81992616832332338776,
                                     -0.81187146121322741489,
                                     -0.80365917925278833806,
                                     -0.79529091635083181379,
                                     -0.78676829669028020473,
                                     -0.77809297441291724441,
                                     -0.76926663329833806637,
                                     -0.76029098643714690499,
                                     -0.75116777589846589198,
                                     -0.74189877239181947805,
                                     -0.73248577492346010094,
                                     -0.72293061044720180071,
                                     -0.71323513350982954933,
                                     -0.70340122589115311475,
                                     -0.69343079623877531949,
                                     -0.68332577969764557958,
                                     -0.67308813753447062231,
                                     -0.66271985675705527939,
                                     -0.65222294972864723618,
                                     -0.64159945377736058770,
                                     -0.63085143080075400716,
                                     -0.61998096686564027322,
                                     -0.60899017180320482809,
                                     -0.59788117879951194869,
                                     -0.58665614398147800869,
                                     -0.57531724599839218898,
                                     -0.56386668559906585814,
                                     -0.55230668520469269328,
                                     -0.54063948847750244391,
                                     -0.52886735988529205793,
                                     -0.51699258426191868919,
                                     -0.50501746636383988952,
                                     -0.49294433042278705580,
                                     -0.48077551969465895257,
                                     -0.46851339600472286490,
                                     -0.45616033928921165246,
                                     -0.44371874713340567554,
                                     -0.43119103430628924578,
                                     -0.41857963229187191952,
                                     -0.40588698881726559868,
                                     -0.39311556737760903393,
                                     -0.38026784675793193691,
                                     -0.36734632055205150181,
                                     -0.35435349667859471321,
                                     -0.34129189689424037443,
                                     -0.32816405630427533046,
                                     -0.31497252287055988091,
                                     -0.30171985691699788107,
                                     -0.28840863063260751370,
                                     -0.27504142757228917959,
                                     -0.26162084215538740223,
                                     -0.24814947916214406975,
                                     -0.23462995322814074679,
                                     -0.22106488833682817919,
                                     -0.20745691731024148556,
                                     -0.19380868129799988209,
                                     -0.18012282926469011983,
                                     -0.16640201747573312726,
                                     -0.15264890898183364558,
                                     -0.13886617310211291910,
                                     -0.12505648490602475850,
                                     -0.11122252469415553129,
                                     -0.097366977478008849989,
                                     -0.083492532458875925879,
                                     -0.069601882505892733495,
                                     -0.055697723633385288994,
                                     -0.041782754477604483547,
                                     -0.027859675772952031500,
                                     -0.013931189827799191773,
                                     0,
                                     0.013931189827799191773,
                                     0.027859675772952031500,
                                     0.041782754477604483547,
                                     0.055697723633385288994,
                                     0.069601882505892733495,
                                     0.083492532458875925879,
                                     0.097366977478008849989,
                                     0.11122252469415553129,
                                     0.12505648490602475850,
                                     0.13886617310211291910,
                                     0.15264890898183364558,
                                     0.16640201747573312726,
                                     0.18012282926469011983,
                                     0.19380868129799988209,
                                     0.20745691731024148556,
                                     0.22106488833682817919,
                                     0.23462995322814074679,
                                     0.24814947916214406975,
                                     0.26162084215538740223,
                                     0.27504142757228917959,
                                     0.28840863063260751370,
                                     0.30171985691699788107,
                                     0.31497252287055988091,
                                     0.32816405630427533046,
                                     0.34129189689424037443,
                                     0.35435349667859471321,
                                     0.36734632055205150181,
                                     0.38026784675793193691,
                                     0.39311556737760903393,
                                     0.40588698881726559868,
                                     0.41857963229187191952,
                                     0.43119103430628924578,
                                     0.44371874713340567554,
                                     0.45616033928921165246,
                                     0.46851339600472286490,
                                     0.48077551969465895257,
                                     0.49294433042278705580,
                                     0.50501746636383988952,
                                     0.51699258426191868919,
                                     0.52886735988529205793,
                                     0.54063948847750244391,
                                     0.55230668520469269328,
                                     0.56386668559906585814,
                                     0.57531724599839218898,
                                     0.58665614398147800869,
                                     0.59788117879951194869,
                                     0.60899017180320482809,
                                     0.61998096686564027322,
                                     0.63085143080075400716,
                                     0.64159945377736058770,
                                     0.65222294972864723618,
                                     0.66271985675705527939,
                                     0.67308813753447062231,
                                     0.68332577969764557958,
                                     0.69343079623877531949,
                                     0.70340122589115311475,
                                     0.71323513350982954933,
                                     0.72293061044720180071,
                                     0.73248577492346010094,
                                     0.74189877239181947805,
                                     0.75116777589846589198,
                                     0.76029098643714690499,
                                     0.76926663329833806637,
                                     0.77809297441291724441,
                                     0.78676829669028020473,
                                     0.79529091635083181379,
                                     0.80365917925278833806,
                                     0.81187146121322741489,
                                     0.81992616832332338776,
                                     0.82782173725770682867,
                                     0.83555663557788821214,
                                     0.84312936202968685877,
                                     0.85053844683460743228,
                                     0.85778245197510745109,
                                     0.86485997147370046445,
                                     0.87176963166584074419,
                                     0.87851009146653655512,
                                     0.88508004263064029170,
                                     0.89147821000676500505,
                                     0.89770335178477809320,
                                     0.90375425973682419036,
                                     0.90962975945183056762,
                                     0.91532871056344965112,
                                     0.92085000697139457565,
                                     0.92619257705612502649,
                                     0.93135538388684198491,
                                     0.93633742542275139255,
                                     0.94113773470755819818,
                                     0.94575538005715376734,
                                     0.95018946524046125077,
                                     0.95443912965340526664,
                                     0.95850354848597423078,
                                     0.96238193288234598584,
                                     0.96607353009405023661,
                                     0.96957762362614502860,
                                     0.97289353337638969702,
                                     0.97602061576740440150,
                                     0.97895826387181845905,
                                     0.98170590753042981287,
                                     0.98426301346343325612,
                                     0.98662908537484009837,
                                     0.98880366405033831766,
                                     0.99078632744910151175,
                                     0.99257669079062071131,
                                     0.99417440663895857314,
                                     0.99557916499020510137,
                                     0.99679069337847344647,
                                     0.99780875704660776978,
                                     0.99863315934603043801,
                                     0.99926374310797902461,
                                     0.99970039782675820794,
                                     0.99994313575964914679};
  std::array<double, 225> ref_wgt = {
      0.00014593062081691633705, 0.00033967122032779446758,
      0.00053363282681020533784, 0.00072751578523896072827,
      0.00092126254568879566496, 0.0011148319989040849904,
      0.0013081856459169339200,  0.0015012856430360372498,
      0.0016940943846415335414,  0.0018865743909800522722,
      0.0020786882750691183547,  0.0022703987343474374950,
      0.0024616685512197302949,  0.0026524605971591435102,
      0.0028427378383562482071,  0.0030324633420846572901,
      0.0032216002834137731186,  0.0034101119520931657647,
      0.0035979617595203174875,  0.0037851132457449506422,
      0.0039715300864838595258,  0.0041571761001309471922,
      0.0043420152547529966321,  0.0045260116750649643291,
      0.0047091296493804622232,  0.0048913336365342069557,
      0.0050725882727738919483,  0.0052528583786193595386,
      0.0054321089656872194971,  0.0056103052434792361372,
      0.0057874126261329240767,  0.0059633967391328737826,
      0.0061382234259813854547,  0.0063118587548270317833,
      0.0064842690250498019247,  0.0066554207738015040439,
      0.0068252807825001242262,  0.0069938160832768569315,
      0.0071609939653745374593,  0.0073267819814962207862,
      0.0074911479541026641090,  0.0076540599816574827843,
      0.0078154864448187613491,  0.0079753960125759130795,
      0.0081337576483305932228,  0.0082905406159204827041,
      0.0084457144855847708131,  0.0085992491398701771739,
      0.0087511147794763652162,  0.0089012819290396114218,
      0.0090497214428536068355,  0.0091964045105262797151,
      0.0093413026625715407570,  0.0094843877759348650830,
      0.0096256320794516381070,  0.0097650081592372055263,
      0.0099024889640075809995,  0.010038047810329778580,
      0.010171658387800750672,   0.010303294764153926175,
      0.010432931390292357545,   0.010560543105247499784,
      0.010686105141062658818,   0.010809593127600161349,
      0.010930983097271313102,   0.011050251489688227371,
      0.011167375156236620942,   0.011282331364568689832,
      0.011395097803015192777,   0.011505652584915886116,
      0.011613974252867469543,   0.011720041782888218234,
      0.011823834588498493012,   0.011925332524716336567,
      0.012024515891967380194,   0.012121365439908302194,
      0.012215862371163095812,   0.012307988344971421550,
      0.012397725480748335740,   0.012485056361554704466,
      0.012569964037477629256,   0.012652432028920228448,
      0.012732444329800135702,   0.012809985410656094872,
      0.012885040221662048275,   0.012957594195548133357,
      0.013027633250428020812,   0.013095143792532045415,
      0.013160112718845599073,   0.013222527419652274035,
      0.013282375780981262648,   0.013339646186958538648,
      0.013394327522061363653,   0.013446409173275681276,
      0.013495881032155980137,   0.013542733496787225973,
      0.013586957473648482059,   0.013628544379377856235,
      0.013667486142438431968,   0.013703775204684860138,
      0.013737404522830307453,   0.013768367569813476815,
      0.013796658336065434277,   0.013822271330675996740,
      0.013845201582459453992,   0.013865444640919418258,
      0.013882996577112613978,   0.013897853984411440171,
      0.013910013979165157387,   0.013919474201259570900,
      0.013926232814575101528,   0.013930288507343155173,
      0.013931640492400721903,   0.013930288507343155173,
      0.013926232814575101528,   0.013919474201259570900,
      0.013910013979165157387,   0.013897853984411440171,
      0.013882996577112613978,   0.013865444640919418258,
      0.013845201582459453992,   0.013822271330675996740,
      0.013796658336065434277,   0.013768367569813476815,
      0.013737404522830307453,   0.013703775204684860138,
      0.013667486142438431968,   0.013628544379377856235,
      0.013586957473648482059,   0.013542733496787225973,
      0.013495881032155980137,   0.013446409173275681276,
      0.013394327522061363653,   0.013339646186958538648,
      0.013282375780981262648,   0.013222527419652274035,
      0.013160112718845599073,   0.013095143792532045415,
      0.013027633250428020812,   0.012957594195548133357,
      0.012885040221662048275,   0.012809985410656094872,
      0.012732444329800135702,   0.012652432028920228448,
      0.012569964037477629256,   0.012485056361554704466,
      0.012397725480748335740,   0.012307988344971421550,
      0.012215862371163095812,   0.012121365439908302194,
      0.012024515891967380194,   0.011925332524716336567,
      0.011823834588498493012,   0.011720041782888218234,
      0.011613974252867469543,   0.011505652584915886116,
      0.011395097803015192777,   0.011282331364568689832,
      0.011167375156236620942,   0.011050251489688227371,
      0.010930983097271313102,   0.010809593127600161349,
      0.010686105141062658818,   0.010560543105247499784,
      0.010432931390292357545,   0.010303294764153926175,
      0.010171658387800750672,   0.010038047810329778580,
      0.0099024889640075809995,  0.0097650081592372055263,
      0.0096256320794516381070,  0.0094843877759348650830,
      0.0093413026625715407570,  0.0091964045105262797151,
      0.0090497214428536068355,  0.0089012819290396114218,
      0.0087511147794763652162,  0.0085992491398701771739,
      0.0084457144855847708131,  0.0082905406159204827041,
      0.0081337576483305932228,  0.0079753960125759130795,
      0.0078154864448187613491,  0.0076540599816574827843,
      0.0074911479541026641090,  0.0073267819814962207862,
      0.0071609939653745374593,  0.0069938160832768569315,
      0.0068252807825001242262,  0.0066554207738015040439,
      0.0064842690250498019247,  0.0063118587548270317833,
      0.0061382234259813854547,  0.0059633967391328737826,
      0.0057874126261329240767,  0.0056103052434792361372,
      0.0054321089656872194971,  0.0052528583786193595386,
      0.0050725882727738919483,  0.0048913336365342069557,
      0.0047091296493804622232,  0.0045260116750649643291,
      0.0043420152547529966321,  0.0041571761001309471922,
      0.0039715300864838595258,  0.0037851132457449506422,
      0.0035979617595203174875,  0.0034101119520931657647,
      0.0032216002834137731186,  0.0030324633420846572901,
      0.0028427378383562482071,  0.0026524605971591435102,
      0.0024616685512197302949,  0.0022703987343474374950,
      0.0020786882750691183547,  0.0018865743909800522722,
      0.0016940943846415335414,  0.0015012856430360372498,
      0.0013081856459169339200,  0.0011148319989040849904,
      0.00092126254568879566496, 0.00072751578523896072827,
      0.00053363282681020533784, 0.00033967122032779446758,
      0.00014593062081691633705};
  IntegratorXX::GaussLegendre<double, double> quad(225);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 225; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("250 point GaussLegendre", "[1d-quad]") {
  std::array<double, 250> ref_pts = {
      -0.99995391943564204903,   -0.99975721221158903876,
      -0.99940335329301611556,   -0.99889231972585430062,
      -0.99822418225691297865,   -0.99739904367225577451,
      -0.99641703298482945393,   -0.99527830433393652496,
      -0.99398303667390684915,   -0.99253143365047601059,
      -0.99092372353162155298,   -0.98916015915543680753,
      -0.98724101788260763233,   -0.98516660154880339170,
      -0.98293723641503168395,   -0.98055327311507989055,
      -0.97801508659962455139,   -0.97532307607679914655,
      -0.97247766494911273425,   -0.96947930074666410081,
      -0.96632845505662414892,   -0.96302562344897504113,
      -0.95957132539850390239,   -0.95596610420305460256,
      -0.95221052689804483435,   -0.94830518416725821692,
      -0.94425069024992296411,   -0.94004768284409003138,
      -0.93569682300632475961,   -0.93119879504772696325,
      -0.92655430642629522602,   -0.92176408763565190680,
      -0.91682889209014604601,   -0.91174949600635201385,
      -0.90652669828098236744,   -0.90116132036523399018,
      -0.89565420613558717856,   -0.89000622176107792265,
      -0.88421825556706419831,   -0.87829121789550765326,
      -0.87222604096179262732,   -0.86602367870810499877,
      -0.85968510665339389597,   -0.85321132173993985509,
      -0.84660334217655354188,   -0.83986220727842968848,
      -0.83298897730368142396,   -0.82598473328658070151,
      -0.81885057686753104443,   -0.81158763011979934815,
      -0.80419703537303398603,   -0.79667995503359697307,
      -0.78903757140173844313,   -0.78127108648564219236,
      -0.77338172181237153424,   -0.76537071823574519931,
      -0.75723933574117349581,   -0.74898885324748542574,
      -0.74062056840577792447,   -0.73213579739531886020,
      -0.72353587471653589345,   -0.71482215298112375508,
      -0.70599600269930295437,   -0.69705881206426337739,
      -0.68801198673382667805,   -0.67885694960936180230,
      -0.66959514061198841752,   -0.66022801645610344614,
      -0.65075705042026632337,   -0.64118373211547901442,
      -0.63150956725089723645,   -0.62173607739700973436,
      -0.61186479974632285796,   -0.60189728687158808047,
      -0.59183510648161048437,   -0.58167984117467662184,
      -0.57143308818964053054,   -0.56109645915470705477,
      -0.55067157983395198342,   -0.54016008987161887264,
      -0.52956364253423277055,   -0.51888390445057140485,
      -0.50812255534953473098,   -0.49728128779595406933,
      -0.48636180692438238372,   -0.47536583017090757117,
      -0.46429508700303094386,   -0.45315131864765338842,
      -0.44193627781721198531,   -0.43065172843401016216,
      -0.41929944535278473879,   -0.40788121408155349911,
      -0.39639883050078719549,   -0.38485410058095015471,
      -0.37324884009845391128,   -0.36158487435006854335,
      -0.34986403786583662923,   -0.33808817412053497783,
      -0.32625913524372951492,   -0.31437878172846892825,
      -0.30244898213866288880,   -0.29047161281519087211,
      -0.27844855758078780360,   -0.26638170744375294389,
      -0.25427296030052861535,   -0.24212422063719554887,
      -0.22993739922993180019,   -0.21771441284448234815,
      -0.20545718393468664287,   -0.19316764034011151994,
      -0.18084771498283703754,   -0.16849934556344292651,
      -0.15612447425624346924,   -0.14372504740381874127,
      -0.13130301521089026054,   -0.11886033143758919176,
      -0.10639895309216534952,   -0.093920840123185331308,
      -0.081427955111268192043,  -0.068922262960407144621,
      -0.056405730588925835857,  -0.043880326620117804852,
      -0.031348021072617780543,  -0.018810785050553517435,
      -0.0062705904335269029892, 0.0062705904335269029892,
      0.018810785050553517435,   0.031348021072617780543,
      0.043880326620117804852,   0.056405730588925835857,
      0.068922262960407144621,   0.081427955111268192043,
      0.093920840123185331308,   0.10639895309216534952,
      0.11886033143758919176,    0.13130301521089026054,
      0.14372504740381874127,    0.15612447425624346924,
      0.16849934556344292651,    0.18084771498283703754,
      0.19316764034011151994,    0.20545718393468664287,
      0.21771441284448234815,    0.22993739922993180019,
      0.24212422063719554887,    0.25427296030052861535,
      0.26638170744375294389,    0.27844855758078780360,
      0.29047161281519087211,    0.30244898213866288880,
      0.31437878172846892825,    0.32625913524372951492,
      0.33808817412053497783,    0.34986403786583662923,
      0.36158487435006854335,    0.37324884009845391128,
      0.38485410058095015471,    0.39639883050078719549,
      0.40788121408155349911,    0.41929944535278473879,
      0.43065172843401016216,    0.44193627781721198531,
      0.45315131864765338842,    0.46429508700303094386,
      0.47536583017090757117,    0.48636180692438238372,
      0.49728128779595406933,    0.50812255534953473098,
      0.51888390445057140485,    0.52956364253423277055,
      0.54016008987161887264,    0.55067157983395198342,
      0.56109645915470705477,    0.57143308818964053054,
      0.58167984117467662184,    0.59183510648161048437,
      0.60189728687158808047,    0.61186479974632285796,
      0.62173607739700973436,    0.63150956725089723645,
      0.64118373211547901442,    0.65075705042026632337,
      0.66022801645610344614,    0.66959514061198841752,
      0.67885694960936180230,    0.68801198673382667805,
      0.69705881206426337739,    0.70599600269930295437,
      0.71482215298112375508,    0.72353587471653589345,
      0.73213579739531886020,    0.74062056840577792447,
      0.74898885324748542574,    0.75723933574117349581,
      0.76537071823574519931,    0.77338172181237153424,
      0.78127108648564219236,    0.78903757140173844313,
      0.79667995503359697307,    0.80419703537303398603,
      0.81158763011979934815,    0.81885057686753104443,
      0.82598473328658070151,    0.83298897730368142396,
      0.83986220727842968848,    0.84660334217655354188,
      0.85321132173993985509,    0.85968510665339389597,
      0.86602367870810499877,    0.87222604096179262732,
      0.87829121789550765326,    0.88421825556706419831,
      0.89000622176107792265,    0.89565420613558717856,
      0.90116132036523399018,    0.90652669828098236744,
      0.91174949600635201385,    0.91682889209014604601,
      0.92176408763565190680,    0.92655430642629522602,
      0.93119879504772696325,    0.93569682300632475961,
      0.94004768284409003138,    0.94425069024992296411,
      0.94830518416725821692,    0.95221052689804483435,
      0.95596610420305460256,    0.95957132539850390239,
      0.96302562344897504113,    0.96632845505662414892,
      0.96947930074666410081,    0.97247766494911273425,
      0.97532307607679914655,    0.97801508659962455139,
      0.98055327311507989055,    0.98293723641503168395,
      0.98516660154880339170,    0.98724101788260763233,
      0.98916015915543680753,    0.99092372353162155298,
      0.99253143365047601059,    0.99398303667390684915,
      0.99527830433393652496,    0.99641703298482945393,
      0.99739904367225577451,    0.99822418225691297865,
      0.99889231972585430062,    0.99940335329301611556,
      0.99975721221158903876,    0.99995391943564204903};
  std::array<double, 250> ref_wgt = {
      0.00011825670068171723498, 0.00027526103865831746385,
      0.00043245460060038206367, 0.00058960034219324993304,
      0.00074665740556624210946, 0.00090359824806269436052,
      0.0010603974326420874557,  0.0012170300415936899490,
      0.0013734713364273321298,  0.0015296966649272489629,
      0.0016856814323170036193,  0.0018414010924821321794,
      0.0019968311464057846495,  0.0021519471434930349425,
      0.0023067246841547674100,  0.0024611394229790974638,
      0.0026151670721914345274,  0.0027687834052614950696,
      0.0029219642605862632234,  0.0030746855452115095027,
      0.0032269232385712530955,  0.0033786533962332870796,
      0.0035298521536436066152,  0.0036804957298652183453,
      0.0038305604313083285115,  0.0039800226554498063799,
      0.0041288588945403650902,  0.0042770457392982407949,
      0.0044245598825883659513,  0.0045713781230861719718,
      0.0047174773689252486294,  0.0048628346413281498926,
      0.0050074270782196788542,  0.0051512319378220147880,
      0.0052942266022310673719,  0.0054363885809734595002,
      0.0055776955145435526838,  0.0057181251779199390135,
      0.0058576554840608318332,  0.0059962644873777942077,
      0.0061339303871872503407,  0.0062706315311392305736,
      0.0064063464186228056620,  0.0065410537041476708117,
      0.0066747322007013445604,  0.0068073608830814520773,
      0.0069389188912025668724,  0.0070693855333770893002,
      0.0071987402895696446263,  0.0073269628146244878293,
      0.0074540329414654067428,  0.0075799306842676196159,
      0.0077046362416011676926,  0.0078281299995453079899,
      0.0079503925347734160886,  0.0080714046176079134520,
      0.0081911472150447385521,  0.0083096014937468859111,
      0.0084267488230065420658,  0.0085425707776753524282,
      0.0086570491410623580493,  0.0087701659077991463970,
      0.0088819032866717654310,  0.0089922437034189554965,
      0.0091011698034962588676,  0.0092086644548055721471,
      0.0093147107503897121698,  0.0094192920110915715685,
      0.0095223917881774457340,  0.0096239938659241185406,
      0.0097240822641692999129,  0.0098226412408250140763,
      0.0099196552943535431643,  0.010015109166205536746,
      0.010108987843219903792,   0.010201276559985109604,
      0.010291960801161506317,   0.010381026303764331696,
      0.010468459059407017153,   0.010554245316504452142,
      0.010638371582435858390,   0.010720824625666933789,
      0.010801591477830932159,   0.010880659435768351562,
      0.010958016063524910371,   0.011033649194307496824,
      0.011107546932397784446,   0.011179697655023212348,
      0.011250090014185036128,   0.011318712938443161864,
      0.011385555634657482463,   0.011450607589685442487,
      0.011513858572035564473,   0.011575298633476676646,
      0.011634918110602588953,   0.011692707626351971304,
      0.011748658091483194973,   0.011802760706003905194,
      0.011855006960555100107,   0.011905388637749498359,
      0.011953897813463984860,   0.012000526858085931418,
      0.012045268437713196225,   0.012088115515307613458,
      0.012129061351801791570,   0.012168099507159046191,
      0.012205223841386300935,   0.012240428515499796794,
      0.012273707992443458239,   0.012305057037959771576,
      0.012334470721413038597,   0.012361944416564876022,
      0.012387473802301838784,   0.012411054863315052698,
      0.012432683890731749622,   0.012452357482698605792,
      0.012470072544916791569,   0.012485826291128648449,
      0.012499616243555916797,   0.012511440233289445365,
      0.012521296400630321318,   0.012529183195382367097,
      0.012535099377095958128,   0.012539044015263123022,
      0.012541016489463895578,   0.012541016489463895578,
      0.012539044015263123022,   0.012535099377095958128,
      0.012529183195382367097,   0.012521296400630321318,
      0.012511440233289445365,   0.012499616243555916797,
      0.012485826291128648449,   0.012470072544916791569,
      0.012452357482698605792,   0.012432683890731749622,
      0.012411054863315052698,   0.012387473802301838784,
      0.012361944416564876022,   0.012334470721413038597,
      0.012305057037959771576,   0.012273707992443458239,
      0.012240428515499796794,   0.012205223841386300935,
      0.012168099507159046191,   0.012129061351801791570,
      0.012088115515307613458,   0.012045268437713196225,
      0.012000526858085931418,   0.011953897813463984860,
      0.011905388637749498359,   0.011855006960555100107,
      0.011802760706003905194,   0.011748658091483194973,
      0.011692707626351971304,   0.011634918110602588953,
      0.011575298633476676646,   0.011513858572035564473,
      0.011450607589685442487,   0.011385555634657482463,
      0.011318712938443161864,   0.011250090014185036128,
      0.011179697655023212348,   0.011107546932397784446,
      0.011033649194307496824,   0.010958016063524910371,
      0.010880659435768351562,   0.010801591477830932159,
      0.010720824625666933789,   0.010638371582435858390,
      0.010554245316504452142,   0.010468459059407017153,
      0.010381026303764331696,   0.010291960801161506317,
      0.010201276559985109604,   0.010108987843219903792,
      0.010015109166205536746,   0.0099196552943535431643,
      0.0098226412408250140763,  0.0097240822641692999129,
      0.0096239938659241185406,  0.0095223917881774457340,
      0.0094192920110915715685,  0.0093147107503897121698,
      0.0092086644548055721471,  0.0091011698034962588676,
      0.0089922437034189554965,  0.0088819032866717654310,
      0.0087701659077991463970,  0.0086570491410623580493,
      0.0085425707776753524282,  0.0084267488230065420658,
      0.0083096014937468859111,  0.0081911472150447385521,
      0.0080714046176079134520,  0.0079503925347734160886,
      0.0078281299995453079899,  0.0077046362416011676926,
      0.0075799306842676196159,  0.0074540329414654067428,
      0.0073269628146244878293,  0.0071987402895696446263,
      0.0070693855333770893002,  0.0069389188912025668724,
      0.0068073608830814520773,  0.0066747322007013445604,
      0.0065410537041476708117,  0.0064063464186228056620,
      0.0062706315311392305736,  0.0061339303871872503407,
      0.0059962644873777942077,  0.0058576554840608318332,
      0.0057181251779199390135,  0.0055776955145435526838,
      0.0054363885809734595002,  0.0052942266022310673719,
      0.0051512319378220147880,  0.0050074270782196788542,
      0.0048628346413281498926,  0.0047174773689252486294,
      0.0045713781230861719718,  0.0044245598825883659513,
      0.0042770457392982407949,  0.0041288588945403650902,
      0.0039800226554498063799,  0.0038305604313083285115,
      0.0036804957298652183453,  0.0035298521536436066152,
      0.0033786533962332870796,  0.0032269232385712530955,
      0.0030746855452115095027,  0.0029219642605862632234,
      0.0027687834052614950696,  0.0026151670721914345274,
      0.0024611394229790974638,  0.0023067246841547674100,
      0.0021519471434930349425,  0.0019968311464057846495,
      0.0018414010924821321794,  0.0016856814323170036193,
      0.0015296966649272489629,  0.0013734713364273321298,
      0.0012170300415936899490,  0.0010603974326420874557,
      0.00090359824806269436052, 0.00074665740556624210946,
      0.00058960034219324993304, 0.00043245460060038206367,
      0.00027526103865831746385, 0.00011825670068171723498};
  IntegratorXX::GaussLegendre<double, double> quad(250);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 250; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("275 point GaussLegendre", "[1d-quad]") {
  std::array<double, 275> ref_pts = {
      -0.99996190300497724220,  -0.99979927464352464450,
      -0.99950671593633413744,  -0.99908419993578936120,
      -0.99853177362170408560,  -0.99784950692613461434,
      -0.99703748793235112138,  -0.99609582197032092923,
      -0.99502463136567295637,  -0.99382405534486090062,
      -0.99249424998636064433,  -0.99103538818696302532,
      -0.98944765963287962947,  -0.98773127077178301951,
      -0.98588644478416637481,  -0.98391342155329486427,
      -0.98181245763339945103,  -0.97958382621593687722,
      -0.97722781709382358153,  -0.97474473662359424884,
      -0.97213490768545868420,  -0.96939866964124354475,
      -0.96653637829021292854,  -0.96354840582276633411,
      -0.96043514077201534792,  -0.95719698796324228602,
      -0.95383436846124530212,  -0.95034771951557540360,
      -0.94673749450367152189,  -0.94300416287190034636,
      -0.93914821007450810008,  -0.93517013751049184315,
      -0.93107046245839825515,  -0.92684971800905818518,
      -0.92250845299626557473,  -0.91804723192540966085,
      -0.91346663490006965912,  -0.90876725754658140965,
      -0.90394971093658574718,  -0.89901462150756862959,
      -0.89396263098140332821,  -0.88879439628090524917,
      -0.88351058944441021852,  -0.87811189753838732409,
      -0.87259902256809766593,  -0.86697268138631062313,
      -0.86123360560008949946,  -0.85538254147565866250,
      -0.84942024984136454170,  -0.84334750598874309940,
      -0.83716509957170663593,  -0.83087383450386303489,
      -0.82447452885398079820,  -0.81796801473961346184,
      -0.81135513821889722290,  -0.80463675918053584656,
      -0.79781375123198715715,  -0.79088700158586565185,
      -0.78385741094457600754,  -0.77672589338319248140,
      -0.76949337623059943425,  -0.76216079994890843159,
      -0.75472911801116760169,  -0.74719929677737915210,
      -0.73957231536884116587,  -0.73184916554083001703,
      -0.72403085155363996035,  -0.71611839004199666436,
      -0.70811280988286166772,  -0.70001515206164494873,
      -0.69182646953684300434,  -0.68354782710312004012,
      -0.67518030125285007492,  -0.66672498003613796413,
      -0.65818296291933754333,  -0.64955536064208528941,
      -0.64084329507286808943,  -0.63204789906314389801,
      -0.62317031630003425228,  -0.61421170115760779900,
      -0.60517321854677417199,  -0.59605604376380773825,
      -0.58686136233752090976,  -0.57759036987510689326,
      -0.56824427190667192353,  -0.55882428372847719588,
      -0.54933163024491088154,  -0.53976754580921077478,
      -0.53013327406295828276,  -0.52043006777436462930,
      -0.51065918867537030054,  -0.50082190729757891470,
      -0.49091950280704685013,  -0.48095326283795011406,
      -0.47092448332515008098,  -0.46083446833567987234,
      -0.45068452989917329007,  -0.44047598783725835326,
      -0.43021016959193762287,  -0.41988841005297763007,
      -0.40951205138432985371,  -0.39908244284960581732,
      -0.38860094063662899997,  -0.37806890768108637466,
      -0.36748771348930250539,  -0.35685873396015924794,
      -0.34618335120618421069,  -0.33546295337383123975,
      -0.32469893446297629766,  -0.31389269414565220721,
      -0.30304563758404583072,  -0.29215917524778135092,
      -0.28123472273051341272,  -0.27027370056585397463,
      -0.25927753404265680523,  -0.24824765301968364392,
      -0.23718549173967612514,  -0.22609248864285764285,
      -0.21497008617988940617,  -0.20381973062430500776,
      -0.19264287188444789470,  -0.18144096331493619607,
      -0.17021546152767942288,  -0.15896782620247161435,
      -0.14769951989718555964,  -0.13641200785759277574,
      -0.12510675782683397141,  -0.11378523985456477189,
      -0.10244892610580152184,  -0.091099290669492022688,
      -0.079737809366836096396, -0.068365959559380900209,
      -0.056985219956915946240, -0.045597070425192805763,
      -0.034202991793494500903, -0.022804465662079605939,
      -0.011402974209526096757, 0,
      0.011402974209526096757,  0.022804465662079605939,
      0.034202991793494500903,  0.045597070425192805763,
      0.056985219956915946240,  0.068365959559380900209,
      0.079737809366836096396,  0.091099290669492022688,
      0.10244892610580152184,   0.11378523985456477189,
      0.12510675782683397141,   0.13641200785759277574,
      0.14769951989718555964,   0.15896782620247161435,
      0.17021546152767942288,   0.18144096331493619607,
      0.19264287188444789470,   0.20381973062430500776,
      0.21497008617988940617,   0.22609248864285764285,
      0.23718549173967612514,   0.24824765301968364392,
      0.25927753404265680523,   0.27027370056585397463,
      0.28123472273051341272,   0.29215917524778135092,
      0.30304563758404583072,   0.31389269414565220721,
      0.32469893446297629766,   0.33546295337383123975,
      0.34618335120618421069,   0.35685873396015924794,
      0.36748771348930250539,   0.37806890768108637466,
      0.38860094063662899997,   0.39908244284960581732,
      0.40951205138432985371,   0.41988841005297763007,
      0.43021016959193762287,   0.44047598783725835326,
      0.45068452989917329007,   0.46083446833567987234,
      0.47092448332515008098,   0.48095326283795011406,
      0.49091950280704685013,   0.50082190729757891470,
      0.51065918867537030054,   0.52043006777436462930,
      0.53013327406295828276,   0.53976754580921077478,
      0.54933163024491088154,   0.55882428372847719588,
      0.56824427190667192353,   0.57759036987510689326,
      0.58686136233752090976,   0.59605604376380773825,
      0.60517321854677417199,   0.61421170115760779900,
      0.62317031630003425228,   0.63204789906314389801,
      0.64084329507286808943,   0.64955536064208528941,
      0.65818296291933754333,   0.66672498003613796413,
      0.67518030125285007492,   0.68354782710312004012,
      0.69182646953684300434,   0.70001515206164494873,
      0.70811280988286166772,   0.71611839004199666436,
      0.72403085155363996035,   0.73184916554083001703,
      0.73957231536884116587,   0.74719929677737915210,
      0.75472911801116760169,   0.76216079994890843159,
      0.76949337623059943425,   0.77672589338319248140,
      0.78385741094457600754,   0.79088700158586565185,
      0.79781375123198715715,   0.80463675918053584656,
      0.81135513821889722290,   0.81796801473961346184,
      0.82447452885398079820,   0.83087383450386303489,
      0.83716509957170663593,   0.84334750598874309940,
      0.84942024984136454170,   0.85538254147565866250,
      0.86123360560008949946,   0.86697268138631062313,
      0.87259902256809766593,   0.87811189753838732409,
      0.88351058944441021852,   0.88879439628090524917,
      0.89396263098140332821,   0.89901462150756862959,
      0.90394971093658574718,   0.90876725754658140965,
      0.91346663490006965912,   0.91804723192540966085,
      0.92250845299626557473,   0.92684971800905818518,
      0.93107046245839825515,   0.93517013751049184315,
      0.93914821007450810008,   0.94300416287190034636,
      0.94673749450367152189,   0.95034771951557540360,
      0.95383436846124530212,   0.95719698796324228602,
      0.96043514077201534792,   0.96354840582276633411,
      0.96653637829021292854,   0.96939866964124354475,
      0.97213490768545868420,   0.97474473662359424884,
      0.97722781709382358153,   0.97958382621593687722,
      0.98181245763339945103,   0.98391342155329486427,
      0.98588644478416637481,   0.98773127077178301951,
      0.98944765963287962947,   0.99103538818696302532,
      0.99249424998636064433,   0.99382405534486090062,
      0.99502463136567295637,   0.99609582197032092923,
      0.99703748793235112138,   0.99784950692613461434,
      0.99853177362170408560,   0.99908419993578936120,
      0.99950671593633413744,   0.99979927464352464450,
      0.99996190300497724220};
  std::array<double, 275> ref_wgt = {
      0.000097768571084995018839, 0.00022757428558860131743,
      0.00035754264014143965500,  0.00048748120000934061519,
      0.00061735972401952192019,  0.00074715897547943760218,
      0.00087686145367356230178,  0.0010064500813931342092,
      0.0011359079227386350560,   0.0012652181052647162318,
      0.0013943637951303732494,   0.0015233281888336705410,
      0.0016520945109119167701,   0.0017806460140323905469,
      0.0019089659801269891987,   0.0020370377220154094326,
      0.0021648445852699688219,   0.0022923699502051404407,
      0.0024195972339333147800,   0.0025465098924560918124,
      0.0026730914227742739980,   0.0027993253650069509596,
      0.0029251953045139685963,   0.0030506848740182556735,
      0.0031757777557257361167,   0.0033004576834412976429,
      0.0034247084446797374174,   0.0035485138827708844994,
      0.0036718578989582755538,   0.0037947244544908744400,
      0.0039170975727074013963,   0.0040389613411128878766,
      0.0041602999134471074498,   0.0042810975117445570524,
      0.0044013384283856798093,   0.0045210070281390328785,
      0.0046400877501941128296,   0.0047585651101845579285,
      0.0048764237022014520408,   0.0049936482007964591410,
      0.0051102233629745209392,   0.0052261340301758531325,
      0.0053413651302469784048,   0.0054559016794005366521,
      0.0055697287841636150698,   0.0056828316433143427744,
      0.0057951955498064965679,   0.0059068058926818663374,
      0.0060176481589701304209,   0.0061277079355759930941,
      0.0062369709111533381404,   0.0063454228779661542799,
      0.0064530497337359900494,   0.0065598374834756975543,
      0.0066657722413092263604,   0.0067708402322772306562,
      0.0068750277941282547031,   0.0069783213790952634992,
      0.0070807075556572875135,   0.0071821730102859523092,
      0.0072827045491766658523,   0.0073822890999642383189,
      0.0074809137134227112449,   0.0075785655651491749300,
      0.0076752319572313550959,   0.0077709003198987519181,
      0.0078655582131571166941,   0.0079591933284060535831,
      0.0080517934900395360510,   0.0081433466570291298799,
      0.0082338409244897168520,   0.0083232645252275154973,
      0.0084116058312701975975,   0.0084988533553789014701,
      0.0085849957525419454093,   0.0086700218214500470451,
      0.0087539205059528567853,   0.0088366808964966159364,
      0.0089182922315427525559,   0.0089987438989672305658,
      0.0090780254374404701633,   0.0091561265377876600887,
      0.0092330370443292848629,   0.0093087469562016926782,
      0.0093832464286575322248,   0.0094565257743458893485,
      0.0095285754645719570815,   0.0095993861305360752426,
      0.0096689485645519784928,   0.0097372537212440944316,
      0.0098042927187237360436,   0.0098700568397440355545,
      0.0099345375328334695121,   0.0099977264134078276998,
      0.010059615264860481288,    0.010120196039630808451,
      0.010179460860250638526,    0.010237402020368578623,
      0.010294011985752089521,    0.010349283395267180511,
      0.010403209061835595824,    0.010455781973369368156,
      0.010506995293682617786,    0.010556842363380478701,
      0.010605316700725036168,    0.010652412002478163119,
      0.010698122144721145780,    0.010742441183650991953,
      0.010785363356353318408,    0.010826883081551716878,
      0.010866994960333501230,    0.010905693776851741421,
      0.010942974499003492971,    0.010978832279084133748,
      0.011013262454417722985,    0.011046260547963300560,
      0.011077822268897047702,    0.011107943513170233420,
      0.011136620364042874112,    0.011163849092593036949,
      0.011189626158201720814,    0.011213948209013251747,
      0.011236812082371133033,    0.011258214805229293240,
      0.011278153594538678761,    0.011296625857609140562,
      0.011313629192446568094,    0.011329161388065226532,
      0.011343220424775256716,    0.011355804474445300422,
      0.011366911900740216802,    0.011376541259333859093,
      0.011384691298096883916,    0.011391360957259568754,
      0.011396549369549616429,    0.011400255860304928666,
      0.011402479947561334073,    0.011403221342115259136,
      0.011402479947561334073,    0.011400255860304928666,
      0.011396549369549616429,    0.011391360957259568754,
      0.011384691298096883916,    0.011376541259333859093,
      0.011366911900740216802,    0.011355804474445300422,
      0.011343220424775256716,    0.011329161388065226532,
      0.011313629192446568094,    0.011296625857609140562,
      0.011278153594538678761,    0.011258214805229293240,
      0.011236812082371133033,    0.011213948209013251747,
      0.011189626158201720814,    0.011163849092593036949,
      0.011136620364042874112,    0.011107943513170233420,
      0.011077822268897047702,    0.011046260547963300560,
      0.011013262454417722985,    0.010978832279084133748,
      0.010942974499003492971,    0.010905693776851741421,
      0.010866994960333501230,    0.010826883081551716878,
      0.010785363356353318408,    0.010742441183650991953,
      0.010698122144721145780,    0.010652412002478163119,
      0.010605316700725036168,    0.010556842363380478701,
      0.010506995293682617786,    0.010455781973369368156,
      0.010403209061835595824,    0.010349283395267180511,
      0.010294011985752089521,    0.010237402020368578623,
      0.010179460860250638526,    0.010120196039630808451,
      0.010059615264860481288,    0.0099977264134078276998,
      0.0099345375328334695121,   0.0098700568397440355545,
      0.0098042927187237360436,   0.0097372537212440944316,
      0.0096689485645519784928,   0.0095993861305360752426,
      0.0095285754645719570815,   0.0094565257743458893485,
      0.0093832464286575322248,   0.0093087469562016926782,
      0.0092330370443292848629,   0.0091561265377876600887,
      0.0090780254374404701633,   0.0089987438989672305658,
      0.0089182922315427525559,   0.0088366808964966159364,
      0.0087539205059528567853,   0.0086700218214500470451,
      0.0085849957525419454093,   0.0084988533553789014701,
      0.0084116058312701975975,   0.0083232645252275154973,
      0.0082338409244897168520,   0.0081433466570291298799,
      0.0080517934900395360510,   0.0079591933284060535831,
      0.0078655582131571166941,   0.0077709003198987519181,
      0.0076752319572313550959,   0.0075785655651491749300,
      0.0074809137134227112449,   0.0073822890999642383189,
      0.0072827045491766658523,   0.0071821730102859523092,
      0.0070807075556572875135,   0.0069783213790952634992,
      0.0068750277941282547031,   0.0067708402322772306562,
      0.0066657722413092263604,   0.0065598374834756975543,
      0.0064530497337359900494,   0.0063454228779661542799,
      0.0062369709111533381404,   0.0061277079355759930941,
      0.0060176481589701304209,   0.0059068058926818663374,
      0.0057951955498064965679,   0.0056828316433143427744,
      0.0055697287841636150698,   0.0054559016794005366521,
      0.0053413651302469784048,   0.0052261340301758531325,
      0.0051102233629745209392,   0.0049936482007964591410,
      0.0048764237022014520408,   0.0047585651101845579285,
      0.0046400877501941128296,   0.0045210070281390328785,
      0.0044013384283856798093,   0.0042810975117445570524,
      0.0041602999134471074498,   0.0040389613411128878766,
      0.0039170975727074013963,   0.0037947244544908744400,
      0.0036718578989582755538,   0.0035485138827708844994,
      0.0034247084446797374174,   0.0033004576834412976429,
      0.0031757777557257361167,   0.0030506848740182556735,
      0.0029251953045139685963,   0.0027993253650069509596,
      0.0026730914227742739980,   0.0025465098924560918124,
      0.0024195972339333147800,   0.0022923699502051404407,
      0.0021648445852699688219,   0.0020370377220154094326,
      0.0019089659801269891987,   0.0017806460140323905469,
      0.0016520945109119167701,   0.0015233281888336705410,
      0.0013943637951303732494,   0.0012652181052647162318,
      0.0011359079227386350560,   0.0010064500813931342092,
      0.00087686145367356230178,  0.00074715897547943760218,
      0.00061735972401952192019,  0.00048748120000934061519,
      0.00035754264014143965500,  0.00022757428558860131743,
      0.000097768571084995018839};
  IntegratorXX::GaussLegendre<double, double> quad(275);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 275; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("300 point GaussLegendre", "[1d-quad]") {
  std::array<double, 300> ref_pts = {
      -0.99996797821843673462,  -0.99983128298441936254,
      -0.99958537344888634914,  -0.99923022186327359292,
      -0.99876586035309500487,  -0.99819233807344354113,
      -0.99750971717587931073,  -0.99671807205100011495,
      -0.99581748912082424009,  -0.99480806676300336776,
      -0.99368991527426816285,  -0.99246315684710065608,
      -0.99112792555098988789,  -0.98968436731500974347,
      -0.98813263991036040527,  -0.98647291293226059620,
      -0.98470536778089572742,  -0.98283019764127242259,
      -0.98084760746190040249,  -0.97875781393225871624,
      -0.97656104545902253659,  -0.97425754214103743463,
      -0.97184755574303422982,  -0.96933134966808121105,
      -0.96670919892877282045,  -0.96398139011715536872,
      -0.96114822137339133804,  -0.95821000235316451628,
      -0.95516705419382870639,  -0.95201970947930313481,
      -0.94876831220371798540,  -0.94541321773381373612,
      -0.94195479277009819192,  -0.93839341530676529972,
      -0.93472947459038000736,  -0.93096337107733359273,
      -0.92709551639007404521,  -0.92312633327211623136,
      -0.91905625554183672207,  -0.91488572804505830017,
      -0.91061520660642930644,  -0.90624515797960311906,
      -0.90177605979622319647,  -0.89720840051371924729,
      -0.89254267936192022336,  -0.88777940628848996315,
      -0.88291910190319144271,  -0.87796229742098572108,
      -0.87290953460397179476,  -0.86776136570217370361,
      -0.86251835339318135733,  -0.85718107072065167684,
      -0.85175010103167677058,  -0.84622603791302598928,
      -0.84060948512626882655,  -0.83490105654178575476,
      -0.82910137607167420793,  -0.82321107760155704372,
      -0.81723080492130093698,  -0.81116121165465227664,
      -0.80500296118779825581,  -0.79875672659686096283,
      -0.79242319057433239750,  -0.78600304535445845258,
      -0.77949699263758001552,  -0.77290574351343945955,
      -0.76623001838346090621,  -0.75947054688201275355,
      -0.75262806779666107581,  -0.74570332898742261028,
      -0.73869708730502615664,  -0.73161010850819132254,
      -0.72444316717993365634,  -0.71719704664290531462,
      -0.70987253887378051723,  -0.70247044441669514735,
      -0.69499157229574995721,  -0.68743673992658694245,
      -0.67980677302704854965,  -0.67210250552692948137,
      -0.66432477947683096290,  -0.65647444495612743215,
      -0.64855235998005571193,  -0.64055939040593681933,
      -0.63249640983854066169,  -0.62436429953460396270,
      -0.61616394830651185434,  -0.60789625242515366184,
      -0.59956211552196349944,  -0.59116244849015638331,
      -0.58269816938517065634,  -0.57417020332432760601,
      -0.56557948238571924229,  -0.55692694550633528668,
      -0.54821353837944050682,  -0.53944021335121361306,
      -0.53060792931665901375,  -0.52171765161480280609,
      -0.51277035192318445692,  -0.50376700815165570544,
      -0.49470860433549829505,  -0.48559613052787221633,
      -0.47643058269160621617,  -0.46721296259034239987,
      -0.45794427767904682395,  -0.44862554099389804629,
      -0.43925777104156566851,  -0.42984199168789097208,
      -0.42037923204598181490,  -0.41087052636373401937,
      -0.40131691391079154525,  -0.39171943886495780240,
      -0.38207915019807051817,  -0.37239710156135263289,
      -0.36267435117025175425,  -0.35291196168878075736,
      -0.34311100011337217142,  -0.33327253765625904754,
      -0.32339764962839505370,  -0.31348741532192659331,
      -0.30354291789222979276,  -0.29356524423952525089,
      -0.28355548489008348962,  -0.27351473387703408937,
      -0.26344408862079153669,  -0.25334464980911085286,
      -0.24321752127678611329,  -0.23306380988500500600,
      -0.22288462540037261550,  -0.21268108037361765423,
      -0.20245429001799439872,  -0.19220537208739362055,
      -0.18193544675417583432,  -0.17164563648674021499,
      -0.16133706592684256587,  -0.15101086176667574602,
      -0.14066815262572599182,  -0.13031006892741859177,
      -0.11993774277556639683,  -0.10955230783063467004,
      -0.099154899185835799275, -0.088746653243067415488,
      -0.078328707588707476106, -0.067902200869279888666,
      -0.057468272667004264073, -0.047028063375243401440,
      -0.036582714073862117716, -0.026133366404511044936,
      -0.015681162445849026167, -0.0052272445887177479295,
      0.0052272445887177479295, 0.015681162445849026167,
      0.026133366404511044936,  0.036582714073862117716,
      0.047028063375243401440,  0.057468272667004264073,
      0.067902200869279888666,  0.078328707588707476106,
      0.088746653243067415488,  0.099154899185835799275,
      0.10955230783063467004,   0.11993774277556639683,
      0.13031006892741859177,   0.14066815262572599182,
      0.15101086176667574602,   0.16133706592684256587,
      0.17164563648674021499,   0.18193544675417583432,
      0.19220537208739362055,   0.20245429001799439872,
      0.21268108037361765423,   0.22288462540037261550,
      0.23306380988500500600,   0.24321752127678611329,
      0.25334464980911085286,   0.26344408862079153669,
      0.27351473387703408937,   0.28355548489008348962,
      0.29356524423952525089,   0.30354291789222979276,
      0.31348741532192659331,   0.32339764962839505370,
      0.33327253765625904754,   0.34311100011337217142,
      0.35291196168878075736,   0.36267435117025175425,
      0.37239710156135263289,   0.38207915019807051817,
      0.39171943886495780240,   0.40131691391079154525,
      0.41087052636373401937,   0.42037923204598181490,
      0.42984199168789097208,   0.43925777104156566851,
      0.44862554099389804629,   0.45794427767904682395,
      0.46721296259034239987,   0.47643058269160621617,
      0.48559613052787221633,   0.49470860433549829505,
      0.50376700815165570544,   0.51277035192318445692,
      0.52171765161480280609,   0.53060792931665901375,
      0.53944021335121361306,   0.54821353837944050682,
      0.55692694550633528668,   0.56557948238571924229,
      0.57417020332432760601,   0.58269816938517065634,
      0.59116244849015638331,   0.59956211552196349944,
      0.60789625242515366184,   0.61616394830651185434,
      0.62436429953460396270,   0.63249640983854066169,
      0.64055939040593681933,   0.64855235998005571193,
      0.65647444495612743215,   0.66432477947683096290,
      0.67210250552692948137,   0.67980677302704854965,
      0.68743673992658694245,   0.69499157229574995721,
      0.70247044441669514735,   0.70987253887378051723,
      0.71719704664290531462,   0.72444316717993365634,
      0.73161010850819132254,   0.73869708730502615664,
      0.74570332898742261028,   0.75262806779666107581,
      0.75947054688201275355,   0.76623001838346090621,
      0.77290574351343945955,   0.77949699263758001552,
      0.78600304535445845258,   0.79242319057433239750,
      0.79875672659686096283,   0.80500296118779825581,
      0.81116121165465227664,   0.81723080492130093698,
      0.82321107760155704372,   0.82910137607167420793,
      0.83490105654178575476,   0.84060948512626882655,
      0.84622603791302598928,   0.85175010103167677058,
      0.85718107072065167684,   0.86251835339318135733,
      0.86776136570217370361,   0.87290953460397179476,
      0.87796229742098572108,   0.88291910190319144271,
      0.88777940628848996315,   0.89254267936192022336,
      0.89720840051371924729,   0.90177605979622319647,
      0.90624515797960311906,   0.91061520660642930644,
      0.91488572804505830017,   0.91905625554183672207,
      0.92312633327211623136,   0.92709551639007404521,
      0.93096337107733359273,   0.93472947459038000736,
      0.93839341530676529972,   0.94195479277009819192,
      0.94541321773381373612,   0.94876831220371798540,
      0.95201970947930313481,   0.95516705419382870639,
      0.95821000235316451628,   0.96114822137339133804,
      0.96398139011715536872,   0.96670919892877282045,
      0.96933134966808121105,   0.97184755574303422982,
      0.97425754214103743463,   0.97656104545902253659,
      0.97875781393225871624,   0.98084760746190040249,
      0.98283019764127242259,   0.98470536778089572742,
      0.98647291293226059620,   0.98813263991036040527,
      0.98968436731500974347,   0.99112792555098988789,
      0.99246315684710065608,   0.99368991527426816285,
      0.99480806676300336776,   0.99581748912082424009,
      0.99671807205100011495,   0.99750971717587931073,
      0.99819233807344354113,   0.99876586035309500487,
      0.99923022186327359292,   0.99958537344888634914,
      0.99983128298441936254,   0.99996797821843673462};
  std::array<double, 300> ref_wgt = {
      0.000082177793687010528651, 0.00019128554465732186945,
      0.00030053396540839099108,  0.00040976357340360276730,
      0.00051895121345941058905,  0.00062808297797193048680,
      0.00073714641590585900250,  0.00084612942908086984515,
      0.00095502003443523802326,  0.0010638062980463679771,
      0.0011724763137046515139,   0.0012810181954280126152,
      0.0013894200749915495810,   0.0014976701014675556817,
      0.0016057564416441324541,   0.0017136672808556684006,
      0.0018213908240177596506,   0.0019289152967683872308,
      0.0020362289466662875303,   0.0021433200444208096046,
      0.0022501768851392091248,   0.0023567877895833970890,
      0.0024631411054314409034,   0.0025692252085409477255,
      0.0026750285042125146611,   0.0027805394284520540889,
      0.0028857464492311803199,   0.0029906380677450780016,
      0.0030952028196674208324,   0.0031994292764020046851,
      0.0033033060463308219604,   0.0034068217760583458730,
      0.0035099651516518218109,   0.0036127248998773825219,
      0.0037150897894318176408,   0.0038170486321698378700,
      0.0039185902843266812428,   0.0040197036477359141502,
      0.0041203776710422837752,   0.0042206013509094816266,
      0.0043203637332226802764,   0.0044196539142857073461,
      0.0045184610420127224093,   0.0046167743171142638521,
      0.0047145829942775339425,   0.0048118763833407914402,
      0.0049086438504617220719,   0.0050048748192796581239,
      0.0051005587720715192878,   0.0051956852509013477459,
      0.0052902438587633113109,   0.0053842242607180492553,
      0.0054776161850222362711,   0.0055704094242512408091,
      0.0056625938364147548560,   0.0057541593460652730132,
      0.0058450959453992995627,   0.0059353936953511630246,
      0.0060250427266793185422,   0.0061140332410450192710,
      0.0062023555120832387967,   0.0062899998864657274677,
      0.0063769567849560863963,   0.0064632167034567437654,
      0.0065487702140477189693,   0.0066336079660170610205,
      0.0067177206868828485697,   0.0068010991834066398128,
      0.0068837343425982614973,   0.0069656171327118271883,
      0.0070467386042328759181,   0.0071270898908565233134,
      0.0072066622104565182816,   0.0072854468660450993286,
      0.0073634352467235455927,   0.0074406188286233186926,
      0.0075169891758376925213,   0.0075925379413437691538,
      0.0076672568679147800916,   0.0077411377890225731278,
      0.0078141726297301861893,   0.0078863534075744105984,
      0.0079576722334382472886,   0.0080281213124131606154,
      0.0080976929446510355194,   0.0081663795262057449217,
      0.0082341735498642353707,   0.0083010676059670401029,
      0.0083670543832181298374,   0.0084321266694840127887,
      0.0084962773525819965574,   0.0085594994210575257432,
      0.0086217859649505103202,   0.0086831301765505610142,
      0.0087435253511410491392,   0.0088029648877319095670,
      0.0088614422897811067375,   0.0089189511659046848553,
      0.0089754852305753246655,   0.0090310383048093304587,
      0.0090856043168419722199,   0.0091391773027911091067,
      0.0091917514073090217270,   0.0092433208842223819703,
      0.0092938800971602904483,   0.0093434235201703128999,
      0.0093919457383224482311,   0.0094394414483009621774,
      0.0094859054589840219034,   0.0095313326920110681867,
      0.0095757181823378631749,   0.0096190570787791530499,
      0.0096613446445388862886,   0.0097025762577279295692,
      0.0097427474118692247374,   0.0097818537163903316208,
      0.0098198908971033028594,   0.0098568547966718383008,
      0.0098927413750656679044,   0.0099275467100021134904,
      0.0099612669973747810718,   0.0099938985516693369172,
      0.010025437806366321898,    0.010055881314330960098,
      0.010085225748189919074,    0.010113467900694980598,
      0.010140604685073582121,    0.010166633135366190662,
      0.010191550406750472228,    0.010215353775852221350,
      0.010238040641043016748,    0.010259608522724570586,
      0.010280055063599740246,    0.010299378028930172994,
      0.010317575306780555390,    0.010334644908249440724,
      0.010350584967686629277,    0.010365393742897077627,
      0.010379069615331314719,    0.010391611090262343896,
      0.010403016796949011543,    0.010413285488785824498,
      0.010422416043439199845,    0.010430407462970132217,
      0.010437258873943265175,    0.010442969527522354765,
      0.010447538799552114805,    0.010450966190626434967,
      0.010453251326142964188,    0.010454393956344053449,
      0.010454393956344053449,    0.010453251326142964188,
      0.010450966190626434967,    0.010447538799552114805,
      0.010442969527522354765,    0.010437258873943265175,
      0.010430407462970132217,    0.010422416043439199845,
      0.010413285488785824498,    0.010403016796949011543,
      0.010391611090262343896,    0.010379069615331314719,
      0.010365393742897077627,    0.010350584967686629277,
      0.010334644908249440724,    0.010317575306780555390,
      0.010299378028930172994,    0.010280055063599740246,
      0.010259608522724570586,    0.010238040641043016748,
      0.010215353775852221350,    0.010191550406750472228,
      0.010166633135366190662,    0.010140604685073582121,
      0.010113467900694980598,    0.010085225748189919074,
      0.010055881314330960098,    0.010025437806366321898,
      0.0099938985516693369172,   0.0099612669973747810718,
      0.0099275467100021134904,   0.0098927413750656679044,
      0.0098568547966718383008,   0.0098198908971033028594,
      0.0097818537163903316208,   0.0097427474118692247374,
      0.0097025762577279295692,   0.0096613446445388862886,
      0.0096190570787791530499,   0.0095757181823378631749,
      0.0095313326920110681867,   0.0094859054589840219034,
      0.0094394414483009621774,   0.0093919457383224482311,
      0.0093434235201703128999,   0.0092938800971602904483,
      0.0092433208842223819703,   0.0091917514073090217270,
      0.0091391773027911091067,   0.0090856043168419722199,
      0.0090310383048093304587,   0.0089754852305753246655,
      0.0089189511659046848553,   0.0088614422897811067375,
      0.0088029648877319095670,   0.0087435253511410491392,
      0.0086831301765505610142,   0.0086217859649505103202,
      0.0085594994210575257432,   0.0084962773525819965574,
      0.0084321266694840127887,   0.0083670543832181298374,
      0.0083010676059670401029,   0.0082341735498642353707,
      0.0081663795262057449217,   0.0080976929446510355194,
      0.0080281213124131606154,   0.0079576722334382472886,
      0.0078863534075744105984,   0.0078141726297301861893,
      0.0077411377890225731278,   0.0076672568679147800916,
      0.0075925379413437691538,   0.0075169891758376925213,
      0.0074406188286233186926,   0.0073634352467235455927,
      0.0072854468660450993286,   0.0072066622104565182816,
      0.0071270898908565233134,   0.0070467386042328759181,
      0.0069656171327118271883,   0.0068837343425982614973,
      0.0068010991834066398128,   0.0067177206868828485697,
      0.0066336079660170610205,   0.0065487702140477189693,
      0.0064632167034567437654,   0.0063769567849560863963,
      0.0062899998864657274677,   0.0062023555120832387967,
      0.0061140332410450192710,   0.0060250427266793185422,
      0.0059353936953511630246,   0.0058450959453992995627,
      0.0057541593460652730132,   0.0056625938364147548560,
      0.0055704094242512408091,   0.0054776161850222362711,
      0.0053842242607180492553,   0.0052902438587633113109,
      0.0051956852509013477459,   0.0051005587720715192878,
      0.0050048748192796581239,   0.0049086438504617220719,
      0.0048118763833407914402,   0.0047145829942775339425,
      0.0046167743171142638521,   0.0045184610420127224093,
      0.0044196539142857073461,   0.0043203637332226802764,
      0.0042206013509094816266,   0.0041203776710422837752,
      0.0040197036477359141502,   0.0039185902843266812428,
      0.0038170486321698378700,   0.0037150897894318176408,
      0.0036127248998773825219,   0.0035099651516518218109,
      0.0034068217760583458730,   0.0033033060463308219604,
      0.0031994292764020046851,   0.0030952028196674208324,
      0.0029906380677450780016,   0.0028857464492311803199,
      0.0027805394284520540889,   0.0026750285042125146611,
      0.0025692252085409477255,   0.0024631411054314409034,
      0.0023567877895833970890,   0.0022501768851392091248,
      0.0021433200444208096046,   0.0020362289466662875303,
      0.0019289152967683872308,   0.0018213908240177596506,
      0.0017136672808556684006,   0.0016057564416441324541,
      0.0014976701014675556817,   0.0013894200749915495810,
      0.0012810181954280126152,   0.0011724763137046515139,
      0.0010638062980463679771,   0.00095502003443523802326,
      0.00084612942908086984515,  0.00073714641590585900250,
      0.00062808297797193048680,  0.00051895121345941058905,
      0.00040976357340360276730,  0.00030053396540839099108,
      0.00019128554465732186945,  0.000082177793687010528651};
  IntegratorXX::GaussLegendre<double, double> quad(300);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 300; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("350 point GaussLegendre", "[1d-quad]") {
  std::array<double, 350> ref_pts = {
      -0.99997646256579418257,   -0.99987598473812877205,
      -0.99969522588704453926,   -0.99943416038244166009,
      -0.99909280427945271403,   -0.99867118382733106932,
      -0.99816933250681576040,   -0.99758729047570326583,
      -0.99692510441899483812,   -0.99618282749638431350,
      -0.99536051931902288611,   -0.99445824593644489651,
      -0.99347607982730068643,   -0.99241409989149884809,
      -0.99127239144275854929,   -0.99005104620112070841,
      -0.98875016228520043091,   -0.98736984420406990045,
      -0.98591020284871268502,   -0.98437135548301681941,
      -0.98275342573428809883,   -0.98105654358327282019,
      -0.97928084535368368858,   -0.97742647370122526425,
      -0.97549357760211695188,   -0.97348231234111255785,
      -0.97139283949901610614,   -0.96922532693969404788,
      -0.96697994879658430642,   -0.96465688545870281838,
      -0.96225632355614839368,   -0.95977845594510684116,
      -0.95722348169235540587,   -0.95459160605926864564,
      -0.95188304048532694461,   -0.94909800257112892283,
      -0.94623671606090905692,   -0.94329941082456187809,
      -0.94028632283917416231,   -0.93719769417006657334,
      -0.93403377295134626401,   -0.93079481336597198383,
      -0.92748107562533328346,   -0.92409282594834544776,
      -0.92063033654006182953,   -0.91709388556980529678,
      -0.91348375714882054550,   -0.90980024130744906963,
      -0.90604363397182861881,   -0.90221423694011901342,
      -0.89831235785825622454,   -0.89433831019523666524,
      -0.89029241321793367716,   -0.88617499196544823449,
      -0.88198637722299592488,   -0.87772690549533230443,
      -0.87339691897971876078,   -0.86899676553843105578,
      -0.86452679867081275577,   -0.85998737748487579409,
      -0.85537886666845044719,   -0.85070163645988704163,
      -0.84595606261831174554,   -0.84114252639343883388,
      -0.83626141449494185245,   -0.83131311906138614126,
      -0.82629803762872521289,   -0.82121657309836351673,
      -0.81606913370478815472,   -0.81085613298277214883,
      -0.80557798973415189516,   -0.80023512799418147350,
      -0.79482797699746651534,   -0.78935697114348036708,
      -0.78382254996166531874,   -0.77822515807612170187,
      -0.77256524516988769331,   -0.76684326594881269458,
      -0.76105968010502718915,   -0.75521495228001201230,
      -0.74930955202727000049,   -0.74334395377460301918,
      -0.73731863678599739952,   -0.73123408512312084610,
      -0.72509078760643390888,   -0.71888923777591914354,
      -0.71262993385143111527,   -0.70631337869267043120,
      -0.69994007975878501729,   -0.69351054906760188501,
      -0.68702530315449266319,   -0.68048486303087619965,
      -0.67388975414236156633,   -0.66724050632653483079,
      -0.66053765377039298521,   -0.65378173496742845276,
      -0.64697329267436761886,   -0.64011287386756686303,
      -0.63320102969906959435,   -0.62623831545232782071,
      -0.61922529049759180921,   -0.61216251824697142159,
      -0.60505056610917273487,   -0.59789000544391358373,
      -0.59068141151602168659,   -0.58342536344921904324,
      -0.57612244417959631679,   -0.56877324040878093767,
      -0.56137834255680269221,   -0.55393834471466058228,
      -0.54645384459659476681,   -0.53892544349206741960,
      -0.53135374621745636098,   -0.52373936106746534436,
      -0.51608289976625490119,   -0.50838497741829767032,
      -0.50064621245896216006,   -0.49286722660482891282,
      -0.48504864480374306392,   -0.47719109518460730720,
      -0.46929520900691930094,   -0.46136162061005756822,
      -0.45339096736231996592,   -0.44538388960971881653,
      -0.43734103062453681649,   -0.42926303655364785388,
      -0.42115055636660688742,   -0.41300424180351305700,
      -0.40482474732265021428,   -0.39661273004790908003,
      -0.38836884971599525190,   -0.38009376862342730411,
      -0.37178815157332923693,   -0.36345266582202155059,
      -0.35508798102541523444,   -0.34669476918521297788,
      -0.33827370459492192517,   -0.32982546378568231137,
      -0.32135072547191633142,   -0.31285017049680160876,
      -0.30432448177757364412,   -0.29577434425066163874,
      -0.28720044481666209968,   -0.27860347228515464794,
      -0.26998411731936446275,   -0.26134307238067580783,
      -0.25268103167300109717,   -0.24399869108700996962,
      -0.23529674814422285295,   -0.22657590194097350861,
      -0.21783685309224505923,   -0.20908030367538401090,
      -0.20030695717369679223,   -0.19151751841993334138,
      -0.18271269353966228162,   -0.17389318989454223445,
      -0.16505971602549382773,   -0.15621298159577696442,
      -0.14735369733397792473,   -0.13848257497691088226,
      -0.12960032721243842108,   -0.12070766762221564756,
      -0.11180531062436249671,   -0.10289397141606883868,
      -0.093974365916136996349,  -0.085047210707466290020,
      -0.076113222979484229973,  -0.067173120470528981734,
      -0.058227621410187733007,  -0.049277444461595594654,
      -0.040323308663699671320,  -0.031365933373492940097,
      -0.022406038208222578020,  -0.013444342987577381283,
      -0.0044815676758589207050, 0.0044815676758589207050,
      0.013444342987577381283,   0.022406038208222578020,
      0.031365933373492940097,   0.040323308663699671320,
      0.049277444461595594654,   0.058227621410187733007,
      0.067173120470528981734,   0.076113222979484229973,
      0.085047210707466290020,   0.093974365916136996349,
      0.10289397141606883868,    0.11180531062436249671,
      0.12070766762221564756,    0.12960032721243842108,
      0.13848257497691088226,    0.14735369733397792473,
      0.15621298159577696442,    0.16505971602549382773,
      0.17389318989454223445,    0.18271269353966228162,
      0.19151751841993334138,    0.20030695717369679223,
      0.20908030367538401090,    0.21783685309224505923,
      0.22657590194097350861,    0.23529674814422285295,
      0.24399869108700996962,    0.25268103167300109717,
      0.26134307238067580783,    0.26998411731936446275,
      0.27860347228515464794,    0.28720044481666209968,
      0.29577434425066163874,    0.30432448177757364412,
      0.31285017049680160876,    0.32135072547191633142,
      0.32982546378568231137,    0.33827370459492192517,
      0.34669476918521297788,    0.35508798102541523444,
      0.36345266582202155059,    0.37178815157332923693,
      0.38009376862342730411,    0.38836884971599525190,
      0.39661273004790908003,    0.40482474732265021428,
      0.41300424180351305700,    0.42115055636660688742,
      0.42926303655364785388,    0.43734103062453681649,
      0.44538388960971881653,    0.45339096736231996592,
      0.46136162061005756822,    0.46929520900691930094,
      0.47719109518460730720,    0.48504864480374306392,
      0.49286722660482891282,    0.50064621245896216006,
      0.50838497741829767032,    0.51608289976625490119,
      0.52373936106746534436,    0.53135374621745636098,
      0.53892544349206741960,    0.54645384459659476681,
      0.55393834471466058228,    0.56137834255680269221,
      0.56877324040878093767,    0.57612244417959631679,
      0.58342536344921904324,    0.59068141151602168659,
      0.59789000544391358373,    0.60505056610917273487,
      0.61216251824697142159,    0.61922529049759180921,
      0.62623831545232782071,    0.63320102969906959435,
      0.64011287386756686303,    0.64697329267436761886,
      0.65378173496742845276,    0.66053765377039298521,
      0.66724050632653483079,    0.67388975414236156633,
      0.68048486303087619965,    0.68702530315449266319,
      0.69351054906760188501,    0.69994007975878501729,
      0.70631337869267043120,    0.71262993385143111527,
      0.71888923777591914354,    0.72509078760643390888,
      0.73123408512312084610,    0.73731863678599739952,
      0.74334395377460301918,    0.74930955202727000049,
      0.75521495228001201230,    0.76105968010502718915,
      0.76684326594881269458,    0.77256524516988769331,
      0.77822515807612170187,    0.78382254996166531874,
      0.78935697114348036708,    0.79482797699746651534,
      0.80023512799418147350,    0.80557798973415189516,
      0.81085613298277214883,    0.81606913370478815472,
      0.82121657309836351673,    0.82629803762872521289,
      0.83131311906138614126,    0.83626141449494185245,
      0.84114252639343883388,    0.84595606261831174554,
      0.85070163645988704163,    0.85537886666845044719,
      0.85998737748487579409,    0.86452679867081275577,
      0.86899676553843105578,    0.87339691897971876078,
      0.87772690549533230443,    0.88198637722299592488,
      0.88617499196544823449,    0.89029241321793367716,
      0.89433831019523666524,    0.89831235785825622454,
      0.90221423694011901342,    0.90604363397182861881,
      0.90980024130744906963,    0.91348375714882054550,
      0.91709388556980529678,    0.92063033654006182953,
      0.92409282594834544776,    0.92748107562533328346,
      0.93079481336597198383,    0.93403377295134626401,
      0.93719769417006657334,    0.94028632283917416231,
      0.94329941082456187809,    0.94623671606090905692,
      0.94909800257112892283,    0.95188304048532694461,
      0.95459160605926864564,    0.95722348169235540587,
      0.95977845594510684116,    0.96225632355614839368,
      0.96465688545870281838,    0.96697994879658430642,
      0.96922532693969404788,    0.97139283949901610614,
      0.97348231234111255785,    0.97549357760211695188,
      0.97742647370122526425,    0.97928084535368368858,
      0.98105654358327282019,    0.98275342573428809883,
      0.98437135548301681941,    0.98591020284871268502,
      0.98736984420406990045,    0.98875016228520043091,
      0.99005104620112070841,    0.99127239144275854929,
      0.99241409989149884809,    0.99347607982730068643,
      0.99445824593644489651,    0.99536051931902288611,
      0.99618282749638431350,    0.99692510441899483812,
      0.99758729047570326583,    0.99816933250681576040,
      0.99867118382733106932,    0.99909280427945271403,
      0.99943416038244166009,    0.99969522588704453926,
      0.99987598473812877205,    0.99997646256579418257};
  std::array<double, 350> ref_wgt = {
      0.000060404420143268851542, 0.00014060528266832832006,
      0.00022091361448564950152,  0.00030121451442820113627,
      0.00038149328658429856298,  0.00046174203075449976608,
      0.00054195391528482013423,  0.00062212236534989152613,
      0.00070224088776666652415,  0.00078230302205718347150,
      0.00086230232426041251730,  0.00094223236099165117943,
      0.0010220867071888447015,   0.0011018589453372980522,
      0.0011815426653409316253,   0.0012611314646970789370,
      0.0013406189488224238107,   0.0014199987314579690635,
      0.0014992644351170352954,   0.0015784096915574566866,
      0.0016574281422677083443,   0.0017363134389611600654,
      0.0018150592440750617930,   0.0018936592312722126940,
      0.0019721070859440408660,   0.0020503965057142789397,
      0.0021285212009426984579,   0.0022064748952285378704,
      0.0022842513259133676853,   0.0023618442445832063331,
      0.0024392474175697461897,   0.0025164546264505797650,
      0.0025934596685483367412,   0.0026702563574286567216,
      0.0027468385233969324194,   0.0028232000139937649686,
      0.0028993346944890780086,   0.0029752364483748407857,
      0.0030508991778563531538,   0.0031263168043420473148,
      0.0032014832689317626186,   0.0032763925329034508774,
      0.0033510385781982705299,   0.0034254154079040286938,
      0.0034995170467369307105,   0.0035733375415215972568,
      0.0036468709616693094888,   0.0037201113996544430295,
      0.0037930529714890519074,   0.0038656898171955638246,
      0.0039380161012775483800,   0.0040100260131885201047,
      0.0040817137677987383806,   0.0041530736058599665287,
      0.0042240997944681525497,   0.0042947866275239942011,
      0.0043651284261913512902,   0.0044351195393534682542,
      0.0045047543440669702925,   0.0045740272460135965075,
      0.0046429326799496337064,   0.0047114651101530147054,
      0.0047796190308680451789,   0.0048473889667477232875,
      0.0049147694732936165223,   0.0049817551372932603998,
      0.0050483405772550438475,   0.0051145204438405463229,
      0.0051802894202942919173,   0.0052456422228708859061,
      0.0053105736012594994173,   0.0053750783390056681074,
      0.0054391512539303709480,   0.0055027871985463554490,
      0.0055659810604716758643,   0.0056287277628404111521,
      0.0056910222647105296876,   0.0057528595614688679579,
      0.0058142346852331906997,   0.0058751427052513001753,
      0.0059355787282971625215,   0.0059955378990640193433,
      0.0060550154005544529699,   0.0061140064544673740328,
      0.0061725063215819002754,   0.0062305103021380957517,
      0.0062880137362145398251,   0.0063450120041026956334,
      0.0064015005266780479427,   0.0064574747657679805721,
      0.0065129302245163638350,   0.0065678624477448227048,
      0.0066222670223106566822,   0.0066761395774613826073,
      0.0067294757851858719338,   0.0067822713605620542551,
      0.0068345220621011591471,   0.0068862236920884686736,
      0.0069373720969205531759,   0.0069879631674389632555,
      0.0070379928392603511413,   0.0070874570931029949183,
      0.0071363519551096993872,   0.0071846734971670476118,
      0.0072324178372209775070,   0.0072795811395886581147,
      0.0073261596152666405103,   0.0073721495222352585858,
      0.0074175471657592552521,   0.0074623488986846099106,
      0.0075065511217315433461,   0.0075501502837836765022,
      0.0075931428821733199088,   0.0076355254629628708410,
      0.0076772946212222956045,   0.0077184470013026746519,
      0.0077589792971057885577,   0.0077988882523497231905,
      0.0078381706608304727460,   0.0078768233666795196239,
      0.0079148432646173704547,   0.0079522273002030279080,
      0.0079889724700793782411,   0.0080250758222144748717,
      0.0080605344561386985930,   0.0080953455231777753769,
      0.0081295062266816330448,   0.0081630138222490784210,
      0.0081958656179482769177,   0.0082280589745330168397,
      0.0082595913056547410334,   0.0082904600780703288469,
      0.0083206628118456117076,   0.0083501970805546059681,
      0.0083790605114744470131,   0.0084072507857760089690,
      0.0084347656387101946989,   0.0084616028597898811201,
      0.0084877602929675052250,   0.0085132358368082765387,
      0.0085380274446590020986,   0.0085621331248125103923,
      0.0085855509406676610441,   0.0086082790108849273958,
      0.0086303155095375394823,   0.0086516586662581752599,
      0.0086723067663811883011,   0.0086922581510803605320,
      0.0087115112175021689426,   0.0087300644188945555661,
      0.0087479162647311903810,   0.0087650653208312171524,
      0.0087815102094744725939,   0.0087972496095121695919,
      0.0088122822564730356021,   0.0088266069426648976890,
      0.0088402225172717060494,   0.0088531278864459882240,
      0.0088653220133967265700,   0.0088768039184726519343,
      0.0088875726792409468361,   0.0088976274305613518365,
      0.0089069673646556691398,   0.0089155917311726578452,
      0.0089234998372483156331,   0.0089306910475615420446,
      0.0089371647843851788810,   0.0089429205276324236250,
      0.0089479578148986121517,   0.0089522762414983673754,
      0.0089558754604981108470,   0.0089587551827439346887,
      0.0089609151768848316289,   0.0089623552693912812697,
      0.0089630753445691910944,   0.0089630753445691910944,
      0.0089623552693912812697,   0.0089609151768848316289,
      0.0089587551827439346887,   0.0089558754604981108470,
      0.0089522762414983673754,   0.0089479578148986121517,
      0.0089429205276324236250,   0.0089371647843851788810,
      0.0089306910475615420446,   0.0089234998372483156331,
      0.0089155917311726578452,   0.0089069673646556691398,
      0.0088976274305613518365,   0.0088875726792409468361,
      0.0088768039184726519343,   0.0088653220133967265700,
      0.0088531278864459882240,   0.0088402225172717060494,
      0.0088266069426648976890,   0.0088122822564730356021,
      0.0087972496095121695919,   0.0087815102094744725939,
      0.0087650653208312171524,   0.0087479162647311903810,
      0.0087300644188945555661,   0.0087115112175021689426,
      0.0086922581510803605320,   0.0086723067663811883011,
      0.0086516586662581752599,   0.0086303155095375394823,
      0.0086082790108849273958,   0.0085855509406676610441,
      0.0085621331248125103923,   0.0085380274446590020986,
      0.0085132358368082765387,   0.0084877602929675052250,
      0.0084616028597898811201,   0.0084347656387101946989,
      0.0084072507857760089690,   0.0083790605114744470131,
      0.0083501970805546059681,   0.0083206628118456117076,
      0.0082904600780703288469,   0.0082595913056547410334,
      0.0082280589745330168397,   0.0081958656179482769177,
      0.0081630138222490784210,   0.0081295062266816330448,
      0.0080953455231777753769,   0.0080605344561386985930,
      0.0080250758222144748717,   0.0079889724700793782411,
      0.0079522273002030279080,   0.0079148432646173704547,
      0.0078768233666795196239,   0.0078381706608304727460,
      0.0077988882523497231905,   0.0077589792971057885577,
      0.0077184470013026746519,   0.0076772946212222956045,
      0.0076355254629628708410,   0.0075931428821733199088,
      0.0075501502837836765022,   0.0075065511217315433461,
      0.0074623488986846099106,   0.0074175471657592552521,
      0.0073721495222352585858,   0.0073261596152666405103,
      0.0072795811395886581147,   0.0072324178372209775070,
      0.0071846734971670476118,   0.0071363519551096993872,
      0.0070874570931029949183,   0.0070379928392603511413,
      0.0069879631674389632555,   0.0069373720969205531759,
      0.0068862236920884686736,   0.0068345220621011591471,
      0.0067822713605620542551,   0.0067294757851858719338,
      0.0066761395774613826073,   0.0066222670223106566822,
      0.0065678624477448227048,   0.0065129302245163638350,
      0.0064574747657679805721,   0.0064015005266780479427,
      0.0063450120041026956334,   0.0062880137362145398251,
      0.0062305103021380957517,   0.0061725063215819002754,
      0.0061140064544673740328,   0.0060550154005544529699,
      0.0059955378990640193433,   0.0059355787282971625215,
      0.0058751427052513001753,   0.0058142346852331906997,
      0.0057528595614688679579,   0.0056910222647105296876,
      0.0056287277628404111521,   0.0055659810604716758643,
      0.0055027871985463554490,   0.0054391512539303709480,
      0.0053750783390056681074,   0.0053105736012594994173,
      0.0052456422228708859061,   0.0051802894202942919173,
      0.0051145204438405463229,   0.0050483405772550438475,
      0.0049817551372932603998,   0.0049147694732936165223,
      0.0048473889667477232875,   0.0047796190308680451789,
      0.0047114651101530147054,   0.0046429326799496337064,
      0.0045740272460135965075,   0.0045047543440669702925,
      0.0044351195393534682542,   0.0043651284261913512902,
      0.0042947866275239942011,   0.0042240997944681525497,
      0.0041530736058599665287,   0.0040817137677987383806,
      0.0040100260131885201047,   0.0039380161012775483800,
      0.0038656898171955638246,   0.0037930529714890519074,
      0.0037201113996544430295,   0.0036468709616693094888,
      0.0035733375415215972568,   0.0034995170467369307105,
      0.0034254154079040286938,   0.0033510385781982705299,
      0.0032763925329034508774,   0.0032014832689317626186,
      0.0031263168043420473148,   0.0030508991778563531538,
      0.0029752364483748407857,   0.0028993346944890780086,
      0.0028232000139937649686,   0.0027468385233969324194,
      0.0026702563574286567216,   0.0025934596685483367412,
      0.0025164546264505797650,   0.0024392474175697461897,
      0.0023618442445832063331,   0.0022842513259133676853,
      0.0022064748952285378704,   0.0021285212009426984579,
      0.0020503965057142789397,   0.0019721070859440408660,
      0.0018936592312722126940,   0.0018150592440750617930,
      0.0017363134389611600654,   0.0016574281422677083443,
      0.0015784096915574566866,   0.0014992644351170352954,
      0.0014199987314579690635,   0.0013406189488224238107,
      0.0012611314646970789370,   0.0011815426653409316253,
      0.0011018589453372980522,   0.0010220867071888447015,
      0.00094223236099165117943,  0.00086230232426041251730,
      0.00078230302205718347150,  0.00070224088776666652415,
      0.00062212236534989152613,  0.00054195391528482013423,
      0.00046174203075449976608,  0.00038149328658429856298,
      0.00030121451442820113627,  0.00022091361448564950152,
      0.00014060528266832832006,  0.000060404420143268851542};
  IntegratorXX::GaussLegendre<double, double> quad(350);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 350; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("400 point GaussLegendre", "[1d-quad]") {
  std::array<double, 400> ref_pts = {
      -0.99998197270396245071,  -0.99990501646933127957,
      -0.99976657126671084986,  -0.99956661486264080002,
      -0.99930515579370303353,  -0.99898220924807979924,
      -0.99859779479717574339,  -0.99815193597184412754,
      -0.99764466014864039404,  -0.99707599851079234502,
      -0.99644598603175712260,  -0.99575466146672398518,
      -0.99500206734719624440,  -0.99418824997681581167,
      -0.99331325942766478138,  -0.99237714953669824336,
      -0.99137997790214144175,  -0.99032180587976616423,
      -0.98920269857900087622,  -0.98802272485884931791,
      -0.98678195732360304344,  -0.98548047231833933947,
      -0.98411834992419937526,  -0.98269567395344345455,
      -0.98121253194428146824,  -0.97966901515547741363,
      -0.97806521856072733845,  -0.97640124084281039085,
      -0.97467718438751287466,  -0.97289315527732535969,
      -0.97104926328491300404,  -0.96914562186635932358,
      -0.96718234815418370268,  -0.96515956295013298606,
      -0.96307739071774752863,  -0.96093595957470211011,
      -0.95873540128492214791,  -0.95647585125047566382,
      -0.95415744850324148121,  -0.95178033569635414762,
      -0.94934465909542609568,  -0.94685056856954757160,
      -0.94429821758206487644,  -0.94168776318113748093,
      -0.93901936599007458925,  -0.93629319019745174210,
      -0.93350940354700806355,  -0.93066817732732477052,
      -0.92776968636128557747,  -0.92481410899531964301,
      -0.92180162708842771860,  -0.91873242600099217334,
      -0.91560669458337158221,  -0.91242462516428057865,
      -0.90918641353895568571,  -0.90589225895710785330,
      -0.90254236411066244220,  -0.89913693512128740891,
      -0.89567618152771045819,  -0.89216031627282594337,
      -0.88858955569059230752,  -0.88496411949272087148,
      -0.88128423075515678747,  -0.87755011590435298998,
      -0.87376200470333798849,  -0.86992013023757835892,
      -0.86602472890063680380,  -0.86207604037962666338,
      -0.85807430764046377268,  -0.85401977691291657179,
      -0.84991269767545538932,  -0.84575332263990183111,
      -0.84154190773587921873,  -0.83727871209506503441,
      -0.83296399803524634147,  -0.82859803104417916120,
      -0.82418107976325279925,  -0.81971341597096012682,
      -0.81519531456617483352,  -0.81062705355123668100,
      -0.80600891401484579804,  -0.80134118011476706954,
      -0.79662413906034568377,  -0.79185808109483491356,
      -0.78704329947753721887,  -0.78218009046575976956,
      -0.77726875329658549870,  -0.77230959016846080799,
      -0.76730290622260105824,  -0.76224900952421498903,
      -0.75714821104354922283,  -0.75200082463675401989,
      -0.74680716702657146129,  -0.74156755778284724834,
      -0.73628231930286731756,  -0.73095177679152048101,
      -0.72557625824128831271,  -0.72015609441206351227,
      -0.71469161881079798755,  -0.70918316767098190870,
      -0.70363107993195499615,  -0.69803569721805131549,
      -0.69239736381757886272,  -0.68671642666163523294,
      -0.68099323530276067626,  -0.67522814189342985423,
      -0.66942150116438362025,  -0.66357367040280215735,
      -0.65768500943032081614,  -0.65175588058089000585,
      -0.64578664867848050056,  -0.63977768101463553261,
      -0.63372934732587105431,  -0.62764201977092555855,
      -0.62151607290786085817,  -0.61535188367101523311,
      -0.60914983134781036333,  -0.60291029755541347478,
      -0.59663366621725613416,  -0.59032032353941113754,
      -0.58397065798682894620,  -0.57758506025943513199,
      -0.57116392326809030292,  -0.56470764211041398814,
      -0.55821661404647396995,  -0.55169123847434255868,
      -0.54513191690552131448,  -0.53853905294023572808,
      -0.53191305224260138081,  -0.52525432251566311178,
      -0.51856327347630872817,  -0.51184031683005880217,
      -0.50508586624573410577,  -0.49830033733000224215,
      -0.49148414760180503987,  -0.48463771646666828323,
      -0.47776146519089535974,  -0.47085581687564641239,
      -0.46392119643090459182,  -0.45695803054933101014,
      -0.44996674768001000513,  -0.44294777800208633045,
      -0.43590155339829589378,  -0.42882850742839167168,
      -0.42172907530246643626,  -0.41460369385417393519,
      -0.40745280151385017265,  -0.40027683828153644523,
      -0.39307624569990579258,  -0.38585146682709452875,
      -0.37860294620944052585,  -0.37133112985412992756,
      -0.36403646520175397536,  -0.35671940109877763639,
      -0.34938038776992172665,  -0.34201987679046022913,
      -0.33463832105843451125,  -0.32723617476678615147,
      -0.31981389337541008961,  -0.31237193358312982057,
      -0.30491075329959635574,  -0.29743081161711268133,
      -0.28993256878238544711,  -0.28241648616820562384,
      -0.27488302624505987179,  -0.26733265255267436723,
      -0.25976582967149283777,  -0.25218302319409056148,
      -0.24458469969652608878,  -0.23697132670963244990,
      -0.22934337269024961417,  -0.22170130699239997151,
      -0.21404559983840860952,  -0.20637672228997016321,
      -0.19869514621916401768,  -0.19100134427941964721,
      -0.18329578987643387718,  -0.17557895713904185851,
      -0.16785132089004354673,  -0.16011335661698748089,
      -0.15236554044291365995,  -0.14460834909705731691,
      -0.13684225988551539322,  -0.12906775066187751851,
      -0.12128529979782330255,  -0.11349538615368774886,
      -0.10569848904899660086,  -0.097895088232973433687,
      -0.090085663855020306413, -0.082270696435173790885,
      -0.074450666834538195193, -0.066626056225697800936,
      -0.058797346063109934904, -0.050965018053480696873,
      -0.043129554126125166338, -0.035291436403313911949,
      -0.027451147170607628230, -0.019609168847181724939,
      -0.011765983956142695005, -0.0039220750948380874980,
      0.0039220750948380874980, 0.011765983956142695005,
      0.019609168847181724939,  0.027451147170607628230,
      0.035291436403313911949,  0.043129554126125166338,
      0.050965018053480696873,  0.058797346063109934904,
      0.066626056225697800936,  0.074450666834538195193,
      0.082270696435173790885,  0.090085663855020306413,
      0.097895088232973433687,  0.10569848904899660086,
      0.11349538615368774886,   0.12128529979782330255,
      0.12906775066187751851,   0.13684225988551539322,
      0.14460834909705731691,   0.15236554044291365995,
      0.16011335661698748089,   0.16785132089004354673,
      0.17557895713904185851,   0.18329578987643387718,
      0.19100134427941964721,   0.19869514621916401768,
      0.20637672228997016321,   0.21404559983840860952,
      0.22170130699239997151,   0.22934337269024961417,
      0.23697132670963244990,   0.24458469969652608878,
      0.25218302319409056148,   0.25976582967149283777,
      0.26733265255267436723,   0.27488302624505987179,
      0.28241648616820562384,   0.28993256878238544711,
      0.29743081161711268133,   0.30491075329959635574,
      0.31237193358312982057,   0.31981389337541008961,
      0.32723617476678615147,   0.33463832105843451125,
      0.34201987679046022913,   0.34938038776992172665,
      0.35671940109877763639,   0.36403646520175397536,
      0.37133112985412992756,   0.37860294620944052585,
      0.38585146682709452875,   0.39307624569990579258,
      0.40027683828153644523,   0.40745280151385017265,
      0.41460369385417393519,   0.42172907530246643626,
      0.42882850742839167168,   0.43590155339829589378,
      0.44294777800208633045,   0.44996674768001000513,
      0.45695803054933101014,   0.46392119643090459182,
      0.47085581687564641239,   0.47776146519089535974,
      0.48463771646666828323,   0.49148414760180503987,
      0.49830033733000224215,   0.50508586624573410577,
      0.51184031683005880217,   0.51856327347630872817,
      0.52525432251566311178,   0.53191305224260138081,
      0.53853905294023572808,   0.54513191690552131448,
      0.55169123847434255868,   0.55821661404647396995,
      0.56470764211041398814,   0.57116392326809030292,
      0.57758506025943513199,   0.58397065798682894620,
      0.59032032353941113754,   0.59663366621725613416,
      0.60291029755541347478,   0.60914983134781036333,
      0.61535188367101523311,   0.62151607290786085817,
      0.62764201977092555855,   0.63372934732587105431,
      0.63977768101463553261,   0.64578664867848050056,
      0.65175588058089000585,   0.65768500943032081614,
      0.66357367040280215735,   0.66942150116438362025,
      0.67522814189342985423,   0.68099323530276067626,
      0.68671642666163523294,   0.69239736381757886272,
      0.69803569721805131549,   0.70363107993195499615,
      0.70918316767098190870,   0.71469161881079798755,
      0.72015609441206351227,   0.72557625824128831271,
      0.73095177679152048101,   0.73628231930286731756,
      0.74156755778284724834,   0.74680716702657146129,
      0.75200082463675401989,   0.75714821104354922283,
      0.76224900952421498903,   0.76730290622260105824,
      0.77230959016846080799,   0.77726875329658549870,
      0.78218009046575976956,   0.78704329947753721887,
      0.79185808109483491356,   0.79662413906034568377,
      0.80134118011476706954,   0.80600891401484579804,
      0.81062705355123668100,   0.81519531456617483352,
      0.81971341597096012682,   0.82418107976325279925,
      0.82859803104417916120,   0.83296399803524634147,
      0.83727871209506503441,   0.84154190773587921873,
      0.84575332263990183111,   0.84991269767545538932,
      0.85401977691291657179,   0.85807430764046377268,
      0.86207604037962666338,   0.86602472890063680380,
      0.86992013023757835892,   0.87376200470333798849,
      0.87755011590435298998,   0.88128423075515678747,
      0.88496411949272087148,   0.88858955569059230752,
      0.89216031627282594337,   0.89567618152771045819,
      0.89913693512128740891,   0.90254236411066244220,
      0.90589225895710785330,   0.90918641353895568571,
      0.91242462516428057865,   0.91560669458337158221,
      0.91873242600099217334,   0.92180162708842771860,
      0.92481410899531964301,   0.92776968636128557747,
      0.93066817732732477052,   0.93350940354700806355,
      0.93629319019745174210,   0.93901936599007458925,
      0.94168776318113748093,   0.94429821758206487644,
      0.94685056856954757160,   0.94934465909542609568,
      0.95178033569635414762,   0.95415744850324148121,
      0.95647585125047566382,   0.95873540128492214791,
      0.96093595957470211011,   0.96307739071774752863,
      0.96515956295013298606,   0.96718234815418370268,
      0.96914562186635932358,   0.97104926328491300404,
      0.97289315527732535969,   0.97467718438751287466,
      0.97640124084281039085,   0.97806521856072733845,
      0.97966901515547741363,   0.98121253194428146824,
      0.98269567395344345455,   0.98411834992419937526,
      0.98548047231833933947,   0.98678195732360304344,
      0.98802272485884931791,   0.98920269857900087622,
      0.99032180587976616423,   0.99137997790214144175,
      0.99237714953669824336,   0.99331325942766478138,
      0.99418824997681581167,   0.99500206734719624440,
      0.99575466146672398518,   0.99644598603175712260,
      0.99707599851079234502,   0.99764466014864039404,
      0.99815193597184412754,   0.99859779479717574339,
      0.99898220924807979924,   0.99930515579370303353,
      0.99956661486264080002,   0.99976657126671084986,
      0.99990501646933127957,   0.99998197270396245071};
  std::array<double, 400> ref_wgt = {
      0.000046263724177190118140, 0.00010769038102183646233,
      0.00016920137336541413266,  0.00023070985544248655270,
      0.00029220572803523217847,  0.00035368409613102448238,
      0.00041514088233419025172,  0.00047657220501003854013,
      0.00053797424394626279850,  0.00059934320270831884264,
      0.00066067529607738161576,  0.00072196674533702894531,
      0.00078321377638390310245,  0.00084441261897085745246,
      0.00090555950644549534547,  0.00096665067572141452408,
      0.0010276823673654497631,   0.0010886508257457038101,
      0.0011495522992128106212,   0.0012103830403000240186,
      0.0012711393059342868032,   0.0013318173576538514742,
      0.0013924134618298698081,   0.0014529238898903999089,
      0.0015133449185458729415,   0.0015736728300154127016,
      0.0016339039122536137612,   0.0016940344591775155933,
      0.0017540607708935932919,   0.0018139791539246390831,
      0.0018737859214364439296,   0.0019334773934642118870,
      0.0019930498971386556619,   0.0020524997669117326296,
      0.0021118233447819880762,   0.0021710169805194777031,
      0.0022300770318902451835,   0.0022889998648803332550,
      0.0023477818539193087974,   0.0024064193821032837844,
      0.0024649088414174150723,   0.0025232466329578667922,
      0.0025814291671532197290,   0.0026394528639853125366,
      0.0026973141532095000116,   0.0027550094745743139337,
      0.0028125352780405122177,   0.0028698880239995023069,
      0.0029270641834911248991,   0.0029840602384207842253,
      0.0030408726817759112151,   0.0030974980178417459830,
      0.0031539327624164261559,   0.0032101734430253676425,
      0.0032662165991349245187,   0.0033220587823653147700,
      0.0033776965567027986980,   0.0034331264987110968586,
      0.0034883451977420344589,   0.0035433492561453991997,
      0.0035981352894779996042,   0.0036526999267119109345,
      0.0037070398104418958479,   0.0037611515970919870054,
      0.0038150319571212188978,   0.0038686775752284962112,
      0.0039220851505565861096,   0.0039752513968952218695,
      0.0040281730428833053557,   0.0040808468322101958885,
      0.0041332695238160731058,   0.0041854378920913614850,
      0.0042373487270752042475,   0.0042889988346529744267,
      0.0043403850367528109430,   0.0043915041715411675870,
      0.0044423530936173628756,   0.0044929286742071188065,
      0.0045432278013550766005,   0.0045932473801162775820,
      0.0046429843327465974146,   0.0046924355988921219716,
      0.0047415981357774531879,   0.0047904689183929333047,
      0.0048390449396807759855,   0.0048873232107200928500,
      0.0049353007609108040389,   0.0049829746381564214944,
      0.0050303419090456937061,   0.0050773996590331007480,
      0.0051241449926181884968,   0.0051705750335237309985,
      0.0052166869248727100194,   0.0052624778293641008920,
      0.0053079449294474538377,   0.0053530854274962600256,
      0.0053978965459800916987,   0.0054423755276355057750,
      0.0054865196356357004084,   0.0055303261537589140694,
      0.0055737923865555567831,   0.0056169156595140632423,
      0.0056596933192254575884,   0.0057021227335466197356,
      0.0057442012917622431919,   0.0057859264047454744108,
      0.0058272955051172237903,   0.0058683060474041385162,
      0.0059089555081952275287,   0.0059492413862971289761,
      0.0059891612028880106009,   0.0060287125016700935893,
      0.0060678928490207904979,   0.0061066998341424479603,
      0.0061451310692106849564,   0.0061831841895213175201,
      0.0062208568536358608432,   0.0062581467435255998229,
      0.0062950515647142191886,   0.0063315690464189844310,
      0.0063676969416904648472,   0.0064034330275507901044,
      0.0064387751051304318146,   0.0064737209998035017044,
      0.0065082685613215580554,   0.0065424156639459121806,
      0.0065761602065784267971,   0.0066095001128907982464,
      0.0066424333314523146081,   0.0066749578358560818440,
      0.0067070716248437102089,   0.0067387727224284532529,
      0.0067700591780167918407,   0.0068009290665284557051,
      0.0068313804885148751508,   0.0068614115702760556195,
      0.0068910204639758679249,   0.0069202053477557470637,
      0.0069489644258467926075,   0.0069772959286802637759,
      0.0070051981129964623945,   0.0070326692619519970358,
      0.0070597076852254217450,   0.0070863117191212428490,
      0.0071124797266722874499,   0.0071382100977404273038,
      0.0071635012491156518878,   0.0071883516246134845581,
      0.0072127596951707358064,   0.0072367239589395877220,
      0.0072602429413800038704,   0.0072833151953504589029,
      0.0073059393011969823145,   0.0073281138668405108703,
      0.0073498375278625443269,   0.0073711089475890991770,
      0.0073919268171729552524,   0.0074122898556741901242,
      0.0074321968101389963453,   0.0074516464556767766847,
      0.0074706375955355126107,   0.0074891690611754013855,
      0.0075072397123407572396,   0.0075248484371301722018,
      0.0075419941520649322694,   0.0075586758021556847062,
      0.0075748923609673523688,   0.0075906428306822910655,
      0.0076059262421616860613,   0.0076207416550051839535,
      0.0076350881576087562456,   0.0076489648672207910613,
      0.0076623709299964095469,   0.0076753055210500036191,
      0.0076877678445059918262,   0.0076997571335477901998,
      0.0077112726504649950831,   0.0077223136866987750332,
      0.0077328795628854690046,   0.0077429696288983881298,
      0.0077525832638878185270,   0.0077617198763192226723,
      0.0077703789040096369853,   0.0077785598141622633902,
      0.0077862621033992527223,   0.0077934852977926779635,
      0.0078002289528936954015,   0.0078064926537598919168,
      0.0078122760149808167166,   0.0078175786807016959432,
      0.0078224003246453286989,   0.0078267406501321631390,
      0.0078305993900985513985,   0.0078339763071131822285,
      0.0078368711933916903323,   0.0078392838708094415005,
      0.0078412141909124927608,   0.0078426620349267268653,
      0.0078436273137651605562,   0.0078441099680334261574,
      0.0078441099680334261574,   0.0078436273137651605562,
      0.0078426620349267268653,   0.0078412141909124927608,
      0.0078392838708094415005,   0.0078368711933916903323,
      0.0078339763071131822285,   0.0078305993900985513985,
      0.0078267406501321631390,   0.0078224003246453286989,
      0.0078175786807016959432,   0.0078122760149808167166,
      0.0078064926537598919168,   0.0078002289528936954015,
      0.0077934852977926779635,   0.0077862621033992527223,
      0.0077785598141622633902,   0.0077703789040096369853,
      0.0077617198763192226723,   0.0077525832638878185270,
      0.0077429696288983881298,   0.0077328795628854690046,
      0.0077223136866987750332,   0.0077112726504649950831,
      0.0076997571335477901998,   0.0076877678445059918262,
      0.0076753055210500036191,   0.0076623709299964095469,
      0.0076489648672207910613,   0.0076350881576087562456,
      0.0076207416550051839535,   0.0076059262421616860613,
      0.0075906428306822910655,   0.0075748923609673523688,
      0.0075586758021556847062,   0.0075419941520649322694,
      0.0075248484371301722018,   0.0075072397123407572396,
      0.0074891690611754013855,   0.0074706375955355126107,
      0.0074516464556767766847,   0.0074321968101389963453,
      0.0074122898556741901242,   0.0073919268171729552524,
      0.0073711089475890991770,   0.0073498375278625443269,
      0.0073281138668405108703,   0.0073059393011969823145,
      0.0072833151953504589029,   0.0072602429413800038704,
      0.0072367239589395877220,   0.0072127596951707358064,
      0.0071883516246134845581,   0.0071635012491156518878,
      0.0071382100977404273038,   0.0071124797266722874499,
      0.0070863117191212428490,   0.0070597076852254217450,
      0.0070326692619519970358,   0.0070051981129964623945,
      0.0069772959286802637759,   0.0069489644258467926075,
      0.0069202053477557470637,   0.0068910204639758679249,
      0.0068614115702760556195,   0.0068313804885148751508,
      0.0068009290665284557051,   0.0067700591780167918407,
      0.0067387727224284532529,   0.0067070716248437102089,
      0.0066749578358560818440,   0.0066424333314523146081,
      0.0066095001128907982464,   0.0065761602065784267971,
      0.0065424156639459121806,   0.0065082685613215580554,
      0.0064737209998035017044,   0.0064387751051304318146,
      0.0064034330275507901044,   0.0063676969416904648472,
      0.0063315690464189844310,   0.0062950515647142191886,
      0.0062581467435255998229,   0.0062208568536358608432,
      0.0061831841895213175201,   0.0061451310692106849564,
      0.0061066998341424479603,   0.0060678928490207904979,
      0.0060287125016700935893,   0.0059891612028880106009,
      0.0059492413862971289761,   0.0059089555081952275287,
      0.0058683060474041385162,   0.0058272955051172237903,
      0.0057859264047454744108,   0.0057442012917622431919,
      0.0057021227335466197356,   0.0056596933192254575884,
      0.0056169156595140632423,   0.0055737923865555567831,
      0.0055303261537589140694,   0.0054865196356357004084,
      0.0054423755276355057750,   0.0053978965459800916987,
      0.0053530854274962600256,   0.0053079449294474538377,
      0.0052624778293641008920,   0.0052166869248727100194,
      0.0051705750335237309985,   0.0051241449926181884968,
      0.0050773996590331007480,   0.0050303419090456937061,
      0.0049829746381564214944,   0.0049353007609108040389,
      0.0048873232107200928500,   0.0048390449396807759855,
      0.0047904689183929333047,   0.0047415981357774531879,
      0.0046924355988921219716,   0.0046429843327465974146,
      0.0045932473801162775820,   0.0045432278013550766005,
      0.0044929286742071188065,   0.0044423530936173628756,
      0.0043915041715411675870,   0.0043403850367528109430,
      0.0042889988346529744267,   0.0042373487270752042475,
      0.0041854378920913614850,   0.0041332695238160731058,
      0.0040808468322101958885,   0.0040281730428833053557,
      0.0039752513968952218695,   0.0039220851505565861096,
      0.0038686775752284962112,   0.0038150319571212188978,
      0.0037611515970919870054,   0.0037070398104418958479,
      0.0036526999267119109345,   0.0035981352894779996042,
      0.0035433492561453991997,   0.0034883451977420344589,
      0.0034331264987110968586,   0.0033776965567027986980,
      0.0033220587823653147700,   0.0032662165991349245187,
      0.0032101734430253676425,   0.0031539327624164261559,
      0.0030974980178417459830,   0.0030408726817759112151,
      0.0029840602384207842253,   0.0029270641834911248991,
      0.0028698880239995023069,   0.0028125352780405122177,
      0.0027550094745743139337,   0.0026973141532095000116,
      0.0026394528639853125366,   0.0025814291671532197290,
      0.0025232466329578667922,   0.0024649088414174150723,
      0.0024064193821032837844,   0.0023477818539193087974,
      0.0022889998648803332550,   0.0022300770318902451835,
      0.0021710169805194777031,   0.0021118233447819880762,
      0.0020524997669117326296,   0.0019930498971386556619,
      0.0019334773934642118870,   0.0018737859214364439296,
      0.0018139791539246390831,   0.0017540607708935932919,
      0.0016940344591775155933,   0.0016339039122536137612,
      0.0015736728300154127016,   0.0015133449185458729415,
      0.0014529238898903999089,   0.0013924134618298698081,
      0.0013318173576538514742,   0.0012711393059342868032,
      0.0012103830403000240186,   0.0011495522992128106212,
      0.0010886508257457038101,   0.0010276823673654497631,
      0.00096665067572141452408,  0.00090555950644549534547,
      0.00084441261897085745246,  0.00078321377638390310245,
      0.00072196674533702894531,  0.00066067529607738161576,
      0.00059934320270831884264,  0.00053797424394626279850,
      0.00047657220501003854013,  0.00041514088233419025172,
      0.00035368409613102448238,  0.00029220572803523217847,
      0.00023070985544248655270,  0.00016920137336541413266,
      0.00010769038102183646233,  0.000046263724177190118140};
  IntegratorXX::GaussLegendre<double, double> quad(400);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 400; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("450 point GaussLegendre", "[1d-quad]") {
  std::array<double, 450> ref_pts = {
      -0.99998575224752027037,   -0.99992493020189973158,
      -0.99981550977802272396,   -0.99965747199244137310,
      -0.99945082155349778112,   -0.99919556779971815774,
      -0.99889172290731115149,   -0.99853930155560416180,
      -0.99813832083757641636,   -0.99768880022951273058,
      -0.99719076157857750925,   -0.99664422909673753676,
      -0.99604922935718719496,   -0.99540579129182454593,
      -0.99471394618917315054,   -0.99397372769247624640,
      -0.99318517179783131491,   -0.99234831685229768493,
      -0.99146320355194113690,   -0.99052987493979543296,
      -0.98954837640372919807,   -0.98851875567421128054,
      -0.98744106282197041337,   -0.98631535025554658728,
      -0.98514167271873251179,   -0.98392008728790414110,
      -0.98265065336923962509,   -0.98133343269582629526,
      -0.97996848932465546249,   -0.97855588963350491647,
      -0.97709570231770909624,   -0.97558799838681695696,
      -0.97403285116113759959,   -0.97243033626817376034,
      -0.97078053163894328070,   -0.96908351750418869708,
      -0.96733937639047510428,   -0.96554819311617645939,
      -0.96371005478735050375,   -0.96182505079350248942,
      -0.95989327280323790570,   -0.95791481475980440834,
      -0.95588977287652316167,   -0.95381824563210981037,
      -0.95170033376588530409,   -0.94953614027287680448,
      -0.94732577039880890994,   -0.94506933163498543940,
      -0.94276693371306202228,   -0.94041868859970974712,
      -0.93802471049117012730,   -0.93558511580770164749,
      -0.93310002318791816004,   -0.93056955348301940598,
      -0.92799382975091394049,   -0.92537297725023474824,
      -0.92270712343424783906,   -0.91999639794465411998,
      -0.91724093260528484460,   -0.91444086141569094614,
      -0.91159632054462656581,   -0.90870744832342709308,
      -0.90577438523928203976,   -0.90279727392840307491,
      -0.89977625916908755270,   -0.89671148787467787040,
      -0.89360310908641699879,   -0.89045127396620053249,
      -0.88725613578922561236,   -0.88401784993653707765,
      -0.88073657388747121018,   -0.87741246721199743798,
      -0.87404569156295837088,   -0.87063641066820854521,
      -0.86718479032265226008,   -0.86369099838018089222,
      -0.86015520474551008160,   -0.85657758136591718469,
      -0.85295830222287939714,   -0.84929754332361295262,
      -0.84559548269251380904,   -0.84185230036250023866,
      -0.83806817836625774285,   -0.83424330072738671737,
      -0.83037785345145329865,   -0.82647202451694382621,
      -0.82252600386612336117,   -0.81853998339579870539,
      -0.81451415694798637027,   -0.81044872030048594938,
      -0.80634387115735935287,   -0.80219980913931636713,
      -0.79801673577400700687,   -0.79379485448622113191,
      -0.78953437058799580520,   -0.78523549126863087324,
      -0.78089842558461325427,   -0.77652338444945042438,
      -0.77211058062341359587,   -0.76766022870319108668,
      -0.76317254511145238398,   -0.75864774808632340952,
      -0.75408605767077349850,   -0.74948769570191460806,
      -0.74485288580021327584,   -0.74018185335861585320,
      -0.73547482553158754191,   -0.73073203122406576740,
      -0.72595370108032842571,   -0.72114006747277754563,
      -0.71629136449063891121,   -0.71140782792857819449,
      -0.70648969527523415186,   -0.70153720570166944168,
      -0.69655060004973962497,   -0.69153012082038091455,
      -0.68647601216181724245,   -0.68138851985768721885,
      -0.67626789131509156015,   -0.67111437555256156728,
      -0.66592822318794923939,   -0.66070968642623961191,
      -0.65545901904728591151,   -0.65017647639346812457,
      -0.64486231535727557921,   -0.63951679436881414484,
      -0.63414017338323865662,   -0.62873271386811117623,
      -0.62329467879068570341,   -0.61782633260511995693,
      -0.61232794123961484671,   -0.60679977208348226246,
      -0.60124209397414180798,   -0.59565517718404711313,
      -0.59003929340754235961,   -0.58439471574764965940,
      -0.57872171870278792866,   -0.57302057815342390275,
      -0.56729157134865594168,   -0.56153497689273127839,
      -0.55575107473149736544,   -0.54994014613878797913,
      -0.54410247370274474302,   -0.53823834131207473603,
      -0.53234803414224485348,   -0.52643183864161359236,
      -0.52049004251750093533,   -0.51452293472219701085,
      -0.50853080543891020977,   -0.50251394606765544192,
      -0.49647264921108321868,   -0.49040720866025025098,
      -0.48431791938033225447,   -0.47820507749627965672,
      -0.47206898027841690414,   -0.46590992612798606874,
      -0.45972821456263545788,   -0.45352414620185393267,
      -0.44729802275235164335,   -0.44105014699338789262,
      -0.43478082276204684036,   -0.42849035493846176588,
      -0.42217904943098860620,   -0.41584721316132949140,
      -0.40949515404960700044,   -0.40312318099938986336,
      -0.39673160388267083805,   -0.39032073352479749209,
      -0.38389088168935662249,   -0.37744236106301304850,
      -0.37097548524030351462,   -0.36449056870838644340,
      -0.35798792683174827970,   -0.35146787583686717000,
      -0.34493073279683472268,   -0.33837681561593659717,
      -0.33180644301419267158,   -0.32521993451185754103,
      -0.31861761041388209997,   -0.31199979179433696450,
      -0.30536680048079849201,   -0.29871895903869815745,
      -0.29205659075563604743,   -0.28538001962565923485,
      -0.27868957033350579876,   -0.27198556823881525553,
      -0.26526833936030616935,   -0.25853821035992171126,
      -0.25179550852694393803,   -0.24504056176207756317,
      -0.23827369856150399417,   -0.23149524800090641148,
      -0.22470553971946666602,   -0.21790490390383477348,
      -0.21109367127207178506,   -0.20427217305756681532,
      -0.19744074099292900951,   -0.19059970729385523355,
      -0.18374940464297427121,   -0.17689016617366831420,
      -0.17002232545387253194,   -0.16314621646985350873,
      -0.15626217360996733741,   -0.14937053164839815907,
      -0.14247162572887793986,   -0.13556579134838827650,
      -0.12865336434084502309,   -0.12173468086076653262,
      -0.11481007736692630751,   -0.10787989060599085401,
      -0.10094445759614353626,   -0.094004115610695226354,
      -0.087059202161682547446,  -0.080110054983454507490,
      -0.073157012016248321850,  -0.066200411389755223457,
      -0.059240591406677059736,  -0.052277890526274475943,
      -0.045312647347907484979,  -0.038345200594569224103,
      -0.031375889096413699313,  -0.024405051774278318441,
      -0.017433027623202014274,  -0.010460155695939759226,
      -0.0034867750864742732360, 0.0034867750864742732360,
      0.010460155695939759226,   0.017433027623202014274,
      0.024405051774278318441,   0.031375889096413699313,
      0.038345200594569224103,   0.045312647347907484979,
      0.052277890526274475943,   0.059240591406677059736,
      0.066200411389755223457,   0.073157012016248321850,
      0.080110054983454507490,   0.087059202161682547446,
      0.094004115610695226354,   0.10094445759614353626,
      0.10787989060599085401,    0.11481007736692630751,
      0.12173468086076653262,    0.12865336434084502309,
      0.13556579134838827650,    0.14247162572887793986,
      0.14937053164839815907,    0.15626217360996733741,
      0.16314621646985350873,    0.17002232545387253194,
      0.17689016617366831420,    0.18374940464297427121,
      0.19059970729385523355,    0.19744074099292900951,
      0.20427217305756681532,    0.21109367127207178506,
      0.21790490390383477348,    0.22470553971946666602,
      0.23149524800090641148,    0.23827369856150399417,
      0.24504056176207756317,    0.25179550852694393803,
      0.25853821035992171126,    0.26526833936030616935,
      0.27198556823881525553,    0.27868957033350579876,
      0.28538001962565923485,    0.29205659075563604743,
      0.29871895903869815745,    0.30536680048079849201,
      0.31199979179433696450,    0.31861761041388209997,
      0.32521993451185754103,    0.33180644301419267158,
      0.33837681561593659717,    0.34493073279683472268,
      0.35146787583686717000,    0.35798792683174827970,
      0.36449056870838644340,    0.37097548524030351462,
      0.37744236106301304850,    0.38389088168935662249,
      0.39032073352479749209,    0.39673160388267083805,
      0.40312318099938986336,    0.40949515404960700044,
      0.41584721316132949140,    0.42217904943098860620,
      0.42849035493846176588,    0.43478082276204684036,
      0.44105014699338789262,    0.44729802275235164335,
      0.45352414620185393267,    0.45972821456263545788,
      0.46590992612798606874,    0.47206898027841690414,
      0.47820507749627965672,    0.48431791938033225447,
      0.49040720866025025098,    0.49647264921108321868,
      0.50251394606765544192,    0.50853080543891020977,
      0.51452293472219701085,    0.52049004251750093533,
      0.52643183864161359236,    0.53234803414224485348,
      0.53823834131207473603,    0.54410247370274474302,
      0.54994014613878797913,    0.55575107473149736544,
      0.56153497689273127839,    0.56729157134865594168,
      0.57302057815342390275,    0.57872171870278792866,
      0.58439471574764965940,    0.59003929340754235961,
      0.59565517718404711313,    0.60124209397414180798,
      0.60679977208348226246,    0.61232794123961484671,
      0.61782633260511995693,    0.62329467879068570341,
      0.62873271386811117623,    0.63414017338323865662,
      0.63951679436881414484,    0.64486231535727557921,
      0.65017647639346812457,    0.65545901904728591151,
      0.66070968642623961191,    0.66592822318794923939,
      0.67111437555256156728,    0.67626789131509156015,
      0.68138851985768721885,    0.68647601216181724245,
      0.69153012082038091455,    0.69655060004973962497,
      0.70153720570166944168,    0.70648969527523415186,
      0.71140782792857819449,    0.71629136449063891121,
      0.72114006747277754563,    0.72595370108032842571,
      0.73073203122406576740,    0.73547482553158754191,
      0.74018185335861585320,    0.74485288580021327584,
      0.74948769570191460806,    0.75408605767077349850,
      0.75864774808632340952,    0.76317254511145238398,
      0.76766022870319108668,    0.77211058062341359587,
      0.77652338444945042438,    0.78089842558461325427,
      0.78523549126863087324,    0.78953437058799580520,
      0.79379485448622113191,    0.79801673577400700687,
      0.80219980913931636713,    0.80634387115735935287,
      0.81044872030048594938,    0.81451415694798637027,
      0.81853998339579870539,    0.82252600386612336117,
      0.82647202451694382621,    0.83037785345145329865,
      0.83424330072738671737,    0.83806817836625774285,
      0.84185230036250023866,    0.84559548269251380904,
      0.84929754332361295262,    0.85295830222287939714,
      0.85657758136591718469,    0.86015520474551008160,
      0.86369099838018089222,    0.86718479032265226008,
      0.87063641066820854521,    0.87404569156295837088,
      0.87741246721199743798,    0.88073657388747121018,
      0.88401784993653707765,    0.88725613578922561236,
      0.89045127396620053249,    0.89360310908641699879,
      0.89671148787467787040,    0.89977625916908755270,
      0.90279727392840307491,    0.90577438523928203976,
      0.90870744832342709308,    0.91159632054462656581,
      0.91444086141569094614,    0.91724093260528484460,
      0.91999639794465411998,    0.92270712343424783906,
      0.92537297725023474824,    0.92799382975091394049,
      0.93056955348301940598,    0.93310002318791816004,
      0.93558511580770164749,    0.93802471049117012730,
      0.94041868859970974712,    0.94276693371306202228,
      0.94506933163498543940,    0.94732577039880890994,
      0.94953614027287680448,    0.95170033376588530409,
      0.95381824563210981037,    0.95588977287652316167,
      0.95791481475980440834,    0.95989327280323790570,
      0.96182505079350248942,    0.96371005478735050375,
      0.96554819311617645939,    0.96733937639047510428,
      0.96908351750418869708,    0.97078053163894328070,
      0.97243033626817376034,    0.97403285116113759959,
      0.97558799838681695696,    0.97709570231770909624,
      0.97855588963350491647,    0.97996848932465546249,
      0.98133343269582629526,    0.98265065336923962509,
      0.98392008728790414110,    0.98514167271873251179,
      0.98631535025554658728,    0.98744106282197041337,
      0.98851875567421128054,    0.98954837640372919807,
      0.99052987493979543296,    0.99146320355194113690,
      0.99234831685229768493,    0.99318517179783131491,
      0.99397372769247624640,    0.99471394618917315054,
      0.99540579129182454593,    0.99604922935718719496,
      0.99664422909673753676,    0.99719076157857750925,
      0.99768880022951273058,    0.99813832083757641636,
      0.99853930155560416180,    0.99889172290731115149,
      0.99919556779971815774,    0.99945082155349778112,
      0.99965747199244137310,    0.99981550977802272396,
      0.99992493020189973158,    0.99998575224752027037};
  std::array<double, 450> ref_wgt = {
      0.000036564247057090334837, 0.000085112881533315982970,
      0.00013372926774404492486,  0.00018234539495594602070,
      0.00023095390831026666134,  0.00027955156579338797778,
      0.00032813577126085208304,  0.00037670408288919675275,
      0.00042525410693347395384,  0.00047378346790615260289,
      0.00052228979857988984337,  0.00057077073619353363711,
      0.00061922392089009038097,  0.00066764699504980498259,
      0.00071603760301483766482,  0.00076439339099793077169,
      0.00081271200708283256954,  0.00086099110127284899262,
      0.00090922832556575034241,  0.00095742133404365225958,
      0.0010055677829716764323,   0.0010536653309018964000,
      0.0011017116387805328565,   0.0011497043700571779718,
      0.0011976411907952973941,   0.0012455197697835359466,
      0.0012933377786475210376,   0.0013410928919619618574,
      0.0013887827873629081841,   0.0014364051456600749649,
      0.0014839576509491665648,   0.0015314379907241530308,
      0.0015788438559894631822,   0.0016261729413720678697,
      0.0016734229452334326661,   0.0017205915697813234057,
      0.0017676765211814509386,   0.0018146755096689435859,
      0.0018615862496596373152,   0.0019084064598611747835,
      0.0019551338633839052230,   0.0020017661878515777713,
      0.0020483011655118213107,   0.0020947365333464042409,
      0.0021410700331812678809,   0.0021872994117963274095,
      0.0022334224210350344183,   0.0022794368179136952835,
      0.0023253403647305396683,   0.0023711308291745335529,
      0.0024168059844339312586,   0.0024623636093045609920,
      0.0025078014882978384834,   0.0025531174117485033377,
      0.0025983091759220727493,   0.0026433745831220072700,
      0.0026883114417965833437,   0.0027331175666454673508,
      0.0027777907787259859290,   0.0028223289055590873610,
      0.0028667297812349888397,   0.0029109912465185044452,
      0.0029551111489540486846,   0.0029990873429703104687,
      0.0030429176899845924159,   0.0030866000585068103953,
      0.0031301323242431482376,   0.0031735123701993625619,
      0.0032167380867837326855,   0.0032598073719096506018,
      0.0033027181310978460302,   0.0033454682775782415612,
      0.0033880557323914329370,   0.0034304784244897895294,
      0.0034727342908381700937,   0.0035148212765142488969,
      0.0035567373348084473400,   0.0035984804273234662097,
      0.0036400485240734137191,   0.0036814396035825245131,
      0.0037226516529834648370,   0.0037636826681152190857,
      0.0038045306536205529721,   0.0038451936230430485737,
      0.0038856695989237065370,   0.0039259566128971107421,
      0.0039660527057871507490,   0.0040059559277022973705,
      0.0040456643381304267373,   0.0040851760060331882438,
      0.0041244890099399117848,   0.0041636014380410497156,
      0.0042025113882811489910,   0.0042412169684513489627,
      0.0042797162962814003342,   0.0043180074995312008000,
      0.0043560887160818429176,   0.0043939580940261697816,
      0.0044316137917588341000,   0.0044690539780658562889,
      0.0045062768322136772334,   0.0045432805440377013813,
      0.0045800633140303258659,   0.0046166233534284513749,
      0.0046529588843004705104,   0.0046890681396327294101,
      0.0047249493634154584242,   0.0047606008107281676691,
      0.0047960207478245033055,   0.0048312074522165604136,
      0.0048661592127586483663,   0.0049008743297305046244,
      0.0049353511149199529105,   0.0049695878917050017385,
      0.0050035829951353793082,   0.0050373347720135007993,
      0.0050708415809748641271,   0.0051041017925678702505,
      0.0051371137893330641501,   0.0051698759658817926239,
      0.0052023867289742750737,   0.0052346444975970834872,
      0.0052666477030400278470,   0.0052983947889724432280,
      0.0053298842115188748723,   0.0053611144393341575628,
      0.0053920839536778856422,   0.0054227912484882700574,
      0.0054532348304553788373,   0.0054834132190937574420,
      0.0055133249468144254512,   0.0055429685589962460923,
      0.0055723426140566651358,   0.0056014456835218157186,
      0.0056302763520959856863,   0.0056588332177304440749,
      0.0056871148916916233873,   0.0057151199986286543457,
      0.0057428471766402498388,   0.0057702950773409348083,
      0.0057974623659266188566,   0.0058243477212395083845,
      0.0058509498358323551041,   0.0058772674160320378010,
      0.0059032991820024742546,   0.0059290438678068602571,
      0.0059545002214692327038,   0.0059796670050353537620,
      0.0060045429946329131559,   0.0060291269805310456420,
      0.0060534177671991607789,   0.0060774141733650821314,
      0.0061011150320724930813,   0.0061245191907376864517,
      0.0061476255112056151841,   0.0061704328698052413436,
      0.0061929401574041807599,   0.0062151462794626406472,
      0.0062370501560866475788,   0.0062586507220805632298,
      0.0062799469269988853325,   0.0063009377351973313258,
      0.0063216221258832022148,   0.0063419990931650241905,
      0.0063620676461014655970,   0.0063818268087495268653,
      0.0064012756202120010720,   0.0064204131346842028142,
      0.0064392384214999631275,   0.0064577505651768882118,
      0.0064759486654608797623,   0.0064938318373699147424,
      0.0065113992112370824673,   0.0065286499327528769081,
      0.0065455831630067421569,   0.0065621980785278690344,
      0.0065784938713252408562,   0.0065944697489269264079,
      0.0066101249344186182219,   0.0066254586664814142784,
      0.0066404701994288412952,   0.0066551588032431178051,
      0.0066695237636106552577,   0.0066835643819567954193,
      0.0066972799754797823803,   0.0067106698771839675207,
      0.0067237334359122458160,   0.0067364700163777219079,
      0.0067488789991946043995,   0.0067609597809083268722,
      0.0067727117740248941599,   0.0067841344070394524533,
      0.0067952271244640818448,   0.0068059893868548099626,
      0.0068164206708378453800,   0.0068265204691350295249,
      0.0068362882905885058503,   0.0068457236601846050684,
      0.0068548261190769452838,   0.0068635952246087459060,
      0.0068720305503343542519,   0.0068801316860399837958,
      0.0068878982377636630545,   0.0068953298278143941405,
      0.0069024260947905200491,   0.0069091866935972997884,
      0.0069156112954636904954,   0.0069216995879583357239,
      0.0069274512750047591258,   0.0069328660768957627865,
      0.0069379437303070295152,   0.0069426839883099284284,
      0.0069470866203835232027,   0.0069511514124257824148,
      0.0069548781667639914219,   0.0069582667021643652774,
      0.0069613168538408622130,   0.0069640284734631972608,
      0.0069664014291640556228,   0.0069684356055455054398,
      0.0069701309036846096459,   0.0069714872411382366366,
      0.0069725045519470695165,   0.0069731827866388137313,
      0.0069735219122306029283,   0.0069735219122306029283,
      0.0069731827866388137313,   0.0069725045519470695165,
      0.0069714872411382366366,   0.0069701309036846096459,
      0.0069684356055455054398,   0.0069664014291640556228,
      0.0069640284734631972608,   0.0069613168538408622130,
      0.0069582667021643652774,   0.0069548781667639914219,
      0.0069511514124257824148,   0.0069470866203835232027,
      0.0069426839883099284284,   0.0069379437303070295152,
      0.0069328660768957627865,   0.0069274512750047591258,
      0.0069216995879583357239,   0.0069156112954636904954,
      0.0069091866935972997884,   0.0069024260947905200491,
      0.0068953298278143941405,   0.0068878982377636630545,
      0.0068801316860399837958,   0.0068720305503343542519,
      0.0068635952246087459060,   0.0068548261190769452838,
      0.0068457236601846050684,   0.0068362882905885058503,
      0.0068265204691350295249,   0.0068164206708378453800,
      0.0068059893868548099626,   0.0067952271244640818448,
      0.0067841344070394524533,   0.0067727117740248941599,
      0.0067609597809083268722,   0.0067488789991946043995,
      0.0067364700163777219079,   0.0067237334359122458160,
      0.0067106698771839675207,   0.0066972799754797823803,
      0.0066835643819567954193,   0.0066695237636106552577,
      0.0066551588032431178051,   0.0066404701994288412952,
      0.0066254586664814142784,   0.0066101249344186182219,
      0.0065944697489269264079,   0.0065784938713252408562,
      0.0065621980785278690344,   0.0065455831630067421569,
      0.0065286499327528769081,   0.0065113992112370824673,
      0.0064938318373699147424,   0.0064759486654608797623,
      0.0064577505651768882118,   0.0064392384214999631275,
      0.0064204131346842028142,   0.0064012756202120010720,
      0.0063818268087495268653,   0.0063620676461014655970,
      0.0063419990931650241905,   0.0063216221258832022148,
      0.0063009377351973313258,   0.0062799469269988853325,
      0.0062586507220805632298,   0.0062370501560866475788,
      0.0062151462794626406472,   0.0061929401574041807599,
      0.0061704328698052413436,   0.0061476255112056151841,
      0.0061245191907376864517,   0.0061011150320724930813,
      0.0060774141733650821314,   0.0060534177671991607789,
      0.0060291269805310456420,   0.0060045429946329131559,
      0.0059796670050353537620,   0.0059545002214692327038,
      0.0059290438678068602571,   0.0059032991820024742546,
      0.0058772674160320378010,   0.0058509498358323551041,
      0.0058243477212395083845,   0.0057974623659266188566,
      0.0057702950773409348083,   0.0057428471766402498388,
      0.0057151199986286543457,   0.0056871148916916233873,
      0.0056588332177304440749,   0.0056302763520959856863,
      0.0056014456835218157186,   0.0055723426140566651358,
      0.0055429685589962460923,   0.0055133249468144254512,
      0.0054834132190937574420,   0.0054532348304553788373,
      0.0054227912484882700574,   0.0053920839536778856422,
      0.0053611144393341575628,   0.0053298842115188748723,
      0.0052983947889724432280,   0.0052666477030400278470,
      0.0052346444975970834872,   0.0052023867289742750737,
      0.0051698759658817926239,   0.0051371137893330641501,
      0.0051041017925678702505,   0.0050708415809748641271,
      0.0050373347720135007993,   0.0050035829951353793082,
      0.0049695878917050017385,   0.0049353511149199529105,
      0.0049008743297305046244,   0.0048661592127586483663,
      0.0048312074522165604136,   0.0047960207478245033055,
      0.0047606008107281676691,   0.0047249493634154584242,
      0.0046890681396327294101,   0.0046529588843004705104,
      0.0046166233534284513749,   0.0045800633140303258659,
      0.0045432805440377013813,   0.0045062768322136772334,
      0.0044690539780658562889,   0.0044316137917588341000,
      0.0043939580940261697816,   0.0043560887160818429176,
      0.0043180074995312008000,   0.0042797162962814003342,
      0.0042412169684513489627,   0.0042025113882811489910,
      0.0041636014380410497156,   0.0041244890099399117848,
      0.0040851760060331882438,   0.0040456643381304267373,
      0.0040059559277022973705,   0.0039660527057871507490,
      0.0039259566128971107421,   0.0038856695989237065370,
      0.0038451936230430485737,   0.0038045306536205529721,
      0.0037636826681152190857,   0.0037226516529834648370,
      0.0036814396035825245131,   0.0036400485240734137191,
      0.0035984804273234662097,   0.0035567373348084473400,
      0.0035148212765142488969,   0.0034727342908381700937,
      0.0034304784244897895294,   0.0033880557323914329370,
      0.0033454682775782415612,   0.0033027181310978460302,
      0.0032598073719096506018,   0.0032167380867837326855,
      0.0031735123701993625619,   0.0031301323242431482376,
      0.0030866000585068103953,   0.0030429176899845924159,
      0.0029990873429703104687,   0.0029551111489540486846,
      0.0029109912465185044452,   0.0028667297812349888397,
      0.0028223289055590873610,   0.0027777907787259859290,
      0.0027331175666454673508,   0.0026883114417965833437,
      0.0026433745831220072700,   0.0025983091759220727493,
      0.0025531174117485033377,   0.0025078014882978384834,
      0.0024623636093045609920,   0.0024168059844339312586,
      0.0023711308291745335529,   0.0023253403647305396683,
      0.0022794368179136952835,   0.0022334224210350344183,
      0.0021872994117963274095,   0.0021410700331812678809,
      0.0020947365333464042409,   0.0020483011655118213107,
      0.0020017661878515777713,   0.0019551338633839052230,
      0.0019084064598611747835,   0.0018615862496596373152,
      0.0018146755096689435859,   0.0017676765211814509386,
      0.0017205915697813234057,   0.0016734229452334326661,
      0.0016261729413720678697,   0.0015788438559894631822,
      0.0015314379907241530308,   0.0014839576509491665648,
      0.0014364051456600749649,   0.0013887827873629081841,
      0.0013410928919619618574,   0.0012933377786475210376,
      0.0012455197697835359466,   0.0011976411907952973941,
      0.0011497043700571779718,   0.0011017116387805328565,
      0.0010536653309018964000,   0.0010055677829716764323,
      0.00095742133404365225958,  0.00090922832556575034241,
      0.00086099110127284899262,  0.00081271200708283256954,
      0.00076439339099793077169,  0.00071603760301483766482,
      0.00066764699504980498259,  0.00061922392089009038097,
      0.00057077073619353363711,  0.00052228979857988984337,
      0.00047378346790615260289,  0.00042525410693347395384,
      0.00037670408288919675275,  0.00032813577126085208304,
      0.00027955156579338797778,  0.00023095390831026666134,
      0.00018234539495594602070,  0.00013372926774404492486,
      0.000085112881533315982970, 0.000036564247057090334837};
  IntegratorXX::GaussLegendre<double, double> quad(450);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 450; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("500 point GaussLegendre", "[1d-quad]") {
  std::array<double, 500> ref_pts = {
      -0.99998845675221295665,   -0.99993917981453703559,
      -0.99985052885920058001,   -0.99972248768794486894,
      -0.99955505893354473534,   -0.99934824861658645733,
      -0.99910206469335548341,   -0.99881651678494779779,
      -0.99849161610498566291,   -0.99812737543526369845,
      -0.99772380911594552633,   -0.99728093304093600952,
      -0.99679876465531282144,   -0.99627732295364129849,
      -0.99571662847868228804,   -0.99511670332027148245,
      -0.99447757111426329101,   -0.99379925704148465238,
      -0.99308178782666955928,   -0.99232519173735799714,
      -0.99152949858274988252,   -0.99069473971250839542,
      -0.98982094801550927922,   -0.98890815791853396812,
      -0.98795640538490518150,   -0.98696572791306410936,
      -0.98593616453508862134,   -0.98486775581515213236,
      -0.98376054384792289050,   -0.98261457225690354293,
      -0.98142988619271089745,   -0.98020653233129584073,
      -0.97894455887210340559,   -0.97764401553617300237,
      -0.97630495356417884639,   -0.97492742571441062657,
      -0.97351148626069447037,   -0.97205719099025426818,
      -0.97056459720151342711,   -0.96903376370183712951,
      -0.96746475080521517648,   -0.96585762032988550081,
      -0.96421243559589843737,   -0.96252926142262184275,
      -0.96080816412618715883,   -0.95904921151687651814,
      -0.95725247289645099171,   -0.95541801905542008276,
      -0.95354592227025257236,   -0.95163625630052882567,
      -0.94968909638603466995,   -0.94770451924379695800,
      -0.94568260306506093305,   -0.94362342751220951378,
      -0.94152707371562462010,   -0.93939362427049066315,
      -0.93722316323354032506,   -0.93501577611974275632,
      -0.93277154989893432104,   -0.93049057299239202266,
      -0.92817293526934974492,   -0.92581872804345744512,
      -0.92342804406918343916,   -0.92100097753815991993,
      -0.91853762407547185292,   -0.91603808073588939521,
      -0.91350244600004398621,   -0.91093081977054826073,
      -0.90832330336805993718,   -0.90567999952728983601,
      -0.90300101239295418549,   -0.90028644751567137446,
      -0.89753641184780331344,   -0.89475101373924156820,
      -0.89193036293313843154,   -0.88907457056158310161,
      -0.88618374914122313698,   -0.88325801256883136116,
      -0.88029747611681839093,   -0.87730225642869096553,
      -0.87427247151445625546,   -0.87120824074597233209,
      -0.86810968485224498112,   -0.86497692591467104525,
      -0.86181008736222848353,   -0.85860929396661333677,
      -0.85537467183732379061,   -0.85210634841669153014,
      -0.84880445247486058145,   -0.84546911410471383835,
      -0.84210046471674747380,   -0.83869863703389343824,
      -0.83526376508629024864,   -0.83179598420600227442,
      -0.82829543102168772819,   -0.82476224345321557148,
      -0.82119656070623154745,   -0.81759852326667355474,
      -0.81396827289523657861,   -0.81030595262178739724,
      -0.80661170673972928348,   -0.80288568080031692394,
      -0.79912802160692177944,   -0.79533887720924811275,
      -0.79151839689749991156,   -0.78766673119649893639,
      -0.78378403185975412534,   -0.77987045186348258913,
      -0.77592614540058243226,   -0.77195126787455763751,
      -0.76794597589339525326,   -0.76391042726339512491,
      -0.75984478098295241339,   -0.75574919723629314577,
      -0.75162383738716304481,   -0.74746886397246988610,
      -0.74328444069587963328,   -0.73907073242136660354,
      -0.73482790516671791776,   -0.73055612609699249093,
      -0.72625556351793482080,   -0.72192638686934383407,
      -0.71756876671839705151,   -0.71318287475293033497,
      -0.70876888377467348111,   -0.70432696769244192824,
      -0.69985730151528484466,   -0.69536006134558986844,
      -0.69083542437214477014,   -0.68628356886315631208,
      -0.68170467415922657908,   -0.67709892066628705736,
      -0.67246648984849074007,   -0.66780756422106253955,
      -0.66312232734310828785,   -0.65841096381038260891,
      -0.65367365924801594745,   -0.64891060030320104090,
      -0.64412197463783912275,   -0.63930797092114614683,
      -0.63446877882221932406,   -0.62960458900256426433,
      -0.62471559310858301813,   -0.61980198376402331371,
      -0.61486395456238928745,   -0.60990170005931400625,
      -0.60491541576489408272,   -0.59990529813598668488,
      -0.59487154456846924413,   -0.58981435338946216627,
      -0.58473392384951485210,   -0.57963045611475533537,
      -0.57450415125900384756,   -0.56935521125585061990,
      -0.56418383897069823515,   -0.55899023815276884230,
      -0.55377461342707654935,   -0.54853717028636531038,
      -0.54327811508301262446,   -0.53799765502089936559,
      -0.53269599814724606374,   -0.52737335334441595892,
      -0.52202993032168515096,   -0.51666593960698016944,
      -0.51128159253858328923,   -0.50587710125680591847,
      -0.50045267869563038707,   -0.49500853857432046491,
      -0.48954489538900094051,   -0.48406196440420659172,
      -0.47855996164440088153,   -0.47303910388546471305,
      -0.46749960864615557914,   -0.46194169417953744301,
      -0.45636557946438168765,   -0.45077148419653947270,
      -0.44515962878028583885,   -0.43953023431963590065,
      -0.43388352260963347002,   -0.42821971612761245356,
      -0.42253903802443136803,   -0.41684171211568131932,
      -0.41112796287286779131,   -0.40539801541456659211,
      -0.39965209549755430605,   -0.39389042950791360089,
      -0.38811324445211374077,   -0.38232076794806665623,
      -0.37651322821615892374,   -0.37069085407026000806,
      -0.36485387490870712171,   -0.35900252070526705671,
      -0.35313702200007534471,   -0.34725760989055310255,
      -0.34136451602230192101,   -0.33545797257997715563,
      -0.32953821227813997899,   -0.32360546835208855512,
      -0.31765997454866869709,   -0.31170196511706436989,
      -0.30573167479956840155,   -0.29974933882233376591,
      -0.29375519288610580168,   -0.28774947315693573281,
      -0.28173241625687585595,   -0.27570425925465676189,
      -0.26966523965634695799,   -0.26361559539599525979,
      -0.25755556482625632043,   -0.25148538670899966722,
      -0.24540530020590261536,   -0.23931554486902742952,
      -0.23321636063138310432,   -0.22710798779747213589,
      -0.22099066703382265671,   -0.21486463935950630679,
      -0.20873014613664221492,   -0.20258742906088746402,
      -0.19643673015191441519,   -0.19027829174387526589,
      -0.18411235647585421764,   -0.17793916728230762963,
      -0.17175896738349253487,   -0.16557200027588389589,
      -0.15937850972258097760,   -0.15317873974370321536,
      -0.14697293460677595654,   -0.14076133881710645445,
      -0.13454419710815049378,   -0.12832175443187002716,
      -0.12209425594908220258,   -0.11586194701980016220,
      -0.10962507319356599280,   -0.10338388019977620893,
      -0.097138613938000150004,  -0.090889520468291672489,
      -0.084636846001494519257,  -0.078380836889541747806,
      -0.072121739615749599679,  -0.065859800785106193437,
      -0.059595267114555423846,  -0.053328385423276450052,
      -0.047059402622959155752,  -0.040788565708075964491,
      -0.034516121746150393370,  -0.028242317868022728585,
      -0.021967401258113206317,  -0.015691619144683082607,
      -0.0094152187900939759091, -0.0031384474810658661173,
      0.0031384474810658661173,  0.0094152187900939759091,
      0.015691619144683082607,   0.021967401258113206317,
      0.028242317868022728585,   0.034516121746150393370,
      0.040788565708075964491,   0.047059402622959155752,
      0.053328385423276450052,   0.059595267114555423846,
      0.065859800785106193437,   0.072121739615749599679,
      0.078380836889541747806,   0.084636846001494519257,
      0.090889520468291672489,   0.097138613938000150004,
      0.10338388019977620893,    0.10962507319356599280,
      0.11586194701980016220,    0.12209425594908220258,
      0.12832175443187002716,    0.13454419710815049378,
      0.14076133881710645445,    0.14697293460677595654,
      0.15317873974370321536,    0.15937850972258097760,
      0.16557200027588389589,    0.17175896738349253487,
      0.17793916728230762963,    0.18411235647585421764,
      0.19027829174387526589,    0.19643673015191441519,
      0.20258742906088746402,    0.20873014613664221492,
      0.21486463935950630679,    0.22099066703382265671,
      0.22710798779747213589,    0.23321636063138310432,
      0.23931554486902742952,    0.24540530020590261536,
      0.25148538670899966722,    0.25755556482625632043,
      0.26361559539599525979,    0.26966523965634695799,
      0.27570425925465676189,    0.28173241625687585595,
      0.28774947315693573281,    0.29375519288610580168,
      0.29974933882233376591,    0.30573167479956840155,
      0.31170196511706436989,    0.31765997454866869709,
      0.32360546835208855512,    0.32953821227813997899,
      0.33545797257997715563,    0.34136451602230192101,
      0.34725760989055310255,    0.35313702200007534471,
      0.35900252070526705671,    0.36485387490870712171,
      0.37069085407026000806,    0.37651322821615892374,
      0.38232076794806665623,    0.38811324445211374077,
      0.39389042950791360089,    0.39965209549755430605,
      0.40539801541456659211,    0.41112796287286779131,
      0.41684171211568131932,    0.42253903802443136803,
      0.42821971612761245356,    0.43388352260963347002,
      0.43953023431963590065,    0.44515962878028583885,
      0.45077148419653947270,    0.45636557946438168765,
      0.46194169417953744301,    0.46749960864615557914,
      0.47303910388546471305,    0.47855996164440088153,
      0.48406196440420659172,    0.48954489538900094051,
      0.49500853857432046491,    0.50045267869563038707,
      0.50587710125680591847,    0.51128159253858328923,
      0.51666593960698016944,    0.52202993032168515096,
      0.52737335334441595892,    0.53269599814724606374,
      0.53799765502089936559,    0.54327811508301262446,
      0.54853717028636531038,    0.55377461342707654935,
      0.55899023815276884230,    0.56418383897069823515,
      0.56935521125585061990,    0.57450415125900384756,
      0.57963045611475533537,    0.58473392384951485210,
      0.58981435338946216627,    0.59487154456846924413,
      0.59990529813598668488,    0.60491541576489408272,
      0.60990170005931400625,    0.61486395456238928745,
      0.61980198376402331371,    0.62471559310858301813,
      0.62960458900256426433,    0.63446877882221932406,
      0.63930797092114614683,    0.64412197463783912275,
      0.64891060030320104090,    0.65367365924801594745,
      0.65841096381038260891,    0.66312232734310828785,
      0.66780756422106253955,    0.67246648984849074007,
      0.67709892066628705736,    0.68170467415922657908,
      0.68628356886315631208,    0.69083542437214477014,
      0.69536006134558986844,    0.69985730151528484466,
      0.70432696769244192824,    0.70876888377467348111,
      0.71318287475293033497,    0.71756876671839705151,
      0.72192638686934383407,    0.72625556351793482080,
      0.73055612609699249093,    0.73482790516671791776,
      0.73907073242136660354,    0.74328444069587963328,
      0.74746886397246988610,    0.75162383738716304481,
      0.75574919723629314577,    0.75984478098295241339,
      0.76391042726339512491,    0.76794597589339525326,
      0.77195126787455763751,    0.77592614540058243226,
      0.77987045186348258913,    0.78378403185975412534,
      0.78766673119649893639,    0.79151839689749991156,
      0.79533887720924811275,    0.79912802160692177944,
      0.80288568080031692394,    0.80661170673972928348,
      0.81030595262178739724,    0.81396827289523657861,
      0.81759852326667355474,    0.82119656070623154745,
      0.82476224345321557148,    0.82829543102168772819,
      0.83179598420600227442,    0.83526376508629024864,
      0.83869863703389343824,    0.84210046471674747380,
      0.84546911410471383835,    0.84880445247486058145,
      0.85210634841669153014,    0.85537467183732379061,
      0.85860929396661333677,    0.86181008736222848353,
      0.86497692591467104525,    0.86810968485224498112,
      0.87120824074597233209,    0.87427247151445625546,
      0.87730225642869096553,    0.88029747611681839093,
      0.88325801256883136116,    0.88618374914122313698,
      0.88907457056158310161,    0.89193036293313843154,
      0.89475101373924156820,    0.89753641184780331344,
      0.90028644751567137446,    0.90300101239295418549,
      0.90567999952728983601,    0.90832330336805993718,
      0.91093081977054826073,    0.91350244600004398621,
      0.91603808073588939521,    0.91853762407547185292,
      0.92100097753815991993,    0.92342804406918343916,
      0.92581872804345744512,    0.92817293526934974492,
      0.93049057299239202266,    0.93277154989893432104,
      0.93501577611974275632,    0.93722316323354032506,
      0.93939362427049066315,    0.94152707371562462010,
      0.94362342751220951378,    0.94568260306506093305,
      0.94770451924379695800,    0.94968909638603466995,
      0.95163625630052882567,    0.95354592227025257236,
      0.95541801905542008276,    0.95725247289645099171,
      0.95904921151687651814,    0.96080816412618715883,
      0.96252926142262184275,    0.96421243559589843737,
      0.96585762032988550081,    0.96746475080521517648,
      0.96903376370183712951,    0.97056459720151342711,
      0.97205719099025426818,    0.97351148626069447037,
      0.97492742571441062657,    0.97630495356417884639,
      0.97764401553617300237,    0.97894455887210340559,
      0.98020653233129584073,    0.98142988619271089745,
      0.98261457225690354293,    0.98376054384792289050,
      0.98486775581515213236,    0.98593616453508862134,
      0.98696572791306410936,    0.98795640538490518150,
      0.98890815791853396812,    0.98982094801550927922,
      0.99069473971250839542,    0.99152949858274988252,
      0.99232519173735799714,    0.99308178782666955928,
      0.99379925704148465238,    0.99447757111426329101,
      0.99511670332027148245,    0.99571662847868228804,
      0.99627732295364129849,    0.99679876465531282144,
      0.99728093304093600952,    0.99772380911594552633,
      0.99812737543526369845,    0.99849161610498566291,
      0.99881651678494779779,    0.99910206469335548341,
      0.99934824861658645733,    0.99955505893354473534,
      0.99972248768794486894,    0.99985052885920058001,
      0.99993917981453703559,    0.99998845675221295665};
  std::array<double, 500> ref_wgt = {
      0.000029623644485482837135, 0.000068957072826689874964,
      0.00010834602869092001789,  0.00014773577477559011465,
      0.00018712071585068106639,  0.00022649858870950472808,
      0.00026586765326334618906,  0.00030522629426718179039,
      0.00034457293521221609836,  0.00038390601413347810218,
      0.00042322397547832698113,  0.00046252526700070759270,
      0.00050180833846371903583,  0.00054107164106740779493,
      0.00058031362719384943438,  0.00061953275030132223254,
      0.00065872746489284957225,  0.00069789622652376583201,
      0.00073703749183066785394,  0.00077614971857253369847,
      0.00081523136567899210200,  0.00085428089330291345225,
      0.00089329676287567518027,  0.00093227743716411485814,
      0.00097122138032856437528,  0.0010101270579815832705,
      0.0010489929372471454093,   0.0010878174868201174924,
      0.0011265991770259211495,   0.0011653364798803046758,
      0.0012040278691491729248,   0.0012426718204084388245,
      0.0012812668111038700744,   0.0013198113206109114904,
      0.0013583038302944682580,   0.0013967428235686387144,
      0.0014351267859563876670,   0.0014734542051491529682,
      0.0015117235710663793036,   0.0015499333759149740618,
      0.0015880821142486808200,   0.0016261682830273664794,
      0.0016641903816762184598,   0.0017021469121448486454,
      0.0017400363789663009900,   0.0017778572893159598576,
      0.0018156081530703563024,   0.0018532874828658695948,
      0.0018908937941573213780,   0.0019284256052764599062,
      0.0019658814374903318626,   0.0020032598150595392997,
      0.0020405592652963792792,   0.0020777783186228638119,
      0.0021149155086286177292,   0.0021519693721286521296,
      0.0021889384492210110683,   0.0022258212833442891674,
      0.0022626164213350178416,   0.0022993224134849178420,
      0.0023359378135980158365,   0.0023724611790476227498,
      0.0024088910708331715997,   0.0024452260536369125722,
      0.0024814646958804630877,   0.0025176055697812106167,
      0.0025536472514085660147,   0.0025895883207400651474,
      0.0026254273617173165921,   0.0026611629623017932006,
      0.0026967937145304653228,   0.0027323182145712734917,
      0.0027677350627784383823,   0.0028030428637476058592,
      0.0028382402263708249388,   0.0028733257638913564964,
      0.0029082980939583105568,   0.0029431558386811100126,
      0.0029778976246837786236,   0.0030125220831590511567,
      0.0030470278499223035324,   0.0030814135654653008514,
      0.0031156778750097611845,   0.0031498194285607330120,
      0.0031838368809597842107,   0.0032177288919380004905,
      0.0032514941261687911933,   0.0032851312533205003722,
      0.0033186389481088210774,   0.0033520158903490107841,
      0.0033852607650079059039,   0.0034183722622557333308,
      0.0034513490775177169794,   0.0034841899115254772814,
      0.0035168934703682216167,   0.0035494584655437236602,
      0.0035818836140090896363,   0.0036141676382313094805,
      0.0036463092662375909168,   0.0036783072316654744670,
      0.0037101602738127274173,   0.0037418671376870147765,
      0.0037734265740553452686,   0.0038048373394932904119,
      0.0038360981964339747442,   0.0038672079132168352654,
      0.0038981652641361481748,   0.0039289690294893209922,
      0.0039596179956249481597,   0.0039901109549906282305,
      0.0040204467061805407609,   0.0040506240539827810314,
      0.0040806418094264507305,   0.0041104987898285027482,
      0.0041401938188403382305,   0.0041697257264941540616,
      0.0041990933492490389463,   0.0042282955300368162769,
      0.0042573311183076319775,   0.0042861989700752855317,
      0.0043148979479623024047,   0.0043434269212447460867,
      0.0043717847658967679900,   0.0043999703646348934456,
      0.0044279826069620420546,   0.0044558203892112806588,
      0.0044834826145893072079,   0.0045109681932196638098,
      0.0045382760421856772609,   0.0045654050855731253643,
      0.0045923542545126273570,   0.0046191224872217567723,
      0.0046457087290468750821,   0.0046721119325046844676,
      0.0046983310573234980836,   0.0047243650704842261886,
      0.0047502129462610765271,   0.0047758736662619673604,
      0.0048013462194686515523,   0.0048266296022765501307,
      0.0048517228185342937547,   0.0048766248795829705294,
      0.0049013348042950786214,   0.0049258516191131821421,
      0.0049501743580882687736,   0.0049743020629178076276,
      0.0049982337829835058367,   0.0050219685753887623916,
      0.0050455055049958177471,   0.0050688436444625977350,
      0.0050919820742792503304,   0.0051149198828043738335,
      0.0051376561663009350387,   0.0051601900289718759753,
      0.0051825205829954078187,   0.0052046469485599905793,
      0.0052265682538989971928,   0.0052482836353250606450,
      0.0052697922372641027784,   0.0052910932122890434398,
      0.0053121857211531886400,   0.0053330689328232964119,
      0.0053537420245123190624,   0.0053742041817118205286,
      0.0053944545982240675620,   0.0054144924761937934754,
      0.0054343170261396332004,   0.0054539274669852284191,
      0.0054733230260900015421,   0.0054925029392795973221,
      0.0055114664508759909024,   0.0055302128137272611154,
      0.0055487412892370278566,   0.0055670511473935523754,
      0.0055851416667984993356,   0.0056030121346953595128,
      0.0056206618469975320085,   0.0056380901083160648742,
      0.0056552962319870530534,   0.0056722795400986925617,
      0.0056890393635179898383,   0.0057055750419171252177,
      0.0057218859237994694823,   0.0057379713665252524710,
      0.0057538307363368827323,   0.0057694634083839172242,
      0.0057848687667476800784,   0.0058000462044655294564,
      0.0058149951235547715439,   0.0058297149350362207392,
      0.0058442050589574051097,   0.0058584649244154161994,
      0.0058724939695794022895,   0.0058862916417127042246,
      0.0058998573971946329329,   0.0059131907015418877819,
      0.0059262910294296149268,   0.0059391578647121048196,
      0.0059517907004431280670,   0.0059641890388959088321,
      0.0059763523915827349955,   0.0059882802792742043028,
      0.0059999722320181057383,   0.0060114277891579353845,
      0.0060226464993510460340,   0.0060336279205864298417,
      0.0060443716202021333152,   0.0060548771749023039576,
      0.0060651441707738678911,   0.0060751722033028378043,
      0.0060849608773902505806,   0.0060945098073677339798,
      0.0061038186170127017600,   0.0061128869395631766402,
      0.0061217144177322405202,   0.0061303007037221113888,
      0.0061386454592378463648,   0.0061467483555006703317,
      0.0061546090732609296402,   0.0061622273028106703693,
      0.0061696027439958406488,   0.0061767351062281165639,
      0.0061836241084963511752,   0.0061902694793776462033,
      0.0061966709570480459414,   0.0062028282892928529754,
      0.0062087412335165653038,   0.0062144095567524344671,
      0.0062198330356716443096,   0.0062250114565921100116,
      0.0062299446154868970461,   0.0062346323179922597276,
      0.0062390743794152990369,   0.0062432706247412394194,
      0.0062472208886403242712,   0.0062509250154743298404,
      0.0062543828593026972873,   0.0062575942838882826624,
      0.0062605591627027245746,   0.0062632773789314293393,
      0.0062657488254781734088,   0.0062679734049693229048,
      0.0062699510297576700857,   0.0062716816219258865987,
      0.0062731651132895933793,   0.0062744014454000470787,
      0.0062753905695464429118,   0.0062761324467578338361,
      0.0062766270478046659858,   0.0062768743531999302999,
      0.0062768743531999302999,   0.0062766270478046659858,
      0.0062761324467578338361,   0.0062753905695464429118,
      0.0062744014454000470787,   0.0062731651132895933793,
      0.0062716816219258865987,   0.0062699510297576700857,
      0.0062679734049693229048,   0.0062657488254781734088,
      0.0062632773789314293393,   0.0062605591627027245746,
      0.0062575942838882826624,   0.0062543828593026972873,
      0.0062509250154743298404,   0.0062472208886403242712,
      0.0062432706247412394194,   0.0062390743794152990369,
      0.0062346323179922597276,   0.0062299446154868970461,
      0.0062250114565921100116,   0.0062198330356716443096,
      0.0062144095567524344671,   0.0062087412335165653038,
      0.0062028282892928529754,   0.0061966709570480459414,
      0.0061902694793776462033,   0.0061836241084963511752,
      0.0061767351062281165639,   0.0061696027439958406488,
      0.0061622273028106703693,   0.0061546090732609296402,
      0.0061467483555006703317,   0.0061386454592378463648,
      0.0061303007037221113888,   0.0061217144177322405202,
      0.0061128869395631766402,   0.0061038186170127017600,
      0.0060945098073677339798,   0.0060849608773902505806,
      0.0060751722033028378043,   0.0060651441707738678911,
      0.0060548771749023039576,   0.0060443716202021333152,
      0.0060336279205864298417,   0.0060226464993510460340,
      0.0060114277891579353845,   0.0059999722320181057383,
      0.0059882802792742043028,   0.0059763523915827349955,
      0.0059641890388959088321,   0.0059517907004431280670,
      0.0059391578647121048196,   0.0059262910294296149268,
      0.0059131907015418877819,   0.0058998573971946329329,
      0.0058862916417127042246,   0.0058724939695794022895,
      0.0058584649244154161994,   0.0058442050589574051097,
      0.0058297149350362207392,   0.0058149951235547715439,
      0.0058000462044655294564,   0.0057848687667476800784,
      0.0057694634083839172242,   0.0057538307363368827323,
      0.0057379713665252524710,   0.0057218859237994694823,
      0.0057055750419171252177,   0.0056890393635179898383,
      0.0056722795400986925617,   0.0056552962319870530534,
      0.0056380901083160648742,   0.0056206618469975320085,
      0.0056030121346953595128,   0.0055851416667984993356,
      0.0055670511473935523754,   0.0055487412892370278566,
      0.0055302128137272611154,   0.0055114664508759909024,
      0.0054925029392795973221,   0.0054733230260900015421,
      0.0054539274669852284191,   0.0054343170261396332004,
      0.0054144924761937934754,   0.0053944545982240675620,
      0.0053742041817118205286,   0.0053537420245123190624,
      0.0053330689328232964119,   0.0053121857211531886400,
      0.0052910932122890434398,   0.0052697922372641027784,
      0.0052482836353250606450,   0.0052265682538989971928,
      0.0052046469485599905793,   0.0051825205829954078187,
      0.0051601900289718759753,   0.0051376561663009350387,
      0.0051149198828043738335,   0.0050919820742792503304,
      0.0050688436444625977350,   0.0050455055049958177471,
      0.0050219685753887623916,   0.0049982337829835058367,
      0.0049743020629178076276,   0.0049501743580882687736,
      0.0049258516191131821421,   0.0049013348042950786214,
      0.0048766248795829705294,   0.0048517228185342937547,
      0.0048266296022765501307,   0.0048013462194686515523,
      0.0047758736662619673604,   0.0047502129462610765271,
      0.0047243650704842261886,   0.0046983310573234980836,
      0.0046721119325046844676,   0.0046457087290468750821,
      0.0046191224872217567723,   0.0045923542545126273570,
      0.0045654050855731253643,   0.0045382760421856772609,
      0.0045109681932196638098,   0.0044834826145893072079,
      0.0044558203892112806588,   0.0044279826069620420546,
      0.0043999703646348934456,   0.0043717847658967679900,
      0.0043434269212447460867,   0.0043148979479623024047,
      0.0042861989700752855317,   0.0042573311183076319775,
      0.0042282955300368162769,   0.0041990933492490389463,
      0.0041697257264941540616,   0.0041401938188403382305,
      0.0041104987898285027482,   0.0040806418094264507305,
      0.0040506240539827810314,   0.0040204467061805407609,
      0.0039901109549906282305,   0.0039596179956249481597,
      0.0039289690294893209922,   0.0038981652641361481748,
      0.0038672079132168352654,   0.0038360981964339747442,
      0.0038048373394932904119,   0.0037734265740553452686,
      0.0037418671376870147765,   0.0037101602738127274173,
      0.0036783072316654744670,   0.0036463092662375909168,
      0.0036141676382313094805,   0.0035818836140090896363,
      0.0035494584655437236602,   0.0035168934703682216167,
      0.0034841899115254772814,   0.0034513490775177169794,
      0.0034183722622557333308,   0.0033852607650079059039,
      0.0033520158903490107841,   0.0033186389481088210774,
      0.0032851312533205003722,   0.0032514941261687911933,
      0.0032177288919380004905,   0.0031838368809597842107,
      0.0031498194285607330120,   0.0031156778750097611845,
      0.0030814135654653008514,   0.0030470278499223035324,
      0.0030125220831590511567,   0.0029778976246837786236,
      0.0029431558386811100126,   0.0029082980939583105568,
      0.0028733257638913564964,   0.0028382402263708249388,
      0.0028030428637476058592,   0.0027677350627784383823,
      0.0027323182145712734917,   0.0026967937145304653228,
      0.0026611629623017932006,   0.0026254273617173165921,
      0.0025895883207400651474,   0.0025536472514085660147,
      0.0025176055697812106167,   0.0024814646958804630877,
      0.0024452260536369125722,   0.0024088910708331715997,
      0.0023724611790476227498,   0.0023359378135980158365,
      0.0022993224134849178420,   0.0022626164213350178416,
      0.0022258212833442891674,   0.0021889384492210110683,
      0.0021519693721286521296,   0.0021149155086286177292,
      0.0020777783186228638119,   0.0020405592652963792792,
      0.0020032598150595392997,   0.0019658814374903318626,
      0.0019284256052764599062,   0.0018908937941573213780,
      0.0018532874828658695948,   0.0018156081530703563024,
      0.0017778572893159598576,   0.0017400363789663009900,
      0.0017021469121448486454,   0.0016641903816762184598,
      0.0016261682830273664794,   0.0015880821142486808200,
      0.0015499333759149740618,   0.0015117235710663793036,
      0.0014734542051491529682,   0.0014351267859563876670,
      0.0013967428235686387144,   0.0013583038302944682580,
      0.0013198113206109114904,   0.0012812668111038700744,
      0.0012426718204084388245,   0.0012040278691491729248,
      0.0011653364798803046758,   0.0011265991770259211495,
      0.0010878174868201174924,   0.0010489929372471454093,
      0.0010101270579815832705,   0.00097122138032856437528,
      0.00093227743716411485814,  0.00089329676287567518027,
      0.00085428089330291345225,  0.00081523136567899210200,
      0.00077614971857253369847,  0.00073703749183066785394,
      0.00069789622652376583201,  0.00065872746489284957225,
      0.00061953275030132223254,  0.00058031362719384943438,
      0.00054107164106740779493,  0.00050180833846371903583,
      0.00046252526700070759270,  0.00042322397547832698113,
      0.00038390601413347810218,  0.00034457293521221609836,
      0.00030522629426718179039,  0.00026586765326334618906,
      0.00022649858870950472808,  0.00018712071585068106639,
      0.00014773577477559011465,  0.00010834602869092001789,
      0.000068957072826689874964, 0.000029623644485482837135};
  IntegratorXX::GaussLegendre<double, double> quad(500);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 500; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}
