
/* THIS FILE IS AUTOGENERATED BY generate_quadrature_tests.py.
   DO NOT EDIT THIS FILE, EDIT THE AUTOGENERATOR INSTEAD.
*/

// clang-format off
#include "catch2/catch_all.hpp"
#include <integratorxx/quadratures/gausschebyshev1.hpp>
#include <numeric>
#include <vector>
// clang-format on

const double x_tolerance = 10 * std::numeric_limits<double>::epsilon();
const double w_tolerance = 10 * std::numeric_limits<double>::epsilon();

TEST_CASE("2 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 2> ref_pts = {0.70710678118654752440,
                                   -0.70710678118654752440};
  std::array<double, 2> ref_wgt = {2.0523443059540617777,
                                   0.85010884618536923632};
  IntegratorXX::GaussChebyshev1<double, double> quad(2);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 2; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("3 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 3> ref_pts = {0.86602540378443864676, 0,
                                   -0.86602540378443864676};
  std::array<double, 3> ref_wgt = {1.4304984577154077984, 1.0471975511965977462,
                                   0.38330090651881005222};
  IntegratorXX::GaussChebyshev1<double, double> quad(3);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 3; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("4 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 4> ref_pts = {
      0.92387953251128675613, 0.38268343236508977173, -0.38268343236508977173,
      -0.92387953251128675613};
  std::array<double, 4> ref_wgt = {
      1.0893785470750954016, 0.92353053852403246245, 0.61708337730786462915,
      0.21669086577131944104};
  IntegratorXX::GaussChebyshev1<double, double> quad(4);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 4; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("5 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 5> ref_pts = {
      0.95105651629515357212, 0.58778525229247312917, 0,
      -0.58778525229247312917, -0.95105651629515357212};
  std::array<double, 5> ref_wgt = {
      0.87763673532961733303, 0.79172753682085784661, 0.62831853071795864769,
      0.40340532907576453114, 0.13900400313343463013};
  IntegratorXX::GaussChebyshev1<double, double> quad(5);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 5; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("6 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 6> ref_pts = {
      0.96592582628906828675,  0.70710678118654752440,
      0.25881904510252076235,  -0.25881904510252076235,
      -0.70710678118654752440, -0.96592582628906828675};
  std::array<double, 6> ref_wgt = {
      0.73414557645374815292, 0.68411476865135392591, 0.58746266991847950912,
      0.45077596105862507415, 0.28336961539512307877, 0.096652098732874416795};
  IntegratorXX::GaussChebyshev1<double, double> quad(6);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 6; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("7 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 7> ref_pts = {
      0.97492791218182360702,  0.78183148246802980871,
      0.43388373911755812048,  0,
      -0.43388373911755812048, -0.78183148246802980871,
      -0.97492791218182360702};
  std::array<double, 7> ref_wgt = {
      0.63070671753919039274, 0.59908044911987768349, 0.53741378543959271890,
      0.44879895051282760549, 0.33767946218613646240, 0.20962731559879454344,
      0.071063580079889514804};
  IntegratorXX::GaussChebyshev1<double, double> quad(7);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 7; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("8 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 8> ref_pts = {
      0.98078528040323044913,  0.83146961230254523708,  0.55557023301960222474,
      0.19509032201612826785,  -0.19509032201612826785, -0.55557023301960222474,
      -0.83146961230254523708, -0.98078528040323044913};
  std::array<double, 8> ref_wgt = {
      0.55268615530596259189, 0.53144673630752119408, 0.48978411727154510133,
      0.42929936928292094157, 0.35231688728661408343, 0.26179506489346931996,
      0.16121260497283235405, 0.054434835052159887787};
  IntegratorXX::GaussChebyshev1<double, double> quad(8);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 8; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("9 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 9> ref_pts = {0.98480775301220805937,
                                   0.86602540378443864676,
                                   0.64278760968653932632,
                                   0.34202014332566873304,
                                   0,
                                   -0.34202014332566873304,
                                   -0.64278760968653932632,
                                   -0.86602540378443864676,
                                   -0.98480775301220805937};
  std::array<double, 9> ref_wgt = {
      0.49177515858173788886, 0.47683281923846926612, 0.44740215597168869614,
      0.40437740459212311096, 0.34906585039886591538, 0.28314810697708231405,
      0.20862705160465557481, 0.12776696883960335074, 0.043024751379565585183};
  IntegratorXX::GaussChebyshev1<double, double> quad(9);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 9; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("10 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 10> ref_pts = {
      0.98768834059513772619,  0.89100652418836786236,  0.70710678118654752440,
      0.45399049973954679156,  0.15643446504023086901,  -0.15643446504023086901,
      -0.45399049973954679156, -0.70710678118654752440, -0.89100652418836786236,
      -0.98768834059513772619};
  std::array<double, 10> ref_wgt = {
      0.44291870127972441875, 0.43201257289132461241, 0.41046886119081235555,
      0.37881804385973415444, 0.33783946906382150265, 0.28854216531464230045,
      0.23213999583887241655, 0.17002176923707384726, 0.10371704240675739106,
      0.034858457775257627033};
  IntegratorXX::GaussChebyshev1<double, double> quad(10);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 10; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("11 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 11> ref_pts = {
      0.98982144188093273238,  0.90963199535451837141,  0.75574957435425828377,
      0.54064081745559758211,  0.28173255684142969771,  0,
      -0.28173255684142969771, -0.54064081745559758211, -0.75574957435425828377,
      -0.90963199535451837141, -0.98982144188093273238};
  std::array<double, 11> ref_wgt = {
      0.40286936196653442970,  0.39466810353619859192, 0.37843254064669224379,
      0.35449318253894860945,  0.32333736550863335448, 0.28559933214452665804,
      0.24204731997842023944,  0.19356792238438417647, 0.14114804009439500099,
      0.085854790745419352605, 0.028813785441638485295};
  IntegratorXX::GaussChebyshev1<double, double> quad(11);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 11; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("12 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 12> ref_pts = {
      0.99144486137381041114,  0.92387953251128675613,
      0.79335334029123516458,  0.60876142900872063942,
      0.38268343236508977173,  0.13052619222005159155,
      -0.13052619222005159155, -0.38268343236508977173,
      -0.60876142900872063942, -0.79335334029123516458,
      -0.92387953251128675613, -0.99144486137381041114};
  std::array<double, 12> ref_wgt = {
      0.36944753206215586631, 0.36312618235836513387,  0.35059164299682477342,
      0.33205838342124160040, 0.30784351284134415415,  0.27836135440638495974,
      0.24411635602118473836, 0.20569445910262154305,  0.16375307295953432326,
      0.11900982633718039551, 0.072230288590439813681, 0.024214870579897446248};
  IntegratorXX::GaussChebyshev1<double, double> quad(12);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 12; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("13 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 13> ref_pts = {0.99270887409805399280,
                                    0.93501624268541482344,
                                    0.82298386589365639458,
                                    0.66312265824079520238,
                                    0.46472317204376854566,
                                    0.23931566428755776715,
                                    0,
                                    -0.23931566428755776715,
                                    -0.46472317204376854566,
                                    -0.66312265824079520238,
                                    -0.82298386589365639458,
                                    -0.93501624268541482344,
                                    -0.99270887409805399280};
  std::array<double, 13> ref_wgt = {
      0.34113670301119602687, 0.33616216170833723923, 0.32628561911650681183,
      0.31165109746673068024, 0.29247200103873538919, 0.26902800424600509189,
      0.24166097335306101834, 0.21076998129550897073, 0.17680548829800420130,
      0.14026277314982785166, 0.10167471092486852843, 0.061604002463114841999,
      0.020634968925316431063};
  IntegratorXX::GaussChebyshev1<double, double> quad(13);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 13; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("14 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 14> ref_pts = {
      0.99371220989324258353,  0.94388333030836756290,  0.84672419922828416835,
      0.70710678118654752440,  0.53203207651533656356,  0.33027906195516708177,
      0.11196447610330785847,  -0.11196447610330785847, -0.33027906195516708177,
      -0.53203207651533656356, -0.70710678118654752440, -0.84672419922828416835,
      -0.94388333030836756290, -0.99371220989324258353};
  std::array<double, 14> ref_wgt = {
      0.31684953296017546268,  0.31286496624282006424, 0.30494594104647947166,
      0.29319204370772311111,  0.27775108630535593172, 0.25881724783776486760,
      0.23662863230934884293,  0.21146427443451229425, 0.18364063061423182222,
      0.15350759931320163021,  0.12144412088362417662, 0.087853412170414915321,
      0.053157895825425621002, 0.017793888097502021506};
  IntegratorXX::GaussChebyshev1<double, double> quad(14);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 14; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("15 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 15> ref_pts = {
      0.99452189536827333692,  0.95105651629515357212,
      0.86602540378443864676,  0.74314482547739423501,
      0.58778525229247312917,  0.40673664307580020775,
      0.20791169081775933710,  0,
      -0.20791169081775933710, -0.40673664307580020775,
      -0.58778525229247312917, -0.74314482547739423501,
      -0.86602540378443864676, -0.95105651629515357212,
      -0.99452189536827333692};
  std::array<double, 15> ref_wgt = {
      0.29578627476680823286,  0.29254557844320577768,
      0.28609969154308155968,  0.27651923655220189225,
      0.26390917894028594887,  0.24840767713735408312,
      0.23018456884105701554,  0.20943951023931954923,
      0.18639978853536492232,  0.16131783174155338915,
      0.13446844302525484371,  0.10614578990784085536,
      0.076660181303762010444, 0.046334667711144876709,
      0.015501501802931865751};
  IntegratorXX::GaussChebyshev1<double, double> quad(15);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 15; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("16 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 16> ref_pts = {
      0.99518472667219688624,   0.95694033573220886494,
      0.88192126434835502971,   0.77301045336273696081,
      0.63439328416364549822,   0.47139673682599764856,
      0.29028467725446236764,   0.098017140329560601994,
      -0.098017140329560601994, -0.29028467725446236764,
      -0.47139673682599764856,  -0.63439328416364549822,
      -0.77301045336273696081,  -0.88192126434835502971,
      -0.95694033573220886494,  -0.99518472667219688624};
  std::array<double, 16> ref_wgt = {
      0.27734570569275388368,  0.27467471493434778371,  0.26935845651865110678,
      0.26144812892036947898,  0.25101991291849928109,  0.23817423793378126348,
      0.22303481483847850683,  0.20574744455304928680,  0.18647861390358017023,
      0.16541389226263984469,  0.14275614441477874416,  0.11872357685775665656,
      0.093547636354685491680, 0.067470780975178842897, 0.040744145091600545226,
      0.013625120817774799035};
  IntegratorXX::GaussChebyshev1<double, double> quad(16);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 16; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("17 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 17> ref_pts = {
      0.99573417629503452187,  0.96182564317281907041,  0.89516329135506232207,
      0.79801722728023950333,  0.67369564364655721171,  0.52643216287735580024,
      0.36124166618715294874,  0.18374951781657033157,  0,
      -0.18374951781657033157, -0.36124166618715294874, -0.52643216287735580024,
      -0.67369564364655721171, -0.79801722728023950333, -0.89516329135506232207,
      -0.96182564317281907041, -0.99573417629503452187};
  std::array<double, 17> ref_wgt = {
      0.26106719235960245420,  0.25883985912408970519,  0.25440419547489402265,
      0.24779804493029939182,  0.23907776883748921746,  0.22831776551740460632,
      0.21560983552450220678,  0.20106239843679154851,  0.18479956785822313167,
      0.16696009252518074546,  0.14769617255118406814,  0.12717216090918436566,
      0.10556316122994849758,  0.083053533879621015467, 0.059835323062083851792,
      0.036106618365521678408, 0.012069864731899936498};
  IntegratorXX::GaussChebyshev1<double, double> quad(17);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 17; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("18 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 18> ref_pts = {
      0.99619469809174553230,  0.96592582628906828675,
      0.90630778703664996324,  0.81915204428899178968,
      0.70710678118654752440,  0.57357643635104609611,
      0.42261826174069943619,  0.25881904510252076235,
      0.087155742747658173558, -0.087155742747658173558,
      -0.25881904510252076235, -0.42261826174069943619,
      -0.57357643635104609611, -0.70710678118654752440,
      -0.81915204428899178968, -0.90630778703664996324,
      -0.96592582628906828675, -0.99619469809174553230};
  std::array<double, 18> ref_wgt = {
      0.24659190544797193002,  0.24471519215124938431,
      0.24097604847918282256,  0.23540293157287334977,
      0.22803825621711797530,  0.21893807203828656031,
      0.20817163693282145338,  0.19582088997282650304,
      0.18197982780025218300,  0.16675378925569362483,
      0.15025865368620835805,  0.13261995903351533953,
      0.11397194641445659049,  0.094456538465041026257,
      0.074222259223489197726, 0.053423103772621166774,
      0.032217366244291472265, 0.010766435105465106930};
  IntegratorXX::GaussChebyshev1<double, double> quad(18);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 18; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("19 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 19> ref_pts = {
      0.99658449300666984982,  0.96940026593933041674,
      0.91577332665505743992,  0.83716647826252857481,
      0.73572391067313162477,  0.61421271268966781744,
      0.47594739303707354443,  0.32469946920468348741,
      0.16459459028073389414,  0,
      -0.16459459028073389414, -0.32469946920468348741,
      -0.47594739303707354443, -0.61421271268966781744,
      -0.73572391067313162477, -0.83716647826252857481,
      -0.91577332665505743992, -0.96940026593933041674,
      -0.99658449300666984982};
  std::array<double, 19> ref_wgt = {
      0.23363619171959163697,  0.23204021962616505905,  0.22885917754700441967,
      0.22411479522504462013,  0.21783948160228503170,  0.21007610343385340504,
      0.20087769246460202981,  0.19030708316851691170,  0.17843648352554712953,
      0.16534698176788385466,  0.15112799246511209949,  0.13587664573203527110,
      0.11969712373150242315,  0.10269994900459667360,  0.085001229489611224570,
      0.066721865387098919284, 0.047986723288911275505, 0.028923783212763081233,
      0.0096632643689413719558};
  IntegratorXX::GaussChebyshev1<double, double> quad(19);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 19; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("20 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 20> ref_pts = {
      0.99691733373312797620,   0.97236992039767660183,
      0.92387953251128675613,   0.85264016435409222152,
      0.76040596560003093817,   0.64944804833018365573,
      0.52249856471594886499,   0.38268343236508977173,
      0.23344536385590541177,   0.078459095727844945033,
      -0.078459095727844945033, -0.23344536385590541177,
      -0.38268343236508977173,  -0.52249856471594886499,
      -0.64944804833018365573,  -0.76040596560003093817,
      -0.85264016435409222152,  -0.92387953251128675613,
      -0.97236992039767660183,  -0.99691733373312797620};
  std::array<double, 20> ref_wgt = {
      0.22197288182131678700,  0.22060434519141489992,  0.21787570941501908032,
      0.21380379743905427929,  0.20841371395490045462,  0.20173869061962205636,
      0.19381988117175157711,  0.18470610770480649249,  0.17445355966284773230,
      0.16312544741387215873,  0.15079161253687428532,  0.13752809722528709407,
      0.12341667546157292583,  0.10854434885342899135,  0.093002810239944947705,
      0.076887878374758947416, 0.060298907171578490381, 0.043338173154263888208,
      0.026110244888048269994, 0.0087213382795603435736};
  IntegratorXX::GaussChebyshev1<double, double> quad(20);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 20; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("21 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 21> ref_pts = {0.99720379718118014823,
                                    0.97492791218182360702,
                                    0.93087374864420425564,
                                    0.86602540378443864676,
                                    0.78183148246802980871,
                                    0.68017273777091939019,
                                    0.56332005806362202775,
                                    0.43388373911755812048,
                                    0.29475517441090421683,
                                    0.14904226617617444693,
                                    0,
                                    -0.14904226617617444693,
                                    -0.29475517441090421683,
                                    -0.43388373911755812048,
                                    -0.56332005806362202775,
                                    -0.68017273777091939019,
                                    -0.78183148246802980871,
                                    -0.86602540378443864676,
                                    -0.93087374864420425564,
                                    -0.97492791218182360702,
                                    -0.99720379718118014823};
  std::array<double, 21> ref_wgt = {
      0.21141790720923839678,  0.21023557251306346425,
      0.20787751521593406490,  0.20435692253077254262,
      0.19969348303995922783,  0.19391327658879333653,
      0.18704862843641909022,  0.17913792847986423963,
      0.17022541656216349826,  0.16036093506521094677,
      0.14959965017094253516,  0.13800174334966921708,
      0.12563207480088310141,  0.11255982072871215413,
      0.098858086480526242647, 0.084603497712180362841,
      0.069875771866264847813, 0.054757272359830007460,
      0.039332547974748281060, 0.023687860026629838268,
      0.0079106999565548505908};
  IntegratorXX::GaussChebyshev1<double, double> quad(21);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 21; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("22 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 22> ref_pts = {
      0.99745211461025354136,  0.97714686597115951949,
      0.93694972499976173582,  0.87767898956725561521,
      0.80054124092436040397,  0.70710678118654752440,
      0.59927766651134693453,  0.47924898672005683120,
      0.34946417959909833671,  0.21256528955297667388,
      0.071339183199232340327, -0.071339183199232340327,
      -0.21256528955297667388, -0.34946417959909833671,
      -0.47924898672005683120, -0.59927766651134693453,
      -0.70710678118654752440, -0.80054124092436040397,
      -0.87767898956725561521, -0.93694972499976173582,
      -0.97714686597115951949, -0.99745211461025354136};
  std::array<double, 22> ref_wgt = {
      0.20182054759732647117,  0.20079211634817875545,  0.19874049449979144833,
      0.19567613664683013110,  0.19161465805449983370,  0.18657675508673288889,
      0.18058809974226236410,  0.17367920883600106633,  0.16588528849234782624,
      0.15724605474284752741,  0.14780553114239808249,  0.13761182443530577504,
      0.12671687941434332699,  0.11517621422199274065,  0.10304863744271710714,
      0.090395948427894316050, 0.077282622380488112392, 0.063775481804192832052,
      0.049943355991271663642, 0.035856730284260360566, 0.021587386898818364780,
      0.0072080391380117621443};
  IntegratorXX::GaussChebyshev1<double, double> quad(22);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 22; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("23 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 23> ref_pts = {
      0.99766876919053919845,  0.97908408768232287563,  0.94226092211882049562,
      0.88788521840237523498,  0.81696989301044201697,  0.73083596427812410165,
      0.63108794432605278937,  0.51958395003543357813,  0.39840108984624145800,
      0.26979677115702427125,  0.13616664909624659076,  0,
      -0.13616664909624659076, -0.26979677115702427125, -0.39840108984624145800,
      -0.51958395003543357813, -0.63108794432605278937, -0.73083596427812410165,
      -0.81696989301044201697, -0.88788521840237523498, -0.94226092211882049562,
      -0.97908408768232287563, -0.99766876919053919845};
  std::array<double, 23> ref_wgt = {
      0.19305621029459621324,  0.19215609312380320073,  0.19036005554397853041,
      0.18767647151140427567,  0.18411785313363346484,  0.17970079233226884336,
      0.17444588348376521689,  0.16837762739893966511,  0.16152431708888147462,
      0.15391790584987385145,  0.14559385828237640256,  0.13659098493868666254,
      0.12695126137022959720,  0.11671963241816015160,  0.10594380265976639659,
      0.094674013987708876302, 0.082962811359124416395, 0.070864797806780205699,
      0.058436379854529242496, 0.045735504524057813129, 0.032821389159120948868,
      0.019754245326949993595, 0.0065949980841313725418};
  IntegratorXX::GaussChebyshev1<double, double> quad(23);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 23; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("24 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 24> ref_pts = {
      0.99785892323860350674,   0.98078528040323044913,
      0.94693012949510566426,   0.89687274153268830389,
      0.83146961230254523708,   0.75183980747897739641,
      0.65934581510006886843,   0.55557023301960222474,
      0.44228869021900128200,   0.32143946530316158070,
      0.19509032201612826785,   0.065403129230143066815,
      -0.065403129230143066815, -0.19509032201612826785,
      -0.32143946530316158070,  -0.44228869021900128200,
      -0.55557023301960222474,  -0.65934581510006886843,
      -0.75183980747897739641,  -0.83146961230254523708,
      -0.89687274153268830389,  -0.94693012949510566426,
      -0.98078528040323044913,  -0.99785892323860350674};
  std::array<double, 24> ref_wgt = {
      0.18502100679134311898,  0.18422871843532086396,
      0.18264753442365116248,  0.18028422562901976991,
      0.17714891210250706469,  0.17325501973797566373,
      0.16861922278033172186,  0.16326137242384836711,
      0.15720441180630421233,  0.15047427776294509260,
      0.14309978976097364719,  0.13511252649016631273,
      0.12654669063807565189,  0.11743896242887136114,
      0.10782834255298912571,  0.097755985160186678999,
      0.087265021631156439986, 0.076400375882331738253,
      0.065208571994779801341, 0.053737534990944118018,
      0.042036385612340751961, 0.030155229977002016539,
      0.018144945017386629262, 0.0060569606175441547831};
  IntegratorXX::GaussChebyshev1<double, double> quad(24);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 24; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("25 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 25> ref_pts = {0.99802672842827156195,
                                    0.98228725072868868109,
                                    0.95105651629515357212,
                                    0.90482705246601952771,
                                    0.84432792550201507855,
                                    0.77051324277578923080,
                                    0.68454710592868867373,
                                    0.58778525229247312917,
                                    0.48175367410171527499,
                                    0.36812455268467795916,
                                    0.24868988716485478824,
                                    0.12533323356430424537,
                                    0,
                                    -0.12533323356430424537,
                                    -0.24868988716485478824,
                                    -0.36812455268467795916,
                                    -0.48175367410171527499,
                                    -0.58778525229247312917,
                                    -0.68454710592868867373,
                                    -0.77051324277578923080,
                                    -0.84432792550201507855,
                                    -0.90482705246601952771,
                                    -0.95105651629515357212,
                                    -0.98228725072868868109,
                                    -0.99802672842827156195};
  std::array<double, 25> ref_wgt = {
      0.17762762574505055509,  0.17692661065657790174,  0.17552734706592346661,
      0.17343535722721683580,  0.17065889726861213842,  0.16720892460912208841,
      0.16309905471469110991,  0.15834550736417156932,  0.15296704263726675715,
      0.14698488687706696424,  0.14042264891937069813,  0.13330622691939563748,
      0.12566370614359172954,  0.11752524812992544994,  0.10892297165406894501,
      0.099890825971266126607, 0.090464456834132163831, 0.080681065815152906228,
      0.070579263489074063967, 0.060198917054602180225, 0.049580992996784927046,
      0.038767395411010428921, 0.027800800626686926026, 0.016724488783267560218,
      0.0055821730233127683881};
  IntegratorXX::GaussChebyshev1<double, double> quad(25);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 25; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("26 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 26> ref_pts = {
      0.99817555422331747084,  0.98361990694714358842,
      0.95472086650854562606,  0.91189984599209007718,
      0.85578127230144752264,  0.78718348060905018180,
      0.70710678118654752440,  0.61671887262854305846,
      0.51733781417765677104,  0.41041280545275679642,
      0.29750305385520297665,  0.18025503781390574017,
      0.060378497422286053438, -0.060378497422286053438,
      -0.18025503781390574017, -0.29750305385520297665,
      -0.41041280545275679642, -0.51733781417765677104,
      -0.61671887262854305846, -0.70710678118654752440,
      -0.78718348060905018180, -0.85578127230144752264,
      -0.91189984599209007718, -0.95472086650854562606,
      -0.98361990694714358842, -0.99817555422331747084};
  std::array<double, 26> ref_wgt = {
      0.17080215484810734071,  0.17017891630798553109,  0.16893471335758669388,
      0.16707408595854721131,  0.16460382333846739812,  0.16153293921775625698,
      0.15787263891954321367,  0.15363627848266919736,  0.14883931592694932756,
      0.14349925484853497896,  0.13763558055118963119,  0.13126968894652855147,
      0.12442480848265762517,  0.11712591538608526439,  0.10939964252618046657,
      0.10127418223472073202,  0.092779183435130771338, 0.083945643456776254651,
      0.074805794929070512313, 0.065392988168105325870, 0.055741569484964238706,
      0.045886755859758154047, 0.035864506438684073266, 0.025711391323000271420,
      0.015464458128692710233, 0.0051610968037419945985};
  IntegratorXX::GaussChebyshev1<double, double> quad(26);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 26; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("27 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 27> ref_pts = {
      0.99830815827126820805,  0.98480775301220805937,
      0.95798951231548887444,  0.91821610688027401476,
      0.86602540378443864676,  0.80212319275504378508,
      0.72737364157304869599,  0.64278760968653932632,
      0.54950897807080603526,  0.44879918020046217278,
      0.34202014332566873304,  0.23061587074244017845,
      0.11609291412523022968,  0,
      -0.11609291412523022968, -0.23061587074244017845,
      -0.34202014332566873304, -0.44879918020046217278,
      -0.54950897807080603526, -0.64278760968653932632,
      -0.72737364157304869599, -0.80212319275504378508,
      -0.86602540378443864676, -0.91821610688027401476,
      -0.95798951231548887444, -0.98480775301220805937,
      -0.99830815827126820805};
  std::array<double, 27> ref_wgt = {
      0.16448160655172540337,  0.16392505286057929629,
      0.16281382867980500349,  0.16115169404028054448,
      0.15894427307948975537,  0.15619903501122132233,
      0.15292526885211364453,  0.14913405199056289871,
      0.14483821270434717115,  0.14005228675379515217,
      0.13479246819737437032,  0.12907655459612344658,
      0.12292388679233922480,  0.11635528346628863846,
      0.10939297069238468520,  0.10206050673318611123,
      0.094382702325694104683, 0.086385536729671937272,
      0.078096069822053466101, 0.069542350534885191602,
      0.060753321946618892264, 0.051758723347895859282,
      0.042588989613201116913, 0.033275148218882097527,
      0.023848714255990197948, 0.014341583793188528394,
      0.0047859259505520189795};
  IntegratorXX::GaussChebyshev1<double, double> quad(27);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 27; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("28 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 28> ref_pts = {
      0.99842681501781656213,   0.98587101851823587392,
      0.96091732194509954321,   0.92387953251128675613,
      0.87522342190875369750,   0.81556086895926017135,
      0.74564216488316560949,   0.66634657795200394558,
      0.57867129617980574163,   0.48371888710523979107,
      0.38268343236508977173,   0.27683551142484938763,
      0.16750622330473640809,   0.056070447237191788191,
      -0.056070447237191788191, -0.16750622330473640809,
      -0.27683551142484938763,  -0.38268343236508977173,
      -0.48371888710523979107,  -0.57867129617980574163,
      -0.66634657795200394558,  -0.74564216488316560949,
      -0.81556086895926017135,  -0.87522342190875369750,
      -0.92387953251128675613,  -0.96091732194509954321,
      -0.98587101851823587392,  -0.99842681501781656213};
  std::array<double, 28> ref_wgt = {
      0.15861197232954679526,  0.15811292038382011923,  0.15711638669441946043,
      0.15562550672501362880,  0.15364497133555883907,  0.15118101202311783742,
      0.14824138131526471029,  0.14483532837776497730,  0.14097356991327823116,
      0.13666825644264677254,  0.13193293407486178035,  0.12678250188599284794,
      0.12123316504118254085,  0.11530238380720152469,  0.10900881861598962804,
      0.10237227135203326488,  0.095413623048310848680, 0.088154768186837804165,
      0.080618545810525968597, 0.072828667663104959097, 0.064809643583203899012,
      0.056586704387331323759, 0.048185722484391941918, 0.039633130471516351639,
      0.030955837967331348720, 0.022181146944344126687, 0.013336665826836012189,
      0.0044502226245455427373};
  IntegratorXX::GaussChebyshev1<double, double> quad(28);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 28; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("29 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 29> ref_pts = {
      0.99853341385112386457,  0.98682652254152615177,  0.96354999251922296004,
      0.92897671981679144179,  0.88351204444602292283,  0.82768899815689055614,
      0.76216205512763646326,  0.68769945885342329308,  0.60517421519376516592,
      0.51555385717702173971,  0.41988910156026457697,  0.31930153013597997320,
      0.21497044021102406718,  0.10811901842394176303,  0,
      -0.10811901842394176303, -0.21497044021102406718, -0.31930153013597997320,
      -0.41988910156026457697, -0.51555385717702173971, -0.60517421519376516592,
      -0.68769945885342329308, -0.76216205512763646326, -0.82768899815689055614,
      -0.88351204444602292283, -0.92897671981679144179, -0.96354999251922296004,
      -0.98682652254152615177, -0.99853341385112386457};
  std::array<double, 29> ref_wgt = {
      0.15314667833712437549,  0.15269747274273314447,  0.15180037915135614611,
      0.15045802889306409854,  0.14867435931244850459,  0.14645460221971156933,
      0.14380526854486544786,  0.14073412924005270104,  0.13725019248600474379,
      0.13336367726949567055,  0.12908598340929333839,  0.12442965811852675778,
      0.11940835920154812854,  0.11403681499323946586,  0.10833078115826873236,
      0.10230699447701070135,  0.095983123753686407986, 0.089377717990716073687,
      0.082510151981299056244, 0.075400569479807162766, 0.068069824116682353565,
      0.060539418231145622245, 0.052831439801131255803, 0.044968497655441844420,
      0.036973655158157953077, 0.028870362559817507469, 0.020682388213790540811,
      0.012433748859603525667, 0.0041486391777043125721};
  IntegratorXX::GaussChebyshev1<double, double> quad(29);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 29; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("30 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 30> ref_pts = {
      0.99862953475457387378,  0.98768834059513772619,
      0.96592582628906828675,  0.93358042649720174899,
      0.89100652418836786236,  0.83867056794542402964,
      0.77714596145697087998,  0.70710678118654752440,
      0.62932039104983745271,  0.54463903501502708222,
      0.45399049973954679156,  0.35836794954530027348,
      0.25881904510252076235,  0.15643446504023086901,
      0.052335956242943832722, -0.052335956242943832722,
      -0.15643446504023086901, -0.25881904510252076235,
      -0.35836794954530027348, -0.45399049973954679156,
      -0.54463903501502708222, -0.62932039104983745271,
      -0.70710678118654752440, -0.77714596145697087998,
      -0.83867056794542402964, -0.89100652418836786236,
      -0.93358042649720174899, -0.96592582628906828675,
      -0.98768834059513772619, -0.99862953475457387378};
  std::array<double, 30> ref_wgt = {
      0.14804534910463122285,  0.14763956709324147292,
      0.14682911529074963058,  0.14561621508921251190,
      0.14400419096377487080,  0.14199746136051410876,
      0.13960152658578669902,  0.13682295373027078518,
      0.13366935866902710522,  0.13014938518691482301,
      0.12627268128657805148,  0.12204987274394122954,
      0.11749253398369590182,  0.11261315635460716755,
      0.10742511389159497840,  0.10194262665843404071,
      0.096180721771547433483, 0.090155192211725014830,
      0.083882553536660833568, 0.077379998612957472183,
      0.070665350491673750663, 0.063757013556580639351,
      0.056673923079024615754, 0.049435493317665078421,
      0.042061564305340830098, 0.034572347468919130355,
      0.026988370231179531472, 0.019330419746574883359,
      0.011619485925085875678, 0.0038767039003367715287};
  IntegratorXX::GaussChebyshev1<double, double> quad(30);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 30; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("31 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 31> ref_pts = {
      0.99871650717105280715,  0.98846832432811139916,
      0.96807711886620430515,  0.93775213214708045843,
      0.89780453957074165714,  0.84864425749475095046,
      0.79077573693769858208,  0.72479278722911995887,
      0.65137248272222220745,  0.57126821509479227916,
      0.48530196253108102521,  0.39435585511331858010,
      0.29936312297335795401,  0.20129852008866007914,
      0.10116832198743217779,  0,
      -0.10116832198743217779, -0.20129852008866007914,
      -0.29936312297335795401, -0.39435585511331858010,
      -0.48530196253108102521, -0.57126821509479227916,
      -0.65137248272222220745, -0.72479278722911995887,
      -0.79077573693769858208, -0.84864425749475095046,
      -0.89780453957074165714, -0.93775213214708045843,
      -0.96807711886620430515, -0.98846832432811139916,
      -0.99871650717105280715};
  std::array<double, 31> ref_wgt = {
      0.14327280991188528640,  0.14290503066367524828,  0.14217041625131059839,
      0.14107085241945195930,  0.13960916173268565153,  0.13778909633004088199,
      0.13561532829330266956,  0.13309343765384491048,  0.13022989806876987092,
      0.12703206020312325134,  0.12350813286084243820,  0.11966716191287452825,
      0.11551900707655534409,  0.11107431660585644232,  0.10634449995746988685,
      0.10134169850289655608,  0.096078754361719632906, 0.090569177436067817780,
      0.084827110730890324754, 0.078867294049066017322, 0.072705026154540818189,
      0.066356125500620076574, 0.059836889624225803307, 0.053164053310353133025,
      0.046354745634117253711, 0.039426445990663253015, 0.032396939225809472143,
      0.025284269982603362312, 0.018106696380981580121, 0.010882643149437970036,
      0.0036306543290097700934};
  IntegratorXX::GaussChebyshev1<double, double> quad(31);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 31; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("32 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 32> ref_pts = {
      0.99879545620517239271,   0.98917650996478097345,
      0.97003125319454399260,   0.94154406518302077841,
      0.90398929312344333159,   0.85772861000027206990,
      0.80320753148064490981,   0.74095112535495909118,
      0.67155895484701840063,   0.59569930449243334347,
      0.51410274419322172659,   0.42755509343028209432,
      0.33688985339222005069,   0.24298017990326388995,
      0.14673047445536175166,   0.049067674327418014255,
      -0.049067674327418014255, -0.14673047445536175166,
      -0.24298017990326388995,  -0.33688985339222005069,
      -0.42755509343028209432,  -0.51410274419322172659,
      -0.59569930449243334347,  -0.67155895484701840063,
      -0.74095112535495909118,  -0.80320753148064490981,
      -0.85772861000027206990,  -0.90398929312344333159,
      -0.94154406518302077841,  -0.97003125319454399260,
      -0.98917650996478097345,  -0.99879545620517239271};
  std::array<double, 32> ref_wgt = {
      0.13879827577757624016,  0.13846389857393493926,  0.13779594971062389334,
      0.13679603833496022934,  0.13546657332102981367,  0.13381075746649858689,
      0.13183257977679245452,  0.12953680585523382044,  0.12692896642228576562,
      0.12401534399156201872,  0.12080295773470137739,  0.11729954657156842355,
      0.11351355052651772035,  0.10945409039563588317,  0.10513094577394491956,
      0.10055453149550122992,  0.095735872543148133868, 0.090686577488366526238,
      0.085418810525209388850, 0.079945262165692859303, 0.074279118667241226526,
      0.068434030265837815929, 0.062424078291410886104, 0.056263741244676452824,
      0.049967859917161897265, 0.043551601638439276742, 0.037030423736699884448,
      0.030420036300696734585, 0.023736364332764715095, 0.016995509384095097453,
      0.010213710764688387573, 0.0034073064214341390264};
  IntegratorXX::GaussChebyshev1<double, double> quad(32);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 32; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("33 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 33> ref_pts = {0.99886733918300797666,
                                    0.98982144188093273238,
                                    0.97181156832354168738,
                                    0.94500081871466848739,
                                    0.90963199535451837141,
                                    0.86602540378443864676,
                                    0.81457595205033570778,
                                    0.75574957435425828377,
                                    0.69007901148211198967,
                                    0.61815898622060521322,
                                    0.54064081745559758211,
                                    0.45822652172741039456,
                                    0.37166245566032751915,
                                    0.28173255684142969771,
                                    0.18925124436041020362,
                                    0.095056043304182663632,
                                    0,
                                    -0.095056043304182663632,
                                    -0.18925124436041020362,
                                    -0.28173255684142969771,
                                    -0.37166245566032751915,
                                    -0.45822652172741039456,
                                    -0.54064081745559758211,
                                    -0.61815898622060521322,
                                    -0.69007901148211198967,
                                    -0.75574957435425828377,
                                    -0.81457595205033570778,
                                    -0.86602540378443864676,
                                    -0.90963199535451837141,
                                    -0.94500081871466848739,
                                    -0.97181156832354168738,
                                    -0.98982144188093273238,
                                    -0.99886733918300797666};
  std::array<double, 33> ref_wgt = {
      0.13459468757977192444,  0.13428978732217814323,
      0.13368067750414031532,  0.13276873795530671387,
      0.13155603451206619731,  0.13004531433776434531,
      0.12823999969949490001,  0.12614418021556408126,
      0.12376260359118976285,  0.12110066486342213059,
      0.11816439417964953648,  0.11496044313737516372,
      0.11149606971620930216,  0.10777912183621111816,
      0.10381801957982556275,  0.099621736117688449138,
      0.095199777381508886014, 0.090562160530076525692,
      0.085719391257175046876, 0.080682439992806746478,
      0.075462717051640121307, 0.070072046784977198954,
      0.064522640794794725489, 0.058827070270538021928,
      0.052998237511333568841, 0.047049346698131666998,
      0.040993873981989671616, 0.034845536956255459293,
      0.028618263581806450868, 0.022326160635738518519,
      0.015983481754978644686, 0.0096045951472128284316,
      0.0032039510422743727678};
  IntegratorXX::GaussChebyshev1<double, double> quad(33);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 33; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("34 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 34> ref_pts = {
      0.99893297480237244441,  0.99041043087520515835,
      0.97343805436069282581,  0.94816064759096585893,
      0.91479386848802097000,  0.87362239064636953713,
      0.82499747459830231554,  0.76933397098287890812,
      0.70710678118654752440,  0.63884680565196131707,
      0.56513641442259188898,  0.48660447856685628729,
      0.40392100487189496264,  0.31779141958190162617,
      0.22895054995013407691,  0.13815635495188219823,
      0.046183458645739591949, -0.046183458645739591949,
      -0.13815635495188219823, -0.22895054995013407691,
      -0.31779141958190162617, -0.40392100487189496264,
      -0.48660447856685628729, -0.56513641442259188898,
      -0.63884680565196131707, -0.70710678118654752440,
      -0.76933397098287890812, -0.82499747459830231554,
      -0.87362239064636953713, -0.91479386848802097000,
      -0.94816064759096585893, -0.97343805436069282581,
      -0.99041043087520515835, -0.99893297480237244441};
  std::array<double, 34> ref_wgt = {
      0.13063816508910354092,   0.13035937666125973704,
      0.12980239475412676190,   0.12896840799516368258,
      0.12785919615414310176,   0.12647712634503277105,
      0.12482514797445509253,   0.12290678644750475037,
      0.12072613564435657516,   0.11828784918371893863,
      0.11559713049177690972,   0.11265972169781854763,
      0.10948189138024162504,   0.10607042118909142067,
      0.10243259137367775962,   0.098576165246156096258,
      0.094509372614228140325,  0.090240892218317478247,
      0.085779833210700141868,  0.081135715716114593338,
      0.076318450515335764122,  0.071338317895069424976,
      0.066205945709302278151,  0.060932286698925956367,
      0.055528595118035993891,  0.050006402716786425666,
      0.044377494132053813102,  0.038653881738428259722,
      0.032847780013200669189,  0.026971579470052654827,
      0.021037820217075919954,  0.015059165195549628245,
      0.0090483731565855618389, 0.0030182714333102682754};
  IntegratorXX::GaussChebyshev1<double, double> quad(34);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 34; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("35 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 35> ref_pts = {
      0.99899306654131464737,   0.99094976176793475525,
      0.97492791218182360702,   0.95105651629515357212,
      0.91952777255145063832,   0.88059553185673799519,
      0.83457325372130265093,   0.78183148246802980871,
      0.72279486382739152855,   0.65793872593971261237,
      0.58778525229247312917,   0.51289927740590614391,
      0.43388373911755812048,   0.35137482408134270489,
      0.26603684556667510738,   0.17855689479863664801,
      0.089639308903433499766,  0,
      -0.089639308903433499766, -0.17855689479863664801,
      -0.26603684556667510738,  -0.35137482408134270489,
      -0.43388373911755812048,  -0.51289927740590614391,
      -0.58778525229247312917,  -0.65793872593971261237,
      -0.72279486382739152855,  -0.78183148246802980871,
      -0.83457325372130265093,  -0.88059553185673799519,
      -0.91952777255145063832,  -0.95105651629515357212,
      -0.97492791218182360702,  -0.99094976176793475525,
      -0.99899306654131464737};
  std::array<double, 35> ref_wgt = {
      0.12690755358514297848,  0.12665197866141340899,
      0.12614134350783807855,  0.12537667647565961900,
      0.12435951750251693861,  0.12309191501121575615,
      0.12157642178447767979,  0.11981608982397553670,
      0.11781446420400817247,  0.11557557593219260100,
      0.11310393383155112094,  0.11040451546034179481,
      0.10748275708791854378,  0.10434454274680814191,
      0.10099619238305176974,  0.097444449128674762406,
      0.093696465721916104321, 0.089759790102565521099,
      0.085642350211417242711, 0.081352438024452315113,
      0.076898692853902492385, 0.072290083949825144363,
      0.067535892437227292480, 0.062645692625115002144,
      0.057629332725109218734, 0.052496915018458188917,
      0.047258775511387464827, 0.041925463119758908688,
      0.036507718424958024484, 0.031016452043792432364,
      0.025462722655961631668, 0.019857714733347804304,
      0.014212716015977902961, 0.0085390947800174389472,
      0.0028482769435752049327};
  IntegratorXX::GaussChebyshev1<double, double> quad(35);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 35; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("36 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 36> ref_pts = {
      0.99904822158185776240,   0.99144486137381041114,
      0.97629600711993336597,   0.95371695074822692114,
      0.92387953251128675613,   0.88701083317822170105,
      0.84339144581288570127,   0.79335334029123516458,
      0.73727733681012404138,   0.67559020761566024435,
      0.60876142900872063942,   0.53729960834682383184,
      0.46174861323503393056,   0.38268343236508977173,
      0.30070579950427312162,   0.21643961393810287976,
      0.13052619222005159155,   0.043619387365335999782,
      -0.043619387365335999782, -0.13052619222005159155,
      -0.21643961393810287976,  -0.30070579950427312162,
      -0.38268343236508977173,  -0.46174861323503393056,
      -0.53729960834682383184,  -0.60876142900872063942,
      -0.67559020761566024435,  -0.73727733681012404138,
      -0.79335334029123516458,  -0.84339144581288570127,
      -0.88701083317822170105,  -0.92387953251128675613,
      -0.95371695074822692114,  -0.97629600711993336597,
      -0.99144486137381041114,  -0.99904822158185776240};
  std::array<double, 36> ref_wgt = {
      0.12338404589810973969,   0.12314917735405195544,
      0.12267988735155905631,   0.12197706921082348761,
      0.12104206078612171129,   0.11987664191913255199,
      0.11848303105090740183,   0.11686388099894159114,
      0.11502227390738550980,   0.11296171538000803936,
      0.11068612780708053347,   0.10819984289888400228,
      0.10550759344005239422,   0.10261450428044805138,
      0.099526082579718719113,  0.096248207324106150058,
      0.092787118135461653246,  0.089149403393771263197,
      0.085341987695799977466,  0.081372118673728246122,
      0.077247353198872187771,  0.072975542996749534845,
      0.068564819700873847684,  0.064023579373727949645,
      0.059360466524381790048,  0.054584357653178107754,
      0.049704344354809521460,  0.044729716011951299840,
      0.039669942112393465170,  0.034534654223332574525,
      0.029333627657136138634,  0.024076762863479937894,
      0.018774066583279359741,  0.013435632800289320243,
      0.0080716235266324820826, 0.0026922494588316080566};
  IntegratorXX::GaussChebyshev1<double, double> quad(36);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 36; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("37 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 37> ref_pts = {0.99909896620468147236,
                                    0.99190043525887688731,
                                    0.97755523894768619434,
                                    0.95616673473925093551,
                                    0.92788902729650932713,
                                    0.89292585814956848973,
                                    0.85152913773331129989,
                                    0.80399713036694054483,
                                    0.75067230525272435528,
                                    0.69193886897754620001,
                                    0.62821999729564231679,
                                    0.55997478613759539038,
                                    0.48769494381363454535,
                                    0.41190124824399267538,
                                    0.33313979474205756680,
                                    0.25197806138512519445,
                                    0.16900082032184907409,
                                    0.084805924475509191089,
                                    0,
                                    -0.084805924475509191089,
                                    -0.16900082032184907409,
                                    -0.25197806138512519445,
                                    -0.33313979474205756680,
                                    -0.41190124824399267538,
                                    -0.48769494381363454535,
                                    -0.55997478613759539038,
                                    -0.62821999729564231679,
                                    -0.69193886897754620001,
                                    -0.75067230525272435528,
                                    -0.80399713036694054483,
                                    -0.85152913773331129989,
                                    -0.89292585814956848973,
                                    -0.92788902729650932713,
                                    -0.95616673473925093551,
                                    -0.97755523894768619434,
                                    -0.99190043525887688731,
                                    -0.99909896620468147236};
  std::array<double, 37> ref_wgt = {
      0.12005086563500016811,  0.11983452586081141050,
      0.11940223617132952657,  0.11875477558179369820,
      0.11789331085994854265,  0.11681939442344977424,
      0.11553496154230265985,  0.11404232685137466326,
      0.11234418017926696638,  0.11044358170106152266,
      0.10834395642367872023,  0.10604908801378341298,
      0.10356311197936185003,  0.10089050821725676292,
      0.098036092940090455885, 0.095005009997124129618,
      0.091802721604693836519, 0.088434998502927448457,
      0.084907909556480898337, 0.081227810818033871683,
      0.077401334074253268195, 0.073435374894865381310,
      0.069337080206373175471, 0.065113835412811662467,
      0.060773251086750646182, 0.056323149254528548359,
      0.051771549300432251018, 0.047126653515224576206,
      0.042396832315061933330, 0.037590609157438643548,
      0.032716645181340429084, 0.027783723599286549047,
      0.022800733869387176806, 0.017776655675939041312,
      0.012720542747427381817, 0.0076415065410952701916,
      0.0025486998234818097151};
  IntegratorXX::GaussChebyshev1<double, double> quad(37);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 37; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("38 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 38> ref_pts = {
      0.99914575838730102919,  0.99232057973704506275,
      0.97871684532735448364,  0.95842748245825270023,
      0.93159108805127897294,  0.89839098189197887157,
      0.85905395436988518190,  0.81384871727019496710,
      0.76308406819980650614,  0.70710678118654752440,
      0.64629923786094089199,  0.58107681540193828000,
      0.51188504908960100217,  0.43919658884737036545,
      0.36350797056382984848,  0.28533622424910530907,
      0.20521534219563429132,  0.12369263126934761602,
      0.041324974248813211938, -0.041324974248813211938,
      -0.12369263126934761602, -0.20521534219563429132,
      -0.28533622424910530907, -0.36350797056382984848,
      -0.43919658884737036545, -0.51188504908960100217,
      -0.58107681540193828000, -0.64629923786094089199,
      -0.70710678118654752440, -0.76308406819980650614,
      -0.81384871727019496710, -0.85905395436988518190,
      -0.89839098189197887157, -0.93159108805127897294,
      -0.95842748245825270023, -0.97871684532735448364,
      -0.99232057973704506275, -0.99914575838730102919};
  std::array<double, 38> ref_wgt = {
      0.11689300034077862918,   0.11669329061052997302,
      0.11629421235075673927,   0.11569644737997137151,
      0.11490101696959918703,   0.11390928009915327810,
      0.11272293113444081021,   0.11134399693276746284,
      0.10977483338008572239,   0.10801812136600325146,
      0.10607686220352796498,   0.10395437250137510204,
      0.10165427849759687067,   0.099180509864215564384,
      0.096537292993444830720,  0.093729143776969470320,
      0.090760859890620245711,  0.087637512597625203552,
      0.084364438084441517944,  0.080947228343970440748,
      0.077391721621731233251,  0.073703992441316630759,
      0.069890341226171182120,  0.065957283535423481809,
      0.061911538932162694637,  0.057760019503177735910,
      0.053509818049772940070,  0.049168195969836011163,
      0.044742570851861538753,  0.040240503802125482013,
      0.035669686526661931796,  0.031037928190112376699,
      0.026353142073898908713,  0.021623332056515655718,
      0.016856578939036636150,  0.012061026639202676257,
      0.0072448682776745608793, 0.0024163321802238208378};
  IntegratorXX::GaussChebyshev1<double, double> quad(38);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 38; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("39 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 39> ref_pts = {
      0.99918899817156963770,   0.99270887409805399280,
      0.97979065204226770147,   0.96051811163137229844,
      0.93501624268541482344,   0.90345043461038227502,
      0.86602540378443864676,   0.82298386589365639458,
      0.77460496182765458307,   0.72120244734381453129,
      0.66312265824079520238,   0.60074226423797891692,
      0.53446582612780109204,   0.46472317204376854566,
      0.39196660986007507588,   0.31666799380147249909,
      0.23931566428755776715,   0.16041128085776024037,
      0.080466568716725880436,  0,
      -0.080466568716725880436, -0.16041128085776024037,
      -0.23931566428755776715,  -0.31666799380147249909,
      -0.39196660986007507588,  -0.46472317204376854566,
      -0.53446582612780109204,  -0.60074226423797891692,
      -0.66312265824079520238,  -0.72120244734381453129,
      -0.77460496182765458307,  -0.82298386589365639458,
      -0.86602540378443864676,  -0.90345043461038227502,
      -0.93501624268541482344,  -0.96051811163137229844,
      -0.97979065204226770147,  -0.99270887409805399280,
      -0.99918899817156963770};
  std::array<double, 39> ref_wgt = {
      0.11389697564807189180,  0.11371223433706534229,
      0.11334305136613426915,  0.11279002555140757327,
      0.11205405390277907974,  0.11113633016895420980,
      0.11003834290118521526,  0.10876187303883560394,
      0.10730899102068997943,  0.10568205342669476111,
      0.10388369915557689341,  0.10191684514454046063,
      0.099784681637983875034, 0.097490667012911796395,
      0.095038522169434983608, 0.092432224495456708233,
      0.089676001415335030632, 0.086774323532985032096,
      0.083731897380542916207, 0.080553657784353672781,
      0.077244759860664700324, 0.073810570654008401207,
      0.070256660431836323578, 0.066588793649524985258,
      0.062812919600408173217, 0.058935162766001400434,
      0.054961812882070491363, 0.050899314736657169074,
      0.046754257716609283888, 0.042533365119571249691,
      0.038243483248770678537, 0.033891570308289509477,
      0.029484685116831542478, 0.025029975658292687737,
      0.020534667487704947333, 0.016006052011359730476,
      0.011451474660120185180, 0.0068783229751054770210,
      0.0022940146250720786392};
  IntegratorXX::GaussChebyshev1<double, double> quad(39);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 39; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("40 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 40> ref_pts = {
      0.99922903624072293474,   0.99306845695492629564,
      0.98078528040323044913,   0.96245523645364728763,
      0.93819133592248413445,   0.90814317382508129926,
      0.87249600707279711453,   0.83146961230254523708,
      0.78531693088074492747,   0.73432250943568553564,
      0.67880074553294174139,   0.61909394930983398694,
      0.55557023301960222474,   0.48862124149695494742,
      0.41865973753742808668,   0.34611705707749297647,
      0.27144044986507425334,   0.19509032201612826785,
      0.11753739745783764411,   0.039259815759068609021,
      -0.039259815759068609021, -0.11753739745783764411,
      -0.19509032201612826785,  -0.27144044986507425334,
      -0.34611705707749297647,  -0.41865973753742808668,
      -0.48862124149695494742,  -0.55557023301960222474,
      -0.61909394930983398694,  -0.67880074553294174139,
      -0.73432250943568553564,  -0.78531693088074492747,
      -0.83146961230254523708,  -0.87249600707279711453,
      -0.90814317382508129926,  -0.93819133592248413445,
      -0.96245523645364728763,  -0.98078528040323044913,
      -0.99306845695492629564,  -0.99922903624072293474};
  std::array<double, 40> ref_wgt = {
      0.11105066325462411415,   0.11087943118099812122,
      0.11053723106119251838,   0.11002459054298888639,
      0.10934230008090936930,   0.10849141171739309452,
      0.10747323746062298528,   0.10628934726150423882,
      0.10494156659291382285,   0.10343197363495361224,
      0.10176289607054730135,   0.099936907496322049580,
      0.097956823454309020267,  0.095825697090581643193,
      0.093546814447525665802,  0.091123689396999971474,
      0.088560058222200863645,  0.085859873856584188314,
      0.083027299788728459461,  0.080066703642537246649,
      0.076982650442679687416,  0.073779895575653327055,
      0.070463377457322816686,  0.067038209918240593487,
      0.063509674318490826668,  0.059883211404214968298,
      0.056164412918375556332,  0.052359012978693863992,
      0.048472879236055990708,  0.044512003827020491572,
      0.040482494134378122768,  0.036390563370010250161,
      0.032242520994566470811,  0.028044762988733610126,
      0.023803761991097092705,  0.019526057317801389814,
      0.015218244879398503705,  0.010886967010431977557,
      0.0065389022274384753500, 0.0021807549311593508572};
  IntegratorXX::GaussChebyshev1<double, double> quad(40);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 40; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("41 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 41> ref_pts = {0.99926618105081002039,
                                    0.99340208975967506880,
                                    0.98170831999685493768,
                                    0.96425349545314098385,
                                    0.94114004797956157414,
                                    0.91250361647655001597,
                                    0.87851225091094237703,
                                    0.83936542613194995964,
                                    0.79529287127342644197,
                                    0.74655322161196265054,
                                    0.69343250079224172863,
                                    0.63624244232655983326,
                                    0.57531866021862059959,
                                    0.51101867944711036626,
                                    0.44371983786695968600,
                                    0.37381707184076879139,
                                    0.30172059859519231597,
                                    0.22785350890313757560,
                                    0.15264928421887449854,
                                    0.076549252836495646867,
                                    0,
                                    -0.076549252836495646867,
                                    -0.15264928421887449854,
                                    -0.22785350890313757560,
                                    -0.30172059859519231597,
                                    -0.37381707184076879139,
                                    -0.44371983786695968600,
                                    -0.51101867944711036626,
                                    -0.57531866021862059959,
                                    -0.63624244232655983326,
                                    -0.69343250079224172863,
                                    -0.74655322161196265054,
                                    -0.79529287127342644197,
                                    -0.83936542613194995964,
                                    -0.87851225091094237703,
                                    -0.91250361647655001597,
                                    -0.94114004797956157414,
                                    -0.96425349545314098385,
                                    -0.98170831999685493768,
                                    -0.99340208975967506880,
                                    -0.99926618105081002039};
  std::array<double, 41> ref_wgt = {
      0.10834311696239873512,  0.10818410849791610613,
      0.10786632493579948606,  0.10739023266724811944,
      0.10675653042331845795,  0.10596614824943998118,
      0.10502024614044527713,  0.10392021233811766394,
      0.10266766129375493664,  0.10126443129873945736,
      0.099712581786592054338, 0.098014390310469337555,
      0.096172349200540370515, 0.094189161906148458856,
      0.092067739028126437759, 0.089811194047088582628,
      0.087422838753968463706, 0.084906178389509060456,
      0.082264906499838604219, 0.079502899515682301005,
      0.076624211063165688743, 0.073633066014559309569,
      0.070533854287696049770, 0.067331124403161357466,
      0.064029576808712049842, 0.060634056980721045889,
      0.057149548312772605805, 0.053581164801845044190,
      0.049934143542814952470, 0.046213837042298280603,
      0.042425705363108776177, 0.038575308110862871422,
      0.034668296274491780488, 0.030710403932635980668,
      0.026707439838094087342, 0.022665278892677104412,
      0.018589853524979877207, 0.014487144983724057259,
      0.010363174559450798767, 0.0062239947474465632447,
      0.0020756803648716573442};
  IntegratorXX::GaussChebyshev1<double, double> quad(41);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 41; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("42 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 42> ref_pts = {
      0.99930070478839855270,  0.99371220989324258353,
      0.98256647323328823615,  0.96592582628906828675,
      0.94388333030836756290,  0.91656225586997618582,
      0.88411539350460978945,  0.84672419922828416835,
      0.80459777976666832735,  0.75797172314545298179,
      0.70710678118654752440,  0.65228741127812115437,
      0.59382018557350161165,  0.53203207651533656356,
      0.46726862827306198914,  0.39989202431974097188,
      0.33027906195516708177,  0.25881904510252076235,
      0.18591160716291458111,  0.11196447610330785847,
      0.037391194276325621096, -0.037391194276325621096,
      -0.11196447610330785847, -0.18591160716291458111,
      -0.25881904510252076235, -0.33027906195516708177,
      -0.39989202431974097188, -0.46726862827306198914,
      -0.53203207651533656356, -0.59382018557350161165,
      -0.65228741127812115437, -0.70710678118654752440,
      -0.75797172314545298179, -0.80459777976666832735,
      -0.84672419922828416835, -0.88411539350460978945,
      -0.91656225586997618582, -0.94388333030836756290,
      -0.96592582628906828675, -0.98256647323328823615,
      -0.99371220989324258353, -0.99930070478839855270};
  std::array<double, 42> ref_wgt = {
      0.10576443210858771774,   0.10561651098672515423,
      0.10532087562406445362,   0.10487793949339259327,
      0.10428832208094002141,   0.10355284801997314787,
      0.10267254593747015505,   0.10164864701549315722,
      0.10048258326926875916,   0.099175985544385274410,
      0.097730681235907703702,  0.096148691732600497648,
      0.094432229589832589211,  0.092583695435118643907,
      0.090605674610624408118,  0.088500933557331915376,
      0.086272415945921622534,  0.083923238559782787017,
      0.081456686935910067409,  0.078876210769782947645,
      0.076185419090654676435,  0.073388075213998516615,
      0.070488091478170764750,  0.067489523772651793687,
      0.064396565865517867736,  0.061213543538077274074,
      0.057944908534874012103,  0.054595232337520507668,
      0.051169199771067210069,  0.047671602451851142124,
      0.044107332085987179542,  0.040481373627874725539,
      0.036798798308288227726,  0.033064756541802383120,
      0.029284470723471638440,  0.025463227924838480785,
      0.021606372499485811515,  0.017719298608475207001,
      0.013807442676124916685,  0.0098762757866788751146,
      0.0059312960325006738354, 0.0019780208244942357893};
  IntegratorXX::GaussChebyshev1<double, double> quad(42);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 42; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("43 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 43> ref_pts = {
      0.99933284837023937207,   0.99400097523994591879,
      0.98336567682946611968,   0.96748369705742525451,
      0.94643977315760935387,   0.92034618356915944631,
      0.88934214888251890342,   0.85359308903734644834,
      0.81328974073556535201,   0.76864713977853207117,
      0.71990347375799584864,   0.66731881122223941583,
      0.61117371409784929225,   0.55176774077044590495,
      0.48941784781108550916,   0.42445669887581508540,
      0.35723088980113278120,   0.28809909936523756893,
      0.21743017558155696835,   0.14560116773500487240,
      0.072995314660907525290,  0,
      -0.072995314660907525290, -0.14560116773500487240,
      -0.21743017558155696835,  -0.28809909936523756893,
      -0.35723088980113278120,  -0.42445669887581508540,
      -0.48941784781108550916,  -0.55176774077044590495,
      -0.61117371409784929225,  -0.66731881122223941583,
      -0.71990347375799584864,  -0.76864713977853207117,
      -0.81328974073556535201,  -0.85359308903734644834,
      -0.88934214888251890342,  -0.92034618356915944631,
      -0.94643977315760935387,  -0.96748369705742525451,
      -0.98336567682946611968,  -0.99400097523994591879,
      -0.99933284837023937207};
  std::array<double, 43> ref_wgt = {
      0.10330562458612287489,   0.10316778355451073195,
      0.10289228541302422192,   0.10247949775973152231,
      0.10192997137854391169,   0.10124443950430300161,
      0.10042381684442309744,   0.099469198358394113922,
      0.098381857796773558789,  0.097163246001617012017,
      0.095814988970614842036,  0.094338885687518187492,
      0.092736905721749074277,  0.091011186600397515870,
      0.089164030956112149812,  0.087197903454689989154,
      0.085115427506464815866,  0.082919381765882221415,
      0.080612696423931922928,  0.078198449298384374590,
      0.075679861727048484318,  0.073060294269530075313,
      0.070343242223226250198,  0.067532330959538681065,
      0.064631311086528731249,  0.061644053444468893867,
      0.058574543940967999140,  0.055426878232561699783,
      0.052205256259864605606,  0.048913976643575831639,
      0.045557430948815387862,  0.042140097825444525172,
      0.038666537032188627267,  0.035141383352536280729,
      0.031569340410532559034,  0.027955174394718127644,
      0.024303707698588338706,  0.020619812486057871507,
      0.016908404190516540200,  0.013174434956150499812,
      0.0094228870302801170392, 0.0056587661155311309390,
      0.0018870946907093232152};
  IntegratorXX::GaussChebyshev1<double, double> quad(43);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 43; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("44 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 44> ref_pts = {
      0.99936282565699169131,   0.99427030177189731837,
      0.98411120433611610614,   0.96893730178150732996,
      0.94882591683731963814,   0.92387953251128675613,
      0.89422526985971128240,   0.86001424020770052340,
      0.82142077512049156131,   0.77864153804975517562,
      0.73189452218172542500,   0.68141793959389110718,
      0.62746900738085196925,   0.57032263693496406021,
      0.51027003306089961332,   0.44761721006271254934,
      0.38268343236508977173,   0.31579958761502491553,
      0.24730650055421550199,   0.17755319625430326814,
      0.10689512156511278441,   0.035692333838980455760,
      -0.035692333838980455760, -0.10689512156511278441,
      -0.17755319625430326814,  -0.24730650055421550199,
      -0.31579958761502491553,  -0.38268343236508977173,
      -0.44761721006271254934,  -0.51027003306089961332,
      -0.57032263693496406021,  -0.62746900738085196925,
      -0.68141793959389110718,  -0.73189452218172542500,
      -0.77864153804975517562,  -0.82142077512049156131,
      -0.86001424020770052340,  -0.89422526985971128240,
      -0.92387953251128675613,  -0.94882591683731963814,
      -0.96893730178150732996,  -0.98411120433611610614,
      -0.99427030177189731837,  -0.99936282565699169131};
  std::array<double, 44> ref_wgt = {
      0.10095852634152822334,   0.10082986997614272279,
      0.10057272119844189839,   0.10018740770563272395,
      0.099674420521458465317,  0.099034413370463218329,
      0.098268201844918895015,  0.097376762365476283570,
      0.096361230936864675023,  0.095222901700225729157,
      0.093963225283926411112,  0.092583806954952638043,
      0.091086404573239404919,  0.089472926351544286149,
      0.087745428423719015338,  0.085906112224478013049,
      0.083957321684002951132,  0.081901540240958405595,
      0.079741387677725057601,  0.077479616781883458994,
      0.075119109838202796145,  0.072662874955605081605,
      0.070114042233785501955,  0.067475859774373984133,
      0.064751689541721151295,  0.061945003078583470162,
      0.059059377082167300865,  0.056098488846169511741,
      0.053066111574623088634,  0.049966109573519533382,
      0.046802433326335601186,  0.043579114459739872874,
      0.040300260605894607283,  0.036970050167900092651,
      0.033592726995052146111,  0.030172594974698339916,
      0.026714012547584815299,  0.023221387153683044543,
      0.019699169615574494640,  0.016151848466550718906,
      0.012583944230656854747,  0.0090000036619677466321,
      0.0054045939504378651746, 0.0018022969017087898640};
  IntegratorXX::GaussChebyshev1<double, double> quad(44);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 44; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("45 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 45> ref_pts = {0.99939082701909573001,
                                    0.99452189536827333692,
                                    0.98480775301220805937,
                                    0.97029572627599647231,
                                    0.95105651629515357212,
                                    0.92718385456678740081,
                                    0.89879404629916699278,
                                    0.86602540378443864676,
                                    0.82903757255504169201,
                                    0.78801075360672195669,
                                    0.74314482547739423501,
                                    0.69465837045899728666,
                                    0.64278760968653932632,
                                    0.58778525229247312917,
                                    0.52991926423320495405,
                                    0.46947156278589077596,
                                    0.40673664307580020775,
                                    0.34202014332566873304,
                                    0.27563735581699918565,
                                    0.20791169081775933710,
                                    0.13917310096006544411,
                                    0.069756473744125300776,
                                    0,
                                    -0.069756473744125300776,
                                    -0.13917310096006544411,
                                    -0.20791169081775933710,
                                    -0.27563735581699918565,
                                    -0.34202014332566873304,
                                    -0.40673664307580020775,
                                    -0.46947156278589077596,
                                    -0.52991926423320495405,
                                    -0.58778525229247312917,
                                    -0.64278760968653932632,
                                    -0.69465837045899728666,
                                    -0.74314482547739423501,
                                    -0.78801075360672195669,
                                    -0.82903757255504169201,
                                    -0.86602540378443864676,
                                    -0.89879404629916699278,
                                    -0.92718385456678740081,
                                    -0.95105651629515357212,
                                    -0.97029572627599647231,
                                    -0.98480775301220805937,
                                    -0.99452189536827333692,
                                    -0.99939082701909573001};
  std::array<double, 45> ref_wgt = {
      0.098715694790384400115,  0.098595424922269410953,
      0.098355031716347577771,  0.097994808054710581644,
      0.097515192814401925893,  0.096916770332712862399,
      0.096200269695257412479,  0.095366563847693853225,
      0.094416668532174899865,  0.093351741049822355766,
      0.092173078850733964084,  0.090882117953240320535,
      0.089480431194337739228,  0.087969726313428649623,
      0.086351843871704191762,  0.084628755009703921578,
      0.082802559045784694373,  0.080875480918424622191,
      0.078849868475478263740,  0.076728189613685671847,
      0.074513029271920366056,  0.072207086281839494553,
      0.069813170079773183077,  0.067334197283859127156,
      0.064773188140592661906,  0.062133262845121640773,
      0.059417637739769277094,  0.056629621395416462810,
      0.053772610580517796382,  0.050850086122662452925,
      0.047865608667721947190,  0.044822814341751614571,
      0.041725410320931114961,  0.038577170314941304551,
      0.035381929969280285119,  0.032143582192120200493,
      0.028866072411398285323,  0.025553393767920670148,
      0.022209582250335405312,  0.018838711777901989709,
      0.015444889237048292236,  0.012032249477762056794,
      0.0086049502759131170366, 0.0051671672676439552505,
      0.0017230888620002701840};
  IntegratorXX::GaussChebyshev1<double, double> quad(45);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 45; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("46 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 46> ref_pts = {
      0.99941702236617402895,  0.99475727885809482918,
      0.98545951771719686801,  0.97156708939794148293,
      0.95314476681416082173,  0.93027844333783315439,
      0.90307473232453270466,  0.87166047003275122082,
      0.83618212425471087022,  0.79680511141590459530,
      0.75371302532736111352,  0.70710678118654752440,
      0.65720367881797246116,  0.60423638952109452076,
      0.54845187124931871364,  0.49011021717801722536,
      0.42948344303008190040,  0.36685421881305651570,
      0.30251455088107578749,  0.23676442046644673699,
      0.16991038502866666211,  0.10226414894203423714,
      0.034141110185967895283, -0.034141110185967895283,
      -0.10226414894203423714, -0.16991038502866666211,
      -0.23676442046644673699, -0.30251455088107578749,
      -0.36685421881305651570, -0.42948344303008190040,
      -0.49011021717801722536, -0.54845187124931871364,
      -0.60423638952109452076, -0.65720367881797246116,
      -0.70710678118654752440, -0.75371302532736111352,
      -0.79680511141590459530, -0.83618212425471087022,
      -0.87166047003275122082, -0.90307473232453270466,
      -0.93027844333783315439, -0.95314476681416082173,
      -0.97156708939794148293, -0.98545951771719686801,
      -0.99475727885809482918, -0.99941702236617402895};
  std::array<double, 46> ref_wgt = {
      0.096570334035200548764,  0.096457737345533299054,
      0.096232675248902237335,  0.095895410157644479385,
      0.095446335307769772298,  0.094885974300464897494,
      0.094214980491598108842,  0.093434136229935416412,
      0.092544351944956921614,  0.091546665085336769040,
      0.090442238909324399930,  0.089232361128437468598,
      0.087918442406047815202,  0.086502014712611076469,
      0.084984729539457663056,  0.083368355973227743372,
      0.081654778633195356550,  0.079845995473886642352,
      0.077944115455554236896,  0.075951356085223956824,
      0.073870040831180801491,  0.071702596413908866855,
      0.069451549976643813922,  0.067119526138836901019,
      0.064709243935966109012,  0.062223513649262402829,
      0.059665233529047526629,  0.057037386415503774190,
      0.054343036260815765802,  0.051585324556739258772,
      0.048767466671762286518,  0.045892748102129332502,
      0.042964520641099677122,  0.039986198470906390976,
      0.036961254181972575492,  0.033893214724026266709,
      0.030785657293834821135,  0.027642205164353501419,
      0.024466523460151288020,  0.021262314884039581405,
      0.018033315399886354548,  0.014783289876649401307,
      0.011516027698707543068,  0.0082353383476079510958,
      0.0049450469603810695927, 0.0016489898696019455569};
  IntegratorXX::GaussChebyshev1<double, double> quad(46);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 46; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("47 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 47> ref_pts = {
      0.99944156373025460632,   0.99497781508850407554,
      0.98607025399002854229,   0.97275866376503715666,
      0.95510249720691242606,   0.93318061104160258375,
      0.90709091373434074258,   0.87694992820667152229,
      0.84289227141679706163,   0.80507005312756292380,
      0.76365219654733202138,   0.71882368387792933477,
      0.67078473013922344909,   0.61974988896024488547,
      0.56594709433059516478,   0.50961664259191742937,
      0.45101011921610184028,   0.39038927516349481322,
      0.32802485783956909898,   0.26419540187128600945,
      0.19918598510383609885,   0.13328695537377884280,
      0.066792633745121553981,  0,
      -0.066792633745121553981, -0.13328695537377884280,
      -0.19918598510383609885,  -0.26419540187128600945,
      -0.32802485783956909898,  -0.39038927516349481322,
      -0.45101011921610184028,  -0.50961664259191742937,
      -0.56594709433059516478,  -0.61974988896024488547,
      -0.67078473013922344909,  -0.71882368387792933477,
      -0.76365219654733202138,  -0.80507005312756292380,
      -0.84289227141679706163,  -0.87694992820667152229,
      -0.90709091373434074258,  -0.93318061104160258375,
      -0.95510249720691242606,  -0.97275866376503715666,
      -0.98607025399002854229,  -0.99497781508850407554,
      -0.99944156373025460632};
  std::array<double, 47> ref_wgt = {
      0.094516226130024776558,  0.094410663552523850271,
      0.094199656297466006351,  0.093883440033060052232,
      0.093462367932568243282,  0.092936910279856764508,
      0.092307653944148594647,  0.091575301724565386750,
      0.090740671565190428429,  0.089804695641529356396,
      0.088768419319388932226,  0.087632999987336679068,
      0.086399705764045373056,  0.085069914081966120869,
      0.083645110148911880088,  0.082126885289269637463,
      0.080516935166693899671,  0.078817057890266521381,
      0.077029152006238048720,  0.075155214377593547092,
      0.073197337953811168024,  0.071157709433304350483,
      0.069038606821158410756,  0.066842396884889217840,
      0.064571532511065547608,  0.062228549965747431660,
      0.059816066061800242028,  0.057336775236248260860,
      0.054793446540931958607,  0.052188920549830032978,
      0.049526106186500335741,  0.046807977475183031480,
      0.044037570219194591972,  0.041217978610322436731,
      0.038352351773007093715,  0.035443890247171588265,
      0.032495842413626291531,  0.029511500866041595565,
      0.026494198733540459151,  0.023447305958018019801,
      0.020374225530346031397,  0.017278389689665807387,
      0.014163256090014574889,  0.011032303938566629453,
      0.0078890301098023828897, 0.0047369452399452820541,
      0.0015795698060286147351};
  IntegratorXX::GaussChebyshev1<double, double> quad(47);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 47; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("48 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 48> ref_pts = {
      0.99946458747636564443,   0.99518472667219688624,
      0.98664333208487900475,   0.97387697927733364815,
      0.95694033573220886494,   0.93590592675732570029,
      0.91086382492117581857,   0.88192126434835502971,
      0.84920218152657888765,   0.81284668459161521658,
      0.77301045336273696081,   0.72986407269783565735,
      0.68359230202287128051,   0.63439328416364549822,
      0.58247769686780214920,   0.52806785065036799587,
      0.47139673682599764856,   0.41270702980439473705,
      0.35225004792123350653,   0.29028467725446236764,
      0.22707626303437320759,   0.16289547339458873948,
      0.098017140329560601994,  0.032719082821776142064,
      -0.032719082821776142064, -0.098017140329560601994,
      -0.16289547339458873948,  -0.22707626303437320759,
      -0.29028467725446236764,  -0.35225004792123350653,
      -0.41270702980439473705,  -0.47139673682599764856,
      -0.52806785065036799587,  -0.58247769686780214920,
      -0.63439328416364549822,  -0.68359230202287128051,
      -0.72986407269783565735,  -0.77301045336273696081,
      -0.81284668459161521658,  -0.84920218152657888765,
      -0.88192126434835502971,  -0.91086382492117581857,
      -0.93590592675732570029,  -0.95694033573220886494,
      -0.97387697927733364815,  -0.98664333208487900475,
      -0.99518472667219688624,  -0.99946458747636564443};
  std::array<double, 48> ref_wgt = {
      0.092547670928347751665,  0.092448568564251294560,
      0.092250469957352098380,  0.091953587236600259822,
      0.091558238311449261237,  0.091064846531430565078,
      0.090473940232820331858,  0.089786152172883702260,
      0.089002218852302468780,  0.088122979726511698335,
      0.087149376306789826327,  0.086082451152064797409,
      0.084923346752515852186,  0.083673304306166427029,
      0.082333662389778221957,  0.080905855525469676515,
      0.079391412644593754493,  0.077791955450519955612,
      0.076109196682073728228,  0.074344938279492835611,
      0.072501069454864615667,  0.070579564669110358211,
      0.068582481517683095600,  0.066511958527242854481,
      0.064370212865668743977,  0.062159537967860056742,
      0.059882301079868734518,  0.057540940723993002663,
      0.055137964087546614896,  0.052675944338099879527,
      0.050157517868067374358,  0.047585381471592914719,
      0.044962289456754836946,  0.042291050696183920202,
      0.039574525619252218853,  0.036815623149053644926,
      0.034017297587456258574,  0.031182545451561830560,
      0.028314402264960275116,  0.025415939307214958283,
      0.022490260325059614299,  0.019540498208828602735,
      0.016569811637679468117,  0.013581381697200181742,
      0.010578408473023016575,  0.0075641076240926988011,
      0.0045417069392582663451, 0.0015144428808759220228};
  IntegratorXX::GaussChebyshev1<double, double> quad(48);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 48; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("49 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 49> ref_pts = {0.99948621620068786770,
                                    0.99537911294919820461,
                                    0.98718178341445013411,
                                    0.97492791218182360702,
                                    0.95866785303666062215,
                                    0.93846842204976040297,
                                    0.91441262301581248132,
                                    0.88659930637300006006,
                                    0.85514276300534616572,
                                    0.82017225459695588021,
                                    0.78183148246802980871,
                                    0.74027799707531553887,
                                    0.69568255060348639801,
                                    0.64822839530778840163,
                                    0.59811053049121596206,
                                    0.54553490121054866513,
                                    0.49071755200393788669,
                                    0.43388373911755812048,
                                    0.37526700487937413389,
                                    0.31510821802362068847,
                                    0.25365458390950738785,
                                    0.19115862870137230216,
                                    0.12787716168450601059,
                                    0.064070219980712923421,
                                    0,
                                    -0.064070219980712923421,
                                    -0.12787716168450601059,
                                    -0.19115862870137230216,
                                    -0.25365458390950738785,
                                    -0.31510821802362068847,
                                    -0.37526700487937413389,
                                    -0.43388373911755812048,
                                    -0.49071755200393788669,
                                    -0.54553490121054866513,
                                    -0.59811053049121596206,
                                    -0.64822839530778840163,
                                    -0.69568255060348639801,
                                    -0.74027799707531553887,
                                    -0.78183148246802980871,
                                    -0.82017225459695588021,
                                    -0.85514276300534616572,
                                    -0.88659930637300006006,
                                    -0.91441262301581248132,
                                    -0.93846842204976040297,
                                    -0.95866785303666062215,
                                    -0.97492791218182360702,
                                    -0.98718178341445013411,
                                    -0.99537911294919820461,
                                    -0.99948621620068786770};
  std::array<double, 49> ref_wgt = {
      0.090659433289480527254,  0.090566274593322619034,
      0.090380052927864504545,  0.090100959648455770391,
      0.089729281542307330777,  0.089265400533798181869,
      0.088709793292022284816,  0.088063030740978849526,
      0.087325777472909331808,  0.086498791065383979744,
      0.085582921302839669071,  0.084579109303368950019,
      0.083488386551657588938,  0.082311873839064326720,
      0.081050780111931993745,  0.079706401229313419506,
      0.078280118631388657544,  0.076773397919941816985,
      0.075187787352356156702,  0.073524916250674963949,
      0.071786493327363014954,  0.069974304929489010752,
      0.068090213203133209485,  0.066136154179906450431,
      0.064114135787546800785,  0.062026235786638071649,
      0.059874599635570364406,  0.057661438285936544854,
      0.055389025910630024256,  0.053059697566978380391,
      0.050675846797314106818,  0.048239923169448066057,
      0.045754429759572976524,  0.043221920580183419998,
      0.040644997955655355714,  0.038026309848181910513,
      0.035368547136813226801,  0.032674440852396338812,
      0.029946759371256363348,  0.027188305570502687291,
      0.024401913947883267071,  0.021590447709146584493,
      0.018756795825904191405,  0.015903870067017088317,
      0.013034602006556388158,  0.010151940011412787829,
      0.0072588462116502824732, 0.0043582934567172887957,
      0.0014532622606428762890};
  IntegratorXX::GaussChebyshev1<double, double> quad(49);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 49; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("50 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 50> ref_pts = {
      0.99950656036573155700,   0.99556196460308001290,
      0.98768834059513772619,   0.97591676193874739896,
      0.96029368567694307175,   0.94088076895422547232,
      0.91775462568398114115,   0.89100652418836786236,
      0.86074202700394363716,   0.82708057427456182492,
      0.79015501237569036516,   0.75011106963045954151,
      0.70710678118654752440,   0.66131186532365187657,
      0.61290705365297649336,   0.56208337785213060010,
      0.50904141575037130028,   0.45399049973954679156,
      0.39714789063478061375,   0.33873792024529138122,
      0.27899110603922925185,   0.21814324139654255202,
      0.15643446504023086901,   0.094108313318514318473,
      0.031410759078128293839,  -0.031410759078128293839,
      -0.094108313318514318473, -0.15643446504023086901,
      -0.21814324139654255202,  -0.27899110603922925185,
      -0.33873792024529138122,  -0.39714789063478061375,
      -0.45399049973954679156,  -0.50904141575037130028,
      -0.56208337785213060010,  -0.61290705365297649336,
      -0.66131186532365187657,  -0.70710678118654752440,
      -0.75011106963045954151,  -0.79015501237569036516,
      -0.82708057427456182492,  -0.86074202700394363716,
      -0.89100652418836786236,  -0.91775462568398114115,
      -0.94088076895422547232,  -0.96029368567694307175,
      -0.97591676193874739896,  -0.98768834059513772619,
      -0.99556196460308001290,  -0.99950656036573155700};
  std::array<double, 50> ref_wgt = {
      0.088846696614320263627,  0.088759015651353604620,
      0.088583740255944883751,  0.088321043403748114493,
      0.087971184344840639735,  0.087534508347874605091,
      0.087011446359338484014,  0.086402514578264922483,
      0.085708313946804615235,  0.084929529557168955665,
      0.084066929975526735355,  0.083121366483522125606,
      0.082093772238162471110,  0.080985161350904985115,
      0.079796627886851176319,  0.078529344785036681754,
      0.077184562700882049266,  0.075763608771946830887,
      0.074267885308205038820,  0.072698868408134504022,
      0.071058106501985890115,  0.069347218823668980230,
      0.067567893812764300529,  0.065721887448237102011,
      0.063811021515498123712,  0.061837181808521339130,
      0.059802316268792978576,  0.057708433062928460090,
      0.055557598600854388917,  0.053351935496511440644,
      0.051093620473090668036,  0.048784882214870510447,
      0.046427999167774483310,  0.044025297290820131739,
      0.041579147760678296647,  0.039091964631608016257,
      0.036566202453076424729,  0.034004353847414769453,
      0.031408947049901108044,  0.028782543413697326446,
      0.026127734882102804064,  0.023447141430619306386,
      0.020743408481351478213,  0.018019204292294612055,
      0.015277217324086149474,  0.012520153586819613711,
      0.0097507339695393479381, 0.0069716915550515254066,
      0.0041857689227013888403, 0.0013957154417785522987};
  IntegratorXX::GaussChebyshev1<double, double> quad(50);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 50; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("55 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 55> ref_pts = {
      0.99959219282818922963,   0.99633173086269138762,
      0.98982144188093273238,   0.98008256109239340856,
      0.96714685470195713906,   0.95105651629515357212,
      0.93186402921145231619,   0.90963199535451837141,
      0.88443293099781432224,   0.85634903025158897463,
      0.82547189696277395698,   0.79190224592227509676,
      0.75574957435425828377,   0.71713180475896348780,
      0.67617490027401943528,   0.63301245380887038873,
      0.58778525229247312917,   0.54064081745559758211,
      0.49173292464560377284,   0.44122110124322129326,
      0.38927010631739149039,   0.33604939321543012640,
      0.28173255684142969771,   0.22649676742576438039,
      0.17052219263262378440,   0.11399140989054062530,
      0.057088810862767983749,  0,
      -0.057088810862767983749, -0.11399140989054062530,
      -0.17052219263262378440,  -0.22649676742576438039,
      -0.28173255684142969771,  -0.33604939321543012640,
      -0.38927010631739149039,  -0.44122110124322129326,
      -0.49173292464560377284,  -0.54064081745559758211,
      -0.58778525229247312917,  -0.63301245380887038873,
      -0.67617490027401943528,  -0.71713180475896348780,
      -0.75574957435425828377,  -0.79190224592227509676,
      -0.82547189696277395698,  -0.85634903025158897463,
      -0.88443293099781432224,  -0.90963199535451837141,
      -0.93186402921145231619,  -0.95105651629515357212,
      -0.96714685470195713906,  -0.98008256109239340856,
      -0.98982144188093273238,  -0.99633173086269138762,
      -0.99959219282818922963};
  std::array<double, 55> ref_wgt = {
      0.080771453730628212376,  0.080705575374410348398,
      0.080573872393306885941,  0.080376452206158310705,
      0.080113475831700981518,  0.079785157757237939367,
      0.079391765763699986513,  0.078933620707239718385,
      0.078411096257536643276,  0.077824618593026831968,
      0.077174666053305672324,  0.076461768748987234171,
      0.075686508129338448759,  0.074849516508040746560,
      0.073951476547465949028,  0.072993120701887046292,
      0.071975230620077986055,  0.070898636507789721891,
      0.069764216450622494606,  0.068572895697846621760,
      0.067325645907755921366,  0.066023484355169270355,
      0.064667473101726670896,  0.063258718129656542996,
      0.061798368439720755214,  0.060287615114073122450,
      0.058727690344795716857,  0.057119866428905331608,
      0.055465454730649784657,  0.053765804611940428500,
      0.052022302331793220542,  0.050236369915675985707,
      0.048409463995684047887,  0.046543074622490199613,
      0.044638724050038000604,  0.042697965493969626766,
      0.040722381864800913696,  0.038713584476876835293,
      0.036673211734160411922,  0.034602927793926937520,
      0.032504421209453435830,  0.030379403552810387688,
      0.028229608018879000199,  0.026056788011732601330,
      0.023862715714535127545,  0.021649180644123115765,
      0.019417988191450103346,  0.017170958149083870521,
      0.014909923226957519709,  0.012636727557584966375,
      0.010353225191960009143,  0.0080612785873657454480,
      0.0057627570883276970590, 0.0034595354019496018943,
      0.0011534920688754101213};
  IntegratorXX::GaussChebyshev1<double, double> quad(55);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 55; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("60 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 60> ref_pts = {
      0.99965732497555728004,   0.99691733373312797620,
      0.99144486137381041114,   0.98325490756395458455,
      0.97236992039767660183,   0.95881973486819304976,
      0.94264149109217839478,   0.92387953251128675613,
      0.90258528434986060676,   0.87881711266196537413,
      0.85264016435409222152,   0.82412618862201566173,
      0.79335334029123516458,   0.76040596560003093817,
      0.72537437101228763799,   0.68835457569375398439,
      0.64944804833018365573,   0.60876142900872063942,
      0.56640623692483283182,   0.52249856471594886499,
      0.47715876025960841505,   0.43051109680829514438,
      0.38268343236508977173,   0.33380685923377092883,
      0.28401534470392261744,   0.23344536385590541177,
      0.18223552549214745660,   0.13052619222005159155,
      0.078459095727844945033,  0.026176948307873152611,
      -0.026176948307873152611, -0.078459095727844945033,
      -0.13052619222005159155,  -0.18223552549214745660,
      -0.23344536385590541177,  -0.28401534470392261744,
      -0.33380685923377092883,  -0.38268343236508977173,
      -0.43051109680829514438,  -0.47715876025960841505,
      -0.52249856471594886499,  -0.56640623692483283182,
      -0.60876142900872063942,  -0.64944804833018365573,
      -0.68835457569375398439,  -0.72537437101228763799,
      -0.76040596560003093817,  -0.79335334029123516458,
      -0.82412618862201566173,  -0.85264016435409222152,
      -0.87881711266196537413,  -0.90258528434986060676,
      -0.92387953251128675613,  -0.94264149109217839478,
      -0.95881973486819304976,  -0.97236992039767660183,
      -0.98325490756395458455,  -0.99144486137381041114,
      -0.99691733373312797620,  -0.99965732497555728004};
  std::array<double, 60> ref_wgt = {
      0.074041705093310857588,  0.073990960607105595665,
      0.073889506412431173263,  0.073737412040924870129,
      0.073534781730471633308,  0.073281754353764637599,
      0.072978503323128878495,  0.072625236471673026775,
      0.072222195910850997311,  0.071769657864530852296,
      0.071267932479684759763,  0.070717363613829751049,
      0.070118328599364954684,  0.069471237984966818206,
      0.068776535254219552689,  0.068034696521673636619,
      0.067246230206540685452,  0.066411676684248320080,
      0.065531607916093841090,  0.064606627057250525704,
      0.063637368043395200285,  0.062624495156240393232,
      0.061568702568268830830,  0.060470713866982292274,
      0.059331281558990879954,  0.058151186554282577434,
      0.056931237631026551013,  0.055672270881276991948,
      0.054375149137957386242,  0.053040761383517928355,
      0.051670022140671355502,  0.050263870845624761772,
      0.048823271204236947673,  0.047349210531542562690,
      0.045842699075095698025,  0.044304769322596676012,
      0.042736475294276554227,  0.041138891820524308610,
      0.039513113805251773834,  0.037860255475501193803,
      0.036181449617809663785,  0.034477846801853821831,
      0.032750614591906864652,  0.031000936746648315902,
      0.029230012407874957297,  0.027439055278668939574,
      0.025629292791586315805,  0.023801965267436079102,
      0.021958325065226235538,  0.020099635723859496794,
      0.018227171096166831408,  0.016342214475872364807,
      0.014446057718087962736,  0.012540000353940267194,
      0.010625348699936975255,  0.0087034149626827566648,
      0.0067755163395583931781, 0.0048429741159794892496,
      0.0029071127598534478579, 0.00096925901385532542002};
  IntegratorXX::GaussChebyshev1<double, double> quad(60);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 60; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("65 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 65> ref_pts = {0.99970801408019296428,
                                    0.99737314969149111899,
                                    0.99270887409805399280,
                                    0.98572608093165088542,
                                    0.97644107882927207448,
                                    0.96487555334355145835,
                                    0.95105651629515357212,
                                    0.93501624268541482344,
                                    0.91679219531658239802,
                                    0.89642693729570375935,
                                    0.87396803262651796304,
                                    0.84946793512152102964,
                                    0.82298386589365639458,
                                    0.79457767971375426870,
                                    0.76431572054584830198,
                                    0.73226866659777351242,
                                    0.69851136524893698805,
                                    0.66312265824079520238,
                                    0.62618519753831368341,
                                    0.58778525229247312917,
                                    0.54801250735466998123,
                                    0.50695985381359040966,
                                    0.46472317204376854566,
                                    0.42140110777252910665,
                                    0.37709484168832044548,
                                    0.33190785312852843693,
                                    0.28594567839868926206,
                                    0.23931566428755776715,
                                    0.19212671735370837601,
                                    0.14448904956922131632,
                                    0.096513920914515116255,
                                    0.048313379525507067270,
                                    0,
                                    -0.048313379525507067270,
                                    -0.096513920914515116255,
                                    -0.14448904956922131632,
                                    -0.19212671735370837601,
                                    -0.23931566428755776715,
                                    -0.28594567839868926206,
                                    -0.33190785312852843693,
                                    -0.37709484168832044548,
                                    -0.42140110777252910665,
                                    -0.46472317204376854566,
                                    -0.50695985381359040966,
                                    -0.54801250735466998123,
                                    -0.58778525229247312917,
                                    -0.62618519753831368341,
                                    -0.66312265824079520238,
                                    -0.69851136524893698805,
                                    -0.73226866659777351242,
                                    -0.76431572054584830198,
                                    -0.79457767971375426870,
                                    -0.82298386589365639458,
                                    -0.84946793512152102964,
                                    -0.87396803262651796304,
                                    -0.89642693729570375935,
                                    -0.91679219531658239802,
                                    -0.93501624268541482344,
                                    -0.95105651629515357212,
                                    -0.96487555334355145835,
                                    -0.97644107882927207448,
                                    -0.98572608093165088542,
                                    -0.99270887409805399280,
                                    -0.99737314969149111899,
                                    -0.99970801408019296428};
  std::array<double, 65> ref_wgt = {
      0.068347055561619367204,  0.068307142805850843190,
      0.068227340602239205375,  0.068107695553024102102,
      0.067948277527545024232,  0.067749179621439578425,
      0.067510518102278256387,  0.067232432341667447846,
      0.066915084733860347173,  0.066558660600923282605,
      0.066163368084512848251,  0.065729438024327037987,
      0.065257123823301362366,  0.064746701299628670202,
      0.064198468525689091094,  0.063612745653984159263,
      0.062989874730176768275,  0.062330219493346136048,
      0.061634165163574425622,  0.060902118216989065124,
      0.060134506148392135869,  0.059331777221615446369,
      0.058494400207747077837,  0.057622864111382269522,
      0.056717677885058505647,  0.055779370132041565821,
      0.054808488797636103491,  0.053805600849201018379,
      0.052771291945056484904,  0.051706166092475985565,
      0.050610845294963072300,  0.049485969189018836279,
      0.048332194670612203669,  0.047150195511571188231,
      0.045940661966119117432,  0.044704300367785603849,
      0.043441832716927654497,  0.042153996259101794147,
      0.040841543054533421437,  0.039505239538934815543,
      0.038145866075928263333,  0.036764216501335679296,
      0.035361097659600840260,  0.033937328932614951287,
      0.032493741761220695308,  0.031031179159674194703,
      0.029550495223348425323,  0.028052554629965570333,
      0.026538232134649580111,  0.025008412059093813308,
      0.023463987775142070764,  0.021905861183084596421,
      0.020334942184973705686,  0.018752148153266610072,
      0.017158403395105735743,  0.015554638612549381189,
      0.013941790359067924105,  0.012320800492622968400,
      0.010692615625648817702,  0.0090581865722574706990,
      0.0074184677929899550208, 0.0057744168374382492580,
      0.0041269937850632862126, 0.0024771606845355839200,
      0.00082588099192591373008};
  IntegratorXX::GaussChebyshev1<double, double> quad(65);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 65; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("70 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 70> ref_pts = {
      0.99974823494250657451,   0.99773487504645610520,
      0.99371220989324258353,   0.98768834059513772619,
      0.97967539842323555163,   0.96968952037668685821,
      0.95775081668493048874,   0.94388333030836756290,
      0.92811498851903892969,   0.91047754665881591206,
      0.89100652418836786236,   0.86974113315569539755,
      0.84672419922828416835,   0.82200207544790989563,
      0.79562454888178101872,   0.76764474035801113148,
      0.73811899748734062094,   0.70710678118654752440,
      0.67467054593207435360,   0.64087561398502414541,
      0.60579004384081985861,   0.56948449316845199552,
      0.53203207651533656356,   0.49350821806434685556,
      0.45399049973954679156,   0.41355850496652066050,
      0.37229365840194516497,   0.33027906195516708177,
      0.28759932743201725807,   0.24434040613789402966,
      0.20058941578327277445,   0.15643446504023086901,
      0.11196447610330785847,   0.067269005612039653337,
      0.022438064295804937237,  -0.022438064295804937237,
      -0.067269005612039653337, -0.11196447610330785847,
      -0.15643446504023086901,  -0.20058941578327277445,
      -0.24434040613789402966,  -0.28759932743201725807,
      -0.33027906195516708177,  -0.37229365840194516497,
      -0.41355850496652066050,  -0.45399049973954679156,
      -0.49350821806434685556,  -0.53203207651533656356,
      -0.56948449316845199552,  -0.60579004384081985861,
      -0.64087561398502414541,  -0.67467054593207435360,
      -0.70710678118654752440,  -0.73811899748734062094,
      -0.76764474035801113148,  -0.79562454888178101872,
      -0.82200207544790989563,  -0.84672419922828416835,
      -0.86974113315569539755,  -0.89100652418836786236,
      -0.91047754665881591206,  -0.92811498851903892969,
      -0.94388333030836756290,  -0.95775081668493048874,
      -0.96968952037668685821,  -0.97967539842323555163,
      -0.98768834059513772619,  -0.99371220989324258353,
      -0.99773487504645610520,  -0.99974823494250657451};
  std::array<double, 70> ref_wgt = {
      0.063465761266967901909,  0.063433804344899417528,
      0.063369906592035092536,  0.063274100182817774108,
      0.063146433358659711917,  0.062986970403651554279,
      0.062795791612193372594,  0.062572993248564012848,
      0.062318687498449132214,  0.062033002412452327856,
      0.061716081841617801773,  0.061368085364997027973,
      0.060989188209295894332,  0.060579581160642779233,
      0.060139470468521990404,  0.059669077741920938368,
      0.059168639837743337532,  0.058638408741544622221,
      0.058078651440649630979,  0.057489649789716448190,
      0.056871700368814095684,  0.056225114334085536481,
      0.055550217261071186345,  0.054847348980771824479,
      0.054116863408533450634,  0.053359128365840250231,
      0.052574525395105400145,  0.051763449567552973520,
      0.050926309284287680885,  0.050063526070652614937,
      0.049175534363978546066,  0.048262781294831643235,
      0.047325726461869768587,  0.046364841700420712398,
      0.045380610844898896224,  0.044373529485180174572,
      0.043344104717057407724,  0.042292854886902458850,
      0.041220309330663185778,  0.040127008107326850306,
      0.039013501726984154243,  0.037880350873630830140,
      0.036728126122846364444,  0.035557407654492010353,
      0.034368784960572755564,  0.033162856548410345221,
      0.031940229639276821373,  0.030701519862640326042,
      0.029447350946177124337,  0.028178354401705935910,
      0.026895169207202716255,  0.025598441485056003002,
      0.024288824176724835323,  0.022966976713963065982,
      0.021633564686775614490,  0.020289259508273855393,
      0.018934738076598897103,  0.017570682434082983064,
      0.016197779423820637778,  0.014816720343822484438,
      0.013428200598925878147,  0.012032919350637628208,
      0.010631579165085124200,  0.0092248856592531330705,
      0.0078135471456843976579, 0.0063982742758229405993,
      0.0049797796821796610047, 0.0035587776195004043013,
      0.0021359836051171879274, 0.00071211405866367686755};
  IntegratorXX::GaussChebyshev1<double, double> quad(70);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 70; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("75 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 75> ref_pts = {
      0.99978068347484548461,   0.99802672842827156195,
      0.99452189536827333692,   0.98927233296298832278,
      0.98228725072868868109,   0.97357890287316026566,
      0.96316256679765815841,   0.95105651629515357212,
      0.93728198949189150231,   0.92186315158850052979,
      0.90482705246601952771,   0.88620357923121470810,
      0.86602540378443864676,   0.84432792550201507855,
      0.82114920913370403661,   0.79652991802419628442,
      0.77051324277578923080,   0.74314482547739423501,
      0.71447267963280337017,   0.68454710592868867373,
      0.65342060399010543660,   0.62114778027831036363,
      0.58778525229247312917,   0.55339154924334407797,
      0.51802700937313020963,   0.48175367410171527499,
      0.44463517918492748398,   0.40673664307580020775,
      0.36812455268467795916,   0.32886664673858324449,
      0.28903179694447159192,   0.24868988716485478824,
      0.20791169081775933710,   0.16676874671610227151,
      0.12533323356430424537,   0.083677843332315491106,
      0.041875653729199629553,  0,
      -0.041875653729199629553, -0.083677843332315491106,
      -0.12533323356430424537,  -0.16676874671610227151,
      -0.20791169081775933710,  -0.24868988716485478824,
      -0.28903179694447159192,  -0.32886664673858324449,
      -0.36812455268467795916,  -0.40673664307580020775,
      -0.44463517918492748398,  -0.48175367410171527499,
      -0.51802700937313020963,  -0.55339154924334407797,
      -0.58778525229247312917,  -0.62114778027831036363,
      -0.65342060399010543660,  -0.68454710592868867373,
      -0.71447267963280337017,  -0.74314482547739423501,
      -0.77051324277578923080,  -0.79652991802419628442,
      -0.82114920913370403661,  -0.84432792550201507855,
      -0.86602540378443864676,  -0.88620357923121470810,
      -0.90482705246601952771,  -0.92186315158850052979,
      -0.93728198949189150231,  -0.95105651629515357212,
      -0.96316256679765815841,  -0.97357890287316026566,
      -0.98228725072868868109,  -0.98927233296298832278,
      -0.99452189536827333692,  -0.99802672842827156195,
      -0.99978068347484548461};
  std::array<double, 75> ref_wgt = {
      0.059235191094238822673,  0.059209208581683518364,
      0.059157254953361646572,  0.059079352997851672740,
      0.058975536885525967247,  0.058845852153562550743,
      0.058690355685970982850,  0.058509115688641155536,
      0.058302211659425935584,  0.058069734353270778895,
      0.057811785742405611932,  0.057528478971616441460,
      0.057219938308616311935,  0.056886299089537379474,
      0.056527707659568011391,  0.056144321308760949829,
      0.055736308203040696137,  0.055303847310440378450,
      0.054847128322600457413,  0.054366351571563703302,
      0.053861727941902941035,  0.053333478778220106727,
      0.052781835788057189774,  0.052207040940261646930,
      0.051609346358850868670,  0.050989014212422252383,
      0.050346316599157390801,  0.049681535427470816624,
      0.048994962292355654745,  0.048286898347480420963,
      0.047557654173093069746,  0.046807549639790232709,
      0.046036913768211403108,  0.045246084584719609123,
      0.044435408973131879160,  0.043605242522564535084,
      0.042755949371460053470,  0.041887902047863909846,
      0.041001481306021465778,  0.040097075959366572812,
      0.039175082709975149980,  0.038235905974558542176,
      0.037279957707072984464,  0.036307657218022981669,
      0.035319430990537862754,  0.034315712493302184905,
      0.033296941990422042202,  0.032263566348310677829,
      0.031216038839678106146,  0.030154818944710721277,
      0.029080372149528101396,  0.027993169742005412219,
      0.026893688605050968743,  0.025782411007429630538,
      0.024659824392223782343,  0.023526421163024687989,
      0.022382698467948001181,  0.021229157981568171072,
      0.020066305684867393408,  0.018894651643295628915,
      0.017714709783039039120,  0.016526997665594975682,
      0.015332036260752402089,  0.014130349718077326003,
      0.012922465137003476307,  0.011708912335629070669,
      0.010490223618321087013,  0.0092669335422289753418,
      0.0080395786828102247033, 0.0068086973984706335561,
      0.0055748295944225200726, 0.0043385164858644519822,
      0.0031003003605863731503, 0.0018607243411042561294,
      0.00062033214642861628780};
  IntegratorXX::GaussChebyshev1<double, double> quad(75);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 75; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("80 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 80> ref_pts = {
      0.99980724048206485639,   0.99826561018471589329,
      0.99518472667219688624,   0.99056934044357724802,
      0.98442656808989164300,   0.97676588132087243254,
      0.96759909236025979091,   0.95694033573220886494,
      0.94480604646687801759,   0.93121493475880355847,
      0.91618795711713591084,   0.89974828405222145968,
      0.88192126434835502971,   0.86273438597779181929,
      0.84221723371628655087,   0.82040144352551360454,
      0.79732065377270713636,   0.77301045336273696081,
      0.74750832686259677682,   0.72085359670291879907,
      0.69308736254563586978,   0.66425243791128172114,
      0.63439328416364549822,   0.60355594195357142000,
      0.57178796022761227056,   0.53913832291100023106,
      0.50565737337798459744,   0.47139673682599764856,
      0.43640924067334207460,   0.40074883310314096198,
      0.36447049987914965980,   0.32763017956169351687,
      0.29028467725446236764,   0.25249157701515795859,
      0.21430915306505074789,   0.17579627993435450616,
      0.13701234168196803790,   0.098017140329560601994,
      0.058870803651189034718,  0.019633692460628302085,
      -0.019633692460628302085, -0.058870803651189034718,
      -0.098017140329560601994, -0.13701234168196803790,
      -0.17579627993435450616,  -0.21430915306505074789,
      -0.25249157701515795859,  -0.29028467725446236764,
      -0.32763017956169351687,  -0.36447049987914965980,
      -0.40074883310314096198,  -0.43640924067334207460,
      -0.47139673682599764856,  -0.50565737337798459744,
      -0.53913832291100023106,  -0.57178796022761227056,
      -0.60355594195357142000,  -0.63439328416364549822,
      -0.66425243791128172114,  -0.69308736254563586978,
      -0.72085359670291879907,  -0.74750832686259677682,
      -0.77301045336273696081,  -0.79732065377270713636,
      -0.82040144352551360454,  -0.84221723371628655087,
      -0.86273438597779181929,  -0.88192126434835502971,
      -0.89974828405222145968,  -0.91618795711713591084,
      -0.93121493475880355847,  -0.94480604646687801759,
      -0.95694033573220886494,  -0.96759909236025979091,
      -0.97676588132087243254,  -0.98442656808989164300,
      -0.99056934044357724802,  -0.99518472667219688624,
      -0.99826561018471589329,  -0.99980724048206485639};
  std::array<double, 80> ref_wgt = {
      0.055533360387574907283,  0.055511951220019652205,
      0.055469141138550776736,  0.055404946647269614286,
      0.055319392494374551751,  0.055212511662620127937,
      0.055084345356601553821,  0.054934942986869556742,
      0.054764362150881672515,  0.054572668610797329137,
      0.054359936268125282485,  0.054126247135233177916,
      0.053871691303730221356,  0.053596366909735148985,
      0.053300380096042885354,  0.052983844971204475423,
      0.052646883565536065976,  0.052289625784073895796,
      0.051912209356493431337,  0.051514779784011955026,
      0.051097490283295076264,  0.050660501727388790214,
      0.050203982583699856218,  0.049728108849048405562,
      0.049233063981817817066,  0.048719038831228018001,
      0.048186231563759476826,  0.047634847586756252696,
      0.047065099469237554216,  0.046477206859948336109,
      0.045871396402680526819,  0.045247901648897532371,
      0.044606962967695701367,  0.043948827453137462710,
      0.043273748828991860888,  0.042581987350919213153,
      0.041873809706137598278,  0.041149488910609857360,
      0.040409304203790743055,  0.039653540940974794198,
      0.038882490483286437776,  0.038096450085354729149,
      0.037295722780716034045,  0.036480617264988831789,
      0.035651447776865678084,  0.034808533976968207227,
      0.033952200824611877453,  0.033082778452527968937,
      0.032200602039591131526,  0.031306011681601548138,
      0.030399352260171529772,  0.029480973309767088841,
      0.028551228882955748831,  0.027610477413912539824,
      0.026659081580236800913,  0.025697408163133061777,
      0.024725827906009906335,  0.023744715371551331312,
      0.022754448797315701430,  0.021755409949917970582,
      0.020747983977851384505,  0.019732559263005404995,
      0.018709527270937098336,  0.017679282399953711161,
      0.016642221829064615294,  0.015598745364861238988,
      0.014549255287384015266,  0.013494156195035768579,
      0.012433854848601328640,  0.011368760014433504820,
      0.010299282306865875923,  0.0092258340299131481860,
      0.0081488290183201090453, 0.0070686824780204553171,
      0.0059858108260670019502, 0.0049006315300949813052,
      0.0038135629473803229127, 0.0027250241635549598071,
      0.0016354348310413397572, 0.00054521500726842796483};
  IntegratorXX::GaussChebyshev1<double, double> quad(80);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 80; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("85 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 85> ref_pts = {0.99982925045805268448,
                                    0.99846360396743397398,
                                    0.99573417629503452187,
                                    0.99164469551074276384,
                                    0.98620074735340256962,
                                    0.97940976760136586865,
                                    0.97128103191611384173,
                                    0.96182564317281907041,
                                    0.95105651629515357212,
                                    0.93898836061505654935,
                                    0.92563765978155628805,
                                    0.91102264924608833798,
                                    0.89516329135506232207,
                                    0.87808124808369793257,
                                    0.85979985144837241434,
                                    0.84034407163789270951,
                                    0.81974048290722111245,
                                    0.79801722728023950333,
                                    0.77520397611112981828,
                                    0.75133188955687328666,
                                    0.72643357401622412687,
                                    0.70054303759329094276,
                                    0.67369564364655721171,
                                    0.64592806248678731474,
                                    0.61727822128979295904,
                                    0.58778525229247312917,
                                    0.55748943934288554512,
                                    0.52643216287735580024,
                                    0.49465584339977882953,
                                    0.46220388354031318383,
                                    0.42912060877260896402,
                                    0.39545120687054255090,
                                    0.36124166618715294874,
                                    0.32653871284008329109,
                                    0.29138974688932464021,
                                    0.25584277759443560506,
                                    0.21994635783966862823,
                                    0.18374951781657033157,
                                    0.14730169805463751138,
                                    0.11065268189150085152,
                                    0.073852527474873960817,
                                    0.036951499389144892850,
                                    0,
                                    -0.036951499389144892850,
                                    -0.073852527474873960817,
                                    -0.11065268189150085152,
                                    -0.14730169805463751138,
                                    -0.18374951781657033157,
                                    -0.21994635783966862823,
                                    -0.25584277759443560506,
                                    -0.29138974688932464021,
                                    -0.32653871284008329109,
                                    -0.36124166618715294874,
                                    -0.39545120687054255090,
                                    -0.42912060877260896402,
                                    -0.46220388354031318383,
                                    -0.49465584339977882953,
                                    -0.52643216287735580024,
                                    -0.55748943934288554512,
                                    -0.58778525229247312917,
                                    -0.61727822128979295904,
                                    -0.64592806248678731474,
                                    -0.67369564364655721171,
                                    -0.70054303759329094276,
                                    -0.72643357401622412687,
                                    -0.75133188955687328666,
                                    -0.77520397611112981828,
                                    -0.79801722728023950333,
                                    -0.81974048290722111245,
                                    -0.84034407163789270951,
                                    -0.85979985144837241434,
                                    -0.87808124808369793257,
                                    -0.89516329135506232207,
                                    -0.91102264924608833798,
                                    -0.92563765978155628805,
                                    -0.93898836061505654935,
                                    -0.95105651629515357212,
                                    -0.96182564317281907041,
                                    -0.97128103191611384173,
                                    -0.97940976760136586865,
                                    -0.98620074735340256962,
                                    -0.99164469551074276384,
                                    -0.99573417629503452187,
                                    -0.99846360396743397398,
                                    -0.99982925045805268448};
  std::array<double, 85> ref_wgt = {
      0.052266979753571766639,  0.052249130627867982652,
      0.052213438471920490840,  0.052159915474567849497,
      0.052088579913864621843,  0.051999456150839437141,
      0.051892574621175721734,  0.051767971824817941038,
      0.051625690313506901943,  0.051465778676248372314,
      0.051288291522719980028,  0.051093289464622058097,
      0.050880839094978804530,  0.050651012965396825573,
      0.050403889561288828520,  0.050139553275070925176,
      0.049858094377342699063,  0.049559608986059878364,
      0.049244199033710142091,  0.048911972232503268930,
      0.048563042037587516270,  0.048197527608304791018,
      0.047815553767497843491,  0.047417250958883380977,
      0.047002755202505657973,  0.046572208048285755683,
      0.046125756527682413645,  0.045663553103480921264,
      0.045185755617727216313,  0.044692527237824970839,
      0.044184036400814072293,  0.043660456755849528709,
      0.043121967104900441357,  0.042568751341689296088,
      0.042000998388892425579,  0.041418902133623088432,
      0.040822661361219197621,  0.040212479687358309702,
      0.039588565488523057461,  0.038951131830840771989,
      0.038300396397321595391,  0.037636581413519932240,
      0.036959913571644626335,  0.036270623953143779049,
      0.035568947949790646501,  0.034855125183297564632,
      0.034129399423485353961,  0.033392018505036149093,
      0.032643234242858081812,  0.031883302346090720646,
      0.031112482330780633959,  0.030331037431256897790,
      0.029539234510236813627,  0.028737343967692534922,
      0.027925639648509724314,  0.027104398748969776049,
      0.026273901722087539822,  0.025434432181836873131,
      0.024586276806296729026,  0.023729725239750854773,
      0.022865069993774534299,  0.021992606347342153204,
      0.021112632245989699516,  0.020225448200066636099,
      0.019331357182111891611,  0.018430664523389016017,
      0.017523677809615833796,  0.016610706775924203093,
      0.015692063201085751935,  0.014768060801039713341,
      0.013839015121759219473,  0.012905243431492640887,
      0.011967064612416770358,  0.011024799051738851645,
      0.010078768532284641717,  0.0091292961226098705482,
      0.0081767060666726253016, 0.0072213236731043356815,
      0.0062634752041171743187, 0.0053034877640858102037,
      0.0043416891878415643993, 0.0033784079287171154759,
      0.0024139729463799872997, 0.0014487135944931239346,
      0.00048295950824091546991};
  IntegratorXX::GaussChebyshev1<double, double> quad(85);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 85; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("90 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 90> ref_pts = {
      0.99984769515639123916,   0.99862953475457387378,
      0.99619469809174553230,   0.99254615164132203498,
      0.98768834059513772619,   0.98162718344766395350,
      0.97437006478523522854,   0.96592582628906828675,
      0.95630475596303548134,   0.94551857559931681035,
      0.93358042649720174899,   0.92050485345244032740,
      0.90630778703664996324,   0.89100652418836786236,
      0.87461970713939580028,   0.85716730070211228747,
      0.83867056794542402964,   0.81915204428899178968,
      0.79863551004729284628,   0.77714596145697087998,
      0.75470958022277199794,   0.73135370161917048329,
      0.70710678118654752440,   0.68199836006249850044,
      0.65605902899050728478,   0.62932039104983745271,
      0.60181502315204827992,   0.57357643635104609611,
      0.54463903501502708222,   0.51503807491005421008,
      0.48480962024633702908,   0.45399049973954679156,
      0.42261826174069943619,   0.39073112848927375506,
      0.35836794954530027348,   0.32556815445715666871,
      0.29237170472273672810,   0.25881904510252076235,
      0.22495105434386499805,   0.19080899537654481241,
      0.15643446504023086901,   0.12186934340514748111,
      0.087155742747658173558,  0.052335956242943832722,
      0.017452406437283512819,  -0.017452406437283512819,
      -0.052335956242943832722, -0.087155742747658173558,
      -0.12186934340514748111,  -0.15643446504023086901,
      -0.19080899537654481241,  -0.22495105434386499805,
      -0.25881904510252076235,  -0.29237170472273672810,
      -0.32556815445715666871,  -0.35836794954530027348,
      -0.39073112848927375506,  -0.42261826174069943619,
      -0.45399049973954679156,  -0.48480962024633702908,
      -0.51503807491005421008,  -0.54463903501502708222,
      -0.57357643635104609611,  -0.60181502315204827992,
      -0.62932039104983745271,  -0.65605902899050728478,
      -0.68199836006249850044,  -0.70710678118654752440,
      -0.73135370161917048329,  -0.75470958022277199794,
      -0.77714596145697087998,  -0.79863551004729284628,
      -0.81915204428899178968,  -0.83867056794542402964,
      -0.85716730070211228747,  -0.87461970713939580028,
      -0.89100652418836786236,  -0.90630778703664996324,
      -0.92050485345244032740,  -0.93358042649720174899,
      -0.94551857559931681035,  -0.95630475596303548134,
      -0.96592582628906828675,  -0.97437006478523522854,
      -0.98162718344766395350,  -0.98768834059513772619,
      -0.99254615164132203498,  -0.99619469809174553230,
      -0.99862953475457387378,  -0.99984769515639123916};
  std::array<double, 90> ref_wgt = {
      0.049363486297664839053,  0.049348449701543740949,
      0.049318381089594386004,  0.049273289621007255177,
      0.049213189031080490973,  0.049138097627035992571,
      0.049048038282442858691,  0.048943038430249876862,
      0.048823130054429181474,  0.048688349680233626031,
      0.048538738363070837301,  0.048374341675997340443,
      0.048195209695836564511,  0.048001396987924956935,
      0.047792962589490853450,  0.047569969991671166441,
      0.047332487120171369585,  0.047080586314574669955,
      0.046814344306306670202,  0.046533842195262233007,
      0.046239165425101667471,  0.045930403757223762472,
      0.045607651243423595061,  0.045271006197243442574,
      0.044920571164025525277,  0.044556452889675701740,
      0.044178762288147631847,  0.043787614407657312061,
      0.043383128395638274336,  0.042965427462448123652,
      0.042534638843837469529,  0.042090893762192683826,
      0.041634327386564290675,  0.041165078791493164279,
      0.040683290914647076514,  0.040189110513280498661,
      0.039682688119530920023,  0.039164177994565300608,
      0.038633738081590625311,  0.038091529957742873037,
      0.037537718784869055850,  0.036972473259217320411,
      0.036395965560050436600,  0.035808371297198326133,
      0.035209869457565607204,  0.034600642350610449445,
      0.033980875552811346902,  0.033350757851138724966,
      0.032710481185548600357,  0.032060240590515811161,
      0.031400234135624626451,  0.030730662865234832176,
      0.030051730737241671610,  0.029363644560948294676,
      0.028666613934069640800,  0.027960851178886944523,
      0.027246571277572311820,  0.026523991806703067905,
      0.025793332870985824061,  0.025054817036210451804,
      0.024308669261454387248,  0.023555116830557916888,
      0.022794389282891318099,  0.022026718343434943357,
      0.021252337852193546450,  0.020471483692966351770,
      0.019684393721494564014,  0.018891307693008205251,
      0.018092467189194349298,  0.017288115544608999580,
      0.016478497772555026140,  0.015663860490448740086,
      0.014844451844697839545,  0.014020521435113610033,
      0.013192320238880404005,  0.012360100534105559237,
      0.011524115822973043452,  0.010684620754524233355,
      0.0098418710470893497909, 0.0089961234103931771574,
      0.0081476354673587944338, 0.0072966656756331371616,
      0.0064434732488582944530, 0.0055883180777125225510,
      0.0047314606507450266155, 0.0038731619750286252259,
      0.0030136834966544675682, 0.0021532870210930213860,
      0.0012922346334455905096, 0.00043078861861065412284};
  IntegratorXX::GaussChebyshev1<double, double> quad(90);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 90; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("95 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 95> ref_pts = {
      0.99986330499246896186,   0.99876996914830479170,
      0.99658449300666984982,   0.99330926635363817670,
      0.98894787060146846938,   0.98350507487238235837,
      0.97698683078359927779,   0.96940026593933041674,
      0.96075367613684816075,   0.95105651629515357212,
      0.94031939011616127797,   0.92855403848970710858,
      0.91577332665505743992,   0.90199123013295894140,
      0.88722281944361182592,   0.87148424362727727409,
      0.85479271258553900642,   0.83716647826252857481,
      0.81862481468669242696,   0.79918799689492477869,
      0.77887727876211244516,   0.75771486976033469839,
      0.73572391067313162477,   0.71292844829139707355,
      0.68935340911856586580,   0.66502457211384825568,
      0.63996854050331651694,   0.61421271268966781744,
      0.58778525229247312917,   0.56071505735167272141,
      0.53303172872799376285,   0.50476553773484371188,
      0.47594739303707354443,   0.44660880685280653595,
      0.41678186049529040126,   0.38649916929245227132,
      0.35579384692251645829,   0.32469946920468348741,
      0.29325003738446475638,   0.26147994095381976997,
      0.22942392004675158367,   0.19711702745148032090,
      0.16459459028073389414,   0.13189217134206890440,
      0.099045530250462705937,  0.066090584325699445928,
      0.033063369317308213256,  0,
      -0.033063369317308213256, -0.066090584325699445928,
      -0.099045530250462705937, -0.13189217134206890440,
      -0.16459459028073389414,  -0.19711702745148032090,
      -0.22942392004675158367,  -0.26147994095381976997,
      -0.29325003738446475638,  -0.32469946920468348741,
      -0.35579384692251645829,  -0.38649916929245227132,
      -0.41678186049529040126,  -0.44660880685280653595,
      -0.47594739303707354443,  -0.50476553773484371188,
      -0.53303172872799376285,  -0.56071505735167272141,
      -0.58778525229247312917,  -0.61421271268966781744,
      -0.63996854050331651694,  -0.66502457211384825568,
      -0.68935340911856586580,  -0.71292844829139707355,
      -0.73572391067313162477,  -0.75771486976033469839,
      -0.77887727876211244516,  -0.79918799689492477869,
      -0.81862481468669242696,  -0.83716647826252857481,
      -0.85479271258553900642,  -0.87148424362727727409,
      -0.88722281944361182592,  -0.90199123013295894140,
      -0.91577332665505743992,  -0.92855403848970710858,
      -0.94031939011616127797,  -0.95105651629515357212,
      -0.96075367613684816075,  -0.96940026593933041674,
      -0.97698683078359927779,  -0.98350507487238235837,
      -0.98894787060146846938,  -0.99330926635363817670,
      -0.99658449300666984982,  -0.99876996914830479170,
      -0.99986330499246896186};
  std::array<double, 95> ref_wgt = {
      0.046765590585103208403,  0.046752805339588760144,
      0.046727238343918327394,  0.046688896587853241584,
      0.046637790553646770854,  0.046573934213178376675,
      0.046497345024133941510,  0.046408043925233011809,
      0.046306055330504361157,  0.046191407122611438581,
      0.046064130645229526765,  0.045924260694476694200,
      0.045771835509400883934,  0.045606896761525739682,
      0.045429489543458027351,  0.045239662356559766592,
      0.045037467097688442714,  0.044822959045008924027,
      0.044596196842880963522,  0.044357242485826416472,
      0.044106161301580557169,  0.043843021933232128391,
      0.043567896320457006340,  0.043280859679850611571,
      0.042981990484364442833,  0.042671370441852355681,
      0.042349084472732451077,  0.042015220686770681008,
      0.041669870358992518243,  0.041313127904729275747,
      0.040945090853805897831,  0.040565859823877279839,
      0.040175538492920405962,  0.039774233570889825551,
      0.039362054770544217030,  0.038939114777452015153,
      0.038505529219184301754,  0.038061416633703382340,
      0.037606898436955690797,  0.037142098889677881965,
      0.036667145063425186971,  0.036182166805831318829,
      0.035687296705109425906,  0.035182670053803798332,
      0.034668424811802237277,  0.034144701568619199150,
      0.033611643504960026121,  0.033069396353576770931,
      0.032518108359426317618,  0.031957930239141690515,
      0.031389015139827631683,  0.030811518597191711633,
      0.030225598493022419899,  0.029631415012025860495,
      0.029029130598032852708,  0.028418909909588409739,
      0.027800919774935736607,  0.027175329146407054219,
      0.026542309054233718726,  0.025902032559788263993,
      0.025254674708271150357,  0.024600412480855154634,
      0.023939424746300484631,  0.023271892212053846096,
      0.022597997374844831145,  0.021917924470793134606,
      0.021231859425040238481,  0.020539989800919334719,
      0.019842504748677382727,  0.019139594953763320505,
      0.018431452584696566890,  0.017718271240530067136,
      0.017000245897922244914,  0.016277572857832330729,
      0.015550449691853639718,  0.014819075188199470782,
      0.014083649297356393952,  0.013344373077419783857,
      0.012601448639126544002,  0.011855079090600049361,
      0.011105468481822413466,  0.010352821748849260729,
      0.0095973446577822551009, 0.0088392437485147024452,
      0.0080787262782656059913, 0.0073160001649176121120,
      0.0065512739301743372542, 0.0057847566425526162466,
      0.0050166578602252573334, 0.0042471875737299301538,
      0.0034765561485598494855, 0.0027049742676519498860,
      0.0019326528737882743912, 0.0011598031119263241547,
      0.00038663627147413533769};
  IntegratorXX::GaussChebyshev1<double, double> quad(95);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 95; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("100 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 100> ref_pts = {
      0.99987663248166059864,   0.99888987496196997264,
      0.99691733373312797620,   0.99396095545517968775,
      0.99002365771655756725,   0.98510932615477391803,
      0.97922281062176578086,   0.97236992039767660183,
      0.96455741845779809366,   0.95579301479833012664,
      0.94608535882754531853,   0.93544403082986732518,
      0.92387953251128675613,   0.91140327663544524821,
      0.89802757576061563093,   0.88376563008869342432,
      0.86863151443819124777,   0.85264016435409222152,
      0.83580736136827025847,   0.81814971742502343213,
      0.79968465848709053869,   0.78043040733832973585,
      0.76040596560003093817,   0.73963109497860969747,
      0.71812629776318883037,   0.69591279659231432549,
      0.67301251350977333872,   0.64944804833018365573,
      0.62524265633570517290,   0.60042022532588404976,
      0.57500525204327856590,   0.54902281799813174352,
      0.52249856471594886499,   0.49545866843240753805,
      0.46792981426057337723,   0.43993916985591514083,
      0.41151435860510877405,   0.38268343236508977173,
      0.35347484377925712472,   0.32391741819814941440,
      0.29404032523230395778,   0.26387304996537289696,
      0.23344536385590541177,   0.20278729535651248344,
      0.17192910027940954661,   0.14090123193758266117,
      0.10973431109104526802,   0.078459095727844945033,
      0.047106450709642660905,  0.015707317311820675753,
      -0.015707317311820675753, -0.047106450709642660905,
      -0.078459095727844945033, -0.10973431109104526802,
      -0.14090123193758266117,  -0.17192910027940954661,
      -0.20278729535651248344,  -0.23344536385590541177,
      -0.26387304996537289696,  -0.29404032523230395778,
      -0.32391741819814941440,  -0.35347484377925712472,
      -0.38268343236508977173,  -0.41151435860510877405,
      -0.43993916985591514083,  -0.46792981426057337723,
      -0.49545866843240753805,  -0.52249856471594886499,
      -0.54902281799813174352,  -0.57500525204327856590,
      -0.60042022532588404976,  -0.62524265633570517290,
      -0.64944804833018365573,  -0.67301251350977333872,
      -0.69591279659231432549,  -0.71812629776318883037,
      -0.73963109497860969747,  -0.76040596560003093817,
      -0.78043040733832973585,  -0.79968465848709053869,
      -0.81814971742502343213,  -0.83580736136827025847,
      -0.85264016435409222152,  -0.86863151443819124777,
      -0.88376563008869342432,  -0.89802757576061563093,
      -0.91140327663544524821,  -0.92387953251128675613,
      -0.93544403082986732518,  -0.94608535882754531853,
      -0.95579301479833012664,  -0.96455741845779809366,
      -0.97236992039767660183,  -0.97922281062176578086,
      -0.98510932615477391803,  -0.99002365771655756725,
      -0.99396095545517968775,  -0.99691733373312797620,
      -0.99888987496196997264,  -0.99987663248166059864};
  std::array<double, 100> ref_wgt = {
      0.044427459091846298396,  0.044416497281097725692,
      0.044394576364263357399,  0.044361701750001412679,
      0.044317881549631047253,  0.044263126575131006776,
      0.044197450336471932862,  0.044120869038282979985,
      0.044033401575853565705,  0.043935069530471240746,
      0.043825897164096829218,  0.043705911413378152822,
      0.043575141883003816065,  0.043433620838398692329,
      0.043281383197762913081,  0.043118466523456324485,
      0.042944911012730537166,  0.042760759487810855858,
      0.042566057385330536077,  0.042360852745119974746,
      0.042145196198353600876,  0.041919140955057390893,
      0.041682742790980090924,  0.041436060033831385382,
      0.041179153548890407382,  0.040912086723988141858,
      0.040634925453867426761,  0.040347738123924411271,
      0.040050595593335482565,  0.039743571177573824333,
      0.039426740630319920817,  0.039100182124770469674,
      0.038763976234350315422,  0.038418205912832162509,
      0.038062956473868973156,  0.037698315569944100070,
      0.037324373170744347748,  0.036941221540961298498,
      0.036548955217526380385,  0.036147670986285293983,
      0.035737467858117553185,  0.035318447044507032220,
      0.034890711932569546461,  0.034454368059543628614,
      0.034009523086750794302,  0.033556286773031721944,
      0.033094770947664901182,  0.032625089482774431745,
      0.032147358265233780739,  0.031661695168072430663,
      0.031168220021392473166,  0.030667054582802324403,
      0.030158322507374857063,  0.029642149317137361427,
      0.029118662370100863356,  0.028587990828836440777,
      0.028050265628606291962,  0.027505619445057418815,
      0.026954186661485896236,  0.026396103335679804639,
      0.025831507166349006619,  0.025260537459150050722,
      0.024683335092314585166,  0.024100042481889762193,
      0.023510803546599209446,  0.022915763672333238417,
      0.022315069676277051472,  0.021708869770685798271,
      0.021097313526315419557,  0.020480551835518301208,
      0.019858736875012844129,  0.019232022068336136065,
      0.018600562047988989541,  0.017964512617282686108,
      0.017324030711896840616,  0.016679274361157870553,
      0.016030402649047624389,  0.015377575674951789483,
      0.014720954514157764283,  0.014060701178111741380,
      0.013396978574444807392,  0.012729950466777922630,
      0.012059781434315698076,  0.011386636831238939294,
      0.010710682745905976566,  0.010032085959872847708,
      0.0093510139067424447205, 0.0086676346308527776417,
      0.0079821167458145486421, 0.0072946293929082666045,
      0.0066053421993511670733, 0.0059144252364442345885,
      0.0052220489776096539989, 0.0045283842563290443871,
      0.0038336022239928537158, 0.0031378743076713142279,
      0.0024413721678173779858, 0.0017442676559120687147,
      0.0010467327720627003303, 0.00034893962256442415047};
  IntegratorXX::GaussChebyshev1<double, double> quad(100);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 100; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("105 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 105> ref_pts = {0.99988810181027340877,
                                     0.99899306654131464737,
                                     0.99720379718118014823,
                                     0.99452189536827333692,
                                     0.99094976176793475525,
                                     0.98649059392352145210,
                                     0.98114838339417262606,
                                     0.97492791218182360702,
                                     0.96783474845066648320,
                                     0.95987524154288903613,
                                     0.95105651629515357212,
                                     0.94138646666090317156,
                                     0.93087374864420425564,
                                     0.91952777255145063832,
                                     0.90735869456786483795,
                                     0.89437740766633682051,
                                     0.88059553185673799519,
                                     0.86602540378443864676,
                                     0.85068006568733954035,
                                     0.83457325372130265093,
                                     0.81771938566443133818,
                                     0.80013354801120630111,
                                     0.78183148246802980871,
                                     0.76282957186226652355,
                                     0.74314482547739423501,
                                     0.72279486382739152855,
                                     0.70179790288399137582,
                                     0.68017273777091939019,
                                     0.65793872593971261237,
                                     0.63511576984217874721,
                                     0.61172429911500634716,
                                     0.58778525229247312917,
                                     0.56332005806362202775,
                                     0.53835061609068235007,
                                     0.51289927740590614391,
                                     0.48698882440436726486,
                                     0.46064245045063229730,
                                     0.43388373911755812048,
                                     0.40673664307580020775,
                                     0.37922546265292840809,
                                     0.35137482408134270489,
                                     0.32320965745446001369,
                                     0.29475517441090421683,
                                     0.26603684556667510738,
                                     0.23708037771549750758,
                                     0.20791169081775933710,
                                     0.17855689479863664801,
                                     0.14904226617617444693,
                                     0.11939422454024433721,
                                     0.089639308903433499766,
                                     0.059804153945034169577,
                                     0.029915466169398454844,
                                     0,
                                     -0.029915466169398454844,
                                     -0.059804153945034169577,
                                     -0.089639308903433499766,
                                     -0.11939422454024433721,
                                     -0.14904226617617444693,
                                     -0.17855689479863664801,
                                     -0.20791169081775933710,
                                     -0.23708037771549750758,
                                     -0.26603684556667510738,
                                     -0.29475517441090421683,
                                     -0.32320965745446001369,
                                     -0.35137482408134270489,
                                     -0.37922546265292840809,
                                     -0.40673664307580020775,
                                     -0.43388373911755812048,
                                     -0.46064245045063229730,
                                     -0.48698882440436726486,
                                     -0.51289927740590614391,
                                     -0.53835061609068235007,
                                     -0.56332005806362202775,
                                     -0.58778525229247312917,
                                     -0.61172429911500634716,
                                     -0.63511576984217874721,
                                     -0.65793872593971261237,
                                     -0.68017273777091939019,
                                     -0.70179790288399137582,
                                     -0.72279486382739152855,
                                     -0.74314482547739423501,
                                     -0.76282957186226652355,
                                     -0.78183148246802980871,
                                     -0.80013354801120630111,
                                     -0.81771938566443133818,
                                     -0.83457325372130265093,
                                     -0.85068006568733954035,
                                     -0.86602540378443864676,
                                     -0.88059553185673799519,
                                     -0.89437740766633682051,
                                     -0.90735869456786483795,
                                     -0.91952777255145063832,
                                     -0.93087374864420425564,
                                     -0.94138646666090317156,
                                     -0.95105651629515357212,
                                     -0.95987524154288903613,
                                     -0.96783474845066648320,
                                     -0.97492791218182360702,
                                     -0.98114838339417262606,
                                     -0.98649059392352145210,
                                     -0.99094976176793475525,
                                     -0.99452189536827333692,
                                     -0.99720379718118014823,
                                     -0.99899306654131464737,
                                     -0.99988810181027340877};
  std::array<double, 105> ref_wgt = {
      0.042311987131241767715,  0.042302517861714326160,
      0.042283581441847679356,  0.042255182109544033265,
      0.042217326220471136332,  0.042170022246639904050,
      0.042113280774508413599,  0.042047114502612692849,
      0.041971538238724833978,  0.041886568896539067687,
      0.041792225491886539668,  0.041688529138479636445,
      0.041575503043186812979,  0.041453172500838979536,
      0.041321564888568610103,  0.041180709659682839269,
      0.041030638337071918718,  0.040871384506154508525,
      0.040702983807361382055,  0.040525473928159226596,
      0.040338894594616324762,  0.040143287562512004242,
      0.039938696607991845566,  0.039725167517770739216,
      0.039502748078885984607,  0.039271488068002724156,
      0.039031439240274105840,  0.038782655317758667305,
      0.038525191977397533667,  0.038259106838554119669,
      0.037984459450119124766,  0.037701311277183706981,
      0.037409725687283818045,  0.037109767936218778272,
      0.036801505153447264937,  0.036485006327063982469,
      0.036160342288360376627,  0.035827585695972847926,
      0.035486811019622011874,  0.035138094523446645117,
      0.034781514248936047303,  0.034417149997464638324,
      0.034045083312432699652,  0.033665397461017256581,
      0.033278177415537185487,  0.032883509834436716506,
      0.032481483042891587469,  0.032072187013042189354,
      0.031655713343858127020,  0.031232155240638701440,
      0.030801607494153901181,  0.030364166459430571267,
      0.029919930034188507033,  0.029468997636931298878,
      0.029011470184696831108,  0.028547450070472414237,
      0.028077041140279605141,  0.027600348669933843417,
      0.027117479341484105038,  0.026628541219337846046,
      0.026133643726076579411,  0.025632897617967497462,
      0.025126414960176620281,  0.024614309101689017293,
      0.024096694649941714788,  0.023573687445174966454,
      0.023045404534507627021,  0.022511964145742430827,
      0.021973485660907037621,  0.021430089589536767001,
      0.020881897541705000715,  0.020329032200807288538,
      0.019771617296105248529,  0.019209777575036406245,
      0.018643638775296169877,  0.018073327596698189263,
      0.017498971672819396306,  0.016920699542436072568,
      0.016338640620757336517,  0.015752925170462488276,
      0.015163684272548693623,  0.014571049796995531407,
      0.013975154373252969563,  0.013376131360559374394,
      0.012774114818096195866,  0.012169239474986008161,
      0.011561640700140619841,  0.010951454471966001492,
      0.010338817347930810788,  0.0097238664340053254149,
      0.0091067393539776233217, 0.0084875742186538772227,
      0.0078665095949496562120, 0.0072436844748791517473,
      0.0066192382444492681013, 0.0059933106524655386697,
      0.0053660417792568492597, 0.0047375720053259676536,
      0.0041080419799328953427, 0.0034775925896180723667,
      0.0028463649266724796490, 0.0022145002575616951073,
      0.0015821399913109701182, 0.00094942564785840164423,
      0.00031649882638328246851};
  IntegratorXX::GaussChebyshev1<double, double> quad(105);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 105; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("110 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 110> ref_pts = {
      0.99989804300943334470,   0.99908251182339574260,
      0.99745211461025354136,   0.99500818114535958034,
      0.99175270473590268375,   0.98768834059513772619,
      0.98281840367675561659,   0.97714686597115951949,
      0.97067835326585250946,   0.96341814137257893309,
      0.95537215182429667599,   0.94654694704548994619,
      0.93694972499976173582,   0.92658831331907146167,
      0.91547116291940606251,   0.90360734110809170338,
      0.89100652418836786236,   0.87767898956725561521,
      0.86363560737315705377,   0.84888783159002264416,
      0.83344769071531762520,   0.81732777794940694356,
      0.80054124092436040397,   0.78310177098055536845,
      0.76502359199982316114,   0.74632144880424702467,
      0.72701059513007373493,   0.70710678118654752440,
      0.68662624080981350747,   0.66558567822236806852,
      0.64400225440885539481,   0.62189357311932225001,
      0.59927766651134693453,   0.57617298044275291823,
      0.55259835942690261918,   0.52857303126284200669,
      0.50411659135283190318,   0.47924898672005683120,
      0.45399049973954679156,   0.42836173159558126620,
      0.40238358547906782421,   0.37607724953859979019,
      0.34946417959909833671,   0.32256608166213392440,
      0.29540489420220007843,   0.26800277027337891435,
      0.24038205944099247375,   0.21256528955297667388,
      0.18457514836584540019,   0.15643446504023086901,
      0.12816619152109276306,   0.099793383817782708360,
      0.071339183199232340327,  0.042826797319602433562,
      0.014279481289787286497,  -0.014279481289787286497,
      -0.042826797319602433562, -0.071339183199232340327,
      -0.099793383817782708360, -0.12816619152109276306,
      -0.15643446504023086901,  -0.18457514836584540019,
      -0.21256528955297667388,  -0.24038205944099247375,
      -0.26800277027337891435,  -0.29540489420220007843,
      -0.32256608166213392440,  -0.34946417959909833671,
      -0.37607724953859979019,  -0.40238358547906782421,
      -0.42836173159558126620,  -0.45399049973954679156,
      -0.47924898672005683120,  -0.50411659135283190318,
      -0.52857303126284200669,  -0.55259835942690261918,
      -0.57617298044275291823,  -0.59927766651134693453,
      -0.62189357311932225001,  -0.64400225440885539481,
      -0.66558567822236806852,  -0.68662624080981350747,
      -0.70710678118654752440,  -0.72701059513007373493,
      -0.74632144880424702467,  -0.76502359199982316114,
      -0.78310177098055536845,  -0.80054124092436040397,
      -0.81732777794940694356,  -0.83344769071531762520,
      -0.84888783159002264416,  -0.86363560737315705377,
      -0.87767898956725561521,  -0.89100652418836786236,
      -0.90360734110809170338,  -0.91547116291940606251,
      -0.92658831331907146167,  -0.93694972499976173582,
      -0.94654694704548994619,  -0.95537215182429667599,
      -0.96341814137257893309,  -0.97067835326585250946,
      -0.97714686597115951949,  -0.98281840367675561659,
      -0.98768834059513772619,  -0.99175270473590268375,
      -0.99500818114535958034,  -0.99745211461025354136,
      -0.99908251182339574260,  -0.99989804300943334470};
  std::array<double, 110> ref_wgt = {
      0.040388815372469103788,   0.040380579528333245358,
      0.040364109519465294235,   0.040339408704330327983,
      0.040306482119769898011,   0.040265336479974947160,
      0.040215980175116692294,   0.040158423269635751090,
      0.040092677500189861880,   0.040018756273260615048,
      0.039936674662419683997,   0.039846449405255113135,
      0.039748098899958289666,   0.039641643201572295139,
      0.039527104017902401768,   0.039404504705089547442,
      0.039273870262847692038,   0.039135227329366026221,
      0.038988604175877072238,   0.038834030700891784344,
      0.038671538424102824398,   0.038501160479957255853,
      0.038322931610899966741,   0.038136888160289199420,
      0.037943068064985631711,   0.037741510847616520603,
      0.037532257608516485982,   0.037315351017346577777,
      0.037090835304393335500,   0.036858756251549614430,
      0.036619161182979017577,   0.036372098955465837082,
      0.036117619948452472819,   0.035855776053766359737,
      0.035586620665038498732,   0.035310208666815748785,
      0.035026596423369100511,   0.034735841767200213266,
      0.034438003987248559494,   0.034133143816801581045,
      0.033821323421110322740,   0.033502606384713068550,
      0.033177057698469565248,   0.032844743746308477466,
      0.032505732291690776516,   0.032160092463791823287,
      0.031807894743404962889,   0.031449210948569505482,
      0.031084114219926023967,   0.030712679005801954786,
      0.030334981047030543081,   0.029951097361506227854,
      0.029561106228479616498,   0.029165087172595251160,
      0.028763120947675421874,   0.028355289520253333171,
      0.027941676052858981971,   0.027522364887061155008,
      0.027097441526269003766,   0.026666992618296703920,
      0.026231105937694754586,   0.025789870367851520293,
      0.025343375882868665399,   0.024891713529214176825,
      0.024434975407156716299,   0.023973254651985087911,
      0.023506645415016650584,   0.023035242844398548131,
      0.022559143065705671763,   0.022078443162339311435,
      0.021593241155730492979,   0.021103635985352037868,
      0.020609727488543421428,   0.020111616380152543471,
      0.019609404231998562709,   0.019103193452159982730,
      0.018593087264092213019,   0.018079189685578863210,
      0.017561605507521062729,   0.017040440272569130955,
      0.016515800253600955214,   0.015987792432051465160,
      0.015456524476097622478,   0.014922104718703374273,
      0.014384642135529047102,   0.013844246322709686236,
      0.013301027474506871443,   0.012755096360838566410,
      0.012206564304691583783,   0.011655543159421271734,
      0.011102145285943050968,   0.010546483529820453138,
      0.0099886711982543327284,  0.0094288220369779446422,
      0.0088670502070625988922,  0.0083034702616386220617,
      0.0077381971225363724476,  0.0071713460568520721132,
      0.0066030326534432344041,  0.0060333727993584798375,
      0.0054624826562065466565,  0.0048904786364693147374,
      0.0043174773797636729559,  0.0037435957290570705495,
      0.0031689507068416024575,  0.0025936594912714870757,
      0.0020178393922688023280,  0.0014416078276023524289,
      0.00086508229894454319053, 0.00028838036791114821407};
  IntegratorXX::GaussChebyshev1<double, double> quad(110);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 110; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("115 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 115> ref_pts = {
      0.99990671596452202204,   0.99916054810038650146,
      0.99766876919053919845,   0.99543249245630881412,
      0.99245338669120153775,   0.98873367501558479247,
      0.98427613321771150305,   0.97908408768232287563,
      0.97316141290837544363,   0.96651252861774474497,
      0.95914239645706322425,   0.95105651629515357212,
      0.94226092211882049562,   0.93276217753006363383,
      0.92256737084807176698,   0.91168410981965339467,
      0.90012051594205095808,   0.88788521840237523498,
      0.87498734763818252875,   0.86143652852399998987,
      0.84724287318888354034,   0.83241697347036820814,
      0.81696989301044201697,   0.80091315899944171185,
      0.78425875357403133471,   0.76701910487568280103,
      0.74920707777633097423,   0.73083596427812410165,
      0.71191947359443367806,   0.69247172191952565895,
      0.67250722189452727821,   0.65204087177755036069,
      0.63108794432605278937,   0.60966407539973452569,
      0.58778525229247312917,   0.56546780180200592329,
      0.54272837804626165791,   0.51958395003543357813,
      0.49605178900906808447,   0.47214945554761852321,
      0.44789478646808194874,   0.42330588151349782455,
      0.39840108984624145800,   0.37319899635519137938,
      0.34771840778698877014,   0.32197833871173831423,
      0.29599799733362339255,   0.26979677115702427125,
      0.24339421251883576354,   0.21681002399778069198,
      0.19006404371160726810,   0.16317623051314217184,
      0.13616664909624659076,   0.10905545502278971278,
      0.081862879681813105906,  0.054609215192110020327,
      0.027314799259485873765,  0,
      -0.027314799259485873765, -0.054609215192110020327,
      -0.081862879681813105906, -0.10905545502278971278,
      -0.13616664909624659076,  -0.16317623051314217184,
      -0.19006404371160726810,  -0.21681002399778069198,
      -0.24339421251883576354,  -0.26979677115702427125,
      -0.29599799733362339255,  -0.32197833871173831423,
      -0.34771840778698877014,  -0.37319899635519137938,
      -0.39840108984624145800,  -0.42330588151349782455,
      -0.44789478646808194874,  -0.47214945554761852321,
      -0.49605178900906808447,  -0.51958395003543357813,
      -0.54272837804626165791,  -0.56546780180200592329,
      -0.58778525229247312917,  -0.60966407539973452569,
      -0.63108794432605278937,  -0.65204087177755036069,
      -0.67250722189452727821,  -0.69247172191952565895,
      -0.71191947359443367806,  -0.73083596427812410165,
      -0.74920707777633097423,  -0.76701910487568280103,
      -0.78425875357403133471,  -0.80091315899944171185,
      -0.81696989301044201697,  -0.83241697347036820814,
      -0.84724287318888354034,  -0.86143652852399998987,
      -0.87498734763818252875,  -0.88788521840237523498,
      -0.90012051594205095808,  -0.91168410981965339467,
      -0.92256737084807176698,  -0.93276217753006363383,
      -0.94226092211882049562,  -0.95105651629515357212,
      -0.95914239645706322425,  -0.96651252861774474497,
      -0.97316141290837544363,  -0.97908408768232287563,
      -0.98427613321771150305,  -0.98873367501558479247,
      -0.99245338669120153775,  -0.99543249245630881412,
      -0.99766876919053919845,  -0.99916054810038650146,
      -0.99990671596452202204};
  std::array<double, 115> ref_wgt = {
      0.038632863690763104286,  0.038625656031908814223,
      0.038611242058919242649,  0.038589624460981525040,
      0.038560807271249207338,  0.038524795866089788273,
      0.038481596964081660852,  0.038431218624760640145,
      0.038373670247116311241,  0.038308962567838477886,
      0.038237107659314038984,  0.038158118927374666654,
      0.038072011108795706083,  0.037978800268546763772,
      0.037878503796794497152,  0.037771140405658164730,
      0.037656730125718542102,  0.037535294302280855135,
      0.037406855591392427545,  0.037271437955615785857,
      0.037129066659558010334,  0.036979768265157165975,
      0.036823570626726692967,  0.036660502885758681160,
      0.036490595465486998100,  0.036313880065211284979,
      0.036130389654382879446,  0.035940158466453768672,
      0.035743221992489720252,  0.035539616974548782525,
      0.035329381398826389686,  0.035112554488568350576,
      0.034889176696753043378,  0.034659289698544181475,
      0.034422936383515558548,  0.034180160847649223535,
      0.033931008385108578314,  0.033675525479787933022,
      0.033413759796640095553,  0.033145760172783613267,
      0.032871576608391325991,  0.032591260257361930221,
      0.032304863417776294924,  0.032012439522140309475,
      0.031714043127416084105,  0.031409729904843362726,
      0.031099556629553047119,  0.030783581169974770290,
      0.030461862477040495180,  0.030134460573186153008,
      0.029801436541153373186,  0.029462852512593394043,
      0.029118771656475280513,  0.028769258167300611424,
      0.028414377253126835180,  0.028054195123401528270,
      0.027688778976609826350,  0.027318196987737332508,
      0.026942518295550841707,  0.026561812989699254435,
      0.026176152097637086121,  0.025785607571373011958,
      0.025390252274045919440,  0.024990159966330973102,
      0.024585405292678227638,  0.024176063767386356848,
      0.023762211760514096606,  0.023343926483632030319,
      0.022921285975417375154,  0.022494369087094456562,
      0.022063255467723587470,  0.021628025549341096742,
      0.021188760531953279317,  0.020745542368387067674,
      0.020298453749000251003,  0.019847578086254094664,
      0.019392999499151238195,  0.018934802797541775260,
      0.018473073466300443519,  0.018007897649377876450,
      0.017539362133728892658,  0.017067554333120821128,
      0.016592562271824883279,  0.016114474568193674488,
      0.015633380418127808993,  0.015149369578434812777,
      0.014662532350083369135,  0.014172959561356041140,
      0.013680742550903614177,  0.013185973150704220063,
      0.012688743668930422035,  0.012189146872727457059,
      0.011687275970905848499,  0.011183224596551618138,
      0.010677086789557341944,  0.010168956979077308715,
      0.0096589299659100549286, 0.0091471009048115626258,
      0.0086335652867424201509, 0.0081184189210522578382,
      0.0076017579176047824728, 0.0070836786688467454187,
      0.0065642778318241897736, 0.0060436523101493317447,
      0.0055218992359214406483, 0.0049991159516050905218,
      0.0044753999918691642858, 0.0039508490653899987190,
      0.0034255610366220651987, 0.0028996339075395872151,
      0.0023731657993525010902, 0.0018462549342001711198,
      0.0013189996168262745084, 0.00079149821623827497365,
      0.00026384914735490678420};
  IntegratorXX::GaussChebyshev1<double, double> quad(115);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 115; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("120 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 120> ref_pts = {
      0.99991432757400703225,   0.99922903624072293474,
      0.99785892323860350674,   0.99580492757466172938,
      0.99306845695492629564,   0.98965138681967021476,
      0.98555605905807772949,   0.98078528040323044913,
      0.97534232050851269487,   0.96923090970675439302,
      0.96245523645364728763,   0.95501994445718662743,
      0.94693012949510566426,   0.93819133592248413445,
      0.92880955287192423396,   0.91879121014889829659,
      0.90814317382508129926,   0.89687274153268830389,
      0.88498763746304186207,   0.87249600707279711453,
      0.85940641150145267434,   0.84572782170397325305,
      0.83146961230254523708,   0.81664155516167891394,
      0.80125381269106065248,   0.78531693088074492747,
      0.76884183207345952028,   0.75183980747897739641,
      0.73432250943568553564,   0.71630194342465424886,
      0.69779045984168013967,   0.67880074553294174139,
      0.65934581510006886843,   0.63943900198058475302,
      0.61909394930983398694,   0.59832460057065904607,
      0.57714519003723364270,   0.55557023301960222474,
      0.53361451591561152715,   0.51129308607705208483,
      0.48862124149695494742,   0.46561452032511140759,
      0.44228869021900128200,   0.41865973753742808668,
      0.39474385638426724957,   0.37055743750983622782,
      0.34611705707749297647,   0.32143946530316158070,
      0.29654157497557095347,   0.27144044986507425334,
      0.24615329302899303877,   0.22069743502150109180,
      0.19509032201612826785,   0.16934950384902461417,
      0.14349262199117930649,   0.11753739745783764411,
      0.091501618663402385314,  0.065403129230143066815,
      0.039259815759068609021,  0.013089595571344440190,
      -0.013089595571344440190, -0.039259815759068609021,
      -0.065403129230143066815, -0.091501618663402385314,
      -0.11753739745783764411,  -0.14349262199117930649,
      -0.16934950384902461417,  -0.19509032201612826785,
      -0.22069743502150109180,  -0.24615329302899303877,
      -0.27144044986507425334,  -0.29654157497557095347,
      -0.32143946530316158070,  -0.34611705707749297647,
      -0.37055743750983622782,  -0.39474385638426724957,
      -0.41865973753742808668,  -0.44228869021900128200,
      -0.46561452032511140759,  -0.48862124149695494742,
      -0.51129308607705208483,  -0.53361451591561152715,
      -0.55557023301960222474,  -0.57714519003723364270,
      -0.59832460057065904607,  -0.61909394930983398694,
      -0.63943900198058475302,  -0.65934581510006886843,
      -0.67880074553294174139,  -0.69779045984168013967,
      -0.71630194342465424886,  -0.73432250943568553564,
      -0.75183980747897739641,  -0.76884183207345952028,
      -0.78531693088074492747,  -0.80125381269106065248,
      -0.81664155516167891394,  -0.83146961230254523708,
      -0.84572782170397325305,  -0.85940641150145267434,
      -0.87249600707279711453,  -0.88498763746304186207,
      -0.89687274153268830389,  -0.90814317382508129926,
      -0.91879121014889829659,  -0.92880955287192423396,
      -0.93819133592248413445,  -0.94693012949510566426,
      -0.95501994445718662743,  -0.96245523645364728763,
      -0.96923090970675439302,  -0.97534232050851269487,
      -0.98078528040323044913,  -0.98555605905807772949,
      -0.98965138681967021476,  -0.99306845695492629564,
      -0.99580492757466172938,  -0.99785892323860350674,
      -0.99922903624072293474,  -0.99991432757400703225};
  std::array<double, 120> ref_wgt = {
      0.037023231491661351123,   0.037016887751541371382,
      0.037004201358268623797,   0.036985174485591285921,
      0.036959810393666040407,   0.036928113428499463946,
      0.036890089021203361406,   0.036845743687064172793,
      0.036795085024426612451,   0.036738121713391731819,
      0.036674863514329628798,   0.036605321266207058580,
      0.036529506884730232497,   0.036447433360303123100,
      0.036359114755801625317,   0.036264566204163955060,
      0.036163803905797698172,   0.036056845125803953981,
      0.035943708191019049112,   0.035824412486874328426,
      0.035698978454074561159,   0.035567427585095531386,
      0.035429782420501412939,   0.035286066545082559778,
      0.035136304583814373575,   0.034980522197637940952,
      0.034818746079063163324,   0.034651003947595132746,
      0.034477324544984537413,   0.034297737630302910644,
      0.034112273974843567173,   0.033920965356849100450,
      0.033723844556066344373,   0.033520945348129732411,
      0.033312302498774016527,   0.033097951757877337499,
      0.032877929853335667346,   0.032652274484769673422,
      0.032421024317065082501,   0.032184218973747651647,
      0.031941899030193881064,   0.031694106006678632215,
      0.031440882361260842466,   0.031182271482508555267,
      0.030918317682064512383,   0.030649066187053582022,
      0.030374563132333323825,   0.030094855552589018520,
      0.029809991374274516742,   0.029520019407400287882,
      0.029224989337170076076,   0.028924951715467596320,
      0.028619957952194729438,   0.028310060306462700052,
      0.027995311877637746907,   0.027675766596242819820,
      0.027351479214716862210,   0.027022505298033262547,
      0.026688901214179082216,   0.026350724124496691117,
      0.026008031973889465912,   0.025660883480893229139,
      0.025309338127615130378,   0.024953456149541693408,
      0.024593298525217775685,   0.024228926965798208596,
      0.023860403904473908772,   0.023487792485774272229,
      0.023111156554747684324,   0.022730560646021999395,
      0.022346069972746864496,   0.021957750415419781927,
      0.021565668510597825142,   0.021169891439496942223,
      0.020770487016480800377,   0.020367523677441143833,
      0.019961070468071656099,   0.019551197032037335800,
      0.019137973599041413201,   0.018721470972791852111,
      0.018301760518869499012,   0.017878914152499958181,
      0.017453004326231287997,   0.017024104017519629821,
      0.016592286716224896575,   0.016157626412018663569,
      0.015720197581706419184,   0.015280075176466347651,
      0.014837334609006830524,   0.014392051740644867324,
      0.013944302868307629403,   0.013494164711459374256,
      0.013041714398955960268,   0.012587029455829214328,
      0.012130187790003416720,   0.011671267678946179375,
      0.011210347756256004764,   0.010747506998188823604,
      0.010282824710125819973,   0.0098163805129848625141,
      0.0093482543295778700421,  0.0088785263709164491692,
      0.0084072771224681503923,  0.0079345873303656975683,
      0.0074605379875715537548,  0.0069852103200001940443,
      0.0065086857726004632714,  0.0060310459954004033078,
      0.0055523728295169410931,  0.0050727482931328345683,
      0.0045922545674432792909,  0.0041109739825745837086,
      0.0036289890034773258525,  0.0031463822157964085863,
      0.0026632363117204345048,  0.0021796340758128251167,
      0.0016956583708271120787,  0.0012113921235088309566,
      0.00072691831038645028572, 0.00024231994355377058268};
  IntegratorXX::GaussChebyshev1<double, double> quad(120);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 120; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("140 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 140> ref_pts = {
      0.99993705675470057922,   0.99943355833353327150,
      0.99842681501781656213,   0.99691733373312797620,
      0.99490587454875236344,   0.99239345029496412386,
      0.98938132605303666322,   0.98587101851823587392,
      0.98186429523611839342,   0.97736317371251918683,
      0.97236992039767660183,   0.96688704954500641961,
      0.96091732194509954321,   0.95446374353558079394,
      0.94752956388752879343,   0.94011827456921906478,
      0.93223360738801425731,   0.92387953251128675613,
      0.91506025646731984860,   0.90578022002719405415,
      0.89604409596872515150,   0.88585678672357982774,
      0.87522342190875369750,   0.86414935574365466733,
      0.85264016435409222152,   0.84070164296453015214,
      0.82833980298001651835,   0.81556086895926017135,
      0.80237127548037799197,   0.78877766390089103158,
      0.77478687901360099583,   0.76040596560003093817,
      0.74564216488316560949,   0.73050291088127761592,
      0.71499582666467534328,   0.69912872051725748809,
      0.68290958200480696823,   0.66634657795200394558,
      0.64944804833018365573,   0.63222250205790968254,
      0.61467861271647721546,   0.59682521418250366256,
      0.57867129617980574163,   0.56022599975280281302,
      0.54149861266372573205,   0.52249856471594886499,
      0.50323542300580011159,   0.48371888710523979107,
      0.46395878417783405757,   0.44396506403048209971,
      0.42374779410338872854,   0.40331715440080505358,
      0.38268343236508977173,   0.36185701769667213341,
      0.34084839712252489080,   0.31966814911578145939,
      0.29832693856915612472,   0.27683551142484938763,
      0.25520468926364245243,   0.23344536385590541177,
      0.21156849167726285979,   0.18958508839167846102,
      0.16750622330473640809,   0.14534301378991270810,
      0.12310661969064283789,   0.10080823770100449576,
      0.078459095727844945033,  0.056070447237191788191,
      0.033653565587793924006,  0.011219738354645920416,
      -0.011219738354645920416, -0.033653565587793924006,
      -0.056070447237191788191, -0.078459095727844945033,
      -0.10080823770100449576,  -0.12310661969064283789,
      -0.14534301378991270810,  -0.16750622330473640809,
      -0.18958508839167846102,  -0.21156849167726285979,
      -0.23344536385590541177,  -0.25520468926364245243,
      -0.27683551142484938763,  -0.29832693856915612472,
      -0.31966814911578145939,  -0.34084839712252489080,
      -0.36185701769667213341,  -0.38268343236508977173,
      -0.40331715440080505358,  -0.42374779410338872854,
      -0.44396506403048209971,  -0.46395878417783405757,
      -0.48371888710523979107,  -0.50323542300580011159,
      -0.52249856471594886499,  -0.54149861266372573205,
      -0.56022599975280281302,  -0.57867129617980574163,
      -0.59682521418250366256,  -0.61467861271647721546,
      -0.63222250205790968254,  -0.64944804833018365573,
      -0.66634657795200394558,  -0.68290958200480696823,
      -0.69912872051725748809,  -0.71499582666467534328,
      -0.73050291088127761592,  -0.74564216488316560949,
      -0.76040596560003093817,  -0.77478687901360099583,
      -0.78877766390089103158,  -0.80237127548037799197,
      -0.81556086895926017135,  -0.82833980298001651835,
      -0.84070164296453015214,  -0.85264016435409222152,
      -0.86414935574365466733,  -0.87522342190875369750,
      -0.88585678672357982774,  -0.89604409596872515150,
      -0.90578022002719405415,  -0.91506025646731984860,
      -0.92387953251128675613,  -0.93223360738801425731,
      -0.94011827456921906478,  -0.94752956388752879343,
      -0.95446374353558079394,  -0.96091732194509954321,
      -0.96688704954500641961,  -0.97236992039767660183,
      -0.97736317371251918683,  -0.98186429523611839342,
      -0.98587101851823587392,  -0.98938132605303666322,
      -0.99239345029496412386,  -0.99490587454875236344,
      -0.99691733373312797620,  -0.99842681501781656213,
      -0.99943355833353327150,  -0.99993705675470057922};
  std::array<double, 140> ref_wgt = {
      0.031734378751718859996,   0.031730383822146471662,
      0.031722394465909359052,   0.031710411688759540999,
      0.031694436999166780523,   0.031674472408128688861,
      0.031650520428917568041,   0.031622584076764023846,
      0.031590666868477389020,   0.031554772822003004479,
      0.031514906455916414275,   0.031471072788854537978,
      0.031423277338883892086,   0.031371526122805939995,
      0.031315825655399657982,   0.031256182948601412538,
      0.031192605510622252310,   0.031125101345002725761,
      0.031053678949605343534,   0.030978347315544812371,
      0.030899115926056175226,   0.030815994755301000095,
      0.030728994267111767813,   0.030638125413674616909,
      0.030543399634150611327,   0.030444828853235704583,
      0.030342425479659581642,   0.030236202404623567484,
      0.030126173000177799010,   0.030012351117537864579,
      0.029894751085341123086,   0.029773387707842922088,
      0.029648276263052942058,   0.029519432500811901355,
      0.029386872640808864057,   0.029250613370539400220,
      0.029110671843204855624,   0.028967065675552995459,
      0.028819812945660293765,   0.028668932190656147834,
      0.028514442404389304042,   0.028356363035036788886,
      0.028194713982655646233,   0.028029515596677788972,
      0.027860788673348280451,   0.027688554453107368159,
      0.027512834617916599254,   0.027333651288529354507,
      0.027151027021706144297,   0.026964984807375017183,
      0.026775548065737438547,   0.026582740644320003626,
      0.026386586814972356070,   0.026187111270811689980,
      0.025984339123114220036,   0.025778295898154011063,
      0.025569007533989564968,   0.025356500377198569587,
      0.025140801179561220476,   0.024921937094692533186,
      0.024699935674624069964,   0.024474824866335511187,
      0.024246633008236508170,   0.024015388826599260227,
      0.023781121431942265072,   0.023543860315365697806,
      0.023303635344838879818,   0.023060476761440304938,
      0.022814415175550696199,   0.022565481562999572428,
      0.022313707261165809779,   0.022059123965032689077,
      0.021801763723197925607,   0.021541658933839183617,
      0.021278842340635583428,   0.021013347028645714586,
      0.020745206420142673940,   0.020474454270406652975,
      0.020201124663475604052,   0.019925252007854520481,
      0.019646871032183870582,   0.019366016780867731016,
      0.019082724609662169736,   0.018797030181224433937,
      0.018508969460623503287,   0.018218578710812573610,
      0.017925894488064040971,   0.017630953637367560833,
      0.017333793287791761611,   0.017034450847810196529,
      0.016732964000592122160,   0.016429370699258696496,
      0.016123709162105193719,   0.015816017867789837131,
      0.015506335550489855908,   0.015194701195025375460,
      0.014881154031951755244,   0.014565733532620991819,
      0.014248479404212808871,   0.013929431584736059700,
      0.013608630238001071445,   0.013286115748563563958,
      0.012961928716640779802,   0.012636109953000465393,
      0.012308700473823346662,   0.011979741495539746012,
      0.011649274429640990545,   0.011317340877466264752,
      0.010983982624965563917,   0.010649241637439407515,
      0.010313160054255974805,   0.0099757801835463276516,
      0.0096371444968783883836,  0.0092972956239103431566,
      0.0089562763470241438894,  0.0086141295959397843401,
      0.0082708984423110283143,  0.0079266260943032703278,
      0.0075813558911542113005,  0.0072351312977180340164,
      0.0068879958989937651666,  0.0065399933946385127789,
      0.0061911675934662697441,  0.0058415624079329759651,
      0.0054912218486085333853,  0.0051401900186364697939,
      0.0047885111081819488633,  0.0044362293888688253373,
      0.0040833892082064456713,  0.0037300349840068957135,
      0.0033762111987933982214,  0.0030219623942005641206,
      0.0026673331653672024377,  0.0023123681553223947782,
      0.0019571120493655410654,  0.0016016095694410840177,
      0.0012459054685086205105,  0.00089004452490910854746,
      0.00053407153672787906358, 0.00017803131615516217611};
  IntegratorXX::GaussChebyshev1<double, double> quad(140);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 140; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("160 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 160> ref_pts = {
      0.99995180895932801357,    0.99956630850202126380,
      0.99879545620517239271,    0.99763954924701567988,
      0.99609903325168718964,    0.99417450211742818378,
      0.99186669778762604418,    0.98917650996478097345,
      0.98610497576750874480,    0.98265327933071173323,
      0.97882275134907236964,    0.97461486856404500979,
      0.97003125319454399260,    0.96507367231154736835,
      0.95974403715685739885,    0.95404440240628046057,
      0.94797696537751040872,    0.94154406518302077841,
      0.93474818182829239907,    0.92759193525572407250,
      0.92007808433459490530,    0.91220952579746768426,
      0.90398929312344333159,    0.89542055536869696657,
      0.88650661594474642436,    0.87725091134492423252,
      0.86765700981954401468,    0.85772861000027206990,
      0.84746953947423445864,    0.83688375330840930418,
      0.82597533252487318449,    0.81474848252748943579,
      0.80320753148064490981,    0.79135692864066021223,
      0.77920124264051669565,    0.76674515972856147733,
      0.75399348196186949462,    0.74095112535495909118,
      0.72762311798457483958,    0.71401459805126824245,
      0.70013081189852360972,    0.68597711199019277675,
      0.67155895484701840063,    0.65688189894304134421,
      0.64195160256270312306,    0.62677382161946954280,
      0.61135440743681648926,    0.59569930449243334347,
      0.57981454812651367412,    0.56370626221501670497,
      0.54738065680879655926,    0.53084402573950944173,
      0.51410274419322172659,    0.49716326625265437171,
      0.48003212240901117061,    0.46271591704435007983,
      0.44522132588546821540,    0.42755509343028209432,
      0.40972403034769530031,    0.39173501085195597451,
      0.37359497005251636613,    0.35531090128041612282,
      0.33688985339222005069,    0.31833892805254972747,
      0.29966527699625660455,    0.28087609927129208222,
      0.26197863846333748429,    0.24298017990326388995,
      0.22388804785849840037,    0.20470960270937962177,
      0.18545223811159093360,    0.16612337814576547795,
      0.14673047445536175166,    0.12728100337391320450,
      0.10778246304275934354,    0.088242370520369513137,
      0.068668258884373761225,   0.049067674327418014255,
      0.029448173247963163849,   0.0098173193371496174988,
      -0.0098173193371496174988, -0.029448173247963163849,
      -0.049067674327418014255,  -0.068668258884373761225,
      -0.088242370520369513137,  -0.10778246304275934354,
      -0.12728100337391320450,   -0.14673047445536175166,
      -0.16612337814576547795,   -0.18545223811159093360,
      -0.20470960270937962177,   -0.22388804785849840037,
      -0.24298017990326388995,   -0.26197863846333748429,
      -0.28087609927129208222,   -0.29966527699625660455,
      -0.31833892805254972747,   -0.33688985339222005069,
      -0.35531090128041612282,   -0.37359497005251636613,
      -0.39173501085195597451,   -0.40972403034769530031,
      -0.42755509343028209432,   -0.44522132588546821540,
      -0.46271591704435007983,   -0.48003212240901117061,
      -0.49716326625265437171,   -0.51410274419322172659,
      -0.53084402573950944173,   -0.54738065680879655926,
      -0.56370626221501670497,   -0.57981454812651367412,
      -0.59569930449243334347,   -0.61135440743681648926,
      -0.62677382161946954280,   -0.64195160256270312306,
      -0.65688189894304134421,   -0.67155895484701840063,
      -0.68597711199019277675,   -0.70013081189852360972,
      -0.71401459805126824245,   -0.72762311798457483958,
      -0.74095112535495909118,   -0.75399348196186949462,
      -0.76674515972856147733,   -0.77920124264051669565,
      -0.79135692864066021223,   -0.80320753148064490981,
      -0.81474848252748943579,   -0.82597533252487318449,
      -0.83688375330840930418,   -0.84746953947423445864,
      -0.85772861000027206990,   -0.86765700981954401468,
      -0.87725091134492423252,   -0.88650661594474642436,
      -0.89542055536869696657,   -0.90398929312344333159,
      -0.91220952579746768426,   -0.92007808433459490530,
      -0.92759193525572407250,   -0.93474818182829239907,
      -0.94154406518302077841,   -0.94797696537751040872,
      -0.95404440240628046057,   -0.95974403715685739885,
      -0.96507367231154736835,   -0.97003125319454399260,
      -0.97461486856404500979,   -0.97882275134907236964,
      -0.98265327933071173323,   -0.98610497576750874480,
      -0.98917650996478097345,   -0.99186669778762604418,
      -0.99417450211742818378,   -0.99609903325168718964,
      -0.99763954924701567988,   -0.99879545620517239271,
      -0.99956630850202126380,   -0.99995180895932801357};
  std::array<double, 160> ref_wgt = {
      0.027767683819048937459,   0.027765007511888356165,
      0.027759655155515248031,   0.027751627265800860391,
      0.027740924616489912717,   0.027727548239126021493,
      0.027711499422952277894,   0.027692779714786987852,
      0.027671390918874586488,   0.027647335096711741283,
      0.027620614566848660731,   0.027591231904665627650,
      0.027559189942124778667,   0.027524491767497153816,
      0.027487140725065042542,   0.027447140414799654821,
      0.027404494692014148434,   0.027359207666992045867,
      0.027311283704591076628,   0.027260727423822483171,
      0.027207543697405830983,   0.027151737651299365731,
      0.027093314664205962733,   0.027032280367054716384,
      0.026968640642458219486,   0.026902401624145584808,
      0.026833569696371263503,   0.026762151493299717378,
      0.026688153898366004314,   0.026611584043612338473,
      0.026532449309000689216,   0.026450757321701485019,
      0.026366515955358490904,   0.026279733329329930269,
      0.026190417807905924242,   0.026098577999502323991,
      0.026004222755831013686,   0.025907361171046764087,
      0.025808002580870718975,   0.025706156561690598920,
      0.025601832929637709100,   0.025495041739640840135,
      0.025385793284457153124,   0.025274098093680142284,
      0.025159966932724770815,   0.025043410801789877799,
      0.024924440934797956144,   0.024803068798312403745,
      0.024679306090432352245,   0.024553164739665179889,
      0.024424656903776817158,   0.024293794968619955981,
      0.024160591546940275478,   0.024025059477160799274,
      0.023887211822144501571,   0.023747061867935281228,
      0.023604623122477425190,   0.023459909314313684711,
      0.023312934391262089823,   0.023163712519071629611,
      0.023012258080056927834,   0.022858585671712045514,
      0.022702710105303544071,   0.022544646404442944627,
      0.022384409803638721059,   0.022222015746827966360,
      0.022057479885887873842,   0.021890818079127176634,
      0.021722046389757690879,   0.021551181084346109946,
      0.021378238631246198877,   0.021203235699011540175,
      0.021026189154788983913,   0.020847116062692957019,
      0.020666033682160788409,   0.020482959466289208496,
      0.020297911060152183397,   0.020110906299100245985,
      0.019921963207041487676,   0.019731099994704376660,
      0.019538335057882569985,   0.019343686975661888676,
      0.019147174508629626774,   0.018948816597066366887,
      0.018748632359120476528,   0.018546641088965461177,
      0.018342862254940351687,   0.018137315497673305248,
      0.017930020628188600760,   0.017720997625997211087,
      0.017510266637171136201,   0.017297847972401682833,
      0.017083762105041877770,   0.016868029669133203480,
      0.016650671457416846245,   0.016431708419329648494,
      0.016211161658984958468,   0.015989052433138571861,
      0.015765402149139961444,   0.015540232362868992175,
      0.015313564776658320628,   0.015085421237201679000,
      0.014855823733448245305,   0.014624794394483302679,
      0.014392355487395392084,   0.014158529415130163973,
      0.013923338714331135755,   0.013686806053167563186,
      0.013448954229149635041,   0.013209806166931201628,
      0.012969384916100248938,   0.012727713648957331379,
      0.012484815658282177221,   0.012240714355088682004,
      0.011995433266368506294,   0.011748996032823495256,
      0.011501426406587138610,   0.011252748248935290565,
      0.011002985527986370390,   0.010752162316391265277,
      0.010500302789013158142,   0.010247431220597503995,
      0.0099935719834323794530,  0.0097387495449994308829,
      0.0094829884656156475991,  0.0092263133960661873917,
      0.0089687490752284825465,  0.0087103203276878553483,
      0.0084510520613448728791,  0.0081909692650146717188,
      0.0079300970060184839329,  0.0076684604277675964779,
      0.0074060847473399768895,  0.0071429952530497988229,
      0.0068792173020101016985,  0.0066147763176888193711,
      0.0063496977874584133746,  0.0060840072601393469169,
      0.0058177303435376363873,  0.0055508927019767177140,
      0.0052835200538238654555,  0.0050156381690114030334,
      0.0047472728665529430191,  0.0044784500120548968639,
      0.0042091955152234939174,  0.0039395353273675500144,
      0.0036694954388972263174,  0.0033991018768190194907,
      0.0031283807022272246423,  0.0028573580077921128148,
      0.0025860599152450651155,  0.0023145125728609058789,
      0.0020427421529376775145,  0.0017707748492740999487,
      0.0014986368746449577853,  0.0012263544582746585143,
      0.00095395384330920527138, 0.00068146128428682780528,
      0.00040890304460751543776, 0.00013630539400169591063};
  IntegratorXX::GaussChebyshev1<double, double> quad(160);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 160; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("180 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 180> ref_pts = {
      0.99996192306417128874,    0.99965732497555728004,
      0.99904822158185776240,    0.99813479842186697378,
      0.99691733373312797620,    0.99539619836717880482,
      0.99357185567658749694,    0.99144486137381041114,
      0.98901586336191682981,    0.98628560153723140782,
      0.98325490756395458455,    0.97992470462082961188,
      0.97629600711993336597,    0.97236992039767660183,
      0.96814764037810777497,    0.96363045320862299102,
      0.95881973486819304976,    0.95371695074822692114,
      0.94832365520619932659,    0.94264149109217839478,
      0.93667218924839761625,    0.93041756798202453204,
      0.92387953251128675613,    0.91706007438512404700,
      0.90996127087654320805,    0.90258528434986060676,
      0.89493436160202505656,    0.88701083317822170105,
      0.87881711266196537413,    0.87035569593989968042,
      0.86162916044152574545,    0.85264016435409222152,
      0.84339144581288570127,    0.83388582206716818452,
      0.82412618862201566173,    0.81411551835631921847,
      0.80385686061721732627,    0.79335334029123516458,
      0.78260815685241391370,    0.77162458338771996787,
      0.76040596560003093817,    0.74895572078900214550,
      0.73727733681012404138,    0.72537437101228763799,
      0.71325044915418157514,    0.70090926429985090017,
      0.68835457569375398439,    0.67559020761566024435,
      0.66262004821573747750,    0.64944804833018365573,
      0.63607822027776394680,    0.62251463663761955034,
      0.60876142900872063942,    0.59482278675134129057,
      0.58070295571093976105,    0.56640623692483283182,
      0.55193698531205817578,    0.53729960834682383184,
      0.52249856471594886499,    0.50753836296070416894,
      0.49242356010346711980,    0.47715876025960841505,
      0.46174861323503393056,    0.44619781310980879800,
      0.43051109680829514438,    0.41469324265623904377,
      0.39874906892524620637,    0.38268343236508977173,
      0.36650122672429727947,    0.35020738125946746103,
      0.33380685923377092883,    0.31730465640509213438,
      0.30070579950427312162,    0.28401534470392261744,
      0.26723837607825687479,    0.25038000405444141589,
      0.23344536385590541177,    0.21643961393810287976,
      0.19936793441719718109,    0.18223552549214745660,
      0.16504760586067764838,    0.14780941112961061835,
      0.13052619222005159155,    0.11320321376790672072,
      0.095845752520223989589,   0.078459095727844945033,
      0.061048539534856872037,   0.043619387365335999782,
      0.026176948307873152611,   0.0087265354983739349649,
      -0.0087265354983739349649, -0.026176948307873152611,
      -0.043619387365335999782,  -0.061048539534856872037,
      -0.078459095727844945033,  -0.095845752520223989589,
      -0.11320321376790672072,   -0.13052619222005159155,
      -0.14780941112961061835,   -0.16504760586067764838,
      -0.18223552549214745660,   -0.19936793441719718109,
      -0.21643961393810287976,   -0.23344536385590541177,
      -0.25038000405444141589,   -0.26723837607825687479,
      -0.28401534470392261744,   -0.30070579950427312162,
      -0.31730465640509213438,   -0.33380685923377092883,
      -0.35020738125946746103,   -0.36650122672429727947,
      -0.38268343236508977173,   -0.39874906892524620637,
      -0.41469324265623904377,   -0.43051109680829514438,
      -0.44619781310980879800,   -0.46174861323503393056,
      -0.47715876025960841505,   -0.49242356010346711980,
      -0.50753836296070416894,   -0.52249856471594886499,
      -0.53729960834682383184,   -0.55193698531205817578,
      -0.56640623692483283182,   -0.58070295571093976105,
      -0.59482278675134129057,   -0.60876142900872063942,
      -0.62251463663761955034,   -0.63607822027776394680,
      -0.64944804833018365573,   -0.66262004821573747750,
      -0.67559020761566024435,   -0.68835457569375398439,
      -0.70090926429985090017,   -0.71325044915418157514,
      -0.72537437101228763799,   -0.73727733681012404138,
      -0.74895572078900214550,   -0.76040596560003093817,
      -0.77162458338771996787,   -0.78260815685241391370,
      -0.79335334029123516458,   -0.80385686061721732627,
      -0.81411551835631921847,   -0.82412618862201566173,
      -0.83388582206716818452,   -0.84339144581288570127,
      -0.85264016435409222152,   -0.86162916044152574545,
      -0.87035569593989968042,   -0.87881711266196537413,
      -0.88701083317822170105,   -0.89493436160202505656,
      -0.90258528434986060676,   -0.90996127087654320805,
      -0.91706007438512404700,   -0.92387953251128675613,
      -0.93041756798202453204,   -0.93667218924839761625,
      -0.94264149109217839478,   -0.94832365520619932659,
      -0.95371695074822692114,   -0.95881973486819304976,
      -0.96363045320862299102,   -0.96814764037810777497,
      -0.97236992039767660183,   -0.97629600711993336597,
      -0.97992470462082961188,   -0.98325490756395458455,
      -0.98628560153723140782,   -0.98901586336191682981,
      -0.99144486137381041114,   -0.99357185567658749694,
      -0.99539619836717880482,   -0.99691733373312797620,
      -0.99813479842186697378,   -0.99904822158185776240,
      -0.99965732497555728004,   -0.99996192306417128874};
  std::array<double, 180> ref_wgt = {
      0.024682448028416299546,   0.024680568364436952529,
      0.024676809179621947938,   0.024671170760247763712,
      0.024663653535701865222,   0.024654258078450005756,
      0.024642985103992631037,   0.024629835470810391088,
      0.024614810180298763611,   0.024597910376691793844,
      0.024579137346974956710,   0.024558492520787147883,
      0.024535977470311811261,   0.024511593910157211103,
      0.024485343697225857973,   0.024457228830573098425,
      0.024427251451254879200,   0.024395413842164697522,
      0.024361718427859749925,   0.024326167774376292832,
      0.024288764589034228958,   0.024249511720230934423,
      0.024208412157224342258,   0.024165469029905298844,
      0.024120685608559210602,   0.024074065303616999104,
      0.024025611665395383548,   0.023975328383826510398,
      0.023923219288176950765,   0.023869288346756086930,
      0.023813539666613910220,   0.023755977493228253254,
      0.023696606210181480366,   0.023635430338826660836,
      0.023572454537943250350,   0.023507683603382306906,
      0.023441122467701268190,   0.023372776199788318228,
      0.023302650004476371927,   0.023230749222146706895,
      0.023157079328322272736,   0.023081645933250708769,
      0.023004454781477101960,   0.022925511751406517563,
      0.022844822854856335823,   0.022762394236598428800,
      0.022678232173891212206,   0.022592343076001607871,
      0.022504733483716953251,   0.022415410068846895151,
      0.022324379633715305587,   0.022231649110642258491,
      0.022137225561416106693,   0.022041116176755699399,
      0.021943328275762781113,   0.021843869305364613697,
      0.021742746839746864032,   0.021639968579776800456,
      0.021535542352416841901,   0.021429476110128504407,
      0.021321777930266790385,   0.021212456014465066762,
      0.021101518688010478845,   0.020988974399209947475,
      0.020874831718746797744,   0.020759099339028068276,
      0.020641786073522550781,   0.020522900856089610277,
      0.020402452740298837118,   0.020280450898740582613,
      0.020156904622327430758,   0.020031823319586659273,
      0.019905216515943743823,   0.019777093852996959985,
      0.019647465087783138216,   0.019516340092034627721,
      0.019383728851427525811,   0.019249641464821230012,
      0.019114088143489370817,   0.018977079210342183671,
      0.018838625099140379385,   0.018698736353700572864,
      0.018557423627092330649,   0.018414697680826898424,
      0.018270569384037670272,   0.018125049712652462081,
      0.017978149748557652151,   0.017829880678754252639,
      0.017680253794505976118,   0.017529280490479362132,
      0.017376972263876029219,   0.017223340713557118501,
      0.017068397539159995493,   0.016912154540207277429,
      0.016754623615208253924,   0.016595816760752769429,
      0.016435746070597636466,   0.016274423734745649224,
      0.016111862038517267651,   0.015948073361615042736,
      0.015783070177180854230,   0.015616865050846032600,
      0.015449470639774437554,   0.015280899691698566008,
      0.015111165043948762902,   0.014940279622475608793,
      0.014768256440865558671,   0.014595108599349906969,
      0.014420849283807154231,   0.014245491764758851409,
      0.014069049396358998272,   0.013891535615377072874,
      0.013712963940174769537,   0.013533347969676523267,
      0.013352701382333899011,   0.013171037935083924611,
      0.012988371462301446787,   0.012804715874745589929,
      0.012620085158500397934,   0.012434493373909739758,
      0.012247954654506559788,   0.012060483205936554595,
      0.011872093304876358010,   0.011682799297946316925,
      0.011492615600617940610,   0.011301556696116106745,
      0.011109637134316107770,   0.010916871530635621551,
      0.010723274564921690736,   0.010528860980332795572,
      0.010333645582216105301,   0.010137643236979993652,
      0.0099408688709619042921,  0.0097433374692916524323,
      0.0095450640747502491800,  0.0093460637866243355227,
      0.0091463517595563131914,  0.0089459432023902599679,
      0.0087448533770137173252,  0.0085430975971954386018,
      0.0083406912274191862222,  0.0081376496817136667720,
      0.0079339884224786930340,  0.0077297229593076623773,
      0.0075248688478064411727,  0.0073194416884087451795,
      0.0071134571251881061186,  0.0069069308446665149050,
      0.0066998785746198322645,  0.0064923160828800577105,
      0.0062842591761345480883,  0.0060757236987222771360,
      0.0058667255314272277269,  0.0056572805902690086847,
      0.0054474048252907882689,  0.0052371142193446366342,
      0.0050264247868743697655,  0.0048153525726959875787,
      0.0046039136507757990623,  0.0043921241230063275101,
      0.0041800001179800890646,  0.0039675577897613379523,
      0.0037548133166558719481,  0.0035417828999789917517,
      0.0033284827628217081013,  0.0031149291488152905835,
      0.0029011383208942522216,  0.0026871265600578640486,
      0.0024729101641302939776,  0.0022585054465194643927,
      0.0020439287349747229747,  0.0018291963703434213736,
      0.0016143247053264964165,  0.0013993301032331486190,
      0.0011842289367347128364,  0.00096903758661781595263,
      0.00075377244053691655722, 0.00053844989176632161131,
      0.00032308633795177514001, 0.00010769817986171402198};
  IntegratorXX::GaussChebyshev1<double, double> quad(180);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 180; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("200 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 200> ref_pts = {
      0.99996915764478971220,    0.99972243021800055355,
      0.99922903624072293474,    0.99848909745053793646,
      0.99750279641627009507,    0.99627037649294127700,
      0.99479214176172646847,    0.99306845695492629564,
      0.99109974736597478704,    0.98888649874450458255,
      0.98642925717649547992,    0.98372862894953589055,
      0.98078528040323044913,    0.97759993776479068683,
      0.97417338696984933364,    0.97050647346854246120,
      0.96660010201690731245,    0.96245523645364728763,
      0.95807289946231916640,    0.95345417231900124297,
      0.94860019462550463328,    0.94351216402819358030,
      0.93819133592248413445,    0.93263902314309411955,
      0.92685659564012081059,    0.92084548014102624619,
      0.91460715979861357597,    0.90814317382508129926,
      0.90145511711224568679,    0.89454463983802508998,
      0.88741344705928323168,    0.88006329829113193837,
      0.87249600707279711453,    0.86471344052015507516,
      0.85671751886504964164,    0.84851021498150366723,
      0.84009355389894189274,    0.83146961230254523708,
      0.82264051802085980304,    0.81360844950078702289,
      0.80437563527008448224,    0.79494435338751004206,
      0.78531693088074492747,    0.77549574317223446750,
      0.76548321349308815088,    0.75528181228518360939,
      0.74489405659162205052,    0.73432250943568553564,
      0.72356977918844933642,    0.71263851892520540198,
      0.70153142577085572933,    0.69025124023443715182,
      0.67880074553294174139,    0.66718276690459966195,
      0.65540017091179391103,    0.64345586473377894506,
      0.63135279544937769942,    0.61909394930983398694,
      0.60668235100199968774,    0.59412106290203852788,
      0.58141318431983058428,    0.56856185073426394780,
      0.55557023301960222474,    0.54244153666311875916,
      0.52917900097419061285,    0.51578589828504744744,
      0.50226553314337251164,    0.48862124149695494742,
      0.47485638987059458990,    0.46097437453546234737,
      0.44697862067112110940,    0.43287258152041394172,
      0.41865973753742808668,    0.40434359552874499639,
      0.38992768778818828224,    0.37541557122528306872,
      0.36081082648764179131,    0.34611705707749297647,
      0.33133788846257098715,    0.31647696718158610832,
      0.30153795994449568461,    0.28652455272779830441,
      0.27144044986507425334,    0.25628937313299663247,
      0.24107506083303865432,    0.22580126686910369178,
      0.21047175982130566082,    0.19509032201612826785,
      0.17966074859319254603,    0.16418684656886294170,
      0.14867243389692299202,    0.13312133852655235817,
      0.11753739745783764411,    0.10192445579505003946,
      0.086286365797923376134,   0.070626985931166681596,
      0.054950179912445747364,   0.039259815759068609021,
      0.023559764833610153848,   0.0078539008887113339066,
      -0.0078539008887113339066, -0.023559764833610153848,
      -0.039259815759068609021,  -0.054950179912445747364,
      -0.070626985931166681596,  -0.086286365797923376134,
      -0.10192445579505003946,   -0.11753739745783764411,
      -0.13312133852655235817,   -0.14867243389692299202,
      -0.16418684656886294170,   -0.17966074859319254603,
      -0.19509032201612826785,   -0.21047175982130566082,
      -0.22580126686910369178,   -0.24107506083303865432,
      -0.25628937313299663247,   -0.27144044986507425334,
      -0.28652455272779830441,   -0.30153795994449568461,
      -0.31647696718158610832,   -0.33133788846257098715,
      -0.34611705707749297647,   -0.36081082648764179131,
      -0.37541557122528306872,   -0.38992768778818828224,
      -0.40434359552874499639,   -0.41865973753742808668,
      -0.43287258152041394172,   -0.44697862067112110940,
      -0.46097437453546234737,   -0.47485638987059458990,
      -0.48862124149695494742,   -0.50226553314337251164,
      -0.51578589828504744744,   -0.52917900097419061285,
      -0.54244153666311875916,   -0.55557023301960222474,
      -0.56856185073426394780,   -0.58141318431983058428,
      -0.59412106290203852788,   -0.60668235100199968774,
      -0.61909394930983398694,   -0.63135279544937769942,
      -0.64345586473377894506,   -0.65540017091179391103,
      -0.66718276690459966195,   -0.67880074553294174139,
      -0.69025124023443715182,   -0.70153142577085572933,
      -0.71263851892520540198,   -0.72356977918844933642,
      -0.73432250943568553564,   -0.74489405659162205052,
      -0.75528181228518360939,   -0.76548321349308815088,
      -0.77549574317223446750,   -0.78531693088074492747,
      -0.79494435338751004206,   -0.80437563527008448224,
      -0.81360844950078702289,   -0.82264051802085980304,
      -0.83146961230254523708,   -0.84009355389894189274,
      -0.84851021498150366723,   -0.85671751886504964164,
      -0.86471344052015507516,   -0.87249600707279711453,
      -0.88006329829113193837,   -0.88741344705928323168,
      -0.89454463983802508998,   -0.90145511711224568679,
      -0.90814317382508129926,   -0.91460715979861357597,
      -0.92084548014102624619,   -0.92685659564012081059,
      -0.93263902314309411955,   -0.93819133592248413445,
      -0.94351216402819358030,   -0.94860019462550463328,
      -0.95345417231900124297,   -0.95807289946231916640,
      -0.96245523645364728763,   -0.96660010201690731245,
      -0.97050647346854246120,   -0.97417338696984933364,
      -0.97759993776479068683,   -0.98078528040323044913,
      -0.98372862894953589055,   -0.98642925717649547992,
      -0.98888649874450458255,   -0.99109974736597478704,
      -0.99306845695492629564,   -0.99479214176172646847,
      -0.99627037649294127700,   -0.99750279641627009507,
      -0.99848909745053793646,   -0.99922903624072293474,
      -0.99972243021800055355,   -0.99996915764478971220};
  std::array<double, 200> ref_wgt = {
      0.022214243403914296840,   0.022212873124742714205,
      0.022210132650924822829,   0.022206022151505956585,
      0.022200541880041081809,   0.022193692174579156837,
      0.022185473457642279556,   0.022175886236199624244,
      0.022164931101636169331,   0.022152608729716217981,
      0.022138919880541713771,   0.022123865398505354021,
      0.022107446212238503676,   0.022089663334553912948,
      0.022070517862383242255,   0.022050010976709398311,
      0.022028143942493685535,   0.022004918108597777279,
      0.021980334907700511689,   0.021954395856209517324,
      0.021927102554167673989,   0.021898456685154414559,
      0.021868460016181873860,   0.021837114397585891046,
      0.021804421762911872165,   0.021770384128795519969,
      0.021735003594838438325,   0.021698282343478618903,
      0.021660222639855818114,   0.021620826831671832624,
      0.021580097349045682045,   0.021538036704363707752,
      0.021494647492124597056,   0.021449932388779342302,
      0.021403894152566144769,   0.021356535623340273542,
      0.021307859722398889864,   0.021257869452300847763,
      0.021206567896681482085,   0.021153958220062395335,
      0.021100043667656255081,   0.021044827565166613951,
      0.020988313318582764571,   0.020930504413969642103,
      0.020871404417252787339,   0.020811016973998383614,
      0.020749345809188381116,   0.020686394726990722448,
      0.020622167610524683636,   0.020556668421621345035,
      0.020489901200579206930,   0.020421870065914964893,
      0.020352579214109460270,   0.020282032919348821479,
      0.020210235533260812074,   0.020137191484646401849,
      0.020062905279206577530,   0.019987381499264409916,
      0.019910624803482394606,   0.019832639926575083755,
      0.019753431679017026575,   0.019673004946746036604,
      0.019591364690861804053,   0.019508515947319871802,
      0.019424463826620993944,   0.019339213513495896024,
      0.019252770266585456427,   0.019165139418116328639,
      0.019076326373572024386,   0.018986336611359477953,
      0.018895175682471112239,   0.018802849210142427392,
      0.018709362889505133160,   0.018614722487235846342,
      0.018518933841200375003,   0.018422002860093611421,
      0.018323935523075055950,   0.018224737879399994295,
      0.018124416048046350956,   0.018022976217337241845,
      0.017920424644559249366,   0.017816767655576443503,
      0.017712011644440172729,   0.017606163072994648800,
      0.017499228470478349765,   0.017391214433121265781,
      0.017282127623738012577,   0.017171974771316837663,
      0.017060762670604544640,   0.016948498181687361210,
      0.016835188229567776743,   0.016720839803737375505,
      0.016605459957745691892,   0.016489055808765114273,
      0.016371634537151864269,   0.016253203386003078557,
      0.016133769660710020526,   0.016013340728507449330,
      0.015891924018019174142,   0.015769527018799821652,
      0.015646157280872845052,   0.015521822414264803029,
      0.015396530088535937483,   0.015270288032307078919,
      0.015143104032782908711,   0.015014985935271607638,
      0.014885941642700920322,   0.014755979115130665411,
      0.014625106369261721604,   0.014493331477941519772,
      0.014360662569666071704,   0.014227107828078566186,
      0.014092675491464563337,   0.013957373852243818354,
      0.013821211256458765997,   0.013684196103259697381,
      0.013546336844386660822,   0.013407641983648118697,
      0.013268120076396392487,   0.013127779728999928340,
      0.012986629598312415730,   0.012844678391138791942,
      0.012701934863698165334,   0.012558407821083690490,
      0.012414106116719428607,   0.012269038651814226591,
      0.012123214374812648564,   0.011976642280842993660,
      0.011829331411162434133,   0.011681290852599308033,
      0.011532529736992600826,   0.011383057240628650553,
      0.011232882583675111266,   0.011082015029612209653,
      0.010930463884661329944,   0.010778238497210962341,
      0.010625348257240050380,   0.010471802595738772798,
      0.010317610984126795639,   0.010162782933669030468,
      0.010007327994888934756,   0.0098512557569793905995,
      0.0096945758472111981415,  0.0095372979303392201544,
      0.0093794317080062144375,  0.0092209869181443907925,
      0.0090619733343747294950,  0.0089024007654040983143,
      0.0087422790544202052713,  0.0085816180784844244545,
      0.0084204277479225323495,  0.0082587180057133922636,
      0.0080964988268756245535,  0.0079337802178523004905,
      0.0077705722158936977171,  0.0076068848884381553705,
      0.0074427283324910670638,  0.0072781126740020500321,
      0.0071130480672403288629,  0.0069475446941683723390,
      0.0067816127638138220326,  0.0066152625116397513912,
      0.0064485041989132941622,  0.0062813481120726811008,
      0.0061138045620927240068,  0.0059458838838487862292,
      0.0057775964354792788718,  0.0056089525977467220253,
      0.0054399627733974104370,  0.0052706373865197231181,
      0.0051009868819011164707,  0.0049310217243838405981,
      0.0047607523982194185410,  0.0045901894064219282582,
      0.0044193432701201272450,  0.0042482245279084597521,
      0.0040768437351969866395,  0.0039052114635602779628,
      0.0037333383000853084583,  0.0035612348467183961475,
      0.0033889117196112243495,  0.0032163795484659874383,
      0.0030436489758797007410,  0.0028707306566877150228,
      0.0026976352573064760541,  0.0025243734550755698005,
      0.0023509559375990938224,  0.0021773934020863955115,
      0.0020036965546922178293,  0.0018298761098562932526,
      0.0016559427896424266611,  0.0014819073230771079364,
      0.0013077804454876950700,  0.0011335728978402086037,
      0.00095929542607677825132, 0.00078495878045278257026,
      0.00061057371487372257128, 0.00043615098623187017143,
      0.00026170135374273241033, 0.000087235578281372356533};
  IntegratorXX::GaussChebyshev1<double, double> quad(200);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 200; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("225 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 225> ref_pts = {0.99997563070539479311,
                                     0.99978068347484548461,
                                     0.99939082701909573001,
                                     0.99880613734143403600,
                                     0.99802672842827156195,
                                     0.99705275222692024313,
                                     0.99588439861597036123,
                                     0.99452189536827333692,
                                     0.99296550810653696121,
                                     0.99121554025154172220,
                                     0.98927233296298832278,
                                     0.98713626507298792101,
                                     0.98480775301220805937,
                                     0.98228725072868868109,
                                     0.97957524959934406026,
                                     0.97667227833416789881,
                                     0.97357890287316026566,
                                     0.97029572627599647231,
                                     0.96682338860445939430,
                                     0.96316256679765815841,
                                     0.95931397454005752202,
                                     0.95527836212234367267,
                                     0.95105651629515357212,
                                     0.94664926011569636083,
                                     0.94205745278729672427,
                                     0.93728198949189150231,
                                     0.93232380121551219695,
                                     0.92718385456678740081,
                                     0.92186315158850052979,
                                     0.91636272956223959698,
                                     0.91068366080617711183,
                                     0.90482705246601952771,
                                     0.89879404629916699278,
                                     0.89258581845212548254,
                                     0.88620357923121470810,
                                     0.87964857286661650105,
                                     0.87292207726980967420,
                                     0.86602540378443864676,
                                     0.85895989693066440258,
                                     0.85172693414304762069,
                                     0.84432792550201507855,
                                     0.83676431345896167883,
                                     0.82903757255504169201,
                                     0.82114920913370403661,
                                     0.81310076104702763925,
                                     0.80489379735591412475,
                                     0.79652991802419628442,
                                     0.78801075360672195669,
                                     0.77933796493147412883,
                                     0.77051324277578923080,
                                     0.76153830753673674355,
                                     0.75241490889572438142,
                                     0.74314482547739423501,
                                     0.73372986450287637298,
                                     0.72417186143746750196,
                                     0.71447267963280337017,
                                     0.70463420996359467401,
                                     0.69465837045899728666,
                                     0.68454710592868867373,
                                     0.67430238758372339327,
                                     0.66392621265224159490,
                                     0.65342060399010543660,
                                     0.64278760968653932632,
                                     0.63202930266485086964,
                                     0.62114778027831036363,
                                     0.61014516390126762115,
                                     0.59902359851558583812,
                                     0.58778525229247312917,
                                     0.57643231616979325466,
                                     0.56496700342493794305,
                                     0.55339154924334407797,
                                     0.54170821028273986858,
                                     0.52991926423320495405,
                                     0.51802700937313020963,
                                     0.50603376412116382049,
                                     0.49394186658423097262,
                                     0.48175367410171527499,
                                     0.46947156278589077596,
                                     0.45709792705869416743,
                                     0.44463517918492748398,
                                     0.43208574880198230008,
                                     0.41945208244617710657,
                                     0.40673664307580020775,
                                     0.39394190959095112308,
                                     0.38107037635027410104,
                                     0.36812455268467795916,
                                     0.35510696240813705137,
                                     0.34202014332566873304,
                                     0.32886664673858324449,
                                     0.31564903694710246536,
                                     0.30236989075044450554,
                                     0.28903179694447159192,
                                     0.27563735581699918565,
                                     0.26218917864086472029,
                                     0.24868988716485478824,
                                     0.23514211310259002006,
                                     0.22154849761946729969,
                                     0.20791169081775933710,
                                     0.19423435121997197941,
                                     0.18051914525055998073,
                                     0.16676874671610227151,
                                     0.15298583628403806812,
                                     0.13917310096006544411,
                                     0.12533323356430424537,
                                     0.11146893220632547223,
                                     0.097582899759149472580,
                                     0.083677843332315491106,
                                     0.069756473744125300776,
                                     0.055821504993163803708,
                                     0.041875653729199629553,
                                     0.027921638723568880354,
                                     0.013962180339145271622,
                                     0,
                                     -0.013962180339145271622,
                                     -0.027921638723568880354,
                                     -0.041875653729199629553,
                                     -0.055821504993163803708,
                                     -0.069756473744125300776,
                                     -0.083677843332315491106,
                                     -0.097582899759149472580,
                                     -0.11146893220632547223,
                                     -0.12533323356430424537,
                                     -0.13917310096006544411,
                                     -0.15298583628403806812,
                                     -0.16676874671610227151,
                                     -0.18051914525055998073,
                                     -0.19423435121997197941,
                                     -0.20791169081775933710,
                                     -0.22154849761946729969,
                                     -0.23514211310259002006,
                                     -0.24868988716485478824,
                                     -0.26218917864086472029,
                                     -0.27563735581699918565,
                                     -0.28903179694447159192,
                                     -0.30236989075044450554,
                                     -0.31564903694710246536,
                                     -0.32886664673858324449,
                                     -0.34202014332566873304,
                                     -0.35510696240813705137,
                                     -0.36812455268467795916,
                                     -0.38107037635027410104,
                                     -0.39394190959095112308,
                                     -0.40673664307580020775,
                                     -0.41945208244617710657,
                                     -0.43208574880198230008,
                                     -0.44463517918492748398,
                                     -0.45709792705869416743,
                                     -0.46947156278589077596,
                                     -0.48175367410171527499,
                                     -0.49394186658423097262,
                                     -0.50603376412116382049,
                                     -0.51802700937313020963,
                                     -0.52991926423320495405,
                                     -0.54170821028273986858,
                                     -0.55339154924334407797,
                                     -0.56496700342493794305,
                                     -0.57643231616979325466,
                                     -0.58778525229247312917,
                                     -0.59902359851558583812,
                                     -0.61014516390126762115,
                                     -0.62114778027831036363,
                                     -0.63202930266485086964,
                                     -0.64278760968653932632,
                                     -0.65342060399010543660,
                                     -0.66392621265224159490,
                                     -0.67430238758372339327,
                                     -0.68454710592868867373,
                                     -0.69465837045899728666,
                                     -0.70463420996359467401,
                                     -0.71447267963280337017,
                                     -0.72417186143746750196,
                                     -0.73372986450287637298,
                                     -0.74314482547739423501,
                                     -0.75241490889572438142,
                                     -0.76153830753673674355,
                                     -0.77051324277578923080,
                                     -0.77933796493147412883,
                                     -0.78801075360672195669,
                                     -0.79652991802419628442,
                                     -0.80489379735591412475,
                                     -0.81310076104702763925,
                                     -0.82114920913370403661,
                                     -0.82903757255504169201,
                                     -0.83676431345896167883,
                                     -0.84432792550201507855,
                                     -0.85172693414304762069,
                                     -0.85895989693066440258,
                                     -0.86602540378443864676,
                                     -0.87292207726980967420,
                                     -0.87964857286661650105,
                                     -0.88620357923121470810,
                                     -0.89258581845212548254,
                                     -0.89879404629916699278,
                                     -0.90482705246601952771,
                                     -0.91068366080617711183,
                                     -0.91636272956223959698,
                                     -0.92186315158850052979,
                                     -0.92718385456678740081,
                                     -0.93232380121551219695,
                                     -0.93728198949189150231,
                                     -0.94205745278729672427,
                                     -0.94664926011569636083,
                                     -0.95105651629515357212,
                                     -0.95527836212234367267,
                                     -0.95931397454005752202,
                                     -0.96316256679765815841,
                                     -0.96682338860445939430,
                                     -0.97029572627599647231,
                                     -0.97357890287316026566,
                                     -0.97667227833416789881,
                                     -0.97957524959934406026,
                                     -0.98228725072868868109,
                                     -0.98480775301220805937,
                                     -0.98713626507298792101,
                                     -0.98927233296298832278,
                                     -0.99121554025154172220,
                                     -0.99296550810653696121,
                                     -0.99452189536827333692,
                                     -0.99588439861597036123,
                                     -0.99705275222692024313,
                                     -0.99802672842827156195,
                                     -0.99880613734143403600,
                                     -0.99939082701909573001,
                                     -0.99978068347484548461,
                                     -0.99997563070539479311};
  std::array<double, 225> ref_wgt = {
      0.019746026091533820937,   0.019745063698079607558,
      0.019743138958076880023,   0.019740251965334750662,
      0.019736402860561172788,   0.019731591831356082787,
      0.019725819112202256766,   0.019719084984453882191,
      0.019711389776322845078,   0.019702733862862733417,
      0.019693117665950557580,   0.019682541654266188636,
      0.019671006343269515554,   0.019658512295175322416,
      0.019645060118925886859,   0.019630650470161301090,
      0.019615284051187516914,   0.019598961610942116329,
      0.019581683944957809366,   0.019563451895323660950,
      0.019544266350644048663,   0.019524128245995353423,
      0.019503038562880385179,   0.019480998329180545849,
      0.019458008619105731831,   0.019434070553141978528,
      0.019409185297996849439,   0.019383354066542572480,
      0.019356578117756926298,   0.019328858756661879478,
      0.019300197334259985604,   0.019270595247468537311,
      0.019240053939051482496,   0.019208574897549106047,
      0.019176159657205480487,   0.019142809797893689079,
      0.019108526945038825047,   0.019073312769538770645,
      0.019037168987682759953,   0.019000097361067729362,
      0.018962099696512459825,   0.018923177845969515054,
      0.018883333706434979973,   0.018842569219856003797,
      0.018800886373036152273,   0.018758287197538573673,
      0.018714773769586983276,   0.018670348209964471153,
      0.018625012683910138187,   0.018578769401013565379,
      0.018531620615107121565,   0.018483568624156114810,
      0.018434615770146792817,   0.018384764438972197823,
      0.018334017060315881541,   0.018282376107533485804,
      0.018229844097532194710,   0.018176423590648064107,
      0.018122117190521234434,   0.018066927543969032969,
      0.018010857340856971687,   0.017953909313967647012,
      0.017896086238867547846,   0.017837390933771778375,
      0.017777826259406702242,   0.017717395118870514780,
      0.017656100457491750097,   0.017593945262685729925,
      0.017530932563808961207,   0.017467065432011489539,
      0.017402346980087215643,   0.017336780362322182193,
      0.017270368774340838352,   0.017203115452950289557,
      0.017135023675982540096,   0.017066096762134736207,
      0.016996338070807417461,   0.016925751001940784316,
      0.016854338995848989829,   0.016782105533052463600,
      0.016709054134108276116,   0.016635188359438551761,
      0.016560511809156938875,   0.016485028122893145281,
      0.016408740979615547881,   0.016331654097451884915,
      0.016253771233508039671,   0.016175096183684924438,
      0.016095632782493473654,   0.016015384902867755252,
      0.015934356455976209315,   0.015852551391031023249,
      0.015769973695095652748,   0.015686627392890497949,
      0.015602516546596744236,   0.015517645255658377261,
      0.015432017656582381826,   0.015345637922737134369,
      0.015258510264148998880,   0.015170638927297136151,
      0.015082028194906536374,   0.014992682385739285170,
      0.014902605854384073211,   0.014811802991043959720,
      0.014720278221322400159,   0.014628036006007548566,
      0.014535080840854845028,   0.014441417256367898911,
      0.014347049817577678497,   0.014251983123820017823,
      0.014156221808511451536,   0.014059770538923388708,
      0.013962634015954636615,   0.013864816973902285559,
      0.013766324180230965908,   0.013667160435340488593,
      0.013567330572331880398,   0.013466839456771825431,
      0.013365691986455524271,   0.013263893091167982335,
      0.013161447732443739118,   0.013058360903325049993,
      0.012954637628118532381,   0.012850282962150288131,
      0.012745301991519514059,   0.012639699832850612648,
      0.012533481633043814996,   0.012426652569024328155,
      0.012319217847490019104,   0.012211182704657647639,
      0.012102552406007660556,   0.011993332246027559561,
      0.011883527547953855419,   0.011773143663512620918,
      0.011662185972658655290,   0.011550659883313272802,
      0.011438570831100728302,   0.011325924279083292562,
      0.011212725717494990330,   0.011098980663474014067,
      0.010984694660793826419,   0.010869873279592964515,
      0.010754522116103559276,   0.010638646792378582956,
      0.010522252956017838210,   0.010405346279892702049,
      0.010287932461869638089,   0.010170017224532490585,
      0.010051606314903573759,   0.0099327055041635700468,
      0.0098133205873702508903,  0.0096934573831760337988,
      0.0095731217335443894380,  0.0094523195034651125730,
      0.0093310565806684707395,  0.0092093388753382445772,
      0.0090871723198236738101,  0.0089645628683503229142,
      0.0088415164967298805633,  0.0087180392020689069979,
      0.0085941370024765435125,  0.0084698159367711983061,
      0.0083450820641862229922,  0.0082199414640745941142,
      0.0080944002356126140573,  0.0079684644975026458006,
      0.0078421403876748959963,  0.0077154340629882609102,
      0.0075883516989302498054,  0.0074608994893160003937,
      0.0073330836459864010235,  0.0072049103985053343187,
      0.0070763859938560570239,  0.0069475166961367308530,
      0.0068183087862551191828,  0.0066887685616224644694,
      0.0065589023358465613085,  0.0064287164384240400986,
      0.0062982172144318763051,  0.0061674110242181403599,
      0.0060363042430920032693,  0.0059049032610130130400,
      0.0057732144822796570646,  0.0056412443252172256494,
      0.0055089992218649918940,  0.0053764856176627231715,
      0.0052437099711365394878,  0.0051106787535841340296,
      0.0049773984487593712448,  0.0048438755525562778262,
      0.0047101165726924420011,  0.0045761280283918365570,
      0.0044419164500670810625,  0.0043074883790011587690,
      0.0041728503670286037070,  0.0040380089762161735134,
      0.0039029707785430235563,  0.0037677423555803979419,
      0.0036323302981708530177,  0.0034967412061070290045,
      0.0033609816878099854140,  0.0032250583600071159294,
      0.0030889778474096584473,  0.0029527467823898159976,
      0.0028163718046575042796,  0.0026798595609367415678,
      0.0025432167046416967603,  0.0024064498955524113589,
      0.0022695657994902111854,  0.0021325710879928236541,
      0.0019954724379892164355,  0.0018582765314741733575,
      0.0017209900551826234073,  0.0015836197002637387038,
      0.0014461721619548173274,  0.0013086541392549668992,
      0.0011710723345986048154,  0.0010334334535287910501,
      0.00089574420437040944578, 0.00075801129790321342314,
      0.00062024144703475204312, 0.00048244136647319236374,
      0.00034461777240005403679, 0.00020677738214287209593,
      0.000068926913847803888531};
  IntegratorXX::GaussChebyshev1<double, double> quad(225);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 225; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("250 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 250> ref_pts = {
      0.99998026085613712985,   0.99982235238080900976,
      0.99950656036573155700,   0.99903293467812472949,
      0.99840155010897504348,   0.99761250636122520984,
      0.99666592803402988357,   0.99556196460308001290,
      0.99430079039699889488,   0.99288260456981366495,
      0.99130763106950656729,   0.98957611860265097244,
      0.98768834059513772619,   0.98564459514899803178,
      0.98344520499532968350,   0.98109051744333408509,
      0.97858090432547210071,   0.97591676193874739896,
      0.97309851098212656199,   0.97012659649010584175,
      0.96700148776243505405,   0.96372367829000970779,
      0.96029368567694307175,   0.95671205155883048496,
      0.95297934151721881726,   0.94909614499029458668,
      0.94506307517980483678,   0.94088076895422547232,
      0.93654988674819234415,   0.93207111245821096415,
      0.92744515333466131906,   0.92267273987011483677,
      0.91775462568398114115,   0.91269158740350281103,
      0.90748442454111693568,   0.90213395936820283271,
      0.89664103678523586522,   0.89100652418836786236,
      0.88523131133245521175,   0.87931631019055625331,
      0.87326245480992016142,   0.86707070116449005645,
      0.86074202700394363716,   0.85427743169929517213,
      0.84767793608508323152,   0.84094458229816907960,
      0.83407843361317118346,   0.82708057427456182492,
      0.81995210932545232937,   0.81269416443309394846,
      0.80530788571112195195,   0.79779443953857099852,
      0.79015501237569036516,   0.78239081057658811985,
      0.77450306019873382346,   0.76649300680934984235,
      0.75836191528872184492,   0.75011106963045954151,
      0.74174177273873920895,   0.73325534622256001733,
      0.72465313018704664849,   0.71593648302183116182,
      0.70710678118654752440,   0.69816541899347267841,
      0.68911380838734846918,   0.67995337872241920269,
      0.67068557653672004076,   0.66131186532365187657,
      0.65183372530087876122,   0.64225265317658437542,
      0.63257016191312445683,   0.62278778048811250533,
      0.61290705365297649336,   0.60292954168902470810,
      0.59285682016105924553,   0.58269047966857606370,
      0.57243212559459088346,   0.56208337785213060010,
      0.55164587062843023778,   0.54112125212687584101,
      0.53051118430673405344,   0.51981734262070948358,
      0.50904141575037130028,   0.49818510533949083719,
      0.48725012572533231511,   0.47623820366793911482,
      0.46515107807745834892,   0.45399049973954679156,
      0.44275823103890152749,   0.43145604568095897813,
      0.42008572841180625178,   0.40864907473634904698,
      0.39714789063478061375,   0.38558399227739654554,
      0.37395920573780043578,   0.36227536670454568738,
      0.35053432019125901018,   0.33873792024529138122,
      0.32688802965494247520,   0.31498651965530479783,
      0.30303526963277397273,   0.29103616682827184294,
      0.27899110603922925185,   0.26690198932037556365,
      0.25477072568338217220,   0.24259923079540742825,
      0.23038942667659058793,   0.21814324139654255202,
      0.20586260876988132354,   0.19354946805086026202,
      0.18120576362713735637,   0.16883344471273387363,
      0.15643446504023086901,   0.14401078255225216293,
      0.13156435909228250357,   0.11909716009486973816,
      0.10661115427525991390,   0.094108313318514318473,
      0.081590611568157552428,  0.069060025714405799289,
      0.056518534482024525915,  0.043968118317864903927,
      0.031410759078128293839,  0.018848439715408176456,
      0.0062831439655589512497, -0.0062831439655589512497,
      -0.018848439715408176456, -0.031410759078128293839,
      -0.043968118317864903927, -0.056518534482024525915,
      -0.069060025714405799289, -0.081590611568157552428,
      -0.094108313318514318473, -0.10661115427525991390,
      -0.11909716009486973816,  -0.13156435909228250357,
      -0.14401078255225216293,  -0.15643446504023086901,
      -0.16883344471273387363,  -0.18120576362713735637,
      -0.19354946805086026202,  -0.20586260876988132354,
      -0.21814324139654255202,  -0.23038942667659058793,
      -0.24259923079540742825,  -0.25477072568338217220,
      -0.26690198932037556365,  -0.27899110603922925185,
      -0.29103616682827184294,  -0.30303526963277397273,
      -0.31498651965530479783,  -0.32688802965494247520,
      -0.33873792024529138122,  -0.35053432019125901018,
      -0.36227536670454568738,  -0.37395920573780043578,
      -0.38558399227739654554,  -0.39714789063478061375,
      -0.40864907473634904698,  -0.42008572841180625178,
      -0.43145604568095897813,  -0.44275823103890152749,
      -0.45399049973954679156,  -0.46515107807745834892,
      -0.47623820366793911482,  -0.48725012572533231511,
      -0.49818510533949083719,  -0.50904141575037130028,
      -0.51981734262070948358,  -0.53051118430673405344,
      -0.54112125212687584101,  -0.55164587062843023778,
      -0.56208337785213060010,  -0.57243212559459088346,
      -0.58269047966857606370,  -0.59285682016105924553,
      -0.60292954168902470810,  -0.61290705365297649336,
      -0.62278778048811250533,  -0.63257016191312445683,
      -0.64225265317658437542,  -0.65183372530087876122,
      -0.66131186532365187657,  -0.67068557653672004076,
      -0.67995337872241920269,  -0.68911380838734846918,
      -0.69816541899347267841,  -0.70710678118654752440,
      -0.71593648302183116182,  -0.72465313018704664849,
      -0.73325534622256001733,  -0.74174177273873920895,
      -0.75011106963045954151,  -0.75836191528872184492,
      -0.76649300680934984235,  -0.77450306019873382346,
      -0.78239081057658811985,  -0.79015501237569036516,
      -0.79779443953857099852,  -0.80530788571112195195,
      -0.81269416443309394846,  -0.81995210932545232937,
      -0.82708057427456182492,  -0.83407843361317118346,
      -0.84094458229816907960,  -0.84767793608508323152,
      -0.85427743169929517213,  -0.86074202700394363716,
      -0.86707070116449005645,  -0.87326245480992016142,
      -0.87931631019055625331,  -0.88523131133245521175,
      -0.89100652418836786236,  -0.89664103678523586522,
      -0.90213395936820283271,  -0.90748442454111693568,
      -0.91269158740350281103,  -0.91775462568398114115,
      -0.92267273987011483677,  -0.92744515333466131906,
      -0.93207111245821096415,  -0.93654988674819234415,
      -0.94088076895422547232,  -0.94506307517980483678,
      -0.94909614499029458668,  -0.95297934151721881726,
      -0.95671205155883048496,  -0.96029368567694307175,
      -0.96372367829000970779,  -0.96700148776243505405,
      -0.97012659649010584175,  -0.97309851098212656199,
      -0.97591676193874739896,  -0.97858090432547210071,
      -0.98109051744333408509,  -0.98344520499532968350,
      -0.98564459514899803178,  -0.98768834059513772619,
      -0.98957611860265097244,  -0.99130763106950656729,
      -0.99288260456981366495,  -0.99430079039699889488,
      -0.99556196460308001290,  -0.99666592803402988357,
      -0.99761250636122520984,  -0.99840155010897504348,
      -0.99903293467812472949,  -0.99950656036573155700,
      -0.99982235238080900976,  -0.99998026085613712985};
  std::array<double, 250> ref_wgt = {
      0.017771444053711594551,   0.017770742467529940228,
      0.017769339322864052725,   0.017767234675107680885,
      0.017764428607348714393,   0.017760921230365903617,
      0.017756712682624486246,   0.017751803130270720924,
      0.017746192767125328077,   0.017739881814675838204,
      0.017732870522067847931,   0.017725159166095184165,
      0.017716748051188976750,   0.017707637509405640048,
      0.017697827900413763919,   0.017687319611479914620,
      0.017676113057453346189,   0.017664208680749622899,
      0.017651606951333153455,   0.017638308366698637604,
      0.017624313451851425892,   0.017609622759286793354,
      0.017594236868968127947,   0.017578156388304034588,
      0.017561381952124355702,   0.017543914222655109229,
      0.017525753889492345069,   0.017506901669574921018,
      0.017487358307156199245,   0.017467124573774664445,
      0.017446201268223464820,   0.017424589216518877093,
      0.017402289271867696803,   0.017379302314633555156,
      0.017355629252302163781,   0.017331271019445488746,
      0.017306228577684855257,   0.017280502915652984497,
      0.017254095048954964093,   0.017227006020128153775,
      0.017199236898601027777,   0.017170788780650955638,
      0.017141662789360923047,   0.017111860074575194450,
      0.017081381812853919165,   0.017050229207426682806,
      0.017018403488145005835,   0.016985905911433791133,
      0.016952737760241722495,   0.016918900343990616012,
      0.016884394998523726341,   0.016849223086053009899,
      0.016813385995105347071,   0.016776885140467725542,
      0.016739721963131386930,   0.016701897930234938924,
      0.016663414535006435156,   0.016624273296704425121,
      0.016584475760557976448,   0.016544023497705671901,
      0.016502918105133583521,   0.016461161205612226348,
      0.016418754447632494222,   0.016375699505340580182,
      0.016331998078471884043,   0.016287651892283909754,
      0.016242662697488155182,   0.016197032270180997023,
      0.016150762411773573558,   0.016103854948920668025,
      0.016056311733448595415,   0.016008134642282095541,
      0.015959325577370235264,   0.015909886465611322798,
      0.015859819258776837067,   0.015809125933434375106,
      0.015757808490869620561,   0.015705868957007336351,
      0.015653309382331384633,   0.015600131841803777206,
      0.015546338434782759566,   0.015491931284939931838,
      0.015436912540176409853,   0.015381284372538029696,
      0.015325048978129599049,   0.015268208577028198739,
      0.015210765413195537895,   0.015152721754389366177,
      0.015094079892073946592,   0.015034842141329592401,
      0.014975010840761271715,   0.014914588352406283374,
      0.014853577061641007764,   0.014791979377086736234,
      0.014729797730514582856,   0.014667034576749482268,
      0.014603692393573277382,   0.014539773681626900804,
      0.014475280964311653814,   0.014410216787689586797,
      0.014344583720382985077,   0.014278384353472964107,
      0.014211621300397178023,   0.014144297196846645600,
      0.014076414700661697683,   0.014007976491727050202,
      0.013938985271866006916,   0.013869443764733796046,
      0.013799354715710045041,   0.013728720891790397683,
      0.013657545081477277842,   0.013585830094669804172,
      0.013513578762552860106,   0.013440793937485323524,
      0.013367478492887460511,   0.013293635323127487641,
      0.013219267343407307280,   0.013144377489647420402,
      0.013068968718371021480,   0.012993044006587280006,
      0.012916606351673813275,   0.012839658771258355040,
      0.012762204303099624742,   0.012684246004967401997,
      0.012605786954521811076,   0.012526830249191820160,
      0.012447379006052960142,   0.012367436361704267826,
      0.012287005472144458366,   0.012206089512647331842,
      0.012124691677636418884,   0.012042815180558870308,
      0.011960463253758595715,   0.011877639148348656097,
      0.011794346134082915453,   0.011710587499226956511,
      0.011626366550428265629,   0.011541686612585692018,
      0.011456551028718186424,   0.011370963159832824467,
      0.011284926384792119837,   0.011198444100180632585,
      0.011111519720170877783,   0.011024156676388539838,
      0.010936358417776997786,   0.010848128410461166911,
      0.010759470137610662072,   0.010670387099302288129,
      0.010580882812381862902,   0.010490960810325378125,
      0.010400624643099503856,   0.010309877877021441880,
      0.010218724094618133607,   0.010127166894484828045,
      0.010035209891143015418,   0.0099428567148977320523,
      0.0098501110116942421450,  0.0097569764429741020895,
      0.0096634566855306130322,  0.0095695554313636673686,
      0.0094752763875339949094,  0.0093806232760168144699,
      0.0092855998335548966620,  0.0091902098115110436876,
      0.0090944569757199919588,  0.0089983451063397433900,
      0.0089018779977023312337,  0.0088050594581640263477,
      0.0087078933099549898114,  0.0086103833890283778228,
      0.0085125335449089048371,  0.0084143476405408709215,
      0.0083158295521356593294,  0.0082169831690187103117,
      0.0081178123934759772079,  0.0080183211405998708789,
      0.0079185133381346985621,  0.0078183929263216032513,
      0.0077179638577430097236,  0.0076172300971665833527,
      0.0075161956213887078707,  0.0074148644190774882559,
      0.0073132404906152849458,  0.0072113278479407855912,
      0.0071091305143906205868,  0.0070066525245405286292,
      0.0069038979240460785760,  0.0068008707694829538905,
      0.0066975751281868059801,  0.0065940150780926827491,
      0.0064901947075740387051,  0.0063861181152813329763,
      0.0062817894099802216087,  0.0061772127103893505335,
      0.0060723921450177556074,  0.0059673318520018761450,
      0.0058620359789421883778,  0.0057565086827394652891,
      0.0056507541294306692896,  0.0055447764940244842109,
      0.0054385799603364931120,  0.0053321687208240084039,
      0.0052255469764205608129,  0.0051187189363700537187,
      0.0050116888180605894122,  0.0049044608468579738343,
      0.0047970392559389063695,  0.0046894282861238612773,
      0.0045816321857096673621,  0.0044736552103017924882,
      0.0043655016226463395629,  0.0042571756924617606193,
      0.0041486816962702956426,  0.0040400239172291427948,
      0.0039312066449613667024,  0.0038222341753865514830,
      0.0037131108105512051957,  0.0036038408584589224110,
      0.0034944286329003116061,  0.0033848784532826940974,
      0.0032751946444595812356,  0.0031653815365599365948,
      0.0030554434648172298948,  0.0029453847693982894074,
      0.0028352097952319596011,  0.0027249228918375707902,
      0.0026145284131532275594,  0.0025040307173639227422,
      0.0023934341667294837402,  0.0022827431274123579742,
      0.0021719619693052442668,  0.0020610950658585769615,
      0.0019501467939078695876,  0.0018391215335009248889,
      0.0017280236677249180359,  0.0016168575825333598496,
      0.0015056276665729468663,  0.0013943383110103050813,
      0.0012829939093586342087,  0.0011715988573042593036,
      0.0010601575525330965924,  0.00094867439455704036288,
      0.00083715378454027776806, 0.00072560012512553839982,
      0.00061401782026028549230, 0.00050241127502285561748,
      0.00039078489544855373423, 0.00027914308835571045975,
      0.00016749026117170842659, 0.000055830821758984597758};
  IntegratorXX::GaussChebyshev1<double, double> quad(250);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 250; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("275 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 275> ref_pts = {
      0.99998368664865015173,   0.99985318303133918715,
      0.99959219282818922963,   0.99920075009992151746,
      0.99867890593206143579,   0.99802672842827156195,
      0.99724430270146374621,   0.99633173086269138762,
      0.99528913200782335487,   0.99411664220200129094,
      0.99281441446188233035,   0.99138261873566954605,
      0.98982144188093273238,   0.98813108764022241845,
      0.98631177661448029456,   0.98436374623424952165,
      0.98228725072868868109,   0.98008256109239340856,
      0.97774996505003004217,   0.97528976701878590012,
      0.97270228806864108847,   0.96998786588046702381,
      0.96714685470195713906,   0.96417962530139552395,
      0.96108656491926953335,   0.95786807721773267845,
      0.95452458222792439624,   0.95105651629515357212,
      0.94746433202195296973,   0.94374849820901199967,
      0.93990949979399553566,   0.93594783778825676262,
      0.93186402921145231619,   0.92765860702406824656,
      0.92333212005786561249,   0.91888513294425478275,
      0.91431822604060779251,   0.90963199535451837141,
      0.90482705246601952771,   0.89990402444776883970,
      0.89486355378321187050,   0.88970629828273438654,
      0.88443293099781432224,   0.87904414013318469458,
      0.87354062895701893081,   0.86792311570915033063,
      0.86219233350733764076,   0.85634903025158897463,
      0.85039396852655656377,   0.84432792550201507855,
      0.83815169283143650683,   0.83186607654867482672,
      0.82547189696277395698,   0.81896998855091271300,
      0.81236119984950073986,   0.80564639334343963487,
      0.79882644535356371188,   0.79190224592227509676,
      0.78487469869738807948,   0.77774472081419788175,
      0.77051324277578923080,   0.76318120833160035995,
      0.75574957435425828377,   0.74821931071470142188,
      0.74059140015560586823,   0.73286683816313182479,
      0.72504663283700693726,   0.71713180475896348780,
      0.70912338685954661436,   0.70102242428331093906,
      0.69282997425242319807,   0.68454710592868867373,
      0.67617490027401943528,   0.66771444990936259776,
      0.65916685897210700993,   0.65053324297198698029,
      0.64181472864550184671,   0.63301245380887038873,
      0.62412756720953927273,   0.61516122837626490914,
      0.60611460746778828673,   0.59698888512012253279,
      0.58778525229247312917,   0.57850491011181089235,
      0.56914906971611800173,   0.55971895209632753334,
      0.55021578793697712698,   0.54064081745559758211,
      0.53099529024085734346,   0.52128046508948399929,
      0.51149760984198407499,   0.50164800121718256162,
      0.49173292464560377284,   0.48175367410171527499,
      0.47171155193505678356,   0.46160786870027606454,
      0.45144394298609402204,   0.44122110124322129326,
      0.43094067761124880849,   0.42060401374453490820,
      0.41021245863711173973,   0.39976736844663378433,
      0.38927010631739149039,   0.37872204220241311051,
      0.36812455268467795916,   0.35747902079746442359,
      0.34678683584385617374,   0.33604939321543012640,
      0.32526809421014982616,   0.31444434584948800884,
      0.30357956069480221416,   0.29267515666298741157,
      0.28173255684142969771,   0.27075318930228521501,
      0.25973848691610852920,   0.24868988716485478824,
      0.23760883195428006699,   0.22649676742576438039,
      0.21535514376758192344,   0.20418541502564316819,
      0.19298903891373351704,   0.18176747662327327730,
      0.17052219263262378440,   0.15925465451596456041,
      0.14796633275176645046,   0.13665870053088573256,
      0.12533323356430424537,   0.11399140989054062530,
      0.10263470968275778649,   0.091264615055591817574,
      0.079882609871727505020,  0.068490179548245726007,
      0.057088810862767983749,  0.045679991759423384414,
      0.034265211154663378113,  0.022845958742949606222,
      0.011423724802340213916,  0,
      -0.011423724802340213916, -0.022845958742949606222,
      -0.034265211154663378113, -0.045679991759423384414,
      -0.057088810862767983749, -0.068490179548245726007,
      -0.079882609871727505020, -0.091264615055591817574,
      -0.10263470968275778649,  -0.11399140989054062530,
      -0.12533323356430424537,  -0.13665870053088573256,
      -0.14796633275176645046,  -0.15925465451596456041,
      -0.17052219263262378440,  -0.18176747662327327730,
      -0.19298903891373351704,  -0.20418541502564316819,
      -0.21535514376758192344,  -0.22649676742576438039,
      -0.23760883195428006699,  -0.24868988716485478824,
      -0.25973848691610852920,  -0.27075318930228521501,
      -0.28173255684142969771,  -0.29267515666298741157,
      -0.30357956069480221416,  -0.31444434584948800884,
      -0.32526809421014982616,  -0.33604939321543012640,
      -0.34678683584385617374,  -0.35747902079746442359,
      -0.36812455268467795916,  -0.37872204220241311051,
      -0.38927010631739149039,  -0.39976736844663378433,
      -0.41021245863711173973,  -0.42060401374453490820,
      -0.43094067761124880849,  -0.44122110124322129326,
      -0.45144394298609402204,  -0.46160786870027606454,
      -0.47171155193505678356,  -0.48175367410171527499,
      -0.49173292464560377284,  -0.50164800121718256162,
      -0.51149760984198407499,  -0.52128046508948399929,
      -0.53099529024085734346,  -0.54064081745559758211,
      -0.55021578793697712698,  -0.55971895209632753334,
      -0.56914906971611800173,  -0.57850491011181089235,
      -0.58778525229247312917,  -0.59698888512012253279,
      -0.60611460746778828673,  -0.61516122837626490914,
      -0.62412756720953927273,  -0.63301245380887038873,
      -0.64181472864550184671,  -0.65053324297198698029,
      -0.65916685897210700993,  -0.66771444990936259776,
      -0.67617490027401943528,  -0.68454710592868867373,
      -0.69282997425242319807,  -0.70102242428331093906,
      -0.70912338685954661436,  -0.71713180475896348780,
      -0.72504663283700693726,  -0.73286683816313182479,
      -0.74059140015560586823,  -0.74821931071470142188,
      -0.75574957435425828377,  -0.76318120833160035995,
      -0.77051324277578923080,  -0.77774472081419788175,
      -0.78487469869738807948,  -0.79190224592227509676,
      -0.79882644535356371188,  -0.80564639334343963487,
      -0.81236119984950073986,  -0.81896998855091271300,
      -0.82547189696277395698,  -0.83186607654867482672,
      -0.83815169283143650683,  -0.84432792550201507855,
      -0.85039396852655656377,  -0.85634903025158897463,
      -0.86219233350733764076,  -0.86792311570915033063,
      -0.87354062895701893081,  -0.87904414013318469458,
      -0.88443293099781432224,  -0.88970629828273438654,
      -0.89486355378321187050,  -0.89990402444776883970,
      -0.90482705246601952771,  -0.90963199535451837141,
      -0.91431822604060779251,  -0.91888513294425478275,
      -0.92333212005786561249,  -0.92765860702406824656,
      -0.93186402921145231619,  -0.93594783778825676262,
      -0.93990949979399553566,  -0.94374849820901199967,
      -0.94746433202195296973,  -0.95105651629515357212,
      -0.95452458222792439624,  -0.95786807721773267845,
      -0.96108656491926953335,  -0.96417962530139552395,
      -0.96714685470195713906,  -0.96998786588046702381,
      -0.97270228806864108847,  -0.97528976701878590012,
      -0.97774996505003004217,  -0.98008256109239340856,
      -0.98228725072868868109,  -0.98436374623424952165,
      -0.98631177661448029456,  -0.98813108764022241845,
      -0.98982144188093273238,  -0.99138261873566954605,
      -0.99281441446188233035,  -0.99411664220200129094,
      -0.99528913200782335487,  -0.99633173086269138762,
      -0.99724430270146374621,  -0.99802672842827156195,
      -0.99867890593206143579,  -0.99920075009992151746,
      -0.99959219282818922963,  -0.99985318303133918715,
      -0.99998368664865015173};
  std::array<double, 275> ref_wgt = {
      0.016155872067432084040,   0.016155344954597285602,
      0.016154290746125642475,   0.016152709476412501049,
      0.016150601197049478140,   0.016147965976822777736,
      0.016144803901710946720,   0.016141115074882069680,
      0.016136899616690402872,   0.016132157664672447460,
      0.016126889373542462150,   0.016121094915187415374,
      0.016114774478661377188,   0.016107928270179351061,
      0.016100556513110545754,   0.016092659447971087528,
      0.016084237332416172886,   0.016075290441231662141,
      0.016065819066325114057,   0.016055823516716261868,
      0.016045304118526930981,   0.016034261214970398699,
      0.016022695166340196304,   0.016010606349998353861,
      0.015997995160363088150,   0.015984862008895934087,
      0.015971207324088320103,   0.015957031551447587873,
      0.015942335153482456886,   0.015927118609687934305,
      0.015911382416529670633,   0.015895127087427761667,
      0.015878353152739997303,   0.015861061159744557701,
      0.015843251672622157410,   0.015824925272437638006,
      0.015806082557121009865,   0.015786724141447943677,
      0.015766850657019712345,   0.015746462752242583916,
      0.015725561092306666223,   0.015704146359164203925,
      0.015682219251507328655,   0.015659780484745262998,
      0.015636830790980979047,   0.015613370918987312299,
      0.015589401634182531665,   0.015564923718605366394,
      0.015539937970889490730,   0.015514445206237467129,
      0.015488446256394148887,   0.015461941969619543044,
      0.015434933210661134465,   0.015407420860725671972,
      0.015379405817450417480,   0.015350888994873859050,
      0.015321871323405888827,   0.015292353749797446834,
      0.015262337237109631611,   0.015231822764682278703,
      0.015200811328102008037,   0.015169303939169741208,
      0.015137301625867689752,   0.015104805432325815478,
      0.015071816418787763948,   0.015038335661576272224,
      0.015004364253058052008,   0.014969903301608149312,
      0.014934953931573781841,   0.014899517283237655249,
      0.014863594512780759471,   0.014827186792244646355,
      0.014790295309493189806,   0.014752921268173829706,
      0.014715065887678300868,   0.014676730403102848304,
      0.014637916065207930107,   0.014598624140377409258,
      0.014558855910577235703,   0.014518612673313620025,
      0.014477895741590700097,   0.014436706443867702086,
      0.014395046124015597211,   0.014352916141273255660,
      0.014310317870203099111,   0.014267252700646253290,
      0.014223722037677202042,   0.014179727301557944378,
      0.014135269927691656013,   0.014090351366575856891,
      0.014044973083755086235,   0.013999136559773086663,
      0.013952843290124498921,   0.013906094785206068832,
      0.013858892570267368024,   0.013811238185361030069,
      0.013763133185292503643,   0.013714579139569324352,
      0.013665577632349906872,   0.013616130262391859089,
      0.013566238642999819906,   0.013515904401972822433,
      0.013465129181551184273,   0.013413914638362926635,
      0.013362262443369724021,   0.013310174281812386264,
      0.013257651853155874666,   0.013204696871033854071,
      0.013151311063192782641,   0.013097496171435541191,
      0.013043253951564603899,   0.012988586173324752267,
      0.012933494620345334179,   0.012877981090082069960,
      0.012822047393758407318,   0.012765695356306427103,
      0.012708926816307301780,   0.012651743625931308599,
      0.012594147650877399376,   0.012536140770312328895,
      0.012477724876809343889,   0.012418901876286434616,
      0.012359673687944151043,   0.012300042244202985654,
      0.012240009490640324946,   0.012179577385926971652,
      0.012118747901763239771,   0.012057523022814624490,
      0.011995904746647049090,   0.011933895083661690958,
      0.011871496057029388826,   0.011808709702624633377,
      0.011745538068959143371,   0.011681983217115029468,
      0.011618047220677547909,   0.011553732165667446267,
      0.011489040150472903472,   0.011423973285781066322,
      0.011358533694509184717,   0.011292723511735347875,
      0.011226544884628823771,   0.011159999972380004083,
      0.011093090946129956931,   0.011025819988899589702,
      0.010958189295518424275,   0.010890201072552986971,
      0.010821857538234815564,   0.010753160922388085700,
      0.010684113466356859085,   0.010614717422931955821,
      0.010544975056277453267,   0.010474888641856813833,
      0.010404460466358644108,   0.010333692827622087754,
      0.010262588034561854588,   0.010191148407092888309,
      0.010119376276054675324,   0.010047273983135197141,
      0.0099748438807945288107,  0.0099020883321880859096,
      0.0098290097110895225739,  0.0097556104018132830902,
      0.0096818927991368095774,  0.0096078593082224082952,
      0.0095335123445387771285,  0.0094588543337821968081,
      0.0093838877117973884399,  0.0093086149244980399226,
      0.0092330384277870038496,  0.0091571606874761694966,
      0.0090809841792060115097,  0.0090045113883648179206,
      0.0089277448100076001208,  0.0088506869487746874444,
      0.0087733403188100090119,  0.0086957074436790655043,
      0.0086177908562865935418,  0.0085395930987939253533,
      0.0084611167225360464351,  0.0083823642879383539026,
      0.0083033383644331182519,  0.0082240415303756512574,
      0.0081444763729601827392,  0.0080646454881354489463,
      0.0079845514805199953090,  0.0079041969633171963240,
      0.0078235845582299953447,  0.0077427168953753670587,
      0.0076615966131985054431,  0.0075802263583867399981,
      0.0074986087857831830655,  0.0074167465583001110526,
      0.0073346423468320823844,  0.0072522988301687950213,
      0.0071697186949076863841,  0.0070869046353662785374,
      0.0070038593534942714939,  0.0069205855587853875040,
      0.0068370859681889692100,  0.0067533633060213345476,
      0.0066694203038768912875,  0.0065852597005390141162,
      0.0065008842418906871660,  0.0064162966808249149061,
      0.0063314997771549043220,  0.0062464962975240213100,
      0.0061612890153155242266,  0.0060758807105620775376,
      0.0059902741698550485187,  0.0059044721862535899676,
      0.0058184775591935118934,  0.0057322930943959451566,
      0.0056459216037758000397,  0.0055593659053500227360,
      0.0054726288231456527477,  0.0053857131871076841961,
      0.0052986218330067340470,  0.0052113576023465202661,
      0.0051239233422711529218,  0.0050363219054722412613,
      0.0049485561500958197887,  0.0048606289396490963849,
      0.0047725431429070255089,  0.0046843016338187095300,
      0.0045959072914136312453,  0.0045073629997077206405,
      0.0044186716476092589595,  0.0043298361288246231530,
      0.0042408593417638737805,  0.0041517441894461894474,
      0.0040624935794051508608,  0.0039731104235938775964,
      0.0038835976382900206691,  0.0037939581440006140098,
      0.0037041948653667879499,  0.0036143107310683478254,
      0.0035243086737282208110,  0.0034341916298167741042,
      0.0033439625395560075792,  0.0032536243468236240381,
      0.0031631799990569801883,  0.0030726324471569214800,
      0.0029819846453915039419,  0.0028912395512996061550,
      0.0028004001255944345120,  0.0027094693320669249065,
      0.0026184501374890440080,  0.0025273455115169932750,
      0.0024361584265943188646,  0.0023448918578549306009,
      0.0022535487830260331653,  0.0021621321823309726763,
      0.0020706450383920018286,  0.0019790903361329667634,
      0.0018874710626819188454,  0.0017957902072736545240,
      0.0017040507611521864588,  0.0016122557174731490896,
      0.0015204080712061418380,  0.0014285108190370131246,
      0.0013365669592700883905,  0.0012445794917303453139,
      0.0011525514176655394118,  0.0010604857396482832224,
      0.00096838546147808226071, 0.00087625358808333094524,
      0.00078409312542327169248, 0.00069190708038992037885,
      0.00059969846070996136822, 0.00050747027484661530801,
      0.00041522553190148289398, 0.00032296724151636780705,
      0.00023069841377508202426, 0.00013842205910523671046,
      0.000046141188180021889928};
  IntegratorXX::GaussChebyshev1<double, double> quad(275);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 275; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("300 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 300> ref_pts = {
      0.99998629224742679269,    0.99987663248166059864,
      0.99965732497555728004,    0.99932839377865625208,
      0.99888987496196997264,    0.99834181661402834927,
      0.99768427883560529001,    0.99691733373312797620,
      0.99604106541076958023,    0.99505556996122629517,
      0.99396095545517968775,    0.99275734192944553029,
      0.99144486137381041114,    0.99002365771655756725,
      0.98849388680868352591,    0.98685571640680728676,
      0.98510932615477391803,    0.98325490756395458455,
      0.98129266399224516779,    0.97922281062176578086,
      0.97704557443526362424,    0.97476119419122176966,
      0.97236992039767660183,    0.96987201528474678936,
      0.96726775277587679710,    0.96455741845779809366,
      0.96174130954921134805,    0.95881973486819304976,
      0.95579301479833012664,    0.95266148125358627419,
      0.94942547764190384910,    0.94608535882754531853,
      0.94264149109217839478,    0.93909425209470912276,
      0.93544403082986732518,    0.93169122758554894681,
      0.92783625389891997586,    0.92387953251128675613,
      0.91982149732173763892,    0.91566259333956105837,
      0.91140327663544524821,    0.90704401429146495134,
      0.90258528434986060676,    0.89802757576061563093,
      0.89337138832783754206,    0.88861723265494880746,
      0.88376563008869342432,    0.87881711266196537413,
      0.87377222303546522044,    0.86863151443819124777,
      0.86339555060677166768,    0.85806490572364454468,
      0.85264016435409222152,    0.84712192138213714847,
      0.84151078194530614656,    0.83580736136827025847,
      0.83001228509536746430,    0.82412618862201566173,
      0.81814971742502343213,    0.81208352689180623460,
      0.80592828224851579034,    0.79968465848709053869,
      0.79335334029123516458,    0.78693502196133731469,
      0.78043040733832973585,    0.77384020972650618519,
      0.76716515181529957615,    0.76040596560003093817,
      0.75356339230163788092,    0.74663818228539136566,
      0.73963109497860969747,    0.73254289878737876179,
      0.72537437101228763799,    0.71812629776318883037,
      0.71079947387299246420,    0.70339470281050390014,
      0.69591279659231432549,    0.68835457569375398439,
      0.68072086895891781188,    0.67301251350977333872,
      0.66523035465436083412,    0.65737524579409575339,
      0.64944804833018365573,    0.64144963156915785498,
      0.63338087262755016203,    0.62524265633570517290,
      0.61703587514074865032,    0.60876142900872063942,
      0.60042022532588404976,    0.59201317879921952630,
      0.58354121135611752112,    0.57500525204327856590,
      0.56640623692483283182,    0.55774510897969014917,
      0.54902281799813174352,    0.54024032047765502816,
      0.53139857951808287485,    0.52249856471594886499,
      0.51354125205817010344,    0.50452762381501925464,
      0.49545866843240753805,    0.48633538042349049520,
      0.47715876025960841505,    0.46792981426057337723,
      0.45864955448431494448,    0.44931899861589660576,
      0.43993916985591514083,    0.43051109680829514438,
      0.42103581336749101433,    0.41151435860510877405,
      0.40194777665596016145,    0.39233711660356148052,
      0.38268343236508977173,    0.37298778257580891694,
      0.36325123047297835301,    0.35347484377925712472,
      0.34365969458561606305,    0.33380685923377092883,
      0.32391741819814941440,    0.31399245596740494673,
      0.30403306092549028552,    0.29404032523230395778,
      0.28401534470392261744,    0.27395921869243246387,
      0.26387304996537289696,    0.25375794458480562946,
      0.24361501178602251768,    0.23344536385590541177,
      0.22325011601095136485,    0.21303038627497657672,
      0.20278729535651248344,    0.19252196652590743761,
      0.18223552549214745660,    0.17192910027940954661,
      0.16160382110336113999,    0.15126082024721921096,
      0.14090123193758266117,    0.13052619222005159155,
      0.12013683883464710023,    0.10973431109104526802,
      0.099319749743639013610,   0.088894296866441519208,
      0.078459095727844945033,   0.068015290665248166631,
      0.057564026959567283582,   0.047106450709642660905,
      0.036643708706556275852,   0.026176948307873152611,
      0.015707317311820675753,   0.0052359638314195800938,
      -0.0052359638314195800938, -0.015707317311820675753,
      -0.026176948307873152611,  -0.036643708706556275852,
      -0.047106450709642660905,  -0.057564026959567283582,
      -0.068015290665248166631,  -0.078459095727844945033,
      -0.088894296866441519208,  -0.099319749743639013610,
      -0.10973431109104526802,   -0.12013683883464710023,
      -0.13052619222005159155,   -0.14090123193758266117,
      -0.15126082024721921096,   -0.16160382110336113999,
      -0.17192910027940954661,   -0.18223552549214745660,
      -0.19252196652590743761,   -0.20278729535651248344,
      -0.21303038627497657672,   -0.22325011601095136485,
      -0.23344536385590541177,   -0.24361501178602251768,
      -0.25375794458480562946,   -0.26387304996537289696,
      -0.27395921869243246387,   -0.28401534470392261744,
      -0.29404032523230395778,   -0.30403306092549028552,
      -0.31399245596740494673,   -0.32391741819814941440,
      -0.33380685923377092883,   -0.34365969458561606305,
      -0.35347484377925712472,   -0.36325123047297835301,
      -0.37298778257580891694,   -0.38268343236508977173,
      -0.39233711660356148052,   -0.40194777665596016145,
      -0.41151435860510877405,   -0.42103581336749101433,
      -0.43051109680829514438,   -0.43993916985591514083,
      -0.44931899861589660576,   -0.45864955448431494448,
      -0.46792981426057337723,   -0.47715876025960841505,
      -0.48633538042349049520,   -0.49545866843240753805,
      -0.50452762381501925464,   -0.51354125205817010344,
      -0.52249856471594886499,   -0.53139857951808287485,
      -0.54024032047765502816,   -0.54902281799813174352,
      -0.55774510897969014917,   -0.56640623692483283182,
      -0.57500525204327856590,   -0.58354121135611752112,
      -0.59201317879921952630,   -0.60042022532588404976,
      -0.60876142900872063942,   -0.61703587514074865032,
      -0.62524265633570517290,   -0.63338087262755016203,
      -0.64144963156915785498,   -0.64944804833018365573,
      -0.65737524579409575339,   -0.66523035465436083412,
      -0.67301251350977333872,   -0.68072086895891781188,
      -0.68835457569375398439,   -0.69591279659231432549,
      -0.70339470281050390014,   -0.71079947387299246420,
      -0.71812629776318883037,   -0.72537437101228763799,
      -0.73254289878737876179,   -0.73963109497860969747,
      -0.74663818228539136566,   -0.75356339230163788092,
      -0.76040596560003093817,   -0.76716515181529957615,
      -0.77384020972650618519,   -0.78043040733832973585,
      -0.78693502196133731469,   -0.79335334029123516458,
      -0.79968465848709053869,   -0.80592828224851579034,
      -0.81208352689180623460,   -0.81814971742502343213,
      -0.82412618862201566173,   -0.83001228509536746430,
      -0.83580736136827025847,   -0.84151078194530614656,
      -0.84712192138213714847,   -0.85264016435409222152,
      -0.85806490572364454468,   -0.86339555060677166768,
      -0.86863151443819124777,   -0.87377222303546522044,
      -0.87881711266196537413,   -0.88376563008869342432,
      -0.88861723265494880746,   -0.89337138832783754206,
      -0.89802757576061563093,   -0.90258528434986060676,
      -0.90704401429146495134,   -0.91140327663544524821,
      -0.91566259333956105837,   -0.91982149732173763892,
      -0.92387953251128675613,   -0.92783625389891997586,
      -0.93169122758554894681,   -0.93544403082986732518,
      -0.93909425209470912276,   -0.94264149109217839478,
      -0.94608535882754531853,   -0.94942547764190384910,
      -0.95266148125358627419,   -0.95579301479833012664,
      -0.95881973486819304976,   -0.96174130954921134805,
      -0.96455741845779809366,   -0.96726775277587679710,
      -0.96987201528474678936,   -0.97236992039767660183,
      -0.97476119419122176966,   -0.97704557443526362424,
      -0.97922281062176578086,   -0.98129266399224516779,
      -0.98325490756395458455,   -0.98510932615477391803,
      -0.98685571640680728676,   -0.98849388680868352591,
      -0.99002365771655756725,   -0.99144486137381041114,
      -0.99275734192944553029,   -0.99396095545517968775,
      -0.99505556996122629517,   -0.99604106541076958023,
      -0.99691733373312797620,   -0.99768427883560529001,
      -0.99834181661402834927,   -0.99888987496196997264,
      -0.99932839377865625208,   -0.99965732497555728004,
      -0.99987663248166059864,   -0.99998629224742679269};
  std::array<double, 300> ref_wgt = {
      0.014809559042157569201,   0.014809153030615432799,
      0.014808341018662171518,   0.014807123028559503241,
      0.014805499093699241897,   0.014803469258602382005,
      0.014801033578917878108,   0.014798192121421119133,
      0.014794944964012097705,   0.014791292195713274482,
      0.014787233916667137560,   0.014782770238133457012,
      0.014777901282486234653,   0.014772627183210349084,
      0.014766948084897896148,   0.014760864143244224856,
      0.014754375525043668925,   0.014747482408184974026,
      0.014740184981646420872,   0.014732483445490644287,
      0.014724378010859148386,   0.014715868899966518021,
      0.014706956346094326662,   0.014697640593584740858,
      0.014687921897833821479,   0.014677800525284521902,
      0.014667276753419383339,   0.014656350870752927520,
      0.014645023176823746915,   0.014633293982186292738,
      0.014621163608402360935,   0.014608632388032276406,
      0.014595700664625775699,   0.014582368792712588417,
      0.014568637137792717607,   0.014554506076326419394,
      0.014539975995723882131,   0.014525047294334605355,
      0.014509720381436478833,   0.014493995677224562002,
      0.014477873612799564110,   0.014461354630156025371,
      0.014444439182170199462,   0.014427127732587637694,
      0.014409420756010475188,   0.014391318737884419423,
      0.014372822174485441495,   0.014353931572906170459,
      0.014334647451041991131,   0.014314970337576845722,
      0.014294900771968739702,   0.014274439304434952287,
      0.014253586495936951953,   0.014232342918165017393,
      0.014210709153522564342,   0.014188685795110178692,
      0.014166273446709356340,   0.014143472722765950210,
      0.014120284248373324915,   0.014096708659255219504,
      0.014072746601748318775,   0.014048398732784533625,
      0.014023665719872990937,   0.013998548241081733472,
      0.013973046985019130298,   0.013947162650814998238,
      0.013920895948101434878,   0.013894247596993363641,
      0.013867218328068791474,   0.013839808882348779681,
      0.013812020011277128461,   0.013783852476699775691,
      0.013755307050843910538,   0.013726384516296802461,
      0.013697085665984346183,   0.013667411303149323229,
      0.013637362241329380619,   0.013606939304334727324,
      0.013576143326225549088,   0.013544975151289142254,
      0.013513435634016767194,   0.013481525639080222004,
      0.013449246041308137090,   0.013416597725661991297,
      0.013383581587211850242,   0.013350198531111827522,
      0.013316449472575269447,   0.013282335336849664016,
      0.013247857059191274778,   0.013213015584839500316,
      0.013177811868990960030,   0.013142246876773306939,
      0.013106321583218768218,   0.013070036973237414198,
      0.013033394041590156558,   0.012996393792861476454,
      0.012959037241431883324,   0.012921325411450105141,
      0.012883259336805010849,   0.012844840061097265785,
      0.012806068637610720836,   0.012766946129283536132,
      0.012727473608679040057,   0.012687652157956324385,
      0.012647482868840576344,   0.012606966842593148412,
      0.012566105189981366690,   0.012524899031248078646,
      0.012483349496080941097,   0.012441457723581449249,
      0.012399224862233707654,   0.012356652069872943938,
      0.012313740513653766166,   0.012270491370018164705,
      0.012226905824663259474,   0.012182985072508793462,
      0.012138730317664373392,   0.012094142773396458455,
      0.012049223662095097994,   0.012003974215240419065,
      0.011958395673368864783,   0.011912489286039184395,
      0.011866256311798175991,   0.011819698018146182809,
      0.011772815681502344073,   0.011725610587169601320,
      0.011678084029299461164,   0.011630237310856515487,
      0.011582071743582719999,   0.011533588647961432177,
      0.011484789353181209538,   0.011435675197099369272,
      0.011386247526205310203,   0.011336507695583598101,
      0.011286457068876815358,   0.011236097018248176034,
      0.011185428924343907315,   0.011134454176255398390,
      0.011083174171481117817,   0.011031590315888300394,
      0.010979704023674404598,   0.010927516717328341646,
      0.010875029827591477248,   0.010822244793418407104,
      0.010769163061937507238,   0.010715786088411260246,
      0.010662115336196358537,   0.010608152276703585671,
      0.010553898389357476888,   0.010499355161555759937,
      0.010444524088628577320,   0.010389406673797491055,
      0.010334004428134271100,   0.010278318870519468559,
      0.010222351527600774801,   0.010166103933751167644,
      0.010109577631026845747,   0.010052774169124952354,
      0.0099956951053410895731,  0.0099383420045266243218,
      0.0098807164390457871423,  0.0098228199887325650394,
      0.0097646542408473895346,  0.0097062207900336211188,
      0.0096475212382738312997,  0.0095885571948458834401,
      0.0095293302762788135923,  0.0094698421063085125380,
      0.0094100943158332102489,  0.0093500885428687639874,
      0.0092898264325037512750,  0.0092293096368543689575,
      0.0091685398150191396050,  0.0091075186330334264879,
      0.0090462477638237583760,  0.0089847288871619654120,
      0.0089229636896191273191,  0.0088609538645193352023,
      0.0087987011118932682131,  0.0087362071384315863501,
      0.0086734736574381406717,  0.0086105023887830022064,
      0.0085472950588553108454,  0.0084838534005159455123,
      0.0084201791530500169072,  0.0083562740621191841263,
      0.0082921398797137964659,  0.0082277783641048617221,
      0.0081631912797958423025,  0.0080983803974742804731,
      0.0080333474939632540644,  0.0079680943521726639690,
      0.0079026227610503547668,  0.0078369345155330698152,
      0.0077710314164972421525,  0.0077049152707096225599,
      0.0076385878907777461391,  0.0075720510951002387606,
      0.0075053067078169647471,  0.0074383565587590171575,
      0.0073712024833985520430,  0.0073038463227984680514,
      0.0072362899235619327569,  0.0071685351377817571020,
      0.0071005838229896193373,  0.0070324378421051398523,
      0.0069640990633848082930,  0.0068955693603707643662,
      0.0068268506118394337358,  0.0067579447017500204177,
      0.0066888535191928570864,  0.0066195789583376147098,
      0.0065501229183813729305,  0.0064804873034965526183,
      0.0064106740227787120217,  0.0063406849901942079489,
      0.0062705221245277234129,  0.0062001873493296631803,
      0.0061296825928634186656,  0.0060590097880525036157,
      0.0059881708724275620359,  0.0059171677880732498081,
      0.0058460024815749914593,  0.0057746769039656135388,
      0.0057031930106718560673,  0.0056315527614607635257,
      0.0055597581203859568511,  0.0054878110557337879148,
      0.0054157135399693779579,  0.0053434675496825414631,
      0.0052710750655335969471,  0.0051985380721990661570,
      0.0051258585583172631611,  0.0050530385164337748248,
      0.0049800799429468341671,  0.0049069848380525880943,
      0.0048337552056902610122,  0.0047603930534872158204,
      0.0046869003927039137934,  0.0046132792381787748595,
      0.0045395316082729397878,  0.0044656595248149357974,
      0.0043916650130452471077,  0.0043175501015607919470,
      0.0042433168222593075435,  0.0041689672102836446222,
      0.0040945033039659729358,  0.0040199271447718993587,
      0.0039452407772445000758,  0.0038704462489482684014,
      0.0037955456104129797647,  0.0037205409150774753995,
      0.0036454342192333662816,  0.0035702275819686588554,
      0.0034949230651113040960,  0.0034195227331726714546,
      0.0033440286532909492359,  0.0032684428951744729613,
      0.0031927675310449832687,  0.0031170046355808149068,
      0.0030411562858600183809,  0.0029652245613034158085,
      0.0028892115436175925472,  0.0028131193167378261574,
      0.0027369499667709542632,  0.0026607055819381828807,
      0.0025843882525178367778,  0.0025080000707880534387,
      0.0024315431309694222015,  0.0023550195291675701430,
      0.0022784313633156962840,  0.0022017807331170556911,
      0.0021250697399873950510,  0.0020483004869973412965,
      0.0019714750788147448628,  0.0018945956216469791553,
      0.0018176642231831978105,  0.0017406829925365513330,
      0.0016636540401863646932,  0.0015865794779202774707,
      0.0015094614187763481290,  0.0014323019769851240101,
      0.0013551032679116786356,  0.0012778674079976179053,
      0.0012005965147030567807,  0.0011232927064485680470,
      0.0010459581025571047426,  0.00096859482319589784992,
      0.00089120498931833083945, 0.00081379072260579266195,
      0.00073635414540951078085, 0.00065889738069236584156,
      0.00058142255197068957158, 0.00050393178325604750762,
      0.00042642719899700814563, 0.00034891092402090011009,
      0.00027138508347555893918, 0.00019385180277106508400,
      0.00011631320752147471682, 0.000038771423486544949000};
  IntegratorXX::GaussChebyshev1<double, double> quad(300);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 300; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("350 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 350> ref_pts = {
      0.99998992899200517496,   0.99990936214514491323,
      0.99974823494250657451,   0.99950656036573155700,
      0.99918435788597457191,   0.99878165346233489811,
      0.99829847953976491831,   0.99773487504645610520,
      0.99709088539070266823,   0.99636656245724311372,
      0.99556196460308001290,   0.99467715665277831494,
      0.99371220989324258353,   0.99266720206797357791,
      0.99154221737080464107,   0.99033734643911839976,
      0.98905268634654432282,   0.98768834059513772619,
      0.98624441910704085467,   0.98472103821562671232,
      0.98311832065612635505,   0.98143639555574040046,
      0.97967539842323555163,   0.97783547113802697317,
      0.97591676193874739896,   0.97391942541130389262,
      0.97184362247642322305,   0.96968952037668685821,
      0.96745729266305662207,   0.96514711918089209996,
      0.96275918605546091912,   0.96029368567694307175,
      0.95775081668493048874,   0.95513078395242311290,
      0.95243379856932276111,   0.94966007782542610525,
      0.94680984519291814214,   0.94388333030836756290,
      0.94088076895422547232,   0.93780240303982894900,
      0.93464848058191097646,   0.93141925568461831581,
      0.92811498851903892969,   0.92473594530224060693,
      0.92128239827582247686,   0.91775462568398114115,
      0.91415291175109319046,   0.91047754665881591206,
      0.90672882652270803315,   0.90290705336837238377,
      0.89901253510712240125,   0.89504558551117443671,
      0.89100652418836786236,   0.88689567655641501636,
      0.88271337381668305973,   0.87845995292750985783,
      0.87413575657705603612,   0.86974113315569539755,
      0.86527643672794592599,   0.86074202700394363716,
      0.85613826931046157528,   0.85146553456147629049,
      0.84672419922828416835,   0.84191464530917001908,
      0.83703726029863037029,   0.83209243715615394281,
      0.82708057427456182492,   0.82200207544790989563,
      0.81685734983895608324,   0.81164681194619508005,
      0.80637088157046316931,   0.80102998378111585489,
      0.79562454888178101872,   0.79015501237569036516,
      0.78462181493059194543,   0.77902540234324658911,
      0.77336622550351110305,   0.76764474035801113148,
      0.76186140787340660406,   0.75601669399925273160,
      0.75011106963045954151,   0.74414501056935297761,
      0.73811899748734062094,   0.73203351588618512004,
      0.72588905605888845091,   0.71968611305019015791,
      0.71342518661668275841,   0.70710678118654752440,
      0.70073140581891388521,   0.69429957416284572548,
      0.68781180441595788297,   0.68126861928266618017,
      0.67467054593207435360,   0.66801811595550127359,
      0.66131186532365187657,   0.65455233434343526048,
      0.64774006761443342238,   0.64087561398502414541,
      0.63395952650816157029,   0.62699236239681801386,
      0.61997468297909062482,   0.61290705365297649336,
      0.60579004384081985861,   0.59862422694343508374,
      0.59141018029390909517,   0.58414848511108700767,
      0.57683972645274468312,   0.56948449316845199552,
      0.56208337785213060010,   0.55463697679431002875,
      0.54714588993408595842,   0.53961072081078452308,
      0.53203207651533656356,   0.52441056764136573286,
      0.51674680823599439780,   0.50904141575037130028,
      0.50129501098992496414,   0.49350821806434685556,
      0.48568166433730832670,   0.47781598037591539385,
      0.46991179989990542233,   0.46196975973058981120,
      0.45399049973954679156,   0.44597466279706847182,
      0.43792289472036628378,   0.42983584422153900216,
      0.42171416285530752999,   0.41355850496652066050,
      0.40536952763743604492,   0.39714789063478061375,
      0.38889425635659471657,   0.38060928977886426303,
      0.37229365840194516497,   0.36394803219678439578,
      0.35557308355094200011,   0.34716948721441840277,
      0.33873792024529138122,   0.33027906195516708177,
      0.32179359385444947426,   0.31328219959743265468,
      0.30474556492722041972,   0.29618437762047755065,
      0.28759932743201725807,   0.27899110603922925185,
      0.27036040698635291356,   0.26170792562860006117,
      0.25303435907613180805,   0.24434040613789402966,
      0.23562676726531596328,   0.22689414449587647660,
      0.21814324139654255202,   0.20937476300708454375,
      0.20058941578327277445,   0.19178790753996004825,
      0.18297094739405466551,   0.17413924570738853411,
      0.16529351402948498012,   0.15643446504023086901,
      0.14756281249245765604,   0.13867927115443599208,
      0.12978455675228851783,   0.12087938591232548616,
      0.11196447610330785847,   0.10304054557864252674,
      0.094108313318514318473,  0.085168498971959446918,
      0.076221822798885073410,  0.067269005612039653337,
      0.058310768718938740950,  0.049347833863750931949,
      0.040380923169148625958,  0.031410759078128293839,
      0.022438064295804937237,  0.013463561731185429854,
      0.0044879744389254316350, -0.0044879744389254316350,
      -0.013463561731185429854, -0.022438064295804937237,
      -0.031410759078128293839, -0.040380923169148625958,
      -0.049347833863750931949, -0.058310768718938740950,
      -0.067269005612039653337, -0.076221822798885073410,
      -0.085168498971959446918, -0.094108313318514318473,
      -0.10304054557864252674,  -0.11196447610330785847,
      -0.12087938591232548616,  -0.12978455675228851783,
      -0.13867927115443599208,  -0.14756281249245765604,
      -0.15643446504023086901,  -0.16529351402948498012,
      -0.17413924570738853411,  -0.18297094739405466551,
      -0.19178790753996004825,  -0.20058941578327277445,
      -0.20937476300708454375,  -0.21814324139654255202,
      -0.22689414449587647660,  -0.23562676726531596328,
      -0.24434040613789402966,  -0.25303435907613180805,
      -0.26170792562860006117,  -0.27036040698635291356,
      -0.27899110603922925185,  -0.28759932743201725807,
      -0.29618437762047755065,  -0.30474556492722041972,
      -0.31328219959743265468,  -0.32179359385444947426,
      -0.33027906195516708177,  -0.33873792024529138122,
      -0.34716948721441840277,  -0.35557308355094200011,
      -0.36394803219678439578,  -0.37229365840194516497,
      -0.38060928977886426303,  -0.38889425635659471657,
      -0.39714789063478061375,  -0.40536952763743604492,
      -0.41355850496652066050,  -0.42171416285530752999,
      -0.42983584422153900216,  -0.43792289472036628378,
      -0.44597466279706847182,  -0.45399049973954679156,
      -0.46196975973058981120,  -0.46991179989990542233,
      -0.47781598037591539385,  -0.48568166433730832670,
      -0.49350821806434685556,  -0.50129501098992496414,
      -0.50904141575037130028,  -0.51674680823599439780,
      -0.52441056764136573286,  -0.53203207651533656356,
      -0.53961072081078452308,  -0.54714588993408595842,
      -0.55463697679431002875,  -0.56208337785213060010,
      -0.56948449316845199552,  -0.57683972645274468312,
      -0.58414848511108700767,  -0.59141018029390909517,
      -0.59862422694343508374,  -0.60579004384081985861,
      -0.61290705365297649336,  -0.61997468297909062482,
      -0.62699236239681801386,  -0.63395952650816157029,
      -0.64087561398502414541,  -0.64774006761443342238,
      -0.65455233434343526048,  -0.66131186532365187657,
      -0.66801811595550127359,  -0.67467054593207435360,
      -0.68126861928266618017,  -0.68781180441595788297,
      -0.69429957416284572548,  -0.70073140581891388521,
      -0.70710678118654752440,  -0.71342518661668275841,
      -0.71968611305019015791,  -0.72588905605888845091,
      -0.73203351588618512004,  -0.73811899748734062094,
      -0.74414501056935297761,  -0.75011106963045954151,
      -0.75601669399925273160,  -0.76186140787340660406,
      -0.76764474035801113148,  -0.77336622550351110305,
      -0.77902540234324658911,  -0.78462181493059194543,
      -0.79015501237569036516,  -0.79562454888178101872,
      -0.80102998378111585489,  -0.80637088157046316931,
      -0.81164681194619508005,  -0.81685734983895608324,
      -0.82200207544790989563,  -0.82708057427456182492,
      -0.83209243715615394281,  -0.83703726029863037029,
      -0.84191464530917001908,  -0.84672419922828416835,
      -0.85146553456147629049,  -0.85613826931046157528,
      -0.86074202700394363716,  -0.86527643672794592599,
      -0.86974113315569539755,  -0.87413575657705603612,
      -0.87845995292750985783,  -0.88271337381668305973,
      -0.88689567655641501636,  -0.89100652418836786236,
      -0.89504558551117443671,  -0.89901253510712240125,
      -0.90290705336837238377,  -0.90672882652270803315,
      -0.91047754665881591206,  -0.91415291175109319046,
      -0.91775462568398114115,  -0.92128239827582247686,
      -0.92473594530224060693,  -0.92811498851903892969,
      -0.93141925568461831581,  -0.93464848058191097646,
      -0.93780240303982894900,  -0.94088076895422547232,
      -0.94388333030836756290,  -0.94680984519291814214,
      -0.94966007782542610525,  -0.95243379856932276111,
      -0.95513078395242311290,  -0.95775081668493048874,
      -0.96029368567694307175,  -0.96275918605546091912,
      -0.96514711918089209996,  -0.96745729266305662207,
      -0.96968952037668685821,  -0.97184362247642322305,
      -0.97391942541130389262,  -0.97591676193874739896,
      -0.97783547113802697317,  -0.97967539842323555163,
      -0.98143639555574040046,  -0.98311832065612635505,
      -0.98472103821562671232,  -0.98624441910704085467,
      -0.98768834059513772619,  -0.98905268634654432282,
      -0.99033734643911839976,  -0.99154221737080464107,
      -0.99266720206797357791,  -0.99371220989324258353,
      -0.99467715665277831494,  -0.99556196460308001290,
      -0.99636656245724311372,  -0.99709088539070266823,
      -0.99773487504645610520,  -0.99829847953976491831,
      -0.99878165346233489811,  -0.99918435788597457191,
      -0.99950656036573155700,  -0.99974823494250657451,
      -0.99990936214514491323,  -0.99998992899200517496};
  std::array<double, 350> ref_wgt = {
      0.012693919291619676460,    0.012693663610494333329,
      0.012693152253393580382,    0.012692385230617180518,
      0.012691362557614518765,    0.012690084254984291094,
      0.012688550348474089522,    0.012686760868979883506,
      0.012684715852545397629,    0.012682415340361385616,
      0.012679859378764800660,    0.012677048019237862109,
      0.012673981318407018507,    0.012670659338041807025,
      0.012667082145053609295,    0.012663249811494303685,
      0.012659162414554814024,    0.012654820036563554822,
      0.012650222764984773012,    0.012645370692416786244,
      0.012640263916590117765,    0.012634902540365527931,
      0.012629286671731942383,    0.012623416423804276937,
      0.012617291914821159213,    0.012610913268142547079,
      0.012604280612247243928,    0.012597394080730310856,
      0.012590253812300375791,    0.012582859950776839619,
      0.012575212645086979372,    0.012567312049262948534,
      0.012559158322438674519,    0.012550751628846653397,
      0.012542092137814641920,    0.012533180023762246916,
      0.012524015466197412129,    0.012514598649712802570,
      0.012504929763982086442,    0.012495009003756114735,
      0.012484836568858998551,    0.012474412664184084242,
      0.012463737499689826443,    0.012452811290395559090,
      0.012441634256377164495,    0.012430206622762640573,
      0.012418528619727566312,    0.012406600482490465571,
      0.012394422451308069307,    0.012381994771470476318,
      0.012369317693296212607,    0.012356391472127189461,
      0.012343216368323560355,    0.012329792647258476764,
      0.012316120579312743024,    0.012302200439869370307,
      0.012288032509308029862,    0.012273617072999405595,
      0.012258954421299446131,    0.012244044849543516462,
      0.012228888658040449295,    0.012213486152066496227,
      0.012197837641859178866,    0.012181943442611040022,
      0.012165803874463295093,    0.012149419262499383778,
      0.012132789936738422238,    0.012115916232128555847,
      0.012098798488540212661,    0.012081437050759257744,
      0.012063832268480048484,    0.012045984496298391042,
      0.012027894093704398081,    0.012009561425075247908,
      0.011990986859667845185,    0.011972170771611383348,
      0.011953113539899808893,    0.011933815548384187674,
      0.011914277185764973365,    0.011894498845584178256,
      0.011874480926217446515,    0.011854223830866030108,
      0.011833727967548667506,    0.011812993749093365370,
      0.011792021593129083359,    0.011770811922077322243,
      0.011749365163143615482,    0.011727681748308924444,
      0.011705762114320937441,    0.011683606702685272745,
      0.011661215959656585780,    0.011638590336229580650,
      0.011615730288129926196,    0.011592636275805076766,
      0.011569308764414997874,    0.011545748223822796935,
      0.011521955128585259284,    0.011497929957943289638,
      0.011473673195812259221,    0.011449185330772258735,
      0.011424466856058257367,    0.011399518269550168046,
      0.011374340073762819137,    0.011348932775835832780,
      0.011323296887523410073,    0.011297432925184023316,
      0.011271341409770015502,    0.011245022866817107296,
      0.011218477826433811679,    0.011191706823290756497,
      0.011164710396609915117,    0.011137489090153745408,
      0.011110043452214237269,    0.011082374035601868923,
      0.011054481397634472202,    0.011026366100126007038,
      0.010998028709375245400,    0.010969469796154364896,
      0.010940689935697452267,    0.010911689707688917016,
      0.010882469696251815395,    0.010853030489936084987,
      0.010823372681706690127,    0.010793496868931678389,
      0.010763403653370148391,    0.010733093641160129153,
      0.010702567442806371257,    0.010671825673168050046,
      0.010640868951446381127,    0.010609697901172148403,
      0.010578313150193144913,    0.010546715330661526707,
      0.010514905079021080029,    0.010482883035994402056,
      0.010450649846569995452,    0.010418206159989277001,
      0.010385552629733500575,    0.010352689913510594704,
      0.010319618673241915014,    0.010286339575048911794,
      0.010252853289239712968,    0.010219160490295622740,
      0.010185261856857536177,    0.010151158071712270016,
      0.010116849821778809962,    0.010082337798094474750,
      0.010047622695800997266,    0.010012705214130522987,
      0.0099775860563915260390,   0.0099422659299546431428,
      0.0099067455462384257471,   0.0098710256206950106223,
      0.0098351068727957092131,   0.0097989900260165160354,
      0.0097626758078235364114,   0.0097261649496583338357,
      0.0096894581869231972678,   0.0096525562589663286471,
      0.0096154599090669509296,   0.0095781698844203369463,
      0.0095406869361227593838,   0.0095030118191563621911,
      0.0094651452923739537174,   0.0094270881184837218863,
      0.0093888410640338717158,   0.0093504048993971854919,
      0.0093117803987555059075,   0.0092729683400841424795,
      0.0092339695051362015578,   0.0091947846794268402416,
      0.0091554146522174445204,   0.0091158602164997319589,
      0.0090761221689797792447,   0.0090362013100619749224,
      0.0089960984438328976347,   0.0089558143780451201988,
      0.0089153499241009398399,   0.0088747058970360349144,
      0.0088338831155030484472,   0.0087928824017550988178,
      0.0087517045816292179244,   0.0087103504845297171615,
      0.0086688209434114815448,   0.0086271167947631923206,
      0.0085852388785904783975,   0.0085431880383989969394,
      0.0085009651211774434615,   0.0084585709773804917700,
      0.0084160064609116640905,   0.0083732724291061317300,
      0.0083303697427134466176,   0.0082872992658802040738,
      0.0082440618661326371556,   0.0082006584143591429295,
      0.0081570897847927410230,   0.0081133568549934648098,
      0.0080694605058306855812,   0.0080254016214653700612,
      0.0079811810893322716221,   0.0079367998001220555595,
      0.0078922586477633587870,   0.0078475585294047843109,
      0.0078027003453968308487,   0.0077576849992737579554,
      0.0077125133977353870216,   0.0076671864506288385111,
      0.0076217050709302058062,   0.0075760701747261660281,
      0.0075302826811955282044,   0.0074843435125907191554,
      0.0074382535942192074703,   0.0073920138544248659499,
      0.0073456252245692728888,   0.0072990886390129525766,
      0.0072524050350965553923,   0.0072055753531219778744,
      0.0071586005363334231452,   0.0071114815308984020706,
      0.0070642192858886755391,   0.0070168147532611382436,
      0.0069692688878386443496,   0.0069215826472907754389,
      0.0068737569921145511129,   0.0068257928856150826465,
      0.0067776912938861700815,   0.0067294531857908431491,
      0.0066810795329418464160,   0.0066325713096820690443,
      0.0065839294930649195620,   0.0065351550628346460374,
      0.0064862490014066020548,   0.0064372122938474588885,
      0.0063880459278553642747,   0.0063387508937400481791,
      0.0062893281844028759627,   0.0062397787953168493467,
      0.0061901037245065555793,   0.0061403039725280652083,
      0.0060903805424487788652,   0.0060403344398272234651,
      0.0059901666726927982310,   0.0059398782515254709496,
      0.0058894701892354248674,   0.0058389435011426566379,
      0.0057882992049565257295,   0.0057375383207552557080,
      0.0056866618709653878041,   0.0056356708803411871820,
      0.0055845663759440023224,   0.0055333493871215779365,
      0.0054820209454873218273,   0.0054305820848995261159,
      0.0053790338414405432509,   0.0053273772533959172217,
      0.0052756133612334703938,   0.0052237432075823463898,
      0.0051717678372120094362,   0.0051196882970112006003,
      0.0050675056359668513405,   0.0050152209051429547945,
      0.0049628351576593952317,   0.0049103494486707360959,
      0.0048577648353449670647,   0.0048050823768422105552,
      0.0047523031342933881042,   0.0046994281707788470516,
      0.0046464585513069479595,   0.0045933953427926131965,
      0.0045402396140358371205,   0.0044869924357001582919,
      0.0044336548802910941519,   0.0043802280221345385985,
      0.0043267129373551228980,   0.0042731107038545403647,
      0.0042194224012898352484,   0.0041656491110516562645,
      0.0041117919162424752065,   0.0040578519016547710787,
      0.0040038301537491801885,   0.0039497277606326126392,
      0.0038955458120363356630,   0.0038412853992940242366,
      0.0037869476153197794206,   0.0037325335545861148663,
      0.0036780443131019119331,   0.0036234809883903438597,
      0.0035688446794667694349,   0.0035141364868165966128,
      0.0034593575123731165181,   0.0034045088594953082880,
      0.0033495916329456151981,   0.0032946069388676925194,
      0.0032395558847641275556,   0.0031844395794741323078,
      0.0031292591331512092174,   0.0030740156572407904369,
      0.0030187102644578510776,   0.0029633440687644968876,
      0.0029079181853475268083,   0.0028524337305959708648,
      0.0027968918220786038402,   0.0027412935785214351867,
      0.0026856401197851756295,   0.0026299325668426809135,
      0.0025741720417563731507,   0.0025183596676556402209,
      0.0024624965687142136814,   0.0024065838701275256417,
      0.0023506226980900450594,   0.0022946141797725939131,
      0.0022385594432996437093,   0.0021824596177265927820,
      0.0021263158330170248401,   0.0020701292200199492231,
      0.0020139009104470233225,   0.0019576320368497576270,
      0.0019013237325967038526,   0.0018449771318506266141,
      0.0017885933695456591016,   0.0017321735813644432183,
      0.0016757189037152546430,   0.0016192304737091132761,
      0.0015627094291368795316,   0.0015061569084463369351,
      0.0014495740507192614906,   0.0013929619956484782769,
      0.0013363218835149057366,   0.0012796548551645881199,
      0.0012229620519857165446,   0.0011662446158856391378,
      0.0011095036892678607191,   0.0010527404150090324914,
      0.00099595593643593220094,  0.00093915139730243523103,
      0.00088232794176647709324,  0.00082548671436700778001,
      0.00076862886000093844285,  0.00071175552390008086025,
      0.00065486785160808016045,  0.00059796698895734126290,
      0.00054105408204594950373,  0.00048413027721458590956,
      0.00042719672102343758548,  0.00037025456022910368123,
      0.00031330494176149740150,  0.00025634901270074452528,
      0.00019938792025407889982,  0.00014242281173273537351,
      0.000085454834528840635435, 0.000028485136092302424123};
  IntegratorXX::GaussChebyshev1<double, double> quad(350);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 350; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("400 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 400> ref_pts = {
      0.99999228938147060900,    0.99993060514667730455,
      0.99980724048206485639,    0.99962220299734687727,
      0.99937550410650702898,    0.99906715902709495403,
      0.99869718677928758559,    0.99826561018471589329,
      0.99777245586505713759,    0.99721775424039271929,
      0.99660153952733172564,    0.99592384973690028871,
      0.99518472667219688624,    0.99438421592581372963,
      0.99352236687702439809,    0.99259923268873789242,
      0.99161487030421929642,    0.99056934044357724802,
      0.98946270760001843699,    0.98829504003586936017,
      0.98706640977836557957,    0.98577689261520874328,
      0.98442656808989164300,    0.98301551949679159670,
      0.98154383387603245913,    0.98001160200811557693,
      0.97841891840832001974,    0.97676588132087243254,
      0.97505259271288686902,    0.97327915826807497963,
      0.97144568738022694247,    0.96955229314646353900,
      0.96759909236025979091,    0.96558620550424058840,
      0.96351375674274875442,    0.96138187391418600306,
      0.95919068852312726481,    0.95694033573220886494,
      0.95463095435379105536,    0.95226268684139541447,
      0.94983567928091764283,    0.94735008138161629707,
      0.94480604646687801759,    0.94220373146475981983,
      0.93954329689830903260,    0.93682490687566148029,
      0.93404872907991852010,    0.93121493475880355847,
      0.92832369871409868484,    0.92537519929086207437,
      0.92236961836642682464,    0.91930714133918190504,
      0.91618795711713591084,    0.91301225810626432738,
      0.90978024019864102317,    0.90649210276035470409,
      0.90314804861921107387,    0.89974828405222145968,
      0.89629301877287867441,    0.89278246591822090060,
      0.88921684203568439392,    0.88559636706974581734,
      0.88192126434835502971,    0.87819176056915916591,
      0.87440808578551885806,    0.87057047339231746065,
      0.86667916011156415473,    0.86273438597779181929,
      0.85873639432325057068,    0.85468543176289788313,
      0.85058174817918621660,    0.84642559670664909002,
      0.84221723371628655087,    0.83795691879975100436,
      0.83364491475333437742,    0.82928148756175760562,
      0.82486690638176344264,    0.82040144352551360454,
      0.81588537444379127292,    0.81131897770900999316,
      0.80670253499803001568,    0.80203633107478314046,
      0.79732065377270713636,    0.79255579397699081879,
      0.78774204560663088118,    0.78287970559630158668,
      0.77796907387803843884,    0.77301045336273696081,
      0.76800414992146772450,    0.76295047236660878212,
      0.75784973243279666412,    0.75270224475769711835,
      0.74750832686259677682,    0.74226829913281694704,
      0.73698248479795073626,    0.73165120991192472762,
      0.72627480333288643815,    0.72085359670291879907,
      0.71538792442758291007,    0.70987812365529032899,
      0.70432453425650616977,    0.69872749880278429119,
      0.69308736254563586978,    0.68740447339523266032,
      0.68167918189894625768,    0.67591184121972468365,
      0.67010280711430763284,    0.66425243791128172114,
      0.65836109448897709065,    0.65242914025320673439,
      0.64645694111484991398,    0.64044486546728105296,
      0.63439328416364549822,    0.62830257049398355107,
      0.62217310016220417926,    0.61600525126290983011,
      0.60979940425807377445,    0.60355594195357142000,
      0.59727524947556704176,    0.59095771424675738613,
      0.58460372596247361400,    0.57821367656664305715,
      0.57178796022761227056,    0.56532697331383287212,
      0.55883111436941166943,    0.55230078408952658201,
      0.54573638529570987530,    0.53913832291100023106,
      0.53250700393496518699,    0.52584283741859548628,
      0.51914623443907288570,    0.51241760807441297865,
      0.50565737337798459744,    0.49886594735290736637,
      0.49204374892632898510,    0.48519119892358382883,
      0.47830872004223445939,    0.47139673682599764856,
      0.46445567563855652177,    0.45748596463726043784,
      0.45048803374671422682,    0.44346231463225841523,
      0.43640924067334207460,    0.42932924693678993559,
      0.42222277014996541689,    0.41509024867383122433,
      0.40793212247590918177,    0.40074883310314096198,
      0.39354082365465139135,    0.38630853875441600875,
      0.37905242452383456429,    0.37177292855421215001,
      0.36447049987914965980,    0.35714558894684528182,
      0.34979864759230873177,    0.34243012900948994117,
      0.33504048772332391984,    0.32763017956169351687,
      0.32019966162731180964,    0.31274939226952585539,
      0.30527983105604354444,    0.29779143874458529920,
      0.29028467725446236764,    0.28276000963808346431,
      0.27521790005239151665,    0.26765881373023227830,
      0.26008321695165657578,    0.25249157701515795859,
      0.24488436220884752692,    0.23726204178156771514,
      0.22962508591394681285,    0.22197396568939600896,
      0.21430915306505074789,    0.20663112084265819036,
      0.19894034263941257449,    0.19123729285874027637,
      0.18352244666103637205,    0.17579627993435450616,
      0.16805926926505187518,    0.16031189190839113592,
      0.15255462575910105295,    0.14478794932189770054,
      0.13701234168196803790,    0.12922828247541767810,
      0.12143625185968467382,    0.11363673048392114480,
      0.10583019945934457411,    0.098017140329560601994,
      0.090198035040859148011,   0.082373365912485693701,
      0.074543615606889559598,   0.066709267099951011812,
      0.058870803651189034718,   0.051028708773951607463,
      0.043183466205590323118,   0.035335559877621190221,
      0.027485473885873457352,   0.019633692460628302085,
      0.011780699936749226324,   0.0039269807238060004932,
      -0.0039269807238060004932, -0.011780699936749226324,
      -0.019633692460628302085,  -0.027485473885873457352,
      -0.035335559877621190221,  -0.043183466205590323118,
      -0.051028708773951607463,  -0.058870803651189034718,
      -0.066709267099951011812,  -0.074543615606889559598,
      -0.082373365912485693701,  -0.090198035040859148011,
      -0.098017140329560601994,  -0.10583019945934457411,
      -0.11363673048392114480,   -0.12143625185968467382,
      -0.12922828247541767810,   -0.13701234168196803790,
      -0.14478794932189770054,   -0.15255462575910105295,
      -0.16031189190839113592,   -0.16805926926505187518,
      -0.17579627993435450616,   -0.18352244666103637205,
      -0.19123729285874027637,   -0.19894034263941257449,
      -0.20663112084265819036,   -0.21430915306505074789,
      -0.22197396568939600896,   -0.22962508591394681285,
      -0.23726204178156771514,   -0.24488436220884752692,
      -0.25249157701515795859,   -0.26008321695165657578,
      -0.26765881373023227830,   -0.27521790005239151665,
      -0.28276000963808346431,   -0.29028467725446236764,
      -0.29779143874458529920,   -0.30527983105604354444,
      -0.31274939226952585539,   -0.32019966162731180964,
      -0.32763017956169351687,   -0.33504048772332391984,
      -0.34243012900948994117,   -0.34979864759230873177,
      -0.35714558894684528182,   -0.36447049987914965980,
      -0.37177292855421215001,   -0.37905242452383456429,
      -0.38630853875441600875,   -0.39354082365465139135,
      -0.40074883310314096198,   -0.40793212247590918177,
      -0.41509024867383122433,   -0.42222277014996541689,
      -0.42932924693678993559,   -0.43640924067334207460,
      -0.44346231463225841523,   -0.45048803374671422682,
      -0.45748596463726043784,   -0.46445567563855652177,
      -0.47139673682599764856,   -0.47830872004223445939,
      -0.48519119892358382883,   -0.49204374892632898510,
      -0.49886594735290736637,   -0.50565737337798459744,
      -0.51241760807441297865,   -0.51914623443907288570,
      -0.52584283741859548628,   -0.53250700393496518699,
      -0.53913832291100023106,   -0.54573638529570987530,
      -0.55230078408952658201,   -0.55883111436941166943,
      -0.56532697331383287212,   -0.57178796022761227056,
      -0.57821367656664305715,   -0.58460372596247361400,
      -0.59095771424675738613,   -0.59727524947556704176,
      -0.60355594195357142000,   -0.60979940425807377445,
      -0.61600525126290983011,   -0.62217310016220417926,
      -0.62830257049398355107,   -0.63439328416364549822,
      -0.64044486546728105296,   -0.64645694111484991398,
      -0.65242914025320673439,   -0.65836109448897709065,
      -0.66425243791128172114,   -0.67010280711430763284,
      -0.67591184121972468365,   -0.68167918189894625768,
      -0.68740447339523266032,   -0.69308736254563586978,
      -0.69872749880278429119,   -0.70432453425650616977,
      -0.70987812365529032899,   -0.71538792442758291007,
      -0.72085359670291879907,   -0.72627480333288643815,
      -0.73165120991192472762,   -0.73698248479795073626,
      -0.74226829913281694704,   -0.74750832686259677682,
      -0.75270224475769711835,   -0.75784973243279666412,
      -0.76295047236660878212,   -0.76800414992146772450,
      -0.77301045336273696081,   -0.77796907387803843884,
      -0.78287970559630158668,   -0.78774204560663088118,
      -0.79255579397699081879,   -0.79732065377270713636,
      -0.80203633107478314046,   -0.80670253499803001568,
      -0.81131897770900999316,   -0.81588537444379127292,
      -0.82040144352551360454,   -0.82486690638176344264,
      -0.82928148756175760562,   -0.83364491475333437742,
      -0.83795691879975100436,   -0.84221723371628655087,
      -0.84642559670664909002,   -0.85058174817918621660,
      -0.85468543176289788313,   -0.85873639432325057068,
      -0.86273438597779181929,   -0.86667916011156415473,
      -0.87057047339231746065,   -0.87440808578551885806,
      -0.87819176056915916591,   -0.88192126434835502971,
      -0.88559636706974581734,   -0.88921684203568439392,
      -0.89278246591822090060,   -0.89629301877287867441,
      -0.89974828405222145968,   -0.90314804861921107387,
      -0.90649210276035470409,   -0.90978024019864102317,
      -0.91301225810626432738,   -0.91618795711713591084,
      -0.91930714133918190504,   -0.92236961836642682464,
      -0.92537519929086207437,   -0.92832369871409868484,
      -0.93121493475880355847,   -0.93404872907991852010,
      -0.93682490687566148029,   -0.93954329689830903260,
      -0.94220373146475981983,   -0.94480604646687801759,
      -0.94735008138161629707,   -0.94983567928091764283,
      -0.95226268684139541447,   -0.95463095435379105536,
      -0.95694033573220886494,   -0.95919068852312726481,
      -0.96138187391418600306,   -0.96351375674274875442,
      -0.96558620550424058840,   -0.96759909236025979091,
      -0.96955229314646353900,   -0.97144568738022694247,
      -0.97327915826807497963,   -0.97505259271288686902,
      -0.97676588132087243254,   -0.97841891840832001974,
      -0.98001160200811557693,   -0.98154383387603245913,
      -0.98301551949679159670,   -0.98442656808989164300,
      -0.98577689261520874328,   -0.98706640977836557957,
      -0.98829504003586936017,   -0.98946270760001843699,
      -0.99056934044357724802,   -0.99161487030421929642,
      -0.99259923268873789242,   -0.99352236687702439809,
      -0.99438421592581372963,   -0.99518472667219688624,
      -0.99592384973690028871,   -0.99660153952733172564,
      -0.99721775424039271929,   -0.99777245586505713759,
      -0.99826561018471589329,   -0.99869718677928758559,
      -0.99906715902709495403,   -0.99937550410650702898,
      -0.99962220299734687727,   -0.99980724048206485639,
      -0.99993060514667730455,   -0.99999228938147060900};
  std::array<double, 400> ref_wgt = {
      0.011107185934515587407,    0.011107014647968235273,
      0.011106672077514981457,    0.011106158228438686127,
      0.011105473108663537702,    0.011104616728754930648,
      0.011103589101919302547,    0.011102390244003930441,
      0.011101020173496686441,    0.011099478911525752628,
      0.011097766481859295225,    0.011095882910905098064,
      0.011093828227710155347,    0.011091602463960223705,
      0.011089205653979333561,    0.011086637834729259817,
      0.011083899045808951851,    0.011080989329453922857,
      0.011077908730535598521,    0.011074657296560625044,
      0.011071235077670136536,    0.011067642126638981774,
      0.011063878498874910350,    0.011059944252417718215,
      0.011055839447938352633,    0.011051564148737976560,
      0.011047118420746992462,    0.011042502332524025587,
      0.011037715955254866706,    0.011032759362751374340,
      0.011027632631450336487,    0.011022335840412291879,
      0.011016869071320310764,    0.011011232408478735255,
      0.011005425938811879252,    0.010999449751862687963,
      0.010993303939791357038,    0.010986988597373911348,
      0.010980503822000743421,    0.010973849713675111558,
      0.010967026375011597665,    0.010960033911234524803,
      0.010952872430176334503,    0.010945542042275923856,
      0.010938042860576942408,    0.010930375000726048884,
      0.010922538580971127780,    0.010914533722159465827,
      0.010906360547735888383,    0.010898019183740855756,
      0.010889509758808519508,    0.010880832404164738753,
      0.010871987253625056497,    0.010862974443592636033,
      0.010853794113056157436,    0.010844446403587674187,
      0.010834931459340429957,    0.010825249427046635583,
      0.010815400456015206279,    0.010805384698129459106,
      0.010795202307844770742,    0.010784853442186195594,
      0.010774338260746044271,    0.010763656925681422479,
      0.010752809601711730352,    0.010741796456116122282,
      0.010730617658730927260,    0.010719273381947029797,
      0.010707763800707211436,    0.010696089092503452925,
      0.010684249437374197066,    0.010672245017901572301,
      0.010660076019208577071,    0.010647742628956224988,
      0.010635245037340650872,    0.010622583437090177691,
      0.010609758023462344452,    0.010596768994240895085,
      0.010583616549732728378,    0.010570300892764808994,
      0.010556822228681039629,    0.010543180765339094355,
      0.010529376713107213195,    0.010515410284860957991,
      0.010501281695979929591,    0.010486991164344446436,
      0.010472538910332184573,    0.010457925156814779159,
      0.010443150129154387505,    0.010428214055200213710,
      0.010413117165284994951,    0.010397859692221449460,
      0.010382441871298686267,    0.010366863940278576754,
      0.010351126139392088065,    0.010335228711335578456,
      0.010319171901267054612,    0.010302955956802391005,
      0.010286581128011511359,    0.010270047667414532254,
      0.010253355829977868959,    0.010236505873110303530,
      0.010219498056659015253,    0.010202332642905573475,
      0.010185009896561892900,    0.010167530084766151404,
      0.010149893477078670431,    0.010132100345477758043,
      0.010114150964355514675,    0.010096045610513601672,
      0.010077784563158972663,    0.010059368103899567846,
      0.010040796516739971244,    0.010022070088077031001,
      0.010003189106695442794,    0.0099841538637632964116,
      0.0099649646528275855807,   0.0099456217698096811123,
      0.0099261255130007674257,   0.0099064761830572425302,
      0.0098866740829960815310,   0.0098667195181901637330,
      0.0098466127963635634131,   0.0098263542275868043344,
      0.0098059441242720780748,   0.0097853828011684262449,
      0.0097646705753568866685,   0.0097438077662456036002,
      0.0097227946955649020574,   0.0097016316873623263399,
      0.0096803190679976428168,   0.0096588571661378070543,
      0.0096372463127518953653,   0.0096154868411060008565,
      0.0095935790867580940532,   0.0095715233875528481799,
      0.0095493200836164291780,   0.0095269695173512505391,
      0.0095044720334306930366,   0.0094818279787937894355,
      0.0094590377026398742636,   0.0094361015564231987254,
      0.0094130198938475108433,   0.0093897930708606009076,
      0.0093664214456488123220,   0.0093429053786315179264,
      0.0093192452324555618847,   0.0092954413719896672217,
      0.0092714941643188090963,   0.0092474039787385538965,
      0.0092231711867493642456,   0.0091987961620508700049,
      0.0091742792805361053638,   0.0091496209202857121033,
      0.0091248214615621091257,   0.0090998812868036283370,
      0.0090748007806186169755,   0.0090495803297795064742,
      0.0090242203232168479525,   0.0089987211520133144254,
      0.0089730832093976698251,   0.0089473068907387049269,
      0.0089213925935391402734,   0.0088953407174294961908,
      0.0088691516641619299919,   0.0088428258376040404609,
      0.0088163636437326397155,   0.0087897654906274925420,
      0.0087630317884650233006,   0.0087361629495119904976,
      0.0087091593881191291220,   0.0086820215207147608445,
      0.0086547497657983721776,   0.0086273445439341606960,
      0.0085998062777445494161,   0.0085721353919036694359,
      0.0085443323131308109340,   0.0085163974701838426307,
      0.0084883312938525998109,   0.0084601342169522410125,
      0.0084318066743165734805,   0.0084033491027913474922,
      0.0083747619412275196555,   0.0083460456304744852839,
      0.0083172006133732799535,   0.0082882273347497503467,
      0.0082591262414076944870,   0.0082298977821219714720,
      0.0082005424076315808099,   0.0081710605706327114662,
      0.0081414527257717607289,   0.0081117193296383229984,
      0.0080818608407581486110,   0.0080518777195860728049,
      0.0080217704284989149370,   0.0079915394317883480600,
      0.0079611851956537389709,   0.0079307081881949588396,
      0.0079001088794051645303,   0.0078693877411635507253,
      0.0078385452472280729642,   0.0078075818732281417100,
      0.0077764980966572875553,   0.0077452943968657976815,
      0.0077139712550533236842,   0.0076825291542614608795,
      0.0076509685793662992048,   0.0076192900170709458298,
      0.0075874939558980195926,   0.0075555808861821173763,
      0.0075235513000622525434,   0.0074914056914742655429,
      0.0074591445561432068091,   0.0074267683915756920676,
      0.0073942776970522301682,   0.0073616729736195235617,
      0.0073289547240827415398,   0.0072961234529977663578,
      0.0072631796666634123580,   0.0072301238731136182165,
      0.0071969565821096124308,   0.0071636783051320521713,
      0.0071302895553731356167,   0.0070967908477286878956,
      0.0070631826987902207560,   0.0070294656268369660846,
      0.0069956401518278834008,   0.0069617067953936414454,
      0.0069276660808285739911,   0.0068935185330826099962,
      0.0068592646787531782271,   0.0068249050460770864750,
      0.0067904401649223754906,   0.0067558705667801477636,
      0.0067211967847563712719,   0.0066864193535636583288,
      0.0066515388095130196526,   0.0066165556905055937875,
      0.0065814705360243520025,   0.0065462838871257787970,
      0.0065109962864315281399,   0.0064756082781200555728,
      0.0064401204079182263053,   0.0064045332230928994309,
      0.0063688472724424883957,   0.0063330631062884978478,
      0.0062971812764670369985,   0.0062612023363203096276,
      0.0062251268406880808615,   0.0061889553458991208579,
      0.0061526884097626255276,   0.0061163265915596144275,
      0.0060798704520343059544,   0.0060433205533854699762,
      0.0060066774592577580309,   0.0059699417347330112295,
      0.0059331139463215459939,   0.0058961946619534177682,
      0.0058591844509696628338,   0.0058220838841135183667,
      0.0057848935335216208708,   0.0057476139727151831229,
      0.0057102457765911497663,   0.0056727895214133316888,
      0.0056352457848035193219,   0.0055976151457325749978,
      0.0055598981845115045031,   0.0055220954827825079648,
      0.0054842076235100102082,   0.0054462351909716707242,
      0.0054081787707493733852,   0.0053700389497201960478,
      0.0053318163160473601826,   0.0052935114591711606693,
      0.0052551249697998758984,   0.0052166574399006583191,
      0.0051781094626904055728,   0.0051394816326266123555,
      0.0051007745453982031472,   0.0050619887979163459522,
      0.0050231249883052471903,   0.0049841837158929278816,
      0.0049451655812019812671,   0.0049060711859403120073,
      0.0048669011329918571022,   0.0048276560264072886749,
      0.0047883364713946987633,   0.0047489430743102662623,
      0.0047094764426489061617,   0.0046699371850349012229,
      0.0046303259112125162398,   0.0045906432320365950276,
      0.0045508897594631402859,   0.0045110661065398764797,
      0.0044711728873967958854,   0.0044312107172366879462,
      0.0043911802123256520846,   0.0043510819899835941164,
      0.0043109166685747064143,   0.0042706848674979319668,
      0.0042303872071774124807,   0.0041900243090529206730,
      0.0041495967955702769009,   0.0041091052901717502774,
      0.0040685504172864444202,   0.0040279328023206679822,
      0.0039872530716482901131,   0.0039465118526010809990,
      0.0039057097734590376307,   0.0038648474634406949488,
      0.0038239255526934225156,   0.0037829446722837068631,
      0.0037419054541874196672,   0.0037008085312800718978,
      0.0036596545373270540955,   0.0036184441069738629255,
      0.0035771778757363141588,   0.0035358564799907422322,
      0.0034944805569641865379,   0.0034530507447245645942,
      0.0034115676821708322494,   0.0033700320090231310686,
      0.0033284443658129230588,   0.0032868053938731128805,
      0.0032451157353281577016,   0.0032033760330841648435,
      0.0031615869308189773738,   0.0031197490729722477976,
      0.0030778631047355000010,   0.0030359296720421795994,
      0.0029939494215576928451,   0.0029519230006694342464,
      0.0029098510574768030532,   0.0028677342407812087627,
      0.0028255732000760657989,   0.0027833685855367775209,
      0.0027411210480107097134,   0.0026988312390071537159,
      0.0026564998106872793426,   0.0026141274158540777514,
      0.0025717147079422944131,   0.0025292623410083523404,
      0.0024867709697202657280,   0.0024442412493475441622,
      0.0024016738357510875543,   0.0023590693853730719547,
      0.0023164285552268264018,   0.0022737520028867009641,
      0.0022310403864779261301,   0.0021882943646664637035,
      0.0021455145966488493586,   0.0021027017421420270147,
      0.0020598564613731751846,   0.0020169794150695254551,
      0.0019740712644481732548,   0.0019311326712058810698,
      0.0018881642975088742600,   0.0018451668059826296372,
      0.0018021408597016569607,   0.0017590871221792735077,
      0.0017160062573573718775,   0.0016728989295961811860,
      0.0016297658036640218091,   0.0015866075447270538329,
      0.0015434248183390193688,   0.0015002182904309788911,
      0.0014569886273010417566,   0.0014137364956040910634,
      0.0013704625623415030078,   0.0013271674948508608980,
      0.0012838519607956639833,   0.0012405166281550312565,
      0.0011971621652134003900,   0.0011537892405502219630,
      0.0011103985230296491389,   0.0010669906817902229532,
      0.0010235663862345533691,   0.00098012630601899626104,
      0.00093667111104332648575,  0.00089320147144040719859,
      0.00084971805756585557603,  0.00080622153998770510264,
      0.00076271258947606458253,  0.00071919187699277403454,
      0.00067566007368105763062,  0.00063211785085517383698,
      0.00058856587999006291790,  0.00054500483271099196141,
      0.00050143538078319758689,  0.00045785819610152649404,
      0.00041427395068007401330,  0.00037068331664182081691,
      0.00032708696620826795145,  0.00028348557168907035052,
      0.00023987980547166898807,  0.00019627034001092183257,
      0.00015265784781873376076,  0.00010904300145368559297,
      0.000065426473510662406466, 0.000021808936610481291864};
  IntegratorXX::GaussChebyshev1<double, double> quad(400);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 400; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("450 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 450> ref_pts = {
      0.99999390765779038148,   0.99994516936551213198,
      0.99984769515639123916,   0.99970148978118313996,
      0.99950656036573155700,   0.99926291641062119501,
      0.99897056979071469572,   0.99862953475457387378,
      0.99823982792376526205,   0.99780146829204999978,
      0.99731447722445810357,   0.99677887845624716593,
      0.99619469809174553230,   0.99556196460308001290,
      0.99488070882878819148,   0.99415096397231539847,
      0.99337276560039642191,   0.99254615164132203498,
      0.99167116238309042459,   0.99074784047144361121,
      0.98977623090778895558,   0.98875638104700585357,
      0.98768834059513772619,   0.98657216160696941713,
      0.98540789848349011604,   0.98419560796924193100,
      0.98293534914955423963,   0.98162718344766395350,
      0.98027117462172183618,   0.97886738876168502097,
      0.97741589428609587959,   0.97591676193874739896,
      0.97437006478523522854,   0.97277587820939656628,
      0.97113427990963605674,   0.96944534989513888045,
      0.96770917048197121914,   0.96592582628906828675,
      0.96409540423411012197,   0.96221799352928534307,
      0.96029368567694307175,   0.95832257446513323770,
      0.95630475596303548134,   0.95424032851627687760,
      0.95212939274213870875,   0.94997205152465252007,
      0.94776841000958569732,   0.94551857559931681035,
      0.94322265794760097271,   0.94088076895422547232,
      0.93849302275955593370,   0.93605953573897327757,
      0.93358042649720174899,   0.93105581586252829039,
      0.92848582688091354138,   0.92587058480999475215,
      0.92321021711298090302,   0.92050485345244032740,
      0.91775462568398114115,   0.91495966784982478627,
      0.91212011617227300216,   0.90923610904706854273,
      0.90630778703664996324,   0.90333529286330080530,
      0.90031877140219351411,   0.89725836967432842698,
      0.89415423683936817717,   0.89100652418836786236,
      0.88781538513640133208,   0.88458097521508395344,
      0.88130345206499221961,   0.87798297542798057053,
      0.87461970713939580028,   0.87121381112018943063,
      0.86776545336892843504,   0.86427480195370470277,
      0.86074202700394363716,   0.85716730070211228747,
      0.85355079727532741829,   0.84989269298686392577,
      0.84619316612756401416,   0.84245239700714755179,
      0.83867056794542402964,   0.83484786326340655104,
      0.83098446927432828558,   0.82708057427456182492,
      0.82313636853444188327,   0.81915204428899178968,
      0.81512779572855422426,   0.81106381898932665475,
      0.80696031214380193505,   0.80281747519111453131,
      0.79863551004729284628,   0.79441462053541811696,
      0.79015501237569036516,   0.78585689317540188516,
      0.78152047241881875723,   0.77714596145697087998,
      0.77273357349735101936,   0.76828352359352337627,
      0.76379602863464217920,   0.75927130733488081287,
      0.75470958022277199794,   0.75011106963045954151,
      0.74547599968286218203,   0.74080459628675005697,
      0.73609708711973432557,   0.73135370161917048329,
      0.72657467097097590872,   0.72176022809836218820,
      0.71691060765048276706,   0.71202604599099648091,
      0.70710678118654752440,   0.70215305299516241880,
      0.69716510285456454409,   0.69214317387040680488,
      0.68708751080442300392,   0.68199836006249850044,
      0.67687596968266073498,   0.67172058932299020583,
      0.66653247024945248641,   0.66131186532365187657,
      0.65605902899050728478,   0.65077421726585094172,
      0.64545768772395054978,   0.64010969948495547667,
      0.63473051320226760491,   0.62932039104983745271,
      0.62387959670938618551,   0.61840839535755414093,
      0.61290705365297649336,   0.60737583972328668834,
      0.60181502315204827992,   0.59622487496561580816,
      0.59060566761992535694,   0.58495767498721543599,
      0.57928117234267883441,   0.57357643635104609611,
      0.56784374505310127112,   0.56208337785213060010,
      0.55629561550030479229,   0.55048074008499556084,
      0.54463903501502708222,   0.53877078500686305004,
      0.53287627607072999620,   0.52695579549667755600,
      0.52100963184057635643,   0.51503807491005421008,
      0.50904141575037130028,   0.50301994663023504568,
      0.49697396102755533579,   0.49090375361514083170,
      0.48480962024633702908,   0.47869185794060678353,
      0.47255076486905400100,   0.46638664033989119881,
      0.46019978478385164567,   0.45399049973954679156,
      0.44775908783876970121,   0.44150585279174520749,
      0.43523109937232750347,   0.42893513340314589481,
      0.42261826174069943619,   0.41628079226040117848,
      0.40992303384157275549,   0.40354529635239004154,
      0.39714789063478061375,   0.39073112848927375506,
      0.38429532265980373625,   0.37784078681846711785,
      0.37136783555023481465,   0.36487678433761966806,
      0.35836794954530027348,   0.35184164840470181223,
      0.34529819899853463937,   0.33873792024529138122,
      0.33216113188370329791,   0.32556815445715666871,
      0.31895930929806995961,   0.31233491851223253457,
      0.30569530496310567376,   0.29904079225608666397,
      0.29237170472273672810,   0.28568836740497356236,
      0.27899110603922925185,   0.27228024704057433636,
      0.26555611748680880033,   0.25881904510252076235,
      0.25206935824311364105,   0.24530738587880257601,
      0.23853345757858088355,   0.23174790349415732898,
      0.22495105434386499805,   0.21814324139654255202,
      0.21132479645538865178,   0.20449605184179033804,
      0.19765734037912615580,   0.19080899537654481241,
      0.18395135061272015985,   0.17708474031958329312,
      0.17020949916603255743,   0.16332596224162225821,
      0.15643446504023086901,   0.14953534344370953316,
      0.14262893370551165622,   0.13571557243430438700,
      0.12879559657756278606,   0.12186934340514748111,
      0.11493715049286660983,   0.10799935570602285122,
      0.10105629718294634741,   0.094108313318514318473,
      0.087155742747658173558,  0.080198924328858922031,
      0.073238197127631689190,  0.066273900400000141401,
      0.059306373575961626128,  0.052335956242943832722,
      0.045362988129253780287,  0.038387809087519939275,
      0.031410759078128293839,  0.024432178152653152233,
      0.017452406437283512819,  0.010471784116245793463,
      0.0034906514152237322674, -0.0034906514152237322674,
      -0.010471784116245793463, -0.017452406437283512819,
      -0.024432178152653152233, -0.031410759078128293839,
      -0.038387809087519939275, -0.045362988129253780287,
      -0.052335956242943832722, -0.059306373575961626128,
      -0.066273900400000141401, -0.073238197127631689190,
      -0.080198924328858922031, -0.087155742747658173558,
      -0.094108313318514318473, -0.10105629718294634741,
      -0.10799935570602285122,  -0.11493715049286660983,
      -0.12186934340514748111,  -0.12879559657756278606,
      -0.13571557243430438700,  -0.14262893370551165622,
      -0.14953534344370953316,  -0.15643446504023086901,
      -0.16332596224162225821,  -0.17020949916603255743,
      -0.17708474031958329312,  -0.18395135061272015985,
      -0.19080899537654481241,  -0.19765734037912615580,
      -0.20449605184179033804,  -0.21132479645538865178,
      -0.21814324139654255202,  -0.22495105434386499805,
      -0.23174790349415732898,  -0.23853345757858088355,
      -0.24530738587880257601,  -0.25206935824311364105,
      -0.25881904510252076235,  -0.26555611748680880033,
      -0.27228024704057433636,  -0.27899110603922925185,
      -0.28568836740497356236,  -0.29237170472273672810,
      -0.29904079225608666397,  -0.30569530496310567376,
      -0.31233491851223253457,  -0.31895930929806995961,
      -0.32556815445715666871,  -0.33216113188370329791,
      -0.33873792024529138122,  -0.34529819899853463937,
      -0.35184164840470181223,  -0.35836794954530027348,
      -0.36487678433761966806,  -0.37136783555023481465,
      -0.37784078681846711785,  -0.38429532265980373625,
      -0.39073112848927375506,  -0.39714789063478061375,
      -0.40354529635239004154,  -0.40992303384157275549,
      -0.41628079226040117848,  -0.42261826174069943619,
      -0.42893513340314589481,  -0.43523109937232750347,
      -0.44150585279174520749,  -0.44775908783876970121,
      -0.45399049973954679156,  -0.46019978478385164567,
      -0.46638664033989119881,  -0.47255076486905400100,
      -0.47869185794060678353,  -0.48480962024633702908,
      -0.49090375361514083170,  -0.49697396102755533579,
      -0.50301994663023504568,  -0.50904141575037130028,
      -0.51503807491005421008,  -0.52100963184057635643,
      -0.52695579549667755600,  -0.53287627607072999620,
      -0.53877078500686305004,  -0.54463903501502708222,
      -0.55048074008499556084,  -0.55629561550030479229,
      -0.56208337785213060010,  -0.56784374505310127112,
      -0.57357643635104609611,  -0.57928117234267883441,
      -0.58495767498721543599,  -0.59060566761992535694,
      -0.59622487496561580816,  -0.60181502315204827992,
      -0.60737583972328668834,  -0.61290705365297649336,
      -0.61840839535755414093,  -0.62387959670938618551,
      -0.62932039104983745271,  -0.63473051320226760491,
      -0.64010969948495547667,  -0.64545768772395054978,
      -0.65077421726585094172,  -0.65605902899050728478,
      -0.66131186532365187657,  -0.66653247024945248641,
      -0.67172058932299020583,  -0.67687596968266073498,
      -0.68199836006249850044,  -0.68708751080442300392,
      -0.69214317387040680488,  -0.69716510285456454409,
      -0.70215305299516241880,  -0.70710678118654752440,
      -0.71202604599099648091,  -0.71691060765048276706,
      -0.72176022809836218820,  -0.72657467097097590872,
      -0.73135370161917048329,  -0.73609708711973432557,
      -0.74080459628675005697,  -0.74547599968286218203,
      -0.75011106963045954151,  -0.75470958022277199794,
      -0.75927130733488081287,  -0.76379602863464217920,
      -0.76828352359352337627,  -0.77273357349735101936,
      -0.77714596145697087998,  -0.78152047241881875723,
      -0.78585689317540188516,  -0.79015501237569036516,
      -0.79441462053541811696,  -0.79863551004729284628,
      -0.80281747519111453131,  -0.80696031214380193505,
      -0.81106381898932665475,  -0.81512779572855422426,
      -0.81915204428899178968,  -0.82313636853444188327,
      -0.82708057427456182492,  -0.83098446927432828558,
      -0.83484786326340655104,  -0.83867056794542402964,
      -0.84245239700714755179,  -0.84619316612756401416,
      -0.84989269298686392577,  -0.85355079727532741829,
      -0.85716730070211228747,  -0.86074202700394363716,
      -0.86427480195370470277,  -0.86776545336892843504,
      -0.87121381112018943063,  -0.87461970713939580028,
      -0.87798297542798057053,  -0.88130345206499221961,
      -0.88458097521508395344,  -0.88781538513640133208,
      -0.89100652418836786236,  -0.89415423683936817717,
      -0.89725836967432842698,  -0.90031877140219351411,
      -0.90333529286330080530,  -0.90630778703664996324,
      -0.90923610904706854273,  -0.91212011617227300216,
      -0.91495966784982478627,  -0.91775462568398114115,
      -0.92050485345244032740,  -0.92321021711298090302,
      -0.92587058480999475215,  -0.92848582688091354138,
      -0.93105581586252829039,  -0.93358042649720174899,
      -0.93605953573897327757,  -0.93849302275955593370,
      -0.94088076895422547232,  -0.94322265794760097271,
      -0.94551857559931681035,  -0.94776841000958569732,
      -0.94997205152465252007,  -0.95212939274213870875,
      -0.95424032851627687760,  -0.95630475596303548134,
      -0.95832257446513323770,  -0.96029368567694307175,
      -0.96221799352928534307,  -0.96409540423411012197,
      -0.96592582628906828675,  -0.96770917048197121914,
      -0.96944534989513888045,  -0.97113427990963605674,
      -0.97277587820939656628,  -0.97437006478523522854,
      -0.97591676193874739896,  -0.97741589428609587959,
      -0.97886738876168502097,  -0.98027117462172183618,
      -0.98162718344766395350,  -0.98293534914955423963,
      -0.98419560796924193100,  -0.98540789848349011604,
      -0.98657216160696941713,  -0.98768834059513772619,
      -0.98875638104700585357,  -0.98977623090778895558,
      -0.99074784047144361121,  -0.99167116238309042459,
      -0.99254615164132203498,  -0.99337276560039642191,
      -0.99415096397231539847,  -0.99488070882878819148,
      -0.99556196460308001290,  -0.99619469809174553230,
      -0.99677887845624716593,  -0.99731447722445810357,
      -0.99780146829204999978,  -0.99823982792376526205,
      -0.99862953475457387378,  -0.99897056979071469572,
      -0.99926291641062119501,  -0.99950656036573155700,
      -0.99970148978118313996,  -0.99984769515639123916,
      -0.99994516936551213198,  -0.99999390765779038148};
  std::array<double, 450> ref_wgt = {
      0.0098730581583608862851,   0.0098729378582629738841,
      0.0098726972595329678106,   0.0098723363651024876615,
      0.0098718551793689181808,   0.0098712537081953556792,
      0.0098705319589105365937,   0.0098696899403087481897,
      0.0098687276626497214051,   0.0098676451376585058389,
      0.0098664423785253268849,   0.0098651193999054250132,
      0.0098636762179188772008,   0.0098621128501504005133,
      0.0098604293156491378408,   0.0098586256349284257900,
      0.0098567018299655447359,   0.0098546579242014510354,
      0.0098524939425404914067,   0.0098502099113500994774,
      0.0098478058584604745063,   0.0098452818131642422805,
      0.0098426378062160981945,   0.0098398738698324325138,
      0.0098369900376909378282,   0.0098339863449301986997,
      0.0098308628281492635104,   0.0098276195254071985142,
      0.0098242564762226240991,   0.0098207737215732332655,
      0.0098171713038952923260,   0.0098134492670831238325,
      0.0098096076564885717381,   0.0098056465189204487990,
      0.0098015659026439662239,   0.0097973658573801455778,
      0.0097930464343052129469,   0.0097886076860499753723,
      0.0097840496666991795606,   0.0097793724317908528781,
      0.0097745760383156266373,   0.0097696605447160416842,
      0.0097646260108858362948,   0.0097594724981692163879,
      0.0097542000693601080662,   0.0097488087887013924914,
      0.0097432987218841231056,   0.0097376699360467252062,
      0.0097319224997741778852,   0.0097260564830971783434,
      0.0097200719574912885879,   0.0097139689958760645255,
      0.0097077476726141674602,   0.0097014080635104580084,
      0.0096949502458110724401,   0.0096883742982024814593,
      0.0096816803008105314341,   0.0096748683351994680886,
      0.0096679384843709426683,   0.0096608908327630005911,
      0.0096537254662490525966,   0.0096464424721368284055,
      0.0096390419391673129022,   0.0096315239575136648546,
      0.0096238886187801181819,   0.0096161360160008657863,
      0.0096082662436389259609,   0.0096002793975849913870,
      0.0095921755751562607368,   0.0095839548750952528940,
      0.0095756173975686038072,   0.0095671632441658459911,
      0.0095585925178981706900,   0.0095499053231971727193,
      0.0095411017659135779991,   0.0095321819533159537967,
      0.0095231459940894016928,   0.0095139939983342332882,
      0.0095047260775646286656,   0.0094953423447072776253,
      0.0094858429141000037085,   0.0094762279014903710273,
      0.0094664974240342739170,   0.0094566516002945094287,
      0.0094466905502393326788,   0.0094366143952409950738,
      0.0094264232580742654280,   0.0094161172629149339909,
      0.0094056965353382994053,   0.0093951612023176386112,
      0.0093845113922226597171,   0.0093737472348179378550,
      0.0093628688612613340404,   0.0093518764041023970551,
      0.0093407699972807483728,   0.0093295497761244501470,
      0.0093182158773483562811,   0.0093067684390524466014,
      0.0092952076007201441523,   0.0092835335032166156348,
      0.0092717462887870550086,   0.0092598461010549502800,
      0.0092478330850203334942,   0.0092357073870580139562,
      0.0092234691549157947001,   0.0092111185377126722280,
      0.0091986556859370195428,   0.0091860807514447524945,
      0.0091733938874574794640,   0.0091605952485606344061,
      0.0091476849907015932745,   0.0091346632711877738526,
      0.0091215302486847190122,   0.0091082860832141634237,
      0.0090949309361520837419,   0.0090814649702267322909,
      0.0090678883495166542712,   0.0090542012394486885148,
      0.0090404038067959518113,   0.0090264962196758068298,
      0.0090124786475478136625,   0.0089983512612116650128,
      0.0089841142328051050553,   0.0089697677358018319917,
      0.0089553119450093843283,   0.0089407470365670109017,
      0.0089260731879435246773,   0.0089112905779351403479,
      0.0088963993866632957583,   0.0088813997955724571825,
      0.0088662919874279084798,   0.0088510761463135241581,
      0.0088357524576295263694,   0.0088203211080902258667,
      0.0088047822857217469494,   0.0087891361798597364240,
      0.0087733829811470566091,   0.0087575228815314624123,
      0.0087415560742632625071,   0.0087254827538929646393,
      0.0087093031162689050905,   0.0086930173585348623273,
      0.0086766256791276548671,   0.0086601282777747233882,
      0.0086435253554916971135,   0.0086268171145799444988,
      0.0086100037586241082544,   0.0085930854924896247304,
      0.0085760625223202276962,   0.0085589350555354365440,
      0.0085417033008280289474,   0.0085243674681614980059,
      0.0085069277687674939058,   0.0084893844151432501295,
      0.0084717376210489942435,   0.0084539876015053432975,
      0.0084361345727906838661,   0.0084181787524385367652,
      0.0084001203592349064741,   0.0083819596132156152976,
      0.0083636967356636222986,   0.0083453319491063270353,
      0.0083268654773128581350,   0.0083082975452913467380,
      0.0082896283792861848440,   0.0082708582067752685965,
      0.0082519872564672265356,   0.0082330157582986328557,
      0.0082139439434312057015,   0.0081947720442489905345,
      0.0081755002943555286076,   0.0081561289285710105790,
      0.0081366581829294153027,   0.0081170882946756338288,
      0.0080974195022625786492,   0.0080776520453482782247,
      0.0080577861647929568267,   0.0080378221026560997322,
      0.0080177601021935038047,   0.0079976004078543134997,
      0.0079773432652780423284,   0.0079569889212915798182,
      0.0079365376239061840046,   0.0079159896223144594928,
      0.0078953451668873211239,   0.0078746045091709432845,
      0.0078537679018836948962,   0.0078328355989130601216,
      0.0078118078553125448258,   0.0077906849272985688296,
      0.0077694670722473439937,   0.0077481545486917381704,
      0.0077267476163181250622,   0.0077052465359632200255,
      0.0076836515696109018576,   0.0076619629803890206055,
      0.0076401810325661914363,   0.0076183059915485746074,
      0.0075963381238766415764,   0.0075742776972219272893,
      0.0075521249803837686875,   0.0075298802432860294728,
      0.0075075437569738111699,   0.0074851157936101505279,
      0.0074625966264727032992,   0.0074399865299504144376,
      0.0074172857795401747557,   0.0073944946518434640822,
      0.0073716134245629809599,   0.0073486423764992589265,
      0.0073255817875472694175,   0.0073024319386930113345,
      0.0072791931120100873199,   0.0072558655906562667784,
      0.0072324496588700356893,   0.0072089456019671332501,
      0.0071853537063370753947,   0.0071616742594396652267,
      0.0071379075498014904132,   0.0071140538670124075791,
      0.0070901135017220137458,   0.0070660867456361048581,
      0.0070419738915131214407,   0.0070177752331605814294,
      0.0069934910654315002188,   0.0069691216842207979714,
      0.0069446673864616942319,   0.0069201284701220898889,
      0.0068955052342009365306,   0.0068707979787245932367,
      0.0068460070047431708518,   0.0068211326143268637852,
      0.0067961751105622693804,   0.0067711347975486949009,
      0.0067460119803944521761,   0.0067208069652131399525,
      0.0066955200591199139966,   0.0066701515702277449932,
      0.0066447018076436642862,   0.0066191710814649975073,
      0.0065935597027755861374,   0.0065678679836419970486,
      0.0065420962371097200714,   0.0065162447771993536340,
      0.0064903139189027785209,   0.0064643039781793197958,
      0.0064382152719518969371,   0.0064120481181031622322,
      0.0063858028354716274774,   0.0063594797438477790318,
      0.0063330791639701812705,   0.0063066014175215684870,
      0.0062800468271249252902,   0.0062534157163395555453,
      0.0062267084096571399057,   0.0061999252324977819845,
      0.0061730665112060432130,   0.0061461325730469664352,
      0.0061191237462020882868,   0.0060920403597654404063,
      0.0060648827437395395287,   0.0060376512290313665083,
      0.0060103461474483343220,   0.0059829678316942451006,
      0.0059555166153652362379,   0.0059279928329457156271,
      0.0059003968198042860737,   0.0058727289121896589352,
      0.0058449894472265570365,   0.0058171787629116069115,
      0.0057892971981092204207,   0.0057613450925474657959,
      0.0057333227868139281601,   0.0057052306223515595760,
      0.0056770689414545186707,   0.0056488380872639998900,
      0.0056205384037640524309,   0.0055921702357773889045,
      0.0055637339289611837802,   0.0055352298298028616621,
      0.0055066582856158754489,   0.0054780196445354744294,
      0.0054493142555144623640,   0.0054205424683189456053,
      0.0053917046335240713079,   0.0053628011025097557817,
      0.0053338322274564030376,   0.0053047983613406135811,
      0.0052756998579308835033,   0.0052465370717832939241,
      0.0052173103582371908374,   0.0051880200734108554139,
      0.0051586665741971648122,   0.0051292502182592435514,
      0.0050997713640261054989,   0.0050702303706882865263,
      0.0050406275981934678857,   0.0050109634072420903609,
      0.0049812381592829592464,   0.0049514522165088402078,
      0.0049216059418520460773,   0.0048916996989800146376,
      0.0048617338522908774497,   0.0048317087669090197758,
      0.0048016248086806316545,   0.0047714823441692501803,
      0.0047412817406512930423,   0.0047110233661115833775,
      0.0046807075892388659912,   0.0046503347794213150015,
      0.0046199053067420329608,   0.0045894195419745415099,
      0.0045588778565782636198,   0.0045282806226939974757,
      0.0044976282131393820591,   0.0044669210014043544821,
      0.0044361593616465991307,   0.0044053436686869886714,
      0.0043744742980050169773,   0.0043435516257342240285,
      0.0043125760286576128442,   0.0042815478842030585003,
      0.0042504675704387092900,   0.0042193354660683800829,
      0.0041881519504269379381,   0.0041569174034756800290,
      0.0041256322057977039345,   0.0040942967385932703541,
      0.0040629113836751583032,   0.0040314765234640128448,
      0.0039999925409836854146,   0.0039684598198565667960,
      0.0039368787442989128029,   0.0039052496991161627253,
      0.0038735730696982505968,   0.0038418492420149093399,
      0.0038100786026109678462,   0.0037782615386016410503,
      0.0037463984376678130523,   0.0037144896880513133494,
      0.0036825356785501862309,   0.0036505367985139533975,
      0.0036184934378388698596,   0.0035864059869631731749,
      0.0035542748368623260817,   0.0035221003790442525857,
      0.0034898830055445675604,   0.0034576231089217999160,
      0.0034253210822526093982,   0.0033929773191269970729,
      0.0033605922136435095562,   0.0033281661604044370481,
      0.0032956995545110052280,   0.0032631927915585610713,
      0.0032306462676317526443,   0.0031980603792997029384,
      0.0031654355236111778001,   0.0031327720980897480172,
      0.0031000705007289456196,   0.0030673311299874144537,
      0.0030345543847840550893,   0.0030017406644931641192,
      0.0029688903689395679090,   0.0029360038983937508580,
      0.0029030816535669782294,   0.0028701240356064136103,
      0.0028371314460902310600,   0.0028041042870227220066,
      0.0027710429608293969516,   0.0027379478703520820422,
      0.0027048194188440105705,   0.0026716580099649094604,
      0.0026384640477760808011,   0.0026052379367354784874,
      0.0025719800816927800277,   0.0025386908878844535779,
      0.0025053707609288202634,   0.0024720201068211118474,
      0.0024386393319285238075,   0.0024052288429852638795,
      0.0023717890470875961295,   0.0023383203516888806141,
      0.0023048231645946086903,   0.0022712978939574340340,
      0.0022377449482721994286,   0.0022041647363709593846,
      0.0021705576674179986496,   0.0021369241509048466710,
      0.0021032645966452880707,   0.0020695794147703691938,
      0.0020358690157234007906,   0.0020021338102549568950,
      0.0019683742094178699582,   0.0019345906245622222994,
      0.0019007834673303339352,   0.0018669531496517468478,
      0.0018331000837382057531,   0.0017992246820786354315,
      0.0017653273574341146795,   0.0017314085228328469473,
      0.0016974685915651277194,   0.0016635079771783087036,
      0.0016295270934717588868,   0.0015955263544918225199,
      0.0015615061745267740945,   0.0015274669681017703703,
      0.0014934091499737995172,   0.0014593331351266274323,
      0.0014252393387657412936,   0.0013911281763132904123,
      0.0013570000634030244449,   0.0013228554158752290269,
      0.0012886946497716588906,   0.0012545181813304685275,
      0.0012203264269811404574,   0.0011861198033394111670,
      0.0011518987272021947784,   0.0011176636155425045102,
      0.0010834148855043719931,   0.0010491529543977645014,
      0.0010148782396935001628,   0.00098059115901816120805,
      0.00094629213014900532311,  0.00091198157100887516495,
      0.00087765989966110610365,  0.00084332753430443225250,
      0.00080898489326789084856,  0.00077463239500572504518,
      0.00074027045809228517929,  0.00070589950121692857485,
      0.00067151994317891794530,  0.00063713220288231845664,
      0.00060273669933089351364,  0.00056833385162299933112,
      0.00053392407894647835285,  0.00049950780057355157997,
      0.00046508543585570987114,  0.00043065740421860427720,
      0.00039622412515693547178,  0.00036178601822934234077,
      0.00032734350305328979288,  0.00029289699929995585311,
      0.00025844692668911810191,  0.00022399370498403952207,
      0.00018953775398635381611,  0.00015507949353095025541,
      0.00012061934348085812490,  0.000086157723722130824568,
      0.000051695054158729690530, 0.000017231754707407597017};
  IntegratorXX::GaussChebyshev1<double, double> quad(450);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 450; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}

TEST_CASE("500 point GaussChebyshev1", "[1d-quad]") {
  std::array<double, 500> ref_pts = {
      0.99999506520185816611,    0.99995558710894980672,
      0.99987663248166059864,    0.99975820443698403527,
      0.99960030765025653915,    0.99940294835497288767,
      0.99916613434254012540,    0.99888987496196997264,
      0.99857418111950974248,    0.99821906527821178080,
      0.99782454145744144633,    0.99739062523232365011,
      0.99691733373312797620,    0.99640468564459240799,
      0.99585270120518568675,    0.99526140220630833150,
      0.99463081199143235186,    0.99396095545517968775,
      0.99325185904233941232,    0.99250355074682373696,
      0.99171606011056285960,    0.99088941822233869988,
      0.99002365771655756725,    0.98911881277196181053,
      0.98817491911028049965,    0.98719201399481919297,
      0.98617013622898884576,    0.98510932615477391803,
      0.98400962565113974198,    0.98287107813237921223,
      0.98169372854639886384,    0.98047762337294440591,
      0.97922281062176578086,    0.97792933983072182162,
      0.97659726206382458189,    0.97522662990922341628,
      0.97381749747712889029,    0.97236992039767660183,
      0.97088395581873099870,    0.96935966240362927877,
      0.96779710032886546188,    0.96619633128171472489,
      0.96455741845779809366,    0.96288042655858758819,
      0.96116542178885191925,    0.95941247185404283747,
      0.95762164595762223807,    0.95579301479833012664,
      0.95392665056739355398,    0.95202262694567663003,
      0.95008101910077172953,    0.94810190368403200420,
      0.94608535882754531853,    0.94403146414104972878,
      0.94194030070879062677,    0.93981195108631967278,
      0.93764649929723564369,    0.93544403082986732518,
      0.93320463263389857889,    0.93092839311693571777,
      0.92861540214101732518,    0.92626575101906665548,
      0.92387953251128675613,    0.92145684082149845376,
      0.91899777159342134859,    0.91650242190689796417,
      0.91397089027406120139,    0.91140327663544524821,
      0.90879968235604009844,    0.90616021022128983552,
      0.90348496443303483921,    0.90077405060539807530,
      0.89802757576061563093,    0.89524564832481165993,
      0.89242837812371790510,    0.88957587637833796637,
      0.88668825570055648602,    0.88376563008869342432,
      0.88080811492300360101,    0.87781582696112168043,
      0.87478888433345278003,    0.87172740653850888422,
      0.86863151443819124777,    0.86550133025301897487,
      0.86233697755730396230,    0.85913858127427239723,
      0.85590626767113300212,    0.85264016435409222152,
      0.84934040026331654757,    0.84600710566784218297,
      0.84264041216043224252,    0.83924045265238169612,
      0.83580736136827025847,    0.83234127384066343245,
      0.82884232690476191552,    0.82531065869299958029,
      0.82174640862959024257,    0.81814971742502343213,
      0.81452072707050938349,    0.81085958083237346608,
      0.80716642324640027507,    0.80344140011212760598,
      0.79968465848709053869,    0.79589634668101585766,
      0.79207661424996703794,    0.78822561199044002780,
      0.78434349193341006134,    0.78043040733832973585,
      0.77648651268707859107,    0.77251196367786442910,
      0.76850691721907661577,    0.76447153142309160603,
      0.76040596560003093817,    0.75631038025147194291,
      0.75218493706411141598,    0.74802979890338250420,
      0.74384512980702505702,    0.73963109497860969747,
      0.73538786078101586801,    0.73111559472986410895,
      0.72681446548690282858,    0.72248464285334982611,
      0.71812629776318883037,    0.71373960227642131882,
      0.70932472957227388325,    0.70488185394236141052,
      0.70041115078380634800,    0.69591279659231432549,
      0.69138696895520640702,    0.68683384654440824743,
      0.68225360910939643072,    0.67764643747010226851,
      0.67301251350977333872,    0.66835202016779304641,
      0.66366514143245849019,    0.65895206233371691923,
      0.65421296893586106784,    0.64944804833018365573,
      0.64465748862759134413,    0.63984147895117843932,
      0.63500020942876063668,    0.63013387118536910008,
      0.62524265633570517290,    0.62032675797655601859,
      0.61538637017917149013,    0.61042168798160252941,
      0.60543290738100139891,    0.60042022532588404976,
      0.59538383970835493154,    0.59032394935629455083,
      0.58524075402551008698,    0.58013445439184937484,
      0.57500525204327856590,    0.56985334947192378059,
      0.56467895006607706583,    0.55948225810216697354,
      0.55426347873669407701,    0.54902281799813174352,
      0.54376048277879248303,    0.53847668082666019392,
      0.53317162073718862830,    0.52784551194506640065,
      0.52249856471594886499,    0.51713099013815718675,
      0.51174300011434493738,    0.50633480735313254034,
      0.50090662536070989905,    0.49545866843240753805,
      0.48999115164423659030,    0.48450429084439796453,
      0.47899830264476102786,    0.47347340441231214007,
      0.46792981426057337723,    0.46236775104099178326,
      0.45678743433429948955,    0.45118908444184504366,
      0.44557292237689628928,    0.43993916985591514083,
      0.43428804928980459723,    0.42861978377512834024,
      0.42293459708530326414,    0.41723271366176528439,
      0.41151435860510877405,    0.40577975766619997776,
      0.40002913723726475404,    0.39426272434295099794,
      0.38848074663136609658,    0.38268343236508977173,
      0.37687101041216266399,    0.37104371023705101442,
      0.36520176189158780034,    0.35934539600589068285,
      0.35347484377925712472,    0.34759033697103703798,
      0.34169210789148332161,    0.33578038939258065056,
      0.32985541485885287809,    0.32391741819814941440,
      0.31796663383241094522,    0.31200329668841485500,
      0.30602764218850072003,    0.30003990624127623753,
      0.29404032523230395778,    0.28802913601476918687,
      0.28200657590012942852,    0.27597288264874573404,
      0.26992829446049633041,    0.26387304996537289696,
      0.25780738821405986187,    0.25173154866849709049,
      0.24564577119242633799,    0.23955029604192183951,
      0.23344536385590541177,    0.22733121564664644046,
      0.22120809279024712853,    0.21507623701711338096,
      0.20893589040241170227,    0.20278729535651248344,
      0.19663069461542005552,    0.19046633123118988788,
      0.18429444856233330916,    0.17811529026421013000,
      0.17192910027940954661,    0.16573612282811970503,
      0.15953660239848630630,    0.15333078373696063310,
      0.14711891183863737891,    0.14090123193758266117,
      0.13467798949715260027,    0.12844943020030284655,
      0.12221579993988943788,    0.11597734480896137074,
      0.10973431109104526802,    0.10348694525042252713,
      0.097235493922399332127,   0.090980203903569914168,
      0.084721322142073444555,   0.078459095727844945033,
      0.072193771882860600247,   0.065925597951377857430,
      0.059654821390170698642,   0.053381689758760471049,
      0.047106450709642660905,   0.040829351978509997085,
      0.034550641374472270123,   0.028270566770273252877,
      0.021989376092505109031,   0.015707317311820675753,
      0.0094246384331440069173,  0.0031415874858795633519,
      -0.0031415874858795633519, -0.0094246384331440069173,
      -0.015707317311820675753,  -0.021989376092505109031,
      -0.028270566770273252877,  -0.034550641374472270123,
      -0.040829351978509997085,  -0.047106450709642660905,
      -0.053381689758760471049,  -0.059654821390170698642,
      -0.065925597951377857430,  -0.072193771882860600247,
      -0.078459095727844945033,  -0.084721322142073444555,
      -0.090980203903569914168,  -0.097235493922399332127,
      -0.10348694525042252713,   -0.10973431109104526802,
      -0.11597734480896137074,   -0.12221579993988943788,
      -0.12844943020030284655,   -0.13467798949715260027,
      -0.14090123193758266117,   -0.14711891183863737891,
      -0.15333078373696063310,   -0.15953660239848630630,
      -0.16573612282811970503,   -0.17192910027940954661,
      -0.17811529026421013000,   -0.18429444856233330916,
      -0.19046633123118988788,   -0.19663069461542005552,
      -0.20278729535651248344,   -0.20893589040241170227,
      -0.21507623701711338096,   -0.22120809279024712853,
      -0.22733121564664644046,   -0.23344536385590541177,
      -0.23955029604192183951,   -0.24564577119242633799,
      -0.25173154866849709049,   -0.25780738821405986187,
      -0.26387304996537289696,   -0.26992829446049633041,
      -0.27597288264874573404,   -0.28200657590012942852,
      -0.28802913601476918687,   -0.29404032523230395778,
      -0.30003990624127623753,   -0.30602764218850072003,
      -0.31200329668841485500,   -0.31796663383241094522,
      -0.32391741819814941440,   -0.32985541485885287809,
      -0.33578038939258065056,   -0.34169210789148332161,
      -0.34759033697103703798,   -0.35347484377925712472,
      -0.35934539600589068285,   -0.36520176189158780034,
      -0.37104371023705101442,   -0.37687101041216266399,
      -0.38268343236508977173,   -0.38848074663136609658,
      -0.39426272434295099794,   -0.40002913723726475404,
      -0.40577975766619997776,   -0.41151435860510877405,
      -0.41723271366176528439,   -0.42293459708530326414,
      -0.42861978377512834024,   -0.43428804928980459723,
      -0.43993916985591514083,   -0.44557292237689628928,
      -0.45118908444184504366,   -0.45678743433429948955,
      -0.46236775104099178326,   -0.46792981426057337723,
      -0.47347340441231214007,   -0.47899830264476102786,
      -0.48450429084439796453,   -0.48999115164423659030,
      -0.49545866843240753805,   -0.50090662536070989905,
      -0.50633480735313254034,   -0.51174300011434493738,
      -0.51713099013815718675,   -0.52249856471594886499,
      -0.52784551194506640065,   -0.53317162073718862830,
      -0.53847668082666019392,   -0.54376048277879248303,
      -0.54902281799813174352,   -0.55426347873669407701,
      -0.55948225810216697354,   -0.56467895006607706583,
      -0.56985334947192378059,   -0.57500525204327856590,
      -0.58013445439184937484,   -0.58524075402551008698,
      -0.59032394935629455083,   -0.59538383970835493154,
      -0.60042022532588404976,   -0.60543290738100139891,
      -0.61042168798160252941,   -0.61538637017917149013,
      -0.62032675797655601859,   -0.62524265633570517290,
      -0.63013387118536910008,   -0.63500020942876063668,
      -0.63984147895117843932,   -0.64465748862759134413,
      -0.64944804833018365573,   -0.65421296893586106784,
      -0.65895206233371691923,   -0.66366514143245849019,
      -0.66835202016779304641,   -0.67301251350977333872,
      -0.67764643747010226851,   -0.68225360910939643072,
      -0.68683384654440824743,   -0.69138696895520640702,
      -0.69591279659231432549,   -0.70041115078380634800,
      -0.70488185394236141052,   -0.70932472957227388325,
      -0.71373960227642131882,   -0.71812629776318883037,
      -0.72248464285334982611,   -0.72681446548690282858,
      -0.73111559472986410895,   -0.73538786078101586801,
      -0.73963109497860969747,   -0.74384512980702505702,
      -0.74802979890338250420,   -0.75218493706411141598,
      -0.75631038025147194291,   -0.76040596560003093817,
      -0.76447153142309160603,   -0.76850691721907661577,
      -0.77251196367786442910,   -0.77648651268707859107,
      -0.78043040733832973585,   -0.78434349193341006134,
      -0.78822561199044002780,   -0.79207661424996703794,
      -0.79589634668101585766,   -0.79968465848709053869,
      -0.80344140011212760598,   -0.80716642324640027507,
      -0.81085958083237346608,   -0.81452072707050938349,
      -0.81814971742502343213,   -0.82174640862959024257,
      -0.82531065869299958029,   -0.82884232690476191552,
      -0.83234127384066343245,   -0.83580736136827025847,
      -0.83924045265238169612,   -0.84264041216043224252,
      -0.84600710566784218297,   -0.84934040026331654757,
      -0.85264016435409222152,   -0.85590626767113300212,
      -0.85913858127427239723,   -0.86233697755730396230,
      -0.86550133025301897487,   -0.86863151443819124777,
      -0.87172740653850888422,   -0.87478888433345278003,
      -0.87781582696112168043,   -0.88080811492300360101,
      -0.88376563008869342432,   -0.88668825570055648602,
      -0.88957587637833796637,   -0.89242837812371790510,
      -0.89524564832481165993,   -0.89802757576061563093,
      -0.90077405060539807530,   -0.90348496443303483921,
      -0.90616021022128983552,   -0.90879968235604009844,
      -0.91140327663544524821,   -0.91397089027406120139,
      -0.91650242190689796417,   -0.91899777159342134859,
      -0.92145684082149845376,   -0.92387953251128675613,
      -0.92626575101906665548,   -0.92861540214101732518,
      -0.93092839311693571777,   -0.93320463263389857889,
      -0.93544403082986732518,   -0.93764649929723564369,
      -0.93981195108631967278,   -0.94194030070879062677,
      -0.94403146414104972878,   -0.94608535882754531853,
      -0.94810190368403200420,   -0.95008101910077172953,
      -0.95202262694567663003,   -0.95392665056739355398,
      -0.95579301479833012664,   -0.95762164595762223807,
      -0.95941247185404283747,   -0.96116542178885191925,
      -0.96288042655858758819,   -0.96455741845779809366,
      -0.96619633128171472489,   -0.96779710032886546188,
      -0.96935966240362927877,   -0.97088395581873099870,
      -0.97236992039767660183,   -0.97381749747712889029,
      -0.97522662990922341628,   -0.97659726206382458189,
      -0.97792933983072182162,   -0.97922281062176578086,
      -0.98047762337294440591,   -0.98169372854639886384,
      -0.98287107813237921223,   -0.98400962565113974198,
      -0.98510932615477391803,   -0.98617013622898884576,
      -0.98719201399481919297,   -0.98817491911028049965,
      -0.98911881277196181053,   -0.99002365771655756725,
      -0.99088941822233869988,   -0.99171606011056285960,
      -0.99250355074682373696,   -0.99325185904233941232,
      -0.99396095545517968775,   -0.99463081199143235186,
      -0.99526140220630833150,   -0.99585270120518568675,
      -0.99640468564459240799,   -0.99691733373312797620,
      -0.99739062523232365011,   -0.99782454145744144633,
      -0.99821906527821178080,   -0.99857418111950974248,
      -0.99888987496196997264,   -0.99916613434254012540,
      -0.99940294835497288767,   -0.99960030765025653915,
      -0.99975820443698403527,   -0.99987663248166059864,
      -0.99995558710894980672,   -0.99999506520185816611};
  std::array<double, 500> ref_wgt = {
      0.0088857549139447365485,   0.0088856672151310602969,
      0.0088854918183692596791,   0.0088852287253904299237,
      0.0088848779387911925167,   0.0088844394620336695743,
      0.0088839132994454496731,   0.0088832994562195451383,
      0.0088825979384143407912,   0.0088818087529535341548,
      0.0088809319076260671203,   0.0088799674110860490730,
      0.0088789152728526714798,   0.0088777755033101139389,
      0.0088765481137074416916,   0.0088752331161584945992,
      0.0088738305236417675837,   0.0088723403500002825357,
      0.0088707626099414516893,   0.0088690973190369324657,
      0.0088673444937224737873,   0.0088655041512977538637,
      0.0088635763099262094505,   0.0088615609886348565839,
      0.0088594582073141027913,   0.0088572679867175507815,
      0.0088549903484617936146,   0.0088526253150262013551,
      0.0088501729097526992098,   0.0088476331568455371520,
      0.0088450060813710510357,   0.0088422917092574152008,
      0.0088394900672943865725,   0.0088366011831330402573,
      0.0088336250852854966379,   0.0088305618031246399704,
      0.0088274113668838284854,   0.0088241738076565959970,
      0.0088208491573963450225,   0.0088174374489160314151,
      0.0088139387158878405129,   0.0088103529928428548085,
      0.0088066803151707131410,   0.0088029207191192614145,
      0.0087990742417941948465,   0.0087951409211586917496,
      0.0087911207960330388505,   0.0087870139060942481492,
      0.0087828202918756653231,   0.0087785399947665696790,
      0.0087741730570117656577,   0.0087697195217111658953,
      0.0087651794328193658435,   0.0087605528351452099565,
      0.0087558397743513494452,   0.0087510402969537916053,
      0.0087461544503214407232,   0.0087411822826756305644,
      0.0087361238430896484475,   0.0087309791814882509115,
      0.0087257483486471709784,   0.0087204313961926170169,
      0.0087150283766007632130,   0.0087095393431972316509,
      0.0087039643501565660112,   0.0086983034525016968895,
      0.0086925567061033987424,   0.0086867241676797384657,
      0.0086808058947955156101,   0.0086748019458616942394,
      0.0086687123801348264380,   0.0086625372577164674732,
      0.0086562766395525826162,   0.0086499305874329456309,
      0.0086434991639905289331,   0.0086369824327008854289,
      0.0086303804578815220362,   0.0086236933046912648970,
      0.0086169210391296162862,   0.0086100637280361032231,
      0.0086031214390896177921,   0.0085960942408077491797,
      0.0085889822025461074331,   0.0085817853944976389488,
      0.0085745038876919336962,   0.0085671377539945241844,
      0.0085596870661061761783,   0.0085521518975621711716,
      0.0085445323227315806230,   0.0085368284168165319635,
      0.0085290402558514663822,   0.0085211679167023883963,
      0.0085132114770661072155,   0.0085051710154694699052,
      0.0084970466112685863584,   0.0084888383446480460834,
      0.0084805462966201268135,   0.0084721705490239949491,
      0.0084637111845248978379,   0.0084551682866133479024,
      0.0084465419396042986221,   0.0084378322286363123792,
      0.0084290392396707201751,   0.0084201630594907732271,
      0.0084112037757007864523,   0.0084021614767252738486,
      0.0083930362518080757806,   0.0083838281910114781786,
      0.0083745373852153236607,   0.0083651639261161145847,
      0.0083557079062261080414,   0.0083461694188724027955,
      0.0083365485581960181848,   0.0083268454191509649867,
      0.0083170600975033082602,   0.0083071926898302221736,
      0.0082972432935190368264,   0.0082872120067662770764,
      0.0082770989285766933790,   0.0082669041587622846505,
      0.0082566277979413131640,   0.0082462699475373114880,
      0.0082358307097780814764,   0.0082253101876946853221,
      0.0082147084851204286816,   0.0082040257066898358824,
      0.0081932619578376172223,   0.0081824173447976283715,
      0.0081714919746018218873,   0.0081604859550791908519,
      0.0081493993948547046438,   0.0081382324033482368532,
      0.0081269850907734853523,   0.0081156575681368845299,
      0.0081042499472365097035,   0.0080927623406609737168,
      0.0080811948617883157361,   0.0080695476247848822543,
      0.0080578207446042003154,   0.0080460143369858429699,
      0.0080341285184542869712,   0.0080221634063177627267,
      0.0080101191186670965129,   0.0079979957743745449661,
      0.0079857934930926218617,   0.0079735123952529171920,
      0.0079611526020649085553,   0.0079487142355147648666,
      0.0079361974183641424042,   0.0079236022741489732014,
      0.0079109289271782457963,   0.0078981775025327783528,
      0.0078853481260639841634,   0.0078724409243926295463,
      0.0078594560249075841495,   0.0078463935557645636745,
      0.0078332536458848650308,   0.0078200364249540939348,
      0.0078067420234208849652,   0.0077933705724956140878,
      0.0077799222041491036618,   0.0077663970511113199415,
      0.0077527952468700630845,   0.0077391169256696496815,
      0.0077253622225095878190,   0.0077115312731432446883,
      0.0076976242140765067553,   0.0076836411825664325017,
      0.0076695823166198977538,   0.0076554477549922336101,
      0.0076412376371858569821,   0.0076269521034488937623,
      0.0076125912947737946312,   0.0075981553528959435189,
      0.0075836444202922587345,   0.0075690586401797867756,
      0.0075543981565142888349,   0.0075396631139888200141,
      0.0075248536580323012622,   0.0075099699348080840508,
      0.0074950120912125078008,   0.0074799802748734500748,
      0.0074648746341488695495,   0.0074496953181253417827,
      0.0074344424766165877888,   0.0074191162601619954380,
      0.0074037168200251336931,   0.0073882443081922596996,
      0.0073726988773708187422,   0.0073570806809879370841,
      0.0073413898731889077035,   0.0073256266088356689414,
      0.0073097910435052760770,   0.0072938833334883658450,
      0.0072779036357876139098,   0.0072618521081161853130,
      0.0072457289088961779077,   0.0072295341972570587965,
      0.0072132681330340937880,   0.0071969308767667698869,
      0.0071805225896972108347,   0.0071640434337685857144,
      0.0071474935716235106371,   0.0071308731666024435250,
      0.0071141823827420720072,   0.0070974213847736944435,
      0.0070805903381215940932,   0.0070636894089014064440,
      0.0070467187639184797180,   0.0070296785706662285703,
      0.0070125689973244809961,   0.0069953902127578184643,
      0.0069781423865139092921,   0.0069608256888218352776,
      0.0069434402905904116079,   0.0069259863634065000580,
      0.0069084640795333154976,   0.0068908736119087257228,
      0.0068732151341435446294,   0.0068554888205198187437,
      0.0068376948459891071296,   0.0068198333861707546871,
      0.0068019046173501588603,   0.0067839087164770297717,
      0.0067658458611636438000,   0.0067477162296830906185,
      0.0067295200009675137121,   0.0067112573546063443888,
      0.0066929284708445293046,   0.0066745335305807515190,
      0.0066560727153656450977,   0.0066375462074000032811,
      0.0066189541895329802363,   0.0066002968452602864096,
      0.0065815743587223774978,   0.0065627869147026370564,
      0.0065439346986255527624,   0.0065250178965548863491,
      0.0065060366951918372319,   0.0064869912818731998431,
      0.0064678818445695146934,   0.0064487085718832131781,
      0.0064294716530467561477,   0.0064101712779207662598,
      0.0063908076369921541311,   0.0063713809213722383090,
      0.0063518913227948590797,   0.0063323390336144861326,
      0.0063127242468043200996,   0.0062930471559543879873,
      0.0062733079552696325214,   0.0062535068395679954229,
      0.0062336440042784946331,   0.0062137196454392955083,
      0.0061937339596957760024,   0.0061736871442985858562,
      0.0061535793971016998131,   0.0061334109165604648805,
      0.0061131819017296416554,   0.0060928925522614397343,
      0.0060725430684035472266,   0.0060521336509971543907,
      0.0060316645014749714127,   0.0060111358218592403464,
      0.0059905478147597412359,   0.0059699006833717924385,
      0.0059491946314742451692,   0.0059284298634274722854,
      0.0059076065841713513327,   0.0058867249992232418712,
      0.0058657853146759571018,   0.0058447877371957298135,
      0.0058237324740201726713,   0.0058026197329562328642,
      0.0057814497223781411350,   0.0057602226512253552104,
      0.0057389387290004976531,   0.0057175981657672881554,
      0.0056962011721484702952,   0.0056747479593237327744,
      0.0056532387390276251607,   0.0056316737235474681534,
      0.0056100531257212583925,   0.0055883771589355678342,
      0.0055666460371234377116,   0.0055448599747622671016,
      0.0055230191868716961196,   0.0055011238890114837630,
      0.0054791742972793804226,   0.0054571706283089950856,
      0.0054351130992676572492,   0.0054130019278542735668,
      0.0053908373322971792472,   0.0053686195313519842299,
      0.0053463487442994141548,   0.0053240251909431461504,
      0.0053016490916076394598,   0.0052792206671359609279,
      0.0052567401388876053687,   0.0052342077287363108372,
      0.0052116236590678688247,   0.0051889881527779294009,
      0.0051663014332698013239,   0.0051435637244522471397,
      0.0051207752507372732933,   0.0050979362370379152723,
      0.0050750469087660178067,   0.0050521074918300101443,
      0.0050291182126326764264,   0.0050060792980689211830,
      0.0049829909755235299724,   0.0049598534728689251848,
      0.0049366670184629170332,   0.0049134318411464497548,
      0.0048901481702413430425,   0.0048668162355480287314,
      0.0048434362673432827615,   0.0048200084963779524386,
      0.0047965331538746790168,   0.0047730104715256156241,
      0.0047494406814901405549,   0.0047258240163925659500,
      0.0047021607093198418891,   0.0046784509938192559165,
      0.0046546951038961280236,   0.0046308932740115011108,
      0.0046070457390798269520,   0.0045831527344666476835,
      0.0045592144959862728411,   0.0045352312598994519684,
      0.0045112032629110428181,   0.0044871307421676751711,
      0.0044630139352554102945,   0.0044388530801973960636,
      0.0044146484154515177693,   0.0043904001799080446348,
      0.0043661086128872720655,   0.0043417739541371596542,
      0.0043173964438309649651,   0.0042929763225648731216,
      0.0042685138313556222180,   0.0042440092116381245824,
      0.0042194627052630839114,   0.0041948745544946083011,
      0.0041702450020078191983,   0.0041455742908864562950,
      0.0041208626646204783900,   0.0040961103671036602415,
      0.0040713176426311854336,   0.0040464847358972352820,
      0.0040216118919925738006,   0.0039966993564021287552,
      0.0039717473750025688259,   0.0039467561940598769040,
      0.0039217260602269195460,   0.0038966572205410126093,
      0.0038715499224214830938,   0.0038464044136672272130,
      0.0038212209424542647188,   0.0037959997573332895045,
      0.0037707411072272165098,   0.0037454452414287249521,
      0.0037201124095977979082,   0.0036947428617592582715,
      0.0036693368483003011077,   0.0036438946199680224339,
      0.0036184164278669444467,   0.0035929025234565372215,
      0.0035673531585487369091,   0.0035417685853054604536,
      0.0035161490562361168560,   0.0034904948241951150085,
      0.0034648061423793681233,   0.0034390832643257947814,
      0.0034133264439088166255,   0.0033875359353378527223,
      0.0033617119931548106175,   0.0033358548722315741107,
      0.0033099648277674877720,   0.0032840421152868382283,
      0.0032580869906363322412,   0.0032320997099825716034,
      0.0032060805298095248779,   0.0031800297069159960046,
      0.0031539474984130898002,   0.0031278341617216743746,
      0.0031016899545698404917,   0.0030755151349903578966,
      0.0030493099613181286367,   0.0030230746921876374003,
      0.0029968095865303988986,   0.0029705149035724023166,
      0.0029441909028315528566,   0.0029178378441151104018,
      0.0028914559875171253234,   0.0028650455934158714570,
      0.0028386069224712762746,   0.0028121402356223482760,
      0.0027856457940846016265,   0.0027591238593474780649,
      0.0027325746931717661082,   0.0027059985575870175789,
      0.0026793957148889614784,   0.0026527664276369152345,
      0.0026261109586511933466,   0.0025994295710105134557,
      0.0025727225280493998632,   0.0025459900933555845261,
      0.0025192325307674055517,   0.0024924501043712032203,
      0.0024656430784987135596,   0.0024388117177244594968,
      0.0024119562868631396152,   0.0023850770509670145401,
      0.0023581742753232909796,   0.0023312482254515034474,
      0.0023042991671008936920,   0.0022773273662477878588,
      0.0022503330890929714115,   0.0022233166020590618376,
      0.0021962781717878791648,   0.0021692180651378143136,
      0.0021421365491811953132,   0.0021150338912016514052,
      0.0020879103586914750620,   0.0020607662193489819460,
      0.0020336017410758688351,   0.0020064171919745695416,
      0.0019792128403456088486,   0.0019519889546849544932,
      0.0019247458036813672185,   0.0018974836562137489251,
      0.0018702027813484889441,   0.0018429034483368084609,
      0.0018155859266121031143,   0.0017882504857872837973,
      0.0017608973956521156870,   0.0017335269261705555283,
      0.0017061393474780871988,   0.0016787349298790555801,
      0.0016513139438439987638,   0.0016238766600069786160,
      0.0015964233491629097284,   0.0015689542822648867822,
      0.0015414697304215103498,   0.0015139699648942111629,
      0.0014864552570945728714,   0.0014589258785816533209,
      0.0014313821010593043742,   0.0014038241963734903040,
      0.0013762524365096047831,   0.0013486670935897864983,
      0.0013210684398702334147,   0.0012934567477385157170,
      0.0012658322897108874543,   0.0012381953384295969144,
      0.0012105461666601957549,   0.0011828850472888469177,
      0.0011552122533196313523,   0.0011275280578718535760,
      0.0010998327341773460965,   0.0010721265555777727241,
      0.0010444097955219307998,   0.0010166827275630523660,
      0.00098894562535610430668,  0.00096119876265508748327,
      0.00093344241331033489312,  0.00090567685126580887742,
      0.00087790235055639740476,  0.00085011918530520945748,
      0.00082232762972086954722,  0.00079452795809481138653,
      0.00076672044479857074316,  0.00073890536428107750370,
      0.00071108299106594697354,  0.00068325359974877043953,
      0.00065541746499440502242,  0.00062757486153426284559,
      0.00059972606416359954690,  0.00057187134773880216042,
      0.00054401098717467639497,  0.00051614525744173333590,
      0.00048827443356347559717,  0.00046039879061368295033,
      0.00043251860371369745760,  0.00040463414802970813495,
      0.00037674569877003517321,  0.00034885353118241374295,
      0.00032095792055127741032,  0.00029305914219504119109,
      0.00026515747146338426880,  0.00023725318373453240479,
      0.00020934655441254006605,  0.00018143785892457229866,
      0.00015352737271818637258,  0.00012561537125861322590,
      0.000097702130026038733668, 0.000069787924512884830093,
      0.000041873030221090509277, 0.000013957722659392732545};
  IntegratorXX::GaussChebyshev1<double, double> quad(500);
  const auto& pts = quad.points();
  const auto& wgt = quad.weights();
  for(auto i = 0ul; i < 500; i++) {
    REQUIRE_THAT(pts[i], Catch::Matchers::WithinAbs(ref_pts[i], x_tolerance));
    REQUIRE_THAT(wgt[i], Catch::Matchers::WithinAbs(ref_wgt[i], w_tolerance));
  }
}
